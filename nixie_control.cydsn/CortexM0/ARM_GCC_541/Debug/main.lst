ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_GetSecond,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	RTC_GetSecond, %function
  24              	RTC_GetSecond:
  25              	.LFB3:
  26              		.file 1 "Generated_Source\\PSoC4/RTC.h"
   1:Generated_Source\PSoC4/RTC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC.h **** * \file Name: RTC.h
   3:Generated_Source\PSoC4/RTC.h **** * \version 1.30
   4:Generated_Source\PSoC4/RTC.h **** *
   5:Generated_Source\PSoC4/RTC.h **** *  This file provides constants and parameter values for the RTC_P4 Component.
   6:Generated_Source\PSoC4/RTC.h **** *
   7:Generated_Source\PSoC4/RTC.h **** ********************************************************************************
   8:Generated_Source\PSoC4/RTC.h **** * Copyright 2015-2017, Cypress Semiconductor Corporation.  All rights reserved.
   9:Generated_Source\PSoC4/RTC.h **** * You may use this file only in accordance with the license, terms, conditions,
  10:Generated_Source\PSoC4/RTC.h **** * disclaimers, and limitations in the end user license agreement accompanying
  11:Generated_Source\PSoC4/RTC.h **** * the software package with which this file was provided.
  12:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  13:Generated_Source\PSoC4/RTC.h **** 
  14:Generated_Source\PSoC4/RTC.h **** #if !defined(CY_RTC_P4_RTC_H)
  15:Generated_Source\PSoC4/RTC.h **** #define CY_RTC_P4_RTC_H
  16:Generated_Source\PSoC4/RTC.h **** 
  17:Generated_Source\PSoC4/RTC.h **** #include <cytypes.h>
  18:Generated_Source\PSoC4/RTC.h **** #include <CyLib.h>
  19:Generated_Source\PSoC4/RTC.h **** 
  20:Generated_Source\PSoC4/RTC.h **** 
  21:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  22:Generated_Source\PSoC4/RTC.h **** *    Data types definition
  23:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  24:Generated_Source\PSoC4/RTC.h **** /**
  25:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_enums
  26:Generated_Source\PSoC4/RTC.h **** * \{
  27:Generated_Source\PSoC4/RTC.h **** */
  28:Generated_Source\PSoC4/RTC.h **** /** Daylight saving Time format enumeration */
  29:Generated_Source\PSoC4/RTC.h **** typedef enum
  30:Generated_Source\PSoC4/RTC.h **** {
  31:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_RELATIVE = 0u,  /**< Relative DST format */
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 2


  32:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_FIXED = 1u      /**< Fixed DST format */
  33:Generated_Source\PSoC4/RTC.h **** }RTC_DST_DATETYPE_ENUM;
  34:Generated_Source\PSoC4/RTC.h **** /** \} group_enums */
  35:Generated_Source\PSoC4/RTC.h **** 
  36:Generated_Source\PSoC4/RTC.h **** /**
  37:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_structures
  38:Generated_Source\PSoC4/RTC.h **** * \{
  39:Generated_Source\PSoC4/RTC.h **** */
  40:Generated_Source\PSoC4/RTC.h **** 
  41:Generated_Source\PSoC4/RTC.h **** /** RTC_DATE_TIME structure is the data structure that is used to 
  42:Generated_Source\PSoC4/RTC.h **** * save the current time and date (RTC_currentTimeDate), and Alarm time and date 
  43:Generated_Source\PSoC4/RTC.h **** *(RTC_alarmCfgTimeDate)
  44:Generated_Source\PSoC4/RTC.h **** *
  45:Generated_Source\PSoC4/RTC.h **** */
  46:Generated_Source\PSoC4/RTC.h **** typedef struct
  47:Generated_Source\PSoC4/RTC.h **** {
  48:Generated_Source\PSoC4/RTC.h ****     uint32 time;        /**< Time in the format used in API*/
  49:Generated_Source\PSoC4/RTC.h ****     uint32 date;        /**< Date in the format used in API*/
  50:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;   /**< Day of the week, see \ref group_rtc_day_of_the_week */
  51:Generated_Source\PSoC4/RTC.h ****     uint32 status;      /**< RTC status, see \ref group_rtc_status */
  52:Generated_Source\PSoC4/RTC.h **** }RTC_DATE_TIME;
  53:Generated_Source\PSoC4/RTC.h **** 
  54:Generated_Source\PSoC4/RTC.h **** /*
  55:Generated_Source\PSoC4/RTC.h **** * RTC_DST_TIME structure is the data structure that is used to 
  56:Generated_Source\PSoC4/RTC.h **** * save time and date values for Daylight Savings Time Start and Stop 
  57:Generated_Source\PSoC4/RTC.h **** * (RTC_dstTimeDateStart and RTC_dstTimeDateStop)
  58:Generated_Source\PSoC4/RTC.h **** */
  59:Generated_Source\PSoC4/RTC.h **** typedef struct
  60:Generated_Source\PSoC4/RTC.h **** {
  61:Generated_Source\PSoC4/RTC.h ****     uint32 hour;          /**< Hour value */
  62:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;     /**< Day of the week, see \ref group_rtc_day_of_the_week */
  63:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfMonth;    /**< Day of the month */
  64:Generated_Source\PSoC4/RTC.h ****     uint32 weekOfMonth;   /**< Week of the month, see \ref group_rtc_dst_week_of_month */
  65:Generated_Source\PSoC4/RTC.h ****     uint32 month;         /**< Month value, see \ref group_rtc_month */
  66:Generated_Source\PSoC4/RTC.h ****     uint8  timeFormat;    /**< The DST operation mode, see \ref 
  67:Generated_Source\PSoC4/RTC.h ****                                RTC_DST_DATETYPE_ENUM */
  68:Generated_Source\PSoC4/RTC.h **** }RTC_DST_TIME;
  69:Generated_Source\PSoC4/RTC.h **** /** \} group_structures */
  70:Generated_Source\PSoC4/RTC.h **** 
  71:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  72:Generated_Source\PSoC4/RTC.h **** *    Enumerated Types and Parameters
  73:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  74:Generated_Source\PSoC4/RTC.h **** /* Time Format setting constants */
  75:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_12 1
  76:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_24 0
  77:Generated_Source\PSoC4/RTC.h **** 
  78:Generated_Source\PSoC4/RTC.h **** /*  Date Format setting constants */
  79:Generated_Source\PSoC4/RTC.h **** #define RTC__MM_DD_YYYY 0
  80:Generated_Source\PSoC4/RTC.h **** #define RTC__DD_MM_YYYY 1
  81:Generated_Source\PSoC4/RTC.h **** #define RTC__YYYY_MM_DD 2
  82:Generated_Source\PSoC4/RTC.h **** 
  83:Generated_Source\PSoC4/RTC.h **** /* Date Type setting constants */
  84:Generated_Source\PSoC4/RTC.h **** #define RTC__RELATIVE 0
  85:Generated_Source\PSoC4/RTC.h **** #define RTC__FIXED 1
  86:Generated_Source\PSoC4/RTC.h **** 
  87:Generated_Source\PSoC4/RTC.h **** /* DST Hour setting constants */
  88:Generated_Source\PSoC4/RTC.h **** #define RTC__H0000 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 3


  89:Generated_Source\PSoC4/RTC.h **** #define RTC__H0100 1
  90:Generated_Source\PSoC4/RTC.h **** #define RTC__H0200 2
  91:Generated_Source\PSoC4/RTC.h **** #define RTC__H0300 3
  92:Generated_Source\PSoC4/RTC.h **** #define RTC__H0400 4
  93:Generated_Source\PSoC4/RTC.h **** #define RTC__H0500 5
  94:Generated_Source\PSoC4/RTC.h **** #define RTC__H0600 6
  95:Generated_Source\PSoC4/RTC.h **** #define RTC__H0700 7
  96:Generated_Source\PSoC4/RTC.h **** #define RTC__H0800 8
  97:Generated_Source\PSoC4/RTC.h **** #define RTC__H0900 9
  98:Generated_Source\PSoC4/RTC.h **** #define RTC__H1000 10
  99:Generated_Source\PSoC4/RTC.h **** #define RTC__H1100 11
 100:Generated_Source\PSoC4/RTC.h **** #define RTC__H1200 12
 101:Generated_Source\PSoC4/RTC.h **** #define RTC__H1300 13
 102:Generated_Source\PSoC4/RTC.h **** #define RTC__H1400 14
 103:Generated_Source\PSoC4/RTC.h **** #define RTC__H1500 15
 104:Generated_Source\PSoC4/RTC.h **** #define RTC__H1600 16
 105:Generated_Source\PSoC4/RTC.h **** #define RTC__H1700 17
 106:Generated_Source\PSoC4/RTC.h **** #define RTC__H1800 18
 107:Generated_Source\PSoC4/RTC.h **** #define RTC__H1900 19
 108:Generated_Source\PSoC4/RTC.h **** #define RTC__H2000 20
 109:Generated_Source\PSoC4/RTC.h **** #define RTC__H2100 21
 110:Generated_Source\PSoC4/RTC.h **** #define RTC__H2200 22
 111:Generated_Source\PSoC4/RTC.h **** #define RTC__H2300 23
 112:Generated_Source\PSoC4/RTC.h **** 
 113:Generated_Source\PSoC4/RTC.h **** /* DST DayOfWeek setting constants */
 114:Generated_Source\PSoC4/RTC.h **** #define RTC__SUNDAY 1
 115:Generated_Source\PSoC4/RTC.h **** #define RTC__MONDAY 2
 116:Generated_Source\PSoC4/RTC.h **** #define RTC__TUESDAY 3
 117:Generated_Source\PSoC4/RTC.h **** #define RTC__WEDNESDAY 4
 118:Generated_Source\PSoC4/RTC.h **** #define RTC__THURSDAY 5
 119:Generated_Source\PSoC4/RTC.h **** #define RTC__FRIDAY 6
 120:Generated_Source\PSoC4/RTC.h **** #define RTC__SATURDAY 7
 121:Generated_Source\PSoC4/RTC.h **** 
 122:Generated_Source\PSoC4/RTC.h **** /* DST Month setting constants */
 123:Generated_Source\PSoC4/RTC.h **** #define RTC__JAN 1
 124:Generated_Source\PSoC4/RTC.h **** #define RTC__FEB 2
 125:Generated_Source\PSoC4/RTC.h **** #define RTC__MAR 3
 126:Generated_Source\PSoC4/RTC.h **** #define RTC__APR 4
 127:Generated_Source\PSoC4/RTC.h **** #define RTC__MAY 5
 128:Generated_Source\PSoC4/RTC.h **** #define RTC__JUN 6
 129:Generated_Source\PSoC4/RTC.h **** #define RTC__JUL 7
 130:Generated_Source\PSoC4/RTC.h **** #define RTC__AUG 8
 131:Generated_Source\PSoC4/RTC.h **** #define RTC__SEP 9
 132:Generated_Source\PSoC4/RTC.h **** #define RTC__OCT 10
 133:Generated_Source\PSoC4/RTC.h **** #define RTC__NOV 11
 134:Generated_Source\PSoC4/RTC.h **** #define RTC__DEC 12
 135:Generated_Source\PSoC4/RTC.h **** 
 136:Generated_Source\PSoC4/RTC.h **** /* DST WeekOfMonth setting constants */
 137:Generated_Source\PSoC4/RTC.h **** #define RTC__FIRST 1
 138:Generated_Source\PSoC4/RTC.h **** #define RTC__SECOND 2
 139:Generated_Source\PSoC4/RTC.h **** #define RTC__THIRD 3
 140:Generated_Source\PSoC4/RTC.h **** #define RTC__FOURTH 4
 141:Generated_Source\PSoC4/RTC.h **** #define RTC__FIFTH 5
 142:Generated_Source\PSoC4/RTC.h **** #define RTC__LAST 6
 143:Generated_Source\PSoC4/RTC.h **** 
 144:Generated_Source\PSoC4/RTC.h **** 
 145:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DATA_FORMAT     (1u)
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 4


 146:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_TIME_FORMAT     (0u)
 147:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_UPDATE_MODE     (0u)
 148:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_SECOND          (0u)
 149:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MINUTE          (0u)
 150:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_HOUR            (0u)
 151:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DAY             (1u)
 152:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MONTH           (1u)
 153:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_YEAR            (1970u)
 154:Generated_Source\PSoC4/RTC.h **** 
 155:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_ALARM_STATUS    (0u)
 156:Generated_Source\PSoC4/RTC.h **** 
 157:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STATUS      (0u)
 158:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_DATE_TYPE   (0u)
 159:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_MONTH (3uL)
 160:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_WOM   (6uL)
 161:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOM   (22uL)
 162:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOW   (1uL)
 163:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_HRS   (0uL)
 164:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_MONTH  (10uL)
 165:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOM    (22uL)
 166:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOW    (1uL)
 167:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_WOM    (6uL)
 168:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_HRS    (0uL)
 169:Generated_Source\PSoC4/RTC.h **** 
 170:Generated_Source\PSoC4/RTC.h **** /**
 171:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_constants
 172:Generated_Source\PSoC4/RTC.h **** * \{
 173:Generated_Source\PSoC4/RTC.h **** */
 174:Generated_Source\PSoC4/RTC.h **** 
 175:Generated_Source\PSoC4/RTC.h **** /**
 176:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_day_of_the_week Day of the week definitions
 177:Generated_Source\PSoC4/RTC.h **** * \{
 178:Generated_Source\PSoC4/RTC.h **** * Definitions of days in the week
 179:Generated_Source\PSoC4/RTC.h **** */
 180:Generated_Source\PSoC4/RTC.h **** #define RTC_SUNDAY     (RTC__SUNDAY)       /**< Sequential number of Sunday in the week */
 181:Generated_Source\PSoC4/RTC.h **** #define RTC_MONDAY     (RTC__MONDAY)       /**< Sequential number of Monday in the week */
 182:Generated_Source\PSoC4/RTC.h **** #define RTC_TUESDAY    (RTC__TUESDAY)      /**< Sequential number of Tuesday in the week */
 183:Generated_Source\PSoC4/RTC.h **** #define RTC_WEDNESDAY  (RTC__WEDNESDAY)    /**< Sequential number of Wednesday in the week */
 184:Generated_Source\PSoC4/RTC.h **** #define RTC_THURSDAY   (RTC__THURSDAY)     /**< Sequential number of Thursday in the week */
 185:Generated_Source\PSoC4/RTC.h **** #define RTC_FRIDAY     (RTC__FRIDAY)       /**< Sequential number of Friday in the week */
 186:Generated_Source\PSoC4/RTC.h **** #define RTC_SATURDAY   (RTC__SATURDAY)     /**< Sequential number of Saturday in the week */
 187:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_day_of_the_week */
 188:Generated_Source\PSoC4/RTC.h **** 
 189:Generated_Source\PSoC4/RTC.h **** /**
 190:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_dst_week_of_month DST Week of month setting constants definitions
 191:Generated_Source\PSoC4/RTC.h **** * \{
 192:Generated_Source\PSoC4/RTC.h **** * Week of month setting constants definitions for Daylight Saving Time feature
 193:Generated_Source\PSoC4/RTC.h **** */
 194:Generated_Source\PSoC4/RTC.h **** #define RTC_FIRST      (RTC__FIRST)   /**< First week in the month */
 195:Generated_Source\PSoC4/RTC.h **** #define RTC_SECOND     (RTC__SECOND)  /**< Second week in the month  */
 196:Generated_Source\PSoC4/RTC.h **** #define RTC_THIRD      (RTC__THIRD)   /**< Third week in the month  */
 197:Generated_Source\PSoC4/RTC.h **** #define RTC_FOURTH     (RTC__FOURTH)  /**< Fourth week in the month  */
 198:Generated_Source\PSoC4/RTC.h **** #define RTC_FIFTH      (RTC__FIFTH)   /**< Fifth week in the month  */
 199:Generated_Source\PSoC4/RTC.h **** #define RTC_LAST       (RTC__LAST)    /**< Last week in the month  */
 200:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_dst_week_of_month */
 201:Generated_Source\PSoC4/RTC.h **** 
 202:Generated_Source\PSoC4/RTC.h **** /**
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 5


 203:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_month Month definitions
 204:Generated_Source\PSoC4/RTC.h **** * \{
 205:Generated_Source\PSoC4/RTC.h **** * Constants definition for Months
 206:Generated_Source\PSoC4/RTC.h **** */
 207:Generated_Source\PSoC4/RTC.h **** #define RTC_JANUARY    (RTC__JAN)    /**< Sequential number of January in the year */
 208:Generated_Source\PSoC4/RTC.h **** #define RTC_FEBRUARY   (RTC__FEB)    /**< Sequential number of February in the year */
 209:Generated_Source\PSoC4/RTC.h **** #define RTC_MARCH      (RTC__MAR)    /**< Sequential number of March in the year */
 210:Generated_Source\PSoC4/RTC.h **** #define RTC_APRIL      (RTC__APR)    /**< Sequential number of April in the year */
 211:Generated_Source\PSoC4/RTC.h **** #define RTC_MAY        (RTC__MAY)    /**< Sequential number of May in the year */
 212:Generated_Source\PSoC4/RTC.h **** #define RTC_JUNE       (RTC__JUN)    /**< Sequential number of June in the year */
 213:Generated_Source\PSoC4/RTC.h **** #define RTC_JULY       (RTC__JUL)    /**< Sequential number of July in the year */
 214:Generated_Source\PSoC4/RTC.h **** #define RTC_AUGUST     (RTC__AUG)    /**< Sequential number of August in the year */
 215:Generated_Source\PSoC4/RTC.h **** #define RTC_SEPTEMBER  (RTC__SEP)    /**< Sequential number of September in the year */
 216:Generated_Source\PSoC4/RTC.h **** #define RTC_OCTOBER    (RTC__OCT)    /**< Sequential number of October in the year */
 217:Generated_Source\PSoC4/RTC.h **** #define RTC_NOVEMBER   (RTC__NOV)    /**< Sequential number of November in the year */
 218:Generated_Source\PSoC4/RTC.h **** #define RTC_DECEMBER   (RTC__DEC)    /**< Sequential number of December in the year */
 219:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_month */
 220:Generated_Source\PSoC4/RTC.h **** 
 221:Generated_Source\PSoC4/RTC.h **** /**
 222:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_am_pm AM/PM status definitions
 223:Generated_Source\PSoC4/RTC.h **** * \{
 224:Generated_Source\PSoC4/RTC.h **** * Definitions for 12 hour format for indicating the AM/PM period of day
 225:Generated_Source\PSoC4/RTC.h **** */
 226:Generated_Source\PSoC4/RTC.h **** #define RTC_AM                 (0u)    /**< AM period of day */
 227:Generated_Source\PSoC4/RTC.h **** #define RTC_PM                 (1u)    /**< PM period of day */
 228:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_am_pm */
 229:Generated_Source\PSoC4/RTC.h **** 
 230:Generated_Source\PSoC4/RTC.h **** /**
 231:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_hour_format Hour format definitions
 232:Generated_Source\PSoC4/RTC.h **** * \{
 233:Generated_Source\PSoC4/RTC.h **** * Definitions for hour format
 234:Generated_Source\PSoC4/RTC.h **** */
 235:Generated_Source\PSoC4/RTC.h **** #define RTC_12_HOURS_FORMAT    (RTC__HOUR_12) /**< The 12 hour (AM/PM) format */
 236:Generated_Source\PSoC4/RTC.h **** #define RTC_24_HOURS_FORMAT    (RTC__HOUR_24) /**< The 24 hour format */
 237:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_hour_format */
 238:Generated_Source\PSoC4/RTC.h **** 
 239:Generated_Source\PSoC4/RTC.h **** /**
 240:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_days_in_month Number of days in month definitions
 241:Generated_Source\PSoC4/RTC.h **** * \{
 242:Generated_Source\PSoC4/RTC.h **** * Definition of days in current month
 243:Generated_Source\PSoC4/RTC.h **** */
 244:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JANUARY     (31u)    /**< Number of days in January  */
 245:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_FEBRUARY    (28u)    /**< Number of days in February */
 246:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MARCH       (31u)    /**< Number of days in March */
 247:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_APRIL       (30u)    /**< Number of days in April */
 248:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MAY         (31u)    /**< Number of days in May */
 249:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JUNE        (30u)    /**< Number of days in June */
 250:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JULY        (31u)    /**< Number of days in July */
 251:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_AUGUST      (31u)    /**< Number of days in August */
 252:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_SEPTEMBER   (30u)    /**< Number of days in September */
 253:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_OCTOBER     (31u)    /**< Number of days in October */
 254:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_NOVEMBER    (30u)    /**< Number of days in November */
 255:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_DECEMBER    (31u)    /**< Number of days in December */
 256:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_days_in_month */
 257:Generated_Source\PSoC4/RTC.h **** 
 258:Generated_Source\PSoC4/RTC.h **** /**
 259:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_status Definitions of the RTC status values
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 6


 260:Generated_Source\PSoC4/RTC.h **** * \{
 261:Generated_Source\PSoC4/RTC.h **** * Definitions for status software register, which has flags for DST (DST),
 262:Generated_Source\PSoC4/RTC.h **** * Leap Year (LY), AM/PM (AM_PM).
 263:Generated_Source\PSoC4/RTC.h **** */
 264:Generated_Source\PSoC4/RTC.h **** 
 265:Generated_Source\PSoC4/RTC.h **** /** Status of Daylight Saving Time. This bit
 266:Generated_Source\PSoC4/RTC.h **** * goes high when the current time and date match the DST time and date and the 
 267:Generated_Source\PSoC4/RTC.h **** * time is incremented. This bit goes low after the DST interval and the time is 
 268:Generated_Source\PSoC4/RTC.h **** * decremented.
 269:Generated_Source\PSoC4/RTC.h **** */
 270:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST     (1uL << RTC_STATUS_DST_OFFSET)
 271:Generated_Source\PSoC4/RTC.h **** 
 272:Generated_Source\PSoC4/RTC.h **** /** Status of Leap Year. This bit goes high when the current year is a leap year */
 273:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY      (1uL << RTC_STATUS_LY_OFFSET)
 274:Generated_Source\PSoC4/RTC.h **** 
 275:Generated_Source\PSoC4/RTC.h **** /** Status of Current Time. This bit is low from midnight to noon and high from 
 276:Generated_Source\PSoC4/RTC.h **** *  noon to midnight. */
 277:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM   (1uL << RTC_STATUS_AM_PM_OFFSET)
 278:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_status */
 279:Generated_Source\PSoC4/RTC.h **** 
 280:Generated_Source\PSoC4/RTC.h **** /**
 281:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_alarm_mask Definitions for Alarm Mask software register
 282:Generated_Source\PSoC4/RTC.h **** * \{
 283:Generated_Source\PSoC4/RTC.h **** * Definitions for Alarm Mask software register. These masks allow 
 284:Generated_Source\PSoC4/RTC.h **** * matching the alarm value register with the current value register.
 285:Generated_Source\PSoC4/RTC.h **** */
 286:Generated_Source\PSoC4/RTC.h **** 
 287:Generated_Source\PSoC4/RTC.h **** /** The second alarm mask allows matching the alarm second register with the 
 288:Generated_Source\PSoC4/RTC.h **** *   current second register.
 289:Generated_Source\PSoC4/RTC.h **** */
 290:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_SEC_MASK         (0x00000001uL)
 291:Generated_Source\PSoC4/RTC.h **** 
 292:Generated_Source\PSoC4/RTC.h **** /** The minute alarm mask allows matching the alarm minute register with the 
 293:Generated_Source\PSoC4/RTC.h **** *   current minute register.
 294:Generated_Source\PSoC4/RTC.h **** */
 295:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MIN_MASK         (0x00000002uL)
 296:Generated_Source\PSoC4/RTC.h **** 
 297:Generated_Source\PSoC4/RTC.h **** /** The hour alarm mask allows matching the alarm hour register with the 
 298:Generated_Source\PSoC4/RTC.h **** *   current hour register.
 299:Generated_Source\PSoC4/RTC.h **** */
 300:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_HOUR_MASK        (0x00000004uL)
 301:Generated_Source\PSoC4/RTC.h **** 
 302:Generated_Source\PSoC4/RTC.h **** /** The day of the week alarm mask allows matching the alarm hour register with 
 303:Generated_Source\PSoC4/RTC.h **** *   the current day of the week register.
 304:Generated_Source\PSoC4/RTC.h **** */
 305:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFWEEK_MASK   (0x00000008uL)
 306:Generated_Source\PSoC4/RTC.h **** 
 307:Generated_Source\PSoC4/RTC.h **** /** The day of the Month alarm mask allows matching the alarm hour register with 
 308:Generated_Source\PSoC4/RTC.h **** *   the current day of the Month register.
 309:Generated_Source\PSoC4/RTC.h **** */
 310:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFMONTH_MASK  (0x00000010uL)
 311:Generated_Source\PSoC4/RTC.h **** 
 312:Generated_Source\PSoC4/RTC.h **** /** The month alarm mask allows matching the alarm hour register with the
 313:Generated_Source\PSoC4/RTC.h **** *   current month register.
 314:Generated_Source\PSoC4/RTC.h **** */
 315:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MONTH_MASK       (0x00000020uL)
 316:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 7


 317:Generated_Source\PSoC4/RTC.h **** /** The year alarm mask allows matching the alarm hour register with the
 318:Generated_Source\PSoC4/RTC.h **** *   current year register.
 319:Generated_Source\PSoC4/RTC.h **** */
 320:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_YEAR_MASK        (0x00000040uL)
 321:Generated_Source\PSoC4/RTC.h **** 
 322:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_alarm_mask */
 323:Generated_Source\PSoC4/RTC.h **** /** \} group_constants */
 324:Generated_Source\PSoC4/RTC.h **** 
 325:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_PER_WEEK       (7u)
 326:Generated_Source\PSoC4/RTC.h **** 
 327:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTHS_PER_YEAR     (12uL)
 328:Generated_Source\PSoC4/RTC.h **** 
 329:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_DAY       (24uL)
 330:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_HALF_DAY  (12uL)
 331:Generated_Source\PSoC4/RTC.h **** 
 332:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_MINUTE  (60uL)
 333:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_HOUR    (3600uL)
 334:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_DAY     (24uL * 3600uL)
 335:Generated_Source\PSoC4/RTC.h **** 
 336:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_LEAP_YEAR    (366uL * 24uL * 3600uL)
 337:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_NONLEAP_YEAR (365uL * 24uL * 3600uL)
 338:Generated_Source\PSoC4/RTC.h **** 
 339:Generated_Source\PSoC4/RTC.h **** #define RTC_UNIX_TIME_PM        ((12uL * 3600uL) + 1uL)
 340:Generated_Source\PSoC4/RTC.h **** 
 341:Generated_Source\PSoC4/RTC.h **** /* Unix time begins in 1970 year */
 342:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_0             (1970u)
 343:Generated_Source\PSoC4/RTC.h **** 
 344:Generated_Source\PSoC4/RTC.h **** /* Definition of date register fields */
 345:Generated_Source\PSoC4/RTC.h **** #if(RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY)
 346:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (28u)
 347:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (24u)
 348:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (20u)
 349:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (16u)
 350:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 351:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 352:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 353:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 354:Generated_Source\PSoC4/RTC.h **** #elif(RTC_INITIAL_DATA_FORMAT == RTC__DD_MM_YYYY)
 355:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (20u)
 356:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (16u)
 357:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (28u)
 358:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (24u)
 359:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 360:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 361:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 362:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 363:Generated_Source\PSoC4/RTC.h **** #else
 364:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (12u)
 365:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (8u)
 366:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (4u)
 367:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (0u)
 368:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (28u)
 369:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (24u)
 370:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (20u)
 371:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (16u)
 372:Generated_Source\PSoC4/RTC.h **** #endif /* (RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY) */
 373:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 8


 374:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MONTH_MASK          (0x00000001uL << RTC_10_MONTH_OFFSET)
 375:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTH_MASK             (0x0000000FuL << RTC_MONTH_OFFSET)
 376:Generated_Source\PSoC4/RTC.h **** #define RTC_10_DAY_MASK            (0x00000003uL << RTC_10_DAY_OFFSET)
 377:Generated_Source\PSoC4/RTC.h **** #define RTC_DAY_MASK               (0x0000000FuL << RTC_DAY_OFFSET)
 378:Generated_Source\PSoC4/RTC.h **** #define RTC_1000_YEAR_MASK         (0x00000003uL << RTC_1000_YEAR_OFFSET)
 379:Generated_Source\PSoC4/RTC.h **** #define RTC_100_YEAR_MASK          (0x0000000FuL << RTC_100_YEAR_OFFSET)
 380:Generated_Source\PSoC4/RTC.h **** #define RTC_10_YEAR_MASK           (0x0000000FuL << RTC_10_YEAR_OFFSET)
 381:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_MASK              (0x0000000FuL << RTC_YEAR_OFFSET)
 382:Generated_Source\PSoC4/RTC.h **** 
 383:Generated_Source\PSoC4/RTC.h **** #define  RTC_MONTH_FULL_MASK       (RTC_10_MONTH_MASK  | RTC_MONTH_MASK)
 384:Generated_Source\PSoC4/RTC.h **** #define  RTC_DAY_FULL_MASK         (RTC_10_DAY_MASK    | RTC_DAY_MASK)
 385:Generated_Source\PSoC4/RTC.h **** #define  RTC_YEAR_FULL_MASK        (RTC_1000_YEAR_MASK | RTC_100_YEAR_MASK |\
 386:Generated_Source\PSoC4/RTC.h ****                                                  RTC_10_YEAR_MASK   | RTC_YEAR_MASK)
 387:Generated_Source\PSoC4/RTC.h **** 
 388:Generated_Source\PSoC4/RTC.h **** /* Definition of time register fields */
 389:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_OFFSET     (23u)
 390:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_OFFSET   (22u)
 391:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_OFFSET        (20u)
 392:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_OFFSET           (16u)
 393:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_OFFSET      (12u)
 394:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_OFFSET         (8u)
 395:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_OFFSET      (4u)
 396:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_OFFSET         (0u)
 397:Generated_Source\PSoC4/RTC.h **** 
 398:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_MASK       (0x00000001uL << RTC_TIME_FORMAT_OFFSET)
 399:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_MASK     (0x00000001uL << RTC_PERIOD_OF_DAY_OFFSET)
 400:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_MASK          (0x00000003uL << RTC_10_HOURS_OFFSET)
 401:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_MASK             (0x0000000FuL << RTC_HOURS_OFFSET)
 402:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_MASK        (0x00000007uL << RTC_10_MINUTES_OFFSET)
 403:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_MASK           (0x0000000FuL << RTC_MINUTES_OFFSET)
 404:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_MASK        (0x00000007uL << RTC_10_SECONDS_OFFSET)
 405:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_MASK           (0x0000000FuL << RTC_SECONDS_OFFSET)
 406:Generated_Source\PSoC4/RTC.h **** 
 407:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_FULL_MASK        (RTC_10_HOURS_MASK   | RTC_HOURS_MASK)
 408:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_FULL_MASK      (RTC_10_MINUTES_MASK | RTC_MINUTES_MASK)
 409:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_FULL_MASK      (RTC_10_SECONDS_MASK | RTC_SECONDS_MASK)
 410:Generated_Source\PSoC4/RTC.h **** 
 411:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST_OFFSET      (1u)
 412:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_ALARM_OFFSET    (2u)
 413:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY_OFFSET       (3u)
 414:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM_OFFSET    (4u)
 415:Generated_Source\PSoC4/RTC.h **** 
 416:Generated_Source\PSoC4/RTC.h **** /* Number of bits per one BCD digit */
 417:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_NUMBER_SIZE        (4u)
 418:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_ONE_DIGIT_MASK     (0x0000000FuL)
 419:Generated_Source\PSoC4/RTC.h **** 
 420:Generated_Source\PSoC4/RTC.h **** 
 421:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 422:Generated_Source\PSoC4/RTC.h **** *    External Variables
 423:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 424:Generated_Source\PSoC4/RTC.h **** /**
 425:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_globals
 426:Generated_Source\PSoC4/RTC.h **** * \{
 427:Generated_Source\PSoC4/RTC.h **** */
 428:Generated_Source\PSoC4/RTC.h **** 
 429:Generated_Source\PSoC4/RTC.h **** /**
 430:Generated_Source\PSoC4/RTC.h **** * Indicates whether the RTC has been initialized; The variable is initialized to
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 9


 431:Generated_Source\PSoC4/RTC.h **** * 0 and set to 1 the first time RTC_Start() is called. This allows the component
 432:Generated_Source\PSoC4/RTC.h **** * to restart without reinitialization after the first call to the RTC_Start() 
 433:Generated_Source\PSoC4/RTC.h **** * routine.
 434:Generated_Source\PSoC4/RTC.h **** */
 435:Generated_Source\PSoC4/RTC.h **** extern uint8  RTC_initVar;
 436:Generated_Source\PSoC4/RTC.h **** 
 437:Generated_Source\PSoC4/RTC.h **** /** The DST start/stop status */
 438:Generated_Source\PSoC4/RTC.h **** extern uint8  RTC_dstStatus;
 439:Generated_Source\PSoC4/RTC.h **** 
 440:Generated_Source\PSoC4/RTC.h **** /**
 441:Generated_Source\PSoC4/RTC.h **** * The uint64 variable represents the standard Unix time (number of seconds 
 442:Generated_Source\PSoC4/RTC.h **** * elapsed from January 1, 1970 00:00 hours UTC) in 64-bit 
 443:Generated_Source\PSoC4/RTC.h **** */
 444:Generated_Source\PSoC4/RTC.h **** extern volatile uint64 RTC_unixTime;
 445:Generated_Source\PSoC4/RTC.h **** 
 446:Generated_Source\PSoC4/RTC.h **** /** The values for the time and date of the DST start */
 447:Generated_Source\PSoC4/RTC.h **** extern RTC_DST_TIME RTC_dstStartTime;
 448:Generated_Source\PSoC4/RTC.h **** 
 449:Generated_Source\PSoC4/RTC.h **** /** The values for the time and date of the DST stop */
 450:Generated_Source\PSoC4/RTC.h **** extern RTC_DST_TIME RTC_dstStopTime;
 451:Generated_Source\PSoC4/RTC.h **** 
 452:Generated_Source\PSoC4/RTC.h **** /**
 453:Generated_Source\PSoC4/RTC.h **** * The last updated time and date values are stored in this structure (update 
 454:Generated_Source\PSoC4/RTC.h **** * happens in Get time/date APIs)
 455:Generated_Source\PSoC4/RTC.h **** */
 456:Generated_Source\PSoC4/RTC.h **** extern RTC_DATE_TIME RTC_currentTimeDate;
 457:Generated_Source\PSoC4/RTC.h **** 
 458:Generated_Source\PSoC4/RTC.h **** /** The alarm time and date values are stored in this variable */
 459:Generated_Source\PSoC4/RTC.h **** extern RTC_DATE_TIME RTC_alarmCfgTimeDate;
 460:Generated_Source\PSoC4/RTC.h **** 
 461:Generated_Source\PSoC4/RTC.h **** /**
 462:Generated_Source\PSoC4/RTC.h **** * This variable is used to mask alarm events; mask seconds alarm, mask minutes 
 463:Generated_Source\PSoC4/RTC.h **** * alarm, and so on. It will have bit masks for each time item masking that item 
 464:Generated_Source\PSoC4/RTC.h **** * for alarm generation
 465:Generated_Source\PSoC4/RTC.h **** */
 466:Generated_Source\PSoC4/RTC.h **** extern uint32  RTC_alarmCfgMask;
 467:Generated_Source\PSoC4/RTC.h **** 
 468:Generated_Source\PSoC4/RTC.h **** /**
 469:Generated_Source\PSoC4/RTC.h **** * This variable is used to indicate current active alarm status per time item 
 470:Generated_Source\PSoC4/RTC.h **** * used in the alarm; whether seconds alarm is active, minute's alarm is active, 
 471:Generated_Source\PSoC4/RTC.h **** * and so on. It will have bit masks for each time item (seconds, minutes, hours,
 472:Generated_Source\PSoC4/RTC.h **** * day, and so on) showing the status
 473:Generated_Source\PSoC4/RTC.h **** */
 474:Generated_Source\PSoC4/RTC.h **** extern uint32 RTC_alarmCurStatus;
 475:Generated_Source\PSoC4/RTC.h **** 
 476:Generated_Source\PSoC4/RTC.h **** /** \} group_globals */
 477:Generated_Source\PSoC4/RTC.h **** 
 478:Generated_Source\PSoC4/RTC.h **** extern void (*RTC_alarmCallbackPtr)(void);
 479:Generated_Source\PSoC4/RTC.h **** 
 480:Generated_Source\PSoC4/RTC.h **** extern const uint16 RTC_daysBeforeMonthTbl[RTC_MONTHS_PER_YEAR];
 481:Generated_Source\PSoC4/RTC.h **** extern const uint8  RTC_daysInMonthTbl[RTC_MONTHS_PER_YEAR];
 482:Generated_Source\PSoC4/RTC.h **** 
 483:Generated_Source\PSoC4/RTC.h **** 
 484:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 485:Generated_Source\PSoC4/RTC.h **** *    Function Prototypes
 486:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 487:Generated_Source\PSoC4/RTC.h **** /**
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 10


 488:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_general
 489:Generated_Source\PSoC4/RTC.h **** * \{
 490:Generated_Source\PSoC4/RTC.h **** */
 491:Generated_Source\PSoC4/RTC.h **** void   RTC_Start(void);
 492:Generated_Source\PSoC4/RTC.h **** void   RTC_Stop(void);
 493:Generated_Source\PSoC4/RTC.h **** void   RTC_Init(void);
 494:Generated_Source\PSoC4/RTC.h **** void   RTC_SetUnixTime(uint64 unixTime);
 495:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetUnixTime(void);
 496:Generated_Source\PSoC4/RTC.h **** void   RTC_SetPeriod(uint32 ticks, uint32 refOneSecTicks);
 497:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetPeriod(void);
 498:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetRefOneSec(void);
 499:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDateAndTime(uint32 inputTime, uint32 inputDate);
 500:Generated_Source\PSoC4/RTC.h **** void   RTC_GetDateAndTime(RTC_DATE_TIME* dateTime);
 501:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetTime(void);
 502:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetDate(void);
 503:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmDateAndTime(const RTC_DATE_TIME* alarmTime);
 504:Generated_Source\PSoC4/RTC.h **** void   RTC_GetAlarmDateAndTime(RTC_DATE_TIME* alarmTimeDate);
 505:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmMask(uint32 mask);
 506:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmMask(void);
 507:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ReadStatus(void);
 508:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmStatus(void);
 509:Generated_Source\PSoC4/RTC.h **** void   RTC_ClearAlarmStatus(void);
 510:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStartTime(const RTC_DST_TIME* dstStartTime,
 511:Generated_Source\PSoC4/RTC.h ****                                               RTC_DST_DATETYPE_ENUM type);
 512:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStopTime(const RTC_DST_TIME* dstStopTime,
 513:Generated_Source\PSoC4/RTC.h ****                                              RTC_DST_DATETYPE_ENUM type);
 514:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertBCDToDec(uint32 bcdNum);
 515:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertDecToBCD(uint32 decNum);
 516:Generated_Source\PSoC4/RTC.h **** void   RTC_Update(void);
 517:Generated_Source\PSoC4/RTC.h **** void*  RTC_SetAlarmHandler(void (*CallbackFunction)(void));
 518:Generated_Source\PSoC4/RTC.h **** 
 519:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructDate(uint32 month, uint32 day, uint32 year);
 520:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 min, uint3
 521:Generated_Source\PSoC4/RTC.h **** /** \} group_general */
 522:Generated_Source\PSoC4/RTC.h **** 
 523:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetTimeFormat(uint32 inputTime);
 524:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetTimeFormat(uint32 inputTime, uint32 timeFormat);
 525:Generated_Source\PSoC4/RTC.h **** 
 526:Generated_Source\PSoC4/RTC.h **** /**
 527:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_general
 528:Generated_Source\PSoC4/RTC.h **** * \{
 529:Generated_Source\PSoC4/RTC.h **** */
 530:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_LeapYear(uint32 year);
 531:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_IsBitSet(uint32 var, uint32 mask);
 532:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetSecond(uint32 inputTime);
 533:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMinutes(uint32 inputTime);
 534:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetHours(uint32 inputTime);
 535:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetAmPm(uint32 inputTime);
 536:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDay(uint32 date);
 537:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMonth(uint32 date);
 538:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetYear(uint32 date);
 539:Generated_Source\PSoC4/RTC.h **** /** \} group_general */
 540:Generated_Source\PSoC4/RTC.h **** 
 541:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetSecond(uint32 inputTime, uint32 inputSecond);
 542:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMinutes(uint32 inputTime, uint32 inputMinute);
 543:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetHours(uint32 inputTime, uint32 inputHours);
 544:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetAmPm(uint32 inputTime, uint32 periodOfDay);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 11


 545:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetDay(uint32 inputDate, uint32 inputDay);
 546:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMonth(uint32 inputDate, uint32 inputMonth);
 547:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetYear(uint32 inputDate, uint32 inputYear);
 548:Generated_Source\PSoC4/RTC.h **** 
 549:Generated_Source\PSoC4/RTC.h **** uint64 RTC_ConstructUnixAlarmTime(const RTC_DATE_TIME* alarmTime, uint8 alarmCfgMask);
 550:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetDstUnixTime(const RTC_DST_TIME* dstTime);
 551:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask);
 552:Generated_Source\PSoC4/RTC.h **** 
 553:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMinSec(uint32 curVal);
 554:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextHour(uint32 curVal);
 555:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarmCfgMask);
 556:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMonth(uint32 curMonth);
 557:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextYear(uint32 curYear);
 558:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDayOfWeek(uint32 day, uint32 month, uint32 year);
 559:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_DaysBeforeMonth(uint32 month, uint32 year);
 560:Generated_Source\PSoC4/RTC.h **** 
 561:Generated_Source\PSoC4/RTC.h **** uint32 RTC_DaysInMonth(uint32 month, uint32 year);
 562:Generated_Source\PSoC4/RTC.h **** 
 563:Generated_Source\PSoC4/RTC.h **** /**
 564:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_general
 565:Generated_Source\PSoC4/RTC.h **** * \{
 566:Generated_Source\PSoC4/RTC.h **** */
 567:Generated_Source\PSoC4/RTC.h **** void   RTC_UnixToDateTime(RTC_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat);
 568:Generated_Source\PSoC4/RTC.h **** uint64 RTC_DateTimeToUnix(uint32 inputDate, uint32 inputTime);
 569:Generated_Source\PSoC4/RTC.h **** 
 570:Generated_Source\PSoC4/RTC.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
 571:Generated_Source\PSoC4/RTC.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
 572:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcSetCallback(uint32 wdtNumber);
 573:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcResetCallback(uint32 wdtNumber);
 574:Generated_Source\PSoC4/RTC.h ****     #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 575:Generated_Source\PSoC4/RTC.h **** #endif /* (CYDEV_RTC_SOURCE_WDT) */
 576:Generated_Source\PSoC4/RTC.h **** 
 577:Generated_Source\PSoC4/RTC.h **** /** \} group_general */
 578:Generated_Source\PSoC4/RTC.h **** 
 579:Generated_Source\PSoC4/RTC.h **** uint32 RTC_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year);
 580:Generated_Source\PSoC4/RTC.h **** 
 581:Generated_Source\PSoC4/RTC.h **** 
 582:Generated_Source\PSoC4/RTC.h **** 
 583:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 584:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_IsBitSet
 585:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 586:Generated_Source\PSoC4/RTC.h **** *
 587:Generated_Source\PSoC4/RTC.h **** * Checks the state of a bit passed through parameter.
 588:Generated_Source\PSoC4/RTC.h **** *
 589:Generated_Source\PSoC4/RTC.h **** * \param var
 590:Generated_Source\PSoC4/RTC.h **** * The variable to be checked.
 591:Generated_Source\PSoC4/RTC.h **** *
 592:Generated_Source\PSoC4/RTC.h **** * \param mask
 593:Generated_Source\PSoC4/RTC.h **** * The mask for a bit to be checked.
 594:Generated_Source\PSoC4/RTC.h **** *
 595:Generated_Source\PSoC4/RTC.h **** * \return
 596:Generated_Source\PSoC4/RTC.h **** *  0u - Bit is not set. <br> 1u - Bit is set.
 597:Generated_Source\PSoC4/RTC.h **** *
 598:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 599:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_IsBitSet(uint32 var, uint32 mask)
 600:Generated_Source\PSoC4/RTC.h **** {
 601:Generated_Source\PSoC4/RTC.h ****     return ((mask == (var & mask)) ? 1Lu : 0Lu);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 12


 602:Generated_Source\PSoC4/RTC.h **** }
 603:Generated_Source\PSoC4/RTC.h **** 
 604:Generated_Source\PSoC4/RTC.h **** 
 605:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 606:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_LeapYear
 607:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 608:Generated_Source\PSoC4/RTC.h **** *
 609:Generated_Source\PSoC4/RTC.h **** * Checks whether the year passed through the parameter is leap or no.
 610:Generated_Source\PSoC4/RTC.h **** *
 611:Generated_Source\PSoC4/RTC.h **** * \param year
 612:Generated_Source\PSoC4/RTC.h **** * The year to be checked.
 613:Generated_Source\PSoC4/RTC.h **** *
 614:Generated_Source\PSoC4/RTC.h **** * \return
 615:Generated_Source\PSoC4/RTC.h **** * 0u - The year is not leap <br> 1u - The year is leap.
 616:Generated_Source\PSoC4/RTC.h **** *
 617:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 618:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_LeapYear(uint32 year)
 619:Generated_Source\PSoC4/RTC.h **** {
 620:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 621:Generated_Source\PSoC4/RTC.h **** 
 622:Generated_Source\PSoC4/RTC.h ****     if(((0u == (year % 4Lu)) && (0u != (year % 100Lu))) || (0u == (year % 400Lu)))
 623:Generated_Source\PSoC4/RTC.h ****     {
 624:Generated_Source\PSoC4/RTC.h ****         retVal = 1uL;
 625:Generated_Source\PSoC4/RTC.h ****     }
 626:Generated_Source\PSoC4/RTC.h ****     else
 627:Generated_Source\PSoC4/RTC.h ****     {
 628:Generated_Source\PSoC4/RTC.h ****         retVal = 0uL;
 629:Generated_Source\PSoC4/RTC.h ****     }
 630:Generated_Source\PSoC4/RTC.h **** 
 631:Generated_Source\PSoC4/RTC.h ****     return(retVal);
 632:Generated_Source\PSoC4/RTC.h **** }
 633:Generated_Source\PSoC4/RTC.h **** 
 634:Generated_Source\PSoC4/RTC.h **** 
 635:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 636:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetSecond
 637:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 638:Generated_Source\PSoC4/RTC.h **** *
 639:Generated_Source\PSoC4/RTC.h **** * Returns the seconds value from the time value that is passed as a/the 
 640:Generated_Source\PSoC4/RTC.h **** * parameter.
 641:Generated_Source\PSoC4/RTC.h **** *
 642:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 643:Generated_Source\PSoC4/RTC.h **** * The time value.
 644:Generated_Source\PSoC4/RTC.h **** *
 645:Generated_Source\PSoC4/RTC.h **** * \return
 646:Generated_Source\PSoC4/RTC.h **** * The seconds value.
 647:Generated_Source\PSoC4/RTC.h **** *
 648:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 649:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetSecond(uint32 inputTime)
 650:Generated_Source\PSoC4/RTC.h **** {
  27              		.loc 1 650 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 13


  35 0002 84B0     		sub	sp, sp, #16
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 651:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 652:Generated_Source\PSoC4/RTC.h **** 
 653:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_SECONDS_MASK) >> RTC_10_SECONDS_OFFSET) * 10u;
  40              		.loc 1 653 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 1B09     		lsrs	r3, r3, #4
  43 000c 0722     		movs	r2, #7
  44 000e 1A40     		ands	r2, r3
  45 0010 1300     		movs	r3, r2
  46 0012 9B00     		lsls	r3, r3, #2
  47 0014 9B18     		adds	r3, r3, r2
  48 0016 5B00     		lsls	r3, r3, #1
  49 0018 FB60     		str	r3, [r7, #12]
 654:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_SECONDS_MASK) >> RTC_SECONDS_OFFSET;
  50              		.loc 1 654 0
  51 001a 7B68     		ldr	r3, [r7, #4]
  52 001c 0F22     		movs	r2, #15
  53 001e 1340     		ands	r3, r2
  54 0020 FA68     		ldr	r2, [r7, #12]
  55 0022 D318     		adds	r3, r2, r3
  56 0024 FB60     		str	r3, [r7, #12]
 655:Generated_Source\PSoC4/RTC.h **** 
 656:Generated_Source\PSoC4/RTC.h ****     return (retVal);
  57              		.loc 1 656 0
  58 0026 FB68     		ldr	r3, [r7, #12]
 657:Generated_Source\PSoC4/RTC.h **** }
  59              		.loc 1 657 0
  60 0028 1800     		movs	r0, r3
  61 002a BD46     		mov	sp, r7
  62 002c 04B0     		add	sp, sp, #16
  63              		@ sp needed
  64 002e 80BD     		pop	{r7, pc}
  65              		.cfi_endproc
  66              	.LFE3:
  67              		.size	RTC_GetSecond, .-RTC_GetSecond
  68              		.section	.text.RTC_GetMinutes,"ax",%progbits
  69              		.align	2
  70              		.code	16
  71              		.thumb_func
  72              		.type	RTC_GetMinutes, %function
  73              	RTC_GetMinutes:
  74              	.LFB4:
 658:Generated_Source\PSoC4/RTC.h **** 
 659:Generated_Source\PSoC4/RTC.h **** 
 660:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 661:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMinutes
 662:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 663:Generated_Source\PSoC4/RTC.h **** *
 664:Generated_Source\PSoC4/RTC.h **** * Returns the minutes value from the time value that is passed as a/the 
 665:Generated_Source\PSoC4/RTC.h **** * parameter.
 666:Generated_Source\PSoC4/RTC.h **** *
 667:Generated_Source\PSoC4/RTC.h **** * \param inputTime
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 14


 668:Generated_Source\PSoC4/RTC.h **** * The time value.
 669:Generated_Source\PSoC4/RTC.h **** *
 670:Generated_Source\PSoC4/RTC.h **** * \return
 671:Generated_Source\PSoC4/RTC.h **** * The minutes value.
 672:Generated_Source\PSoC4/RTC.h **** *
 673:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 674:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMinutes(uint32 inputTime)
 675:Generated_Source\PSoC4/RTC.h **** {
  75              		.loc 1 675 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 16
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 80B5     		push	{r7, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 84B0     		sub	sp, sp, #16
  84              		.cfi_def_cfa_offset 24
  85 0004 00AF     		add	r7, sp, #0
  86              		.cfi_def_cfa_register 7
  87 0006 7860     		str	r0, [r7, #4]
 676:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 677:Generated_Source\PSoC4/RTC.h **** 
 678:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_MINUTES_MASK) >> RTC_10_MINUTES_OFFSET) * 10u;
  88              		.loc 1 678 0
  89 0008 7B68     		ldr	r3, [r7, #4]
  90 000a 1B0B     		lsrs	r3, r3, #12
  91 000c 0722     		movs	r2, #7
  92 000e 1A40     		ands	r2, r3
  93 0010 1300     		movs	r3, r2
  94 0012 9B00     		lsls	r3, r3, #2
  95 0014 9B18     		adds	r3, r3, r2
  96 0016 5B00     		lsls	r3, r3, #1
  97 0018 FB60     		str	r3, [r7, #12]
 679:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_MINUTES_MASK) >> RTC_MINUTES_OFFSET;
  98              		.loc 1 679 0
  99 001a 7B68     		ldr	r3, [r7, #4]
 100 001c 1B0A     		lsrs	r3, r3, #8
 101 001e 0F22     		movs	r2, #15
 102 0020 1340     		ands	r3, r2
 103 0022 FA68     		ldr	r2, [r7, #12]
 104 0024 D318     		adds	r3, r2, r3
 105 0026 FB60     		str	r3, [r7, #12]
 680:Generated_Source\PSoC4/RTC.h **** 
 681:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 106              		.loc 1 681 0
 107 0028 FB68     		ldr	r3, [r7, #12]
 682:Generated_Source\PSoC4/RTC.h **** }
 108              		.loc 1 682 0
 109 002a 1800     		movs	r0, r3
 110 002c BD46     		mov	sp, r7
 111 002e 04B0     		add	sp, sp, #16
 112              		@ sp needed
 113 0030 80BD     		pop	{r7, pc}
 114              		.cfi_endproc
 115              	.LFE4:
 116              		.size	RTC_GetMinutes, .-RTC_GetMinutes
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 15


 117 0032 C046     		.section	.text.RTC_GetHours,"ax",%progbits
 118              		.align	2
 119              		.code	16
 120              		.thumb_func
 121              		.type	RTC_GetHours, %function
 122              	RTC_GetHours:
 123              	.LFB5:
 683:Generated_Source\PSoC4/RTC.h **** 
 684:Generated_Source\PSoC4/RTC.h **** 
 685:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 686:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetHours
 687:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 688:Generated_Source\PSoC4/RTC.h **** *
 689:Generated_Source\PSoC4/RTC.h **** * Returns the hours value from the time value that is passed as a/the parameter.
 690:Generated_Source\PSoC4/RTC.h **** *
 691:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 692:Generated_Source\PSoC4/RTC.h **** * The time value.
 693:Generated_Source\PSoC4/RTC.h **** *
 694:Generated_Source\PSoC4/RTC.h **** * \return
 695:Generated_Source\PSoC4/RTC.h **** * The hours value.
 696:Generated_Source\PSoC4/RTC.h **** *
 697:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 698:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetHours(uint32 inputTime)
 699:Generated_Source\PSoC4/RTC.h **** {
 124              		.loc 1 699 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 16
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 84B0     		sub	sp, sp, #16
 133              		.cfi_def_cfa_offset 24
 134 0004 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
 136 0006 7860     		str	r0, [r7, #4]
 700:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 701:Generated_Source\PSoC4/RTC.h **** 
 702:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_HOURS_MASK) >> RTC_10_HOURS_OFFSET) * 10u;
 137              		.loc 1 702 0
 138 0008 7B68     		ldr	r3, [r7, #4]
 139 000a 1B0D     		lsrs	r3, r3, #20
 140 000c 0322     		movs	r2, #3
 141 000e 1A40     		ands	r2, r3
 142 0010 1300     		movs	r3, r2
 143 0012 9B00     		lsls	r3, r3, #2
 144 0014 9B18     		adds	r3, r3, r2
 145 0016 5B00     		lsls	r3, r3, #1
 146 0018 FB60     		str	r3, [r7, #12]
 703:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_HOURS_MASK) >> RTC_HOURS_OFFSET;
 147              		.loc 1 703 0
 148 001a 7B68     		ldr	r3, [r7, #4]
 149 001c 1B0C     		lsrs	r3, r3, #16
 150 001e 0F22     		movs	r2, #15
 151 0020 1340     		ands	r3, r2
 152 0022 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 16


 153 0024 D318     		adds	r3, r2, r3
 154 0026 FB60     		str	r3, [r7, #12]
 704:Generated_Source\PSoC4/RTC.h **** 
 705:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 155              		.loc 1 705 0
 156 0028 FB68     		ldr	r3, [r7, #12]
 706:Generated_Source\PSoC4/RTC.h **** }
 157              		.loc 1 706 0
 158 002a 1800     		movs	r0, r3
 159 002c BD46     		mov	sp, r7
 160 002e 04B0     		add	sp, sp, #16
 161              		@ sp needed
 162 0030 80BD     		pop	{r7, pc}
 163              		.cfi_endproc
 164              	.LFE5:
 165              		.size	RTC_GetHours, .-RTC_GetHours
 166 0032 C046     		.section	.text.RTC_GetDay,"ax",%progbits
 167              		.align	2
 168              		.code	16
 169              		.thumb_func
 170              		.type	RTC_GetDay, %function
 171              	RTC_GetDay:
 172              	.LFB7:
 707:Generated_Source\PSoC4/RTC.h **** 
 708:Generated_Source\PSoC4/RTC.h **** 
 709:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 710:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetAmPm
 711:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 712:Generated_Source\PSoC4/RTC.h **** *
 713:Generated_Source\PSoC4/RTC.h **** * Returns the AM/PM status from the time value that is passed as parameter.
 714:Generated_Source\PSoC4/RTC.h **** *
 715:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 716:Generated_Source\PSoC4/RTC.h **** * The time value.
 717:Generated_Source\PSoC4/RTC.h **** *
 718:Generated_Source\PSoC4/RTC.h **** * \return
 719:Generated_Source\PSoC4/RTC.h **** * The am/pm period of day, see \ref group_rtc_am_pm.
 720:Generated_Source\PSoC4/RTC.h **** *
 721:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 722:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetAmPm(uint32 inputTime)
 723:Generated_Source\PSoC4/RTC.h **** {
 724:Generated_Source\PSoC4/RTC.h ****     return (RTC_IsBitSet(inputTime, RTC_PERIOD_OF_DAY_MASK));
 725:Generated_Source\PSoC4/RTC.h **** }
 726:Generated_Source\PSoC4/RTC.h **** 
 727:Generated_Source\PSoC4/RTC.h **** 
 728:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 729:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetDay
 730:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 731:Generated_Source\PSoC4/RTC.h **** *
 732:Generated_Source\PSoC4/RTC.h **** * Returns the day value from the date value that is passed as parameter.
 733:Generated_Source\PSoC4/RTC.h **** *
 734:Generated_Source\PSoC4/RTC.h **** * \param date
 735:Generated_Source\PSoC4/RTC.h **** * The date value.
 736:Generated_Source\PSoC4/RTC.h **** *
 737:Generated_Source\PSoC4/RTC.h **** * \return
 738:Generated_Source\PSoC4/RTC.h **** * The day value.
 739:Generated_Source\PSoC4/RTC.h **** *
 740:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 17


 741:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetDay(uint32 date)
 742:Generated_Source\PSoC4/RTC.h **** {
 173              		.loc 1 742 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 16
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 84B0     		sub	sp, sp, #16
 182              		.cfi_def_cfa_offset 24
 183 0004 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 185 0006 7860     		str	r0, [r7, #4]
 743:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 744:Generated_Source\PSoC4/RTC.h **** 
 745:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_DAY_MASK) >> RTC_10_DAY_OFFSET) * 10u;
 186              		.loc 1 745 0
 187 0008 7B68     		ldr	r3, [r7, #4]
 188 000a 1B0F     		lsrs	r3, r3, #28
 189 000c 0322     		movs	r2, #3
 190 000e 1A40     		ands	r2, r3
 191 0010 1300     		movs	r3, r2
 192 0012 9B00     		lsls	r3, r3, #2
 193 0014 9B18     		adds	r3, r3, r2
 194 0016 5B00     		lsls	r3, r3, #1
 195 0018 FB60     		str	r3, [r7, #12]
 746:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_DAY_MASK) >> RTC_DAY_OFFSET;
 196              		.loc 1 746 0
 197 001a 7B68     		ldr	r3, [r7, #4]
 198 001c 1B0E     		lsrs	r3, r3, #24
 199 001e 0F22     		movs	r2, #15
 200 0020 1340     		ands	r3, r2
 201 0022 FA68     		ldr	r2, [r7, #12]
 202 0024 D318     		adds	r3, r2, r3
 203 0026 FB60     		str	r3, [r7, #12]
 747:Generated_Source\PSoC4/RTC.h **** 
 748:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 204              		.loc 1 748 0
 205 0028 FB68     		ldr	r3, [r7, #12]
 749:Generated_Source\PSoC4/RTC.h **** }
 206              		.loc 1 749 0
 207 002a 1800     		movs	r0, r3
 208 002c BD46     		mov	sp, r7
 209 002e 04B0     		add	sp, sp, #16
 210              		@ sp needed
 211 0030 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE7:
 214              		.size	RTC_GetDay, .-RTC_GetDay
 215 0032 C046     		.section	.text.RTC_GetMonth,"ax",%progbits
 216              		.align	2
 217              		.code	16
 218              		.thumb_func
 219              		.type	RTC_GetMonth, %function
 220              	RTC_GetMonth:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 18


 221              	.LFB8:
 750:Generated_Source\PSoC4/RTC.h **** 
 751:Generated_Source\PSoC4/RTC.h **** 
 752:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 753:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMonth
 754:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 755:Generated_Source\PSoC4/RTC.h **** *
 756:Generated_Source\PSoC4/RTC.h **** * Returns the month value from the date value that is passed as parameter.
 757:Generated_Source\PSoC4/RTC.h **** *
 758:Generated_Source\PSoC4/RTC.h **** * \param date
 759:Generated_Source\PSoC4/RTC.h **** * The date value.
 760:Generated_Source\PSoC4/RTC.h **** *
 761:Generated_Source\PSoC4/RTC.h **** * \return
 762:Generated_Source\PSoC4/RTC.h **** * The month value.
 763:Generated_Source\PSoC4/RTC.h **** *
 764:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 765:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMonth(uint32 date)
 766:Generated_Source\PSoC4/RTC.h **** {
 222              		.loc 1 766 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 16
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0000 80B5     		push	{r7, lr}
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 84B0     		sub	sp, sp, #16
 231              		.cfi_def_cfa_offset 24
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
 234 0006 7860     		str	r0, [r7, #4]
 767:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 768:Generated_Source\PSoC4/RTC.h **** 
 769:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_MONTH_MASK) >> RTC_10_MONTH_OFFSET) * 10u;
 235              		.loc 1 769 0
 236 0008 7B68     		ldr	r3, [r7, #4]
 237 000a 1B0D     		lsrs	r3, r3, #20
 238 000c 0122     		movs	r2, #1
 239 000e 1A40     		ands	r2, r3
 240 0010 1300     		movs	r3, r2
 241 0012 9B00     		lsls	r3, r3, #2
 242 0014 9B18     		adds	r3, r3, r2
 243 0016 5B00     		lsls	r3, r3, #1
 244 0018 FB60     		str	r3, [r7, #12]
 770:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_MONTH_MASK) >> RTC_MONTH_OFFSET;
 245              		.loc 1 770 0
 246 001a 7B68     		ldr	r3, [r7, #4]
 247 001c 1B0C     		lsrs	r3, r3, #16
 248 001e 0F22     		movs	r2, #15
 249 0020 1340     		ands	r3, r2
 250 0022 FA68     		ldr	r2, [r7, #12]
 251 0024 D318     		adds	r3, r2, r3
 252 0026 FB60     		str	r3, [r7, #12]
 771:Generated_Source\PSoC4/RTC.h **** 
 772:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 253              		.loc 1 772 0
 254 0028 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 19


 773:Generated_Source\PSoC4/RTC.h **** }
 255              		.loc 1 773 0
 256 002a 1800     		movs	r0, r3
 257 002c BD46     		mov	sp, r7
 258 002e 04B0     		add	sp, sp, #16
 259              		@ sp needed
 260 0030 80BD     		pop	{r7, pc}
 261              		.cfi_endproc
 262              	.LFE8:
 263              		.size	RTC_GetMonth, .-RTC_GetMonth
 264 0032 C046     		.section	.text.RTC_GetYear,"ax",%progbits
 265              		.align	2
 266              		.code	16
 267              		.thumb_func
 268              		.type	RTC_GetYear, %function
 269              	RTC_GetYear:
 270              	.LFB9:
 774:Generated_Source\PSoC4/RTC.h **** 
 775:Generated_Source\PSoC4/RTC.h **** 
 776:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 777:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetYear
 778:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 779:Generated_Source\PSoC4/RTC.h **** *
 780:Generated_Source\PSoC4/RTC.h **** * Returns the year value from the date value that is passed as parameter.
 781:Generated_Source\PSoC4/RTC.h **** *
 782:Generated_Source\PSoC4/RTC.h **** * \param date
 783:Generated_Source\PSoC4/RTC.h **** * The date value.
 784:Generated_Source\PSoC4/RTC.h **** *
 785:Generated_Source\PSoC4/RTC.h **** * \return
 786:Generated_Source\PSoC4/RTC.h **** * The year value.
 787:Generated_Source\PSoC4/RTC.h **** *
 788:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 789:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetYear(uint32 date)
 790:Generated_Source\PSoC4/RTC.h **** {
 271              		.loc 1 790 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 16
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275 0000 80B5     		push	{r7, lr}
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 84B0     		sub	sp, sp, #16
 280              		.cfi_def_cfa_offset 24
 281 0004 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 283 0006 7860     		str	r0, [r7, #4]
 791:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 792:Generated_Source\PSoC4/RTC.h **** 
 793:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_1000_YEAR_MASK) >> RTC_1000_YEAR_OFFSET) * 1000u;
 284              		.loc 1 793 0
 285 0008 7B68     		ldr	r3, [r7, #4]
 286 000a 1B0B     		lsrs	r3, r3, #12
 287 000c 0322     		movs	r2, #3
 288 000e 1340     		ands	r3, r2
 289 0010 FA22     		movs	r2, #250
 290 0012 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 20


 291 0014 5343     		muls	r3, r2
 292 0016 FB60     		str	r3, [r7, #12]
 794:Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_100_YEAR_MASK) >> RTC_100_YEAR_OFFSET) * 100u;
 293              		.loc 1 794 0
 294 0018 7B68     		ldr	r3, [r7, #4]
 295 001a 1B0A     		lsrs	r3, r3, #8
 296 001c 0F22     		movs	r2, #15
 297 001e 1340     		ands	r3, r2
 298 0020 6422     		movs	r2, #100
 299 0022 5343     		muls	r3, r2
 300 0024 FA68     		ldr	r2, [r7, #12]
 301 0026 D318     		adds	r3, r2, r3
 302 0028 FB60     		str	r3, [r7, #12]
 795:Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_10_YEAR_MASK) >> RTC_10_YEAR_OFFSET) * 10u;
 303              		.loc 1 795 0
 304 002a 7B68     		ldr	r3, [r7, #4]
 305 002c 1B09     		lsrs	r3, r3, #4
 306 002e 0F22     		movs	r2, #15
 307 0030 1A40     		ands	r2, r3
 308 0032 1300     		movs	r3, r2
 309 0034 9B00     		lsls	r3, r3, #2
 310 0036 9B18     		adds	r3, r3, r2
 311 0038 5B00     		lsls	r3, r3, #1
 312 003a 1A00     		movs	r2, r3
 313 003c FB68     		ldr	r3, [r7, #12]
 314 003e 9B18     		adds	r3, r3, r2
 315 0040 FB60     		str	r3, [r7, #12]
 796:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_YEAR_MASK) >> RTC_YEAR_OFFSET;
 316              		.loc 1 796 0
 317 0042 7B68     		ldr	r3, [r7, #4]
 318 0044 0F22     		movs	r2, #15
 319 0046 1340     		ands	r3, r2
 320 0048 FA68     		ldr	r2, [r7, #12]
 321 004a D318     		adds	r3, r2, r3
 322 004c FB60     		str	r3, [r7, #12]
 797:Generated_Source\PSoC4/RTC.h **** 
 798:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 323              		.loc 1 798 0
 324 004e FB68     		ldr	r3, [r7, #12]
 799:Generated_Source\PSoC4/RTC.h **** }
 325              		.loc 1 799 0
 326 0050 1800     		movs	r0, r3
 327 0052 BD46     		mov	sp, r7
 328 0054 04B0     		add	sp, sp, #16
 329              		@ sp needed
 330 0056 80BD     		pop	{r7, pc}
 331              		.cfi_endproc
 332              	.LFE9:
 333              		.size	RTC_GetYear, .-RTC_GetYear
 334              		.global	digits
 335              		.data
 336              		.align	2
 337              		.type	digits, %object
 338              		.size	digits, 160
 339              	digits:
 340 0000 00000000 		.word	0
 341 0004 00000000 		.word	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 21


 342 0008 00000000 		.word	0
 343 000c 00000000 		.word	0
 344 0010 00000000 		.word	0
 345 0014 00000000 		.word	0
 346 0018 00000000 		.word	0
 347 001c 01000000 		.word	1
 348 0020 00000000 		.word	0
 349 0024 00000000 		.word	0
 350 0028 01000000 		.word	1
 351 002c 00000000 		.word	0
 352 0030 00000000 		.word	0
 353 0034 00000000 		.word	0
 354 0038 01000000 		.word	1
 355 003c 01000000 		.word	1
 356 0040 00000000 		.word	0
 357 0044 01000000 		.word	1
 358 0048 00000000 		.word	0
 359 004c 00000000 		.word	0
 360 0050 00000000 		.word	0
 361 0054 01000000 		.word	1
 362 0058 00000000 		.word	0
 363 005c 01000000 		.word	1
 364 0060 00000000 		.word	0
 365 0064 01000000 		.word	1
 366 0068 01000000 		.word	1
 367 006c 00000000 		.word	0
 368 0070 00000000 		.word	0
 369 0074 01000000 		.word	1
 370 0078 01000000 		.word	1
 371 007c 01000000 		.word	1
 372 0080 01000000 		.word	1
 373 0084 00000000 		.word	0
 374 0088 00000000 		.word	0
 375 008c 00000000 		.word	0
 376 0090 01000000 		.word	1
 377 0094 00000000 		.word	0
 378 0098 00000000 		.word	0
 379 009c 01000000 		.word	1
 380              		.comm	time,4,4
 381              		.comm	hours,4,4
 382              		.comm	minutes,4,4
 383              		.comm	seconds,4,4
 384              		.comm	date,4,4
 385              		.comm	year,4,4
 386              		.comm	month,4,4
 387              		.comm	day,4,4
 388              		.global	display_mode
 389              		.bss
 390              		.align	2
 391              		.type	display_mode, %object
 392              		.size	display_mode, 4
 393              	display_mode:
 394 0000 00000000 		.space	4
 395              		.global	done
 396              		.align	2
 397              		.type	done, %object
 398              		.size	done, 4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 22


 399              	done:
 400 0004 00000000 		.space	4
 401              		.section	.text.nixie_write,"ax",%progbits
 402              		.align	2
 403              		.global	nixie_write
 404              		.code	16
 405              		.thumb_func
 406              		.type	nixie_write, %function
 407              	nixie_write:
 408              	.LFB63:
 409              		.file 2 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** *   Included Headers
   3:main.c        **** *******************************************************************************/
   4:main.c        **** #include <project.h>
   5:main.c        ****     
   6:main.c        **** int digits[10][4] = {
   7:main.c        ****     {0,0,0,0},
   8:main.c        ****     {0,0,0,1},
   9:main.c        ****     {0,0,1,0},
  10:main.c        ****     {0,0,1,1},
  11:main.c        ****     {0,1,0,0},
  12:main.c        ****     {0,1,0,1},
  13:main.c        ****     {0,1,1,0},
  14:main.c        ****     {0,1,1,1},
  15:main.c        ****     {1,0,0,0},
  16:main.c        ****     {1,0,0,1}
  17:main.c        **** };
  18:main.c        **** 
  19:main.c        **** uint32 time, hours, minutes, seconds;
  20:main.c        **** uint32 date, year, month, day;
  21:main.c        **** 
  22:main.c        **** int display_mode = 0; // 0 = display time, 1 = display date
  23:main.c        **** int done = 0;
  24:main.c        **** 
  25:main.c        **** 
  26:main.c        **** void nixie_write();
  27:main.c        **** void wdt_callback(void);
  28:main.c        **** void cathode_antidote();
  29:main.c        **** void set_time();
  30:main.c        **** void set_date();
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** void nixie_write(int tube, int i){
 410              		.loc 2 33 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 8
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414 0000 80B5     		push	{r7, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 7, -8
 417              		.cfi_offset 14, -4
 418 0002 82B0     		sub	sp, sp, #8
 419              		.cfi_def_cfa_offset 16
 420 0004 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
 422 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 23


 423 0008 3960     		str	r1, [r7]
  34:main.c        ****     switch(tube){
 424              		.loc 2 34 0
 425 000a 7B68     		ldr	r3, [r7, #4]
 426 000c 052B     		cmp	r3, #5
 427 000e 00D9     		bls	.LCB286
 428 0010 EFE0     		b	.L22	@long jump
 429              	.LCB286:
 430 0012 7B68     		ldr	r3, [r7, #4]
 431 0014 9A00     		lsls	r2, r3, #2
 432 0016 794B     		ldr	r3, .L23
 433 0018 D318     		adds	r3, r2, r3
 434 001a 1B68     		ldr	r3, [r3]
 435 001c 9F46     		mov	pc, r3
 436              		.section	.rodata
 437              		.align	2
 438              	.L16:
 439 0000 1E000000 		.word	.L15
 440 0004 6C000000 		.word	.L17
 441 0008 BA000000 		.word	.L18
 442 000c 08010000 		.word	.L19
 443 0010 56010000 		.word	.L20
 444 0014 A4010000 		.word	.L21
 445              		.section	.text.nixie_write
 446              	.L15:
  35:main.c        ****         case 0:
  36:main.c        ****             A_Write(digits[i][3]);
 447              		.loc 2 36 0
 448 001e 784A     		ldr	r2, .L23+4
 449 0020 3B68     		ldr	r3, [r7]
 450 0022 1B01     		lsls	r3, r3, #4
 451 0024 D318     		adds	r3, r2, r3
 452 0026 0C33     		adds	r3, r3, #12
 453 0028 1B68     		ldr	r3, [r3]
 454 002a DBB2     		uxtb	r3, r3
 455 002c 1800     		movs	r0, r3
 456 002e FFF7FEFF 		bl	A_Write
  37:main.c        ****             B_Write(digits[i][2]);
 457              		.loc 2 37 0
 458 0032 734A     		ldr	r2, .L23+4
 459 0034 3B68     		ldr	r3, [r7]
 460 0036 1B01     		lsls	r3, r3, #4
 461 0038 D318     		adds	r3, r2, r3
 462 003a 0833     		adds	r3, r3, #8
 463 003c 1B68     		ldr	r3, [r3]
 464 003e DBB2     		uxtb	r3, r3
 465 0040 1800     		movs	r0, r3
 466 0042 FFF7FEFF 		bl	B_Write
  38:main.c        ****             C_Write(digits[i][1]);
 467              		.loc 2 38 0
 468 0046 6E4A     		ldr	r2, .L23+4
 469 0048 3B68     		ldr	r3, [r7]
 470 004a 1B01     		lsls	r3, r3, #4
 471 004c D318     		adds	r3, r2, r3
 472 004e 0433     		adds	r3, r3, #4
 473 0050 1B68     		ldr	r3, [r3]
 474 0052 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 24


 475 0054 1800     		movs	r0, r3
 476 0056 FFF7FEFF 		bl	C_Write
  39:main.c        ****             D_Write(digits[i][0]);
 477              		.loc 2 39 0
 478 005a 694B     		ldr	r3, .L23+4
 479 005c 3A68     		ldr	r2, [r7]
 480 005e 1201     		lsls	r2, r2, #4
 481 0060 D358     		ldr	r3, [r2, r3]
 482 0062 DBB2     		uxtb	r3, r3
 483 0064 1800     		movs	r0, r3
 484 0066 FFF7FEFF 		bl	D_Write
  40:main.c        ****             break;
 485              		.loc 2 40 0
 486 006a C2E0     		b	.L14
 487              	.L17:
  41:main.c        ****         
  42:main.c        ****         case 1:
  43:main.c        ****             E_Write(digits[i][3]);
 488              		.loc 2 43 0
 489 006c 644A     		ldr	r2, .L23+4
 490 006e 3B68     		ldr	r3, [r7]
 491 0070 1B01     		lsls	r3, r3, #4
 492 0072 D318     		adds	r3, r2, r3
 493 0074 0C33     		adds	r3, r3, #12
 494 0076 1B68     		ldr	r3, [r3]
 495 0078 DBB2     		uxtb	r3, r3
 496 007a 1800     		movs	r0, r3
 497 007c FFF7FEFF 		bl	E_Write
  44:main.c        ****             F_Write(digits[i][2]);
 498              		.loc 2 44 0
 499 0080 5F4A     		ldr	r2, .L23+4
 500 0082 3B68     		ldr	r3, [r7]
 501 0084 1B01     		lsls	r3, r3, #4
 502 0086 D318     		adds	r3, r2, r3
 503 0088 0833     		adds	r3, r3, #8
 504 008a 1B68     		ldr	r3, [r3]
 505 008c DBB2     		uxtb	r3, r3
 506 008e 1800     		movs	r0, r3
 507 0090 FFF7FEFF 		bl	F_Write
  45:main.c        ****             G_Write(digits[i][1]);
 508              		.loc 2 45 0
 509 0094 5A4A     		ldr	r2, .L23+4
 510 0096 3B68     		ldr	r3, [r7]
 511 0098 1B01     		lsls	r3, r3, #4
 512 009a D318     		adds	r3, r2, r3
 513 009c 0433     		adds	r3, r3, #4
 514 009e 1B68     		ldr	r3, [r3]
 515 00a0 DBB2     		uxtb	r3, r3
 516 00a2 1800     		movs	r0, r3
 517 00a4 FFF7FEFF 		bl	G_Write
  46:main.c        ****             H_Write(digits[i][0]);
 518              		.loc 2 46 0
 519 00a8 554B     		ldr	r3, .L23+4
 520 00aa 3A68     		ldr	r2, [r7]
 521 00ac 1201     		lsls	r2, r2, #4
 522 00ae D358     		ldr	r3, [r2, r3]
 523 00b0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 25


 524 00b2 1800     		movs	r0, r3
 525 00b4 FFF7FEFF 		bl	H_Write
  47:main.c        ****             break;
 526              		.loc 2 47 0
 527 00b8 9BE0     		b	.L14
 528              	.L18:
  48:main.c        **** 
  49:main.c        ****         case 2:
  50:main.c        ****             I_Write(digits[i][3]);
 529              		.loc 2 50 0
 530 00ba 514A     		ldr	r2, .L23+4
 531 00bc 3B68     		ldr	r3, [r7]
 532 00be 1B01     		lsls	r3, r3, #4
 533 00c0 D318     		adds	r3, r2, r3
 534 00c2 0C33     		adds	r3, r3, #12
 535 00c4 1B68     		ldr	r3, [r3]
 536 00c6 DBB2     		uxtb	r3, r3
 537 00c8 1800     		movs	r0, r3
 538 00ca FFF7FEFF 		bl	I_Write
  51:main.c        ****             J_Write(digits[i][2]);
 539              		.loc 2 51 0
 540 00ce 4C4A     		ldr	r2, .L23+4
 541 00d0 3B68     		ldr	r3, [r7]
 542 00d2 1B01     		lsls	r3, r3, #4
 543 00d4 D318     		adds	r3, r2, r3
 544 00d6 0833     		adds	r3, r3, #8
 545 00d8 1B68     		ldr	r3, [r3]
 546 00da DBB2     		uxtb	r3, r3
 547 00dc 1800     		movs	r0, r3
 548 00de FFF7FEFF 		bl	J_Write
  52:main.c        ****             K_Write(digits[i][1]);
 549              		.loc 2 52 0
 550 00e2 474A     		ldr	r2, .L23+4
 551 00e4 3B68     		ldr	r3, [r7]
 552 00e6 1B01     		lsls	r3, r3, #4
 553 00e8 D318     		adds	r3, r2, r3
 554 00ea 0433     		adds	r3, r3, #4
 555 00ec 1B68     		ldr	r3, [r3]
 556 00ee DBB2     		uxtb	r3, r3
 557 00f0 1800     		movs	r0, r3
 558 00f2 FFF7FEFF 		bl	K_Write
  53:main.c        ****             L_Write(digits[i][0]);
 559              		.loc 2 53 0
 560 00f6 424B     		ldr	r3, .L23+4
 561 00f8 3A68     		ldr	r2, [r7]
 562 00fa 1201     		lsls	r2, r2, #4
 563 00fc D358     		ldr	r3, [r2, r3]
 564 00fe DBB2     		uxtb	r3, r3
 565 0100 1800     		movs	r0, r3
 566 0102 FFF7FEFF 		bl	L_Write
  54:main.c        ****             break;
 567              		.loc 2 54 0
 568 0106 74E0     		b	.L14
 569              	.L19:
  55:main.c        ****         
  56:main.c        ****         case 3:
  57:main.c        ****             M_Write(digits[i][3]);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 26


 570              		.loc 2 57 0
 571 0108 3D4A     		ldr	r2, .L23+4
 572 010a 3B68     		ldr	r3, [r7]
 573 010c 1B01     		lsls	r3, r3, #4
 574 010e D318     		adds	r3, r2, r3
 575 0110 0C33     		adds	r3, r3, #12
 576 0112 1B68     		ldr	r3, [r3]
 577 0114 DBB2     		uxtb	r3, r3
 578 0116 1800     		movs	r0, r3
 579 0118 FFF7FEFF 		bl	M_Write
  58:main.c        ****             N_Write(digits[i][2]);
 580              		.loc 2 58 0
 581 011c 384A     		ldr	r2, .L23+4
 582 011e 3B68     		ldr	r3, [r7]
 583 0120 1B01     		lsls	r3, r3, #4
 584 0122 D318     		adds	r3, r2, r3
 585 0124 0833     		adds	r3, r3, #8
 586 0126 1B68     		ldr	r3, [r3]
 587 0128 DBB2     		uxtb	r3, r3
 588 012a 1800     		movs	r0, r3
 589 012c FFF7FEFF 		bl	N_Write
  59:main.c        ****             O_Write(digits[i][1]);
 590              		.loc 2 59 0
 591 0130 334A     		ldr	r2, .L23+4
 592 0132 3B68     		ldr	r3, [r7]
 593 0134 1B01     		lsls	r3, r3, #4
 594 0136 D318     		adds	r3, r2, r3
 595 0138 0433     		adds	r3, r3, #4
 596 013a 1B68     		ldr	r3, [r3]
 597 013c DBB2     		uxtb	r3, r3
 598 013e 1800     		movs	r0, r3
 599 0140 FFF7FEFF 		bl	O_Write
  60:main.c        ****             P_Write(digits[i][0]);
 600              		.loc 2 60 0
 601 0144 2E4B     		ldr	r3, .L23+4
 602 0146 3A68     		ldr	r2, [r7]
 603 0148 1201     		lsls	r2, r2, #4
 604 014a D358     		ldr	r3, [r2, r3]
 605 014c DBB2     		uxtb	r3, r3
 606 014e 1800     		movs	r0, r3
 607 0150 FFF7FEFF 		bl	P_Write
  61:main.c        ****             break;
 608              		.loc 2 61 0
 609 0154 4DE0     		b	.L14
 610              	.L20:
  62:main.c        ****         
  63:main.c        ****         case 4:
  64:main.c        ****             Q_Write(digits[i][3]);
 611              		.loc 2 64 0
 612 0156 2A4A     		ldr	r2, .L23+4
 613 0158 3B68     		ldr	r3, [r7]
 614 015a 1B01     		lsls	r3, r3, #4
 615 015c D318     		adds	r3, r2, r3
 616 015e 0C33     		adds	r3, r3, #12
 617 0160 1B68     		ldr	r3, [r3]
 618 0162 DBB2     		uxtb	r3, r3
 619 0164 1800     		movs	r0, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 27


 620 0166 FFF7FEFF 		bl	Q_Write
  65:main.c        ****             R_Write(digits[i][2]);
 621              		.loc 2 65 0
 622 016a 254A     		ldr	r2, .L23+4
 623 016c 3B68     		ldr	r3, [r7]
 624 016e 1B01     		lsls	r3, r3, #4
 625 0170 D318     		adds	r3, r2, r3
 626 0172 0833     		adds	r3, r3, #8
 627 0174 1B68     		ldr	r3, [r3]
 628 0176 DBB2     		uxtb	r3, r3
 629 0178 1800     		movs	r0, r3
 630 017a FFF7FEFF 		bl	R_Write
  66:main.c        ****             S_Write(digits[i][1]);
 631              		.loc 2 66 0
 632 017e 204A     		ldr	r2, .L23+4
 633 0180 3B68     		ldr	r3, [r7]
 634 0182 1B01     		lsls	r3, r3, #4
 635 0184 D318     		adds	r3, r2, r3
 636 0186 0433     		adds	r3, r3, #4
 637 0188 1B68     		ldr	r3, [r3]
 638 018a DBB2     		uxtb	r3, r3
 639 018c 1800     		movs	r0, r3
 640 018e FFF7FEFF 		bl	S_Write
  67:main.c        ****             T_Write(digits[i][0]);
 641              		.loc 2 67 0
 642 0192 1B4B     		ldr	r3, .L23+4
 643 0194 3A68     		ldr	r2, [r7]
 644 0196 1201     		lsls	r2, r2, #4
 645 0198 D358     		ldr	r3, [r2, r3]
 646 019a DBB2     		uxtb	r3, r3
 647 019c 1800     		movs	r0, r3
 648 019e FFF7FEFF 		bl	T_Write
  68:main.c        ****             break;
 649              		.loc 2 68 0
 650 01a2 26E0     		b	.L14
 651              	.L21:
  69:main.c        **** 
  70:main.c        ****         case 5:
  71:main.c        ****             U_Write(digits[i][3]);
 652              		.loc 2 71 0
 653 01a4 164A     		ldr	r2, .L23+4
 654 01a6 3B68     		ldr	r3, [r7]
 655 01a8 1B01     		lsls	r3, r3, #4
 656 01aa D318     		adds	r3, r2, r3
 657 01ac 0C33     		adds	r3, r3, #12
 658 01ae 1B68     		ldr	r3, [r3]
 659 01b0 DBB2     		uxtb	r3, r3
 660 01b2 1800     		movs	r0, r3
 661 01b4 FFF7FEFF 		bl	U_Write
  72:main.c        ****             V_Write(digits[i][2]);
 662              		.loc 2 72 0
 663 01b8 114A     		ldr	r2, .L23+4
 664 01ba 3B68     		ldr	r3, [r7]
 665 01bc 1B01     		lsls	r3, r3, #4
 666 01be D318     		adds	r3, r2, r3
 667 01c0 0833     		adds	r3, r3, #8
 668 01c2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 28


 669 01c4 DBB2     		uxtb	r3, r3
 670 01c6 1800     		movs	r0, r3
 671 01c8 FFF7FEFF 		bl	V_Write
  73:main.c        ****             W_Write(digits[i][1]);
 672              		.loc 2 73 0
 673 01cc 0C4A     		ldr	r2, .L23+4
 674 01ce 3B68     		ldr	r3, [r7]
 675 01d0 1B01     		lsls	r3, r3, #4
 676 01d2 D318     		adds	r3, r2, r3
 677 01d4 0433     		adds	r3, r3, #4
 678 01d6 1B68     		ldr	r3, [r3]
 679 01d8 DBB2     		uxtb	r3, r3
 680 01da 1800     		movs	r0, r3
 681 01dc FFF7FEFF 		bl	W_Write
  74:main.c        ****             X_Write(digits[i][0]);
 682              		.loc 2 74 0
 683 01e0 074B     		ldr	r3, .L23+4
 684 01e2 3A68     		ldr	r2, [r7]
 685 01e4 1201     		lsls	r2, r2, #4
 686 01e6 D358     		ldr	r3, [r2, r3]
 687 01e8 DBB2     		uxtb	r3, r3
 688 01ea 1800     		movs	r0, r3
 689 01ec FFF7FEFF 		bl	X_Write
  75:main.c        ****             break;
 690              		.loc 2 75 0
 691 01f0 C046     		nop
 692              	.L14:
 693              	.L22:
  76:main.c        ****     }
  77:main.c        **** }
 694              		.loc 2 77 0
 695 01f2 C046     		nop
 696 01f4 BD46     		mov	sp, r7
 697 01f6 02B0     		add	sp, sp, #8
 698              		@ sp needed
 699 01f8 80BD     		pop	{r7, pc}
 700              	.L24:
 701 01fa C046     		.align	2
 702              	.L23:
 703 01fc 00000000 		.word	.L16
 704 0200 00000000 		.word	digits
 705              		.cfi_endproc
 706              	.LFE63:
 707              		.size	nixie_write, .-nixie_write
 708              		.global	__aeabi_uidiv
 709              		.global	__aeabi_uidivmod
 710              		.section	.text.wdt_callback,"ax",%progbits
 711              		.align	2
 712              		.global	wdt_callback
 713              		.code	16
 714              		.thumb_func
 715              		.type	wdt_callback, %function
 716              	wdt_callback:
 717              	.LFB64:
  78:main.c        **** 
  79:main.c        **** void wdt_callback(void){
 718              		.loc 2 79 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 29


 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722 0000 80B5     		push	{r7, lr}
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
  80:main.c        **** 
  81:main.c        ****     time = RTC_GetTime();
 728              		.loc 2 81 0
 729 0004 FFF7FEFF 		bl	RTC_GetTime
 730 0008 0200     		movs	r2, r0
 731 000a 3B4B     		ldr	r3, .L29
 732 000c 1A60     		str	r2, [r3]
  82:main.c        ****     
  83:main.c        ****     hours = RTC_GetHours(time);
 733              		.loc 2 83 0
 734 000e 3A4B     		ldr	r3, .L29
 735 0010 1B68     		ldr	r3, [r3]
 736 0012 1800     		movs	r0, r3
 737 0014 FFF7FEFF 		bl	RTC_GetHours
 738 0018 0200     		movs	r2, r0
 739 001a 384B     		ldr	r3, .L29+4
 740 001c 1A60     		str	r2, [r3]
  84:main.c        ****     minutes = RTC_GetMinutes(time);
 741              		.loc 2 84 0
 742 001e 364B     		ldr	r3, .L29
 743 0020 1B68     		ldr	r3, [r3]
 744 0022 1800     		movs	r0, r3
 745 0024 FFF7FEFF 		bl	RTC_GetMinutes
 746 0028 0200     		movs	r2, r0
 747 002a 354B     		ldr	r3, .L29+8
 748 002c 1A60     		str	r2, [r3]
  85:main.c        ****     seconds = RTC_GetSecond(time);
 749              		.loc 2 85 0
 750 002e 324B     		ldr	r3, .L29
 751 0030 1B68     		ldr	r3, [r3]
 752 0032 1800     		movs	r0, r3
 753 0034 FFF7FEFF 		bl	RTC_GetSecond
 754 0038 0200     		movs	r2, r0
 755 003a 324B     		ldr	r3, .L29+12
 756 003c 1A60     		str	r2, [r3]
  86:main.c        ****     
  87:main.c        ****     if (!display_mode){
 757              		.loc 2 87 0
 758 003e 324B     		ldr	r3, .L29+16
 759 0040 1B68     		ldr	r3, [r3]
 760 0042 002B     		cmp	r3, #0
 761 0044 41D1     		bne	.L26
  88:main.c        ****         nixie_write(0,hours/10);
 762              		.loc 2 88 0
 763 0046 2D4B     		ldr	r3, .L29+4
 764 0048 1B68     		ldr	r3, [r3]
 765 004a 0A21     		movs	r1, #10
 766 004c 1800     		movs	r0, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 30


 767 004e FFF7FEFF 		bl	__aeabi_uidiv
 768 0052 0300     		movs	r3, r0
 769 0054 1900     		movs	r1, r3
 770 0056 0020     		movs	r0, #0
 771 0058 FFF7FEFF 		bl	nixie_write
  89:main.c        ****         nixie_write(1,hours%10);
 772              		.loc 2 89 0
 773 005c 274B     		ldr	r3, .L29+4
 774 005e 1B68     		ldr	r3, [r3]
 775 0060 0A21     		movs	r1, #10
 776 0062 1800     		movs	r0, r3
 777 0064 FFF7FEFF 		bl	__aeabi_uidivmod
 778 0068 0B00     		movs	r3, r1
 779 006a 1900     		movs	r1, r3
 780 006c 0120     		movs	r0, #1
 781 006e FFF7FEFF 		bl	nixie_write
  90:main.c        ****         
  91:main.c        ****         nixie_write(2,minutes/10);
 782              		.loc 2 91 0
 783 0072 234B     		ldr	r3, .L29+8
 784 0074 1B68     		ldr	r3, [r3]
 785 0076 0A21     		movs	r1, #10
 786 0078 1800     		movs	r0, r3
 787 007a FFF7FEFF 		bl	__aeabi_uidiv
 788 007e 0300     		movs	r3, r0
 789 0080 1900     		movs	r1, r3
 790 0082 0220     		movs	r0, #2
 791 0084 FFF7FEFF 		bl	nixie_write
  92:main.c        ****         nixie_write(3,minutes%10);
 792              		.loc 2 92 0
 793 0088 1D4B     		ldr	r3, .L29+8
 794 008a 1B68     		ldr	r3, [r3]
 795 008c 0A21     		movs	r1, #10
 796 008e 1800     		movs	r0, r3
 797 0090 FFF7FEFF 		bl	__aeabi_uidivmod
 798 0094 0B00     		movs	r3, r1
 799 0096 1900     		movs	r1, r3
 800 0098 0320     		movs	r0, #3
 801 009a FFF7FEFF 		bl	nixie_write
  93:main.c        ****         
  94:main.c        ****         nixie_write(4,seconds/10);
 802              		.loc 2 94 0
 803 009e 194B     		ldr	r3, .L29+12
 804 00a0 1B68     		ldr	r3, [r3]
 805 00a2 0A21     		movs	r1, #10
 806 00a4 1800     		movs	r0, r3
 807 00a6 FFF7FEFF 		bl	__aeabi_uidiv
 808 00aa 0300     		movs	r3, r0
 809 00ac 1900     		movs	r1, r3
 810 00ae 0420     		movs	r0, #4
 811 00b0 FFF7FEFF 		bl	nixie_write
  95:main.c        ****         nixie_write(5,seconds%10);
 812              		.loc 2 95 0
 813 00b4 134B     		ldr	r3, .L29+12
 814 00b6 1B68     		ldr	r3, [r3]
 815 00b8 0A21     		movs	r1, #10
 816 00ba 1800     		movs	r0, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 31


 817 00bc FFF7FEFF 		bl	__aeabi_uidivmod
 818 00c0 0B00     		movs	r3, r1
 819 00c2 1900     		movs	r1, r3
 820 00c4 0520     		movs	r0, #5
 821 00c6 FFF7FEFF 		bl	nixie_write
 822              	.L26:
  96:main.c        ****     }
  97:main.c        ****     
  98:main.c        ****     if(minutes == 0 && done == 0){
 823              		.loc 2 98 0
 824 00ca 0D4B     		ldr	r3, .L29+8
 825 00cc 1B68     		ldr	r3, [r3]
 826 00ce 002B     		cmp	r3, #0
 827 00d0 05D1     		bne	.L27
 828              		.loc 2 98 0 is_stmt 0 discriminator 1
 829 00d2 0E4B     		ldr	r3, .L29+20
 830 00d4 1B68     		ldr	r3, [r3]
 831 00d6 002B     		cmp	r3, #0
 832 00d8 01D1     		bne	.L27
  99:main.c        ****         cathode_antidote();     // every hour we call this function
 833              		.loc 2 99 0 is_stmt 1
 834 00da FFF7FEFF 		bl	cathode_antidote
 835              	.L27:
 100:main.c        ****     }
 101:main.c        ****     
 102:main.c        ****     if(minutes > 0){
 836              		.loc 2 102 0
 837 00de 084B     		ldr	r3, .L29+8
 838 00e0 1B68     		ldr	r3, [r3]
 839 00e2 002B     		cmp	r3, #0
 840 00e4 02D0     		beq	.L28
 103:main.c        ****         done = 0;
 841              		.loc 2 103 0
 842 00e6 094B     		ldr	r3, .L29+20
 843 00e8 0022     		movs	r2, #0
 844 00ea 1A60     		str	r2, [r3]
 845              	.L28:
 104:main.c        ****     }
 105:main.c        ****     
 106:main.c        ****     RTC_Update();
 846              		.loc 2 106 0
 847 00ec FFF7FEFF 		bl	RTC_Update
 107:main.c        **** }
 848              		.loc 2 107 0
 849 00f0 C046     		nop
 850 00f2 BD46     		mov	sp, r7
 851              		@ sp needed
 852 00f4 80BD     		pop	{r7, pc}
 853              	.L30:
 854 00f6 C046     		.align	2
 855              	.L29:
 856 00f8 00000000 		.word	time
 857 00fc 00000000 		.word	hours
 858 0100 00000000 		.word	minutes
 859 0104 00000000 		.word	seconds
 860 0108 00000000 		.word	display_mode
 861 010c 00000000 		.word	done
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 32


 862              		.cfi_endproc
 863              	.LFE64:
 864              		.size	wdt_callback, .-wdt_callback
 865              		.section	.text.cathode_antidote,"ax",%progbits
 866              		.align	2
 867              		.global	cathode_antidote
 868              		.code	16
 869              		.thumb_func
 870              		.type	cathode_antidote, %function
 871              	cathode_antidote:
 872              	.LFB65:
 108:main.c        **** 
 109:main.c        **** 
 110:main.c        **** void cathode_antidote(){    // "animation" that cycles through all digits
 873              		.loc 2 110 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 48
 876              		@ frame_needed = 1, uses_anonymous_args = 0
 877 0000 80B5     		push	{r7, lr}
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 7, -8
 880              		.cfi_offset 14, -4
 881 0002 8CB0     		sub	sp, sp, #48
 882              		.cfi_def_cfa_offset 56
 883 0004 00AF     		add	r7, sp, #0
 884              		.cfi_def_cfa_register 7
 885              	.LBB2:
 111:main.c        ****     
 112:main.c        ****     for(int n = 0; n < 10; n++){
 886              		.loc 2 112 0
 887 0006 0023     		movs	r3, #0
 888 0008 FB62     		str	r3, [r7, #44]
 889 000a 2BE0     		b	.L32
 890              	.L33:
 113:main.c        ****         U_Write(digits[n][3]);
 891              		.loc 2 113 0 discriminator 3
 892 000c D84A     		ldr	r2, .L56
 893 000e FB6A     		ldr	r3, [r7, #44]
 894 0010 1B01     		lsls	r3, r3, #4
 895 0012 D318     		adds	r3, r2, r3
 896 0014 0C33     		adds	r3, r3, #12
 897 0016 1B68     		ldr	r3, [r3]
 898 0018 DBB2     		uxtb	r3, r3
 899 001a 1800     		movs	r0, r3
 900 001c FFF7FEFF 		bl	U_Write
 114:main.c        ****         V_Write(digits[n][2]);
 901              		.loc 2 114 0 discriminator 3
 902 0020 D34A     		ldr	r2, .L56
 903 0022 FB6A     		ldr	r3, [r7, #44]
 904 0024 1B01     		lsls	r3, r3, #4
 905 0026 D318     		adds	r3, r2, r3
 906 0028 0833     		adds	r3, r3, #8
 907 002a 1B68     		ldr	r3, [r3]
 908 002c DBB2     		uxtb	r3, r3
 909 002e 1800     		movs	r0, r3
 910 0030 FFF7FEFF 		bl	V_Write
 115:main.c        ****         W_Write(digits[n][1]);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 33


 911              		.loc 2 115 0 discriminator 3
 912 0034 CE4A     		ldr	r2, .L56
 913 0036 FB6A     		ldr	r3, [r7, #44]
 914 0038 1B01     		lsls	r3, r3, #4
 915 003a D318     		adds	r3, r2, r3
 916 003c 0433     		adds	r3, r3, #4
 917 003e 1B68     		ldr	r3, [r3]
 918 0040 DBB2     		uxtb	r3, r3
 919 0042 1800     		movs	r0, r3
 920 0044 FFF7FEFF 		bl	W_Write
 116:main.c        ****         X_Write(digits[n][0]);
 921              		.loc 2 116 0 discriminator 3
 922 0048 C94B     		ldr	r3, .L56
 923 004a FA6A     		ldr	r2, [r7, #44]
 924 004c 1201     		lsls	r2, r2, #4
 925 004e D358     		ldr	r3, [r2, r3]
 926 0050 DBB2     		uxtb	r3, r3
 927 0052 1800     		movs	r0, r3
 928 0054 FFF7FEFF 		bl	X_Write
 117:main.c        ****         CyDelay(80);
 929              		.loc 2 117 0 discriminator 3
 930 0058 5020     		movs	r0, #80
 931 005a FFF7FEFF 		bl	CyDelay
 112:main.c        ****         U_Write(digits[n][3]);
 932              		.loc 2 112 0 discriminator 3
 933 005e FB6A     		ldr	r3, [r7, #44]
 934 0060 0133     		adds	r3, r3, #1
 935 0062 FB62     		str	r3, [r7, #44]
 936              	.L32:
 112:main.c        ****         U_Write(digits[n][3]);
 937              		.loc 2 112 0 is_stmt 0 discriminator 1
 938 0064 FB6A     		ldr	r3, [r7, #44]
 939 0066 092B     		cmp	r3, #9
 940 0068 D0DD     		ble	.L33
 941              	.LBE2:
 118:main.c        ****     }
 119:main.c        ****     U_Write(0);
 942              		.loc 2 119 0 is_stmt 1
 943 006a 0020     		movs	r0, #0
 944 006c FFF7FEFF 		bl	U_Write
 120:main.c        ****     V_Write(0);
 945              		.loc 2 120 0
 946 0070 0020     		movs	r0, #0
 947 0072 FFF7FEFF 		bl	V_Write
 121:main.c        ****     W_Write(0);
 948              		.loc 2 121 0
 949 0076 0020     		movs	r0, #0
 950 0078 FFF7FEFF 		bl	W_Write
 122:main.c        ****     X_Write(0);
 951              		.loc 2 122 0
 952 007c 0020     		movs	r0, #0
 953 007e FFF7FEFF 		bl	X_Write
 954              	.LBB3:
 123:main.c        ****         
 124:main.c        **** 
 125:main.c        ****     for(int m = 0; m < 10; m++){
 955              		.loc 2 125 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 34


 956 0082 0023     		movs	r3, #0
 957 0084 BB62     		str	r3, [r7, #40]
 958 0086 2BE0     		b	.L34
 959              	.L35:
 126:main.c        ****         Q_Write(digits[m][3]);
 960              		.loc 2 126 0 discriminator 3
 961 0088 B94A     		ldr	r2, .L56
 962 008a BB6A     		ldr	r3, [r7, #40]
 963 008c 1B01     		lsls	r3, r3, #4
 964 008e D318     		adds	r3, r2, r3
 965 0090 0C33     		adds	r3, r3, #12
 966 0092 1B68     		ldr	r3, [r3]
 967 0094 DBB2     		uxtb	r3, r3
 968 0096 1800     		movs	r0, r3
 969 0098 FFF7FEFF 		bl	Q_Write
 127:main.c        ****         R_Write(digits[m][2]);
 970              		.loc 2 127 0 discriminator 3
 971 009c B44A     		ldr	r2, .L56
 972 009e BB6A     		ldr	r3, [r7, #40]
 973 00a0 1B01     		lsls	r3, r3, #4
 974 00a2 D318     		adds	r3, r2, r3
 975 00a4 0833     		adds	r3, r3, #8
 976 00a6 1B68     		ldr	r3, [r3]
 977 00a8 DBB2     		uxtb	r3, r3
 978 00aa 1800     		movs	r0, r3
 979 00ac FFF7FEFF 		bl	R_Write
 128:main.c        ****         S_Write(digits[m][1]);
 980              		.loc 2 128 0 discriminator 3
 981 00b0 AF4A     		ldr	r2, .L56
 982 00b2 BB6A     		ldr	r3, [r7, #40]
 983 00b4 1B01     		lsls	r3, r3, #4
 984 00b6 D318     		adds	r3, r2, r3
 985 00b8 0433     		adds	r3, r3, #4
 986 00ba 1B68     		ldr	r3, [r3]
 987 00bc DBB2     		uxtb	r3, r3
 988 00be 1800     		movs	r0, r3
 989 00c0 FFF7FEFF 		bl	S_Write
 129:main.c        ****         T_Write(digits[m][0]);
 990              		.loc 2 129 0 discriminator 3
 991 00c4 AA4B     		ldr	r3, .L56
 992 00c6 BA6A     		ldr	r2, [r7, #40]
 993 00c8 1201     		lsls	r2, r2, #4
 994 00ca D358     		ldr	r3, [r2, r3]
 995 00cc DBB2     		uxtb	r3, r3
 996 00ce 1800     		movs	r0, r3
 997 00d0 FFF7FEFF 		bl	T_Write
 130:main.c        ****         CyDelay(80);
 998              		.loc 2 130 0 discriminator 3
 999 00d4 5020     		movs	r0, #80
 1000 00d6 FFF7FEFF 		bl	CyDelay
 125:main.c        ****         Q_Write(digits[m][3]);
 1001              		.loc 2 125 0 discriminator 3
 1002 00da BB6A     		ldr	r3, [r7, #40]
 1003 00dc 0133     		adds	r3, r3, #1
 1004 00de BB62     		str	r3, [r7, #40]
 1005              	.L34:
 125:main.c        ****         Q_Write(digits[m][3]);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 35


 1006              		.loc 2 125 0 is_stmt 0 discriminator 1
 1007 00e0 BB6A     		ldr	r3, [r7, #40]
 1008 00e2 092B     		cmp	r3, #9
 1009 00e4 D0DD     		ble	.L35
 1010              	.LBE3:
 131:main.c        ****     }
 132:main.c        ****     Q_Write(0);
 1011              		.loc 2 132 0 is_stmt 1
 1012 00e6 0020     		movs	r0, #0
 1013 00e8 FFF7FEFF 		bl	Q_Write
 133:main.c        ****     R_Write(0);
 1014              		.loc 2 133 0
 1015 00ec 0020     		movs	r0, #0
 1016 00ee FFF7FEFF 		bl	R_Write
 134:main.c        ****     S_Write(0);
 1017              		.loc 2 134 0
 1018 00f2 0020     		movs	r0, #0
 1019 00f4 FFF7FEFF 		bl	S_Write
 135:main.c        ****     T_Write(0);
 1020              		.loc 2 135 0
 1021 00f8 0020     		movs	r0, #0
 1022 00fa FFF7FEFF 		bl	T_Write
 1023              	.LBB4:
 136:main.c        ****     
 137:main.c        ****     
 138:main.c        ****     for(int l = 0; l < 10; l++){
 1024              		.loc 2 138 0
 1025 00fe 0023     		movs	r3, #0
 1026 0100 7B62     		str	r3, [r7, #36]
 1027 0102 2BE0     		b	.L36
 1028              	.L37:
 139:main.c        ****         M_Write(digits[l][3]);
 1029              		.loc 2 139 0 discriminator 3
 1030 0104 9A4A     		ldr	r2, .L56
 1031 0106 7B6A     		ldr	r3, [r7, #36]
 1032 0108 1B01     		lsls	r3, r3, #4
 1033 010a D318     		adds	r3, r2, r3
 1034 010c 0C33     		adds	r3, r3, #12
 1035 010e 1B68     		ldr	r3, [r3]
 1036 0110 DBB2     		uxtb	r3, r3
 1037 0112 1800     		movs	r0, r3
 1038 0114 FFF7FEFF 		bl	M_Write
 140:main.c        ****         N_Write(digits[l][2]);
 1039              		.loc 2 140 0 discriminator 3
 1040 0118 954A     		ldr	r2, .L56
 1041 011a 7B6A     		ldr	r3, [r7, #36]
 1042 011c 1B01     		lsls	r3, r3, #4
 1043 011e D318     		adds	r3, r2, r3
 1044 0120 0833     		adds	r3, r3, #8
 1045 0122 1B68     		ldr	r3, [r3]
 1046 0124 DBB2     		uxtb	r3, r3
 1047 0126 1800     		movs	r0, r3
 1048 0128 FFF7FEFF 		bl	N_Write
 141:main.c        ****         O_Write(digits[l][1]);
 1049              		.loc 2 141 0 discriminator 3
 1050 012c 904A     		ldr	r2, .L56
 1051 012e 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 36


 1052 0130 1B01     		lsls	r3, r3, #4
 1053 0132 D318     		adds	r3, r2, r3
 1054 0134 0433     		adds	r3, r3, #4
 1055 0136 1B68     		ldr	r3, [r3]
 1056 0138 DBB2     		uxtb	r3, r3
 1057 013a 1800     		movs	r0, r3
 1058 013c FFF7FEFF 		bl	O_Write
 142:main.c        ****         P_Write(digits[l][0]);
 1059              		.loc 2 142 0 discriminator 3
 1060 0140 8B4B     		ldr	r3, .L56
 1061 0142 7A6A     		ldr	r2, [r7, #36]
 1062 0144 1201     		lsls	r2, r2, #4
 1063 0146 D358     		ldr	r3, [r2, r3]
 1064 0148 DBB2     		uxtb	r3, r3
 1065 014a 1800     		movs	r0, r3
 1066 014c FFF7FEFF 		bl	P_Write
 143:main.c        ****         CyDelay(80);
 1067              		.loc 2 143 0 discriminator 3
 1068 0150 5020     		movs	r0, #80
 1069 0152 FFF7FEFF 		bl	CyDelay
 138:main.c        ****         M_Write(digits[l][3]);
 1070              		.loc 2 138 0 discriminator 3
 1071 0156 7B6A     		ldr	r3, [r7, #36]
 1072 0158 0133     		adds	r3, r3, #1
 1073 015a 7B62     		str	r3, [r7, #36]
 1074              	.L36:
 138:main.c        ****         M_Write(digits[l][3]);
 1075              		.loc 2 138 0 is_stmt 0 discriminator 1
 1076 015c 7B6A     		ldr	r3, [r7, #36]
 1077 015e 092B     		cmp	r3, #9
 1078 0160 D0DD     		ble	.L37
 1079              	.LBE4:
 144:main.c        ****     }
 145:main.c        ****     M_Write(0);
 1080              		.loc 2 145 0 is_stmt 1
 1081 0162 0020     		movs	r0, #0
 1082 0164 FFF7FEFF 		bl	M_Write
 146:main.c        ****     N_Write(0);
 1083              		.loc 2 146 0
 1084 0168 0020     		movs	r0, #0
 1085 016a FFF7FEFF 		bl	N_Write
 147:main.c        ****     O_Write(0);
 1086              		.loc 2 147 0
 1087 016e 0020     		movs	r0, #0
 1088 0170 FFF7FEFF 		bl	O_Write
 148:main.c        ****     P_Write(0);
 1089              		.loc 2 148 0
 1090 0174 0020     		movs	r0, #0
 1091 0176 FFF7FEFF 		bl	P_Write
 1092              	.LBB5:
 149:main.c        ****     
 150:main.c        ****     
 151:main.c        ****     for(int k = 0; k < 10; k++){
 1093              		.loc 2 151 0
 1094 017a 0023     		movs	r3, #0
 1095 017c 3B62     		str	r3, [r7, #32]
 1096 017e 2BE0     		b	.L38
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 37


 1097              	.L39:
 152:main.c        ****         I_Write(digits[k][3]);
 1098              		.loc 2 152 0 discriminator 3
 1099 0180 7B4A     		ldr	r2, .L56
 1100 0182 3B6A     		ldr	r3, [r7, #32]
 1101 0184 1B01     		lsls	r3, r3, #4
 1102 0186 D318     		adds	r3, r2, r3
 1103 0188 0C33     		adds	r3, r3, #12
 1104 018a 1B68     		ldr	r3, [r3]
 1105 018c DBB2     		uxtb	r3, r3
 1106 018e 1800     		movs	r0, r3
 1107 0190 FFF7FEFF 		bl	I_Write
 153:main.c        ****         J_Write(digits[k][2]);
 1108              		.loc 2 153 0 discriminator 3
 1109 0194 764A     		ldr	r2, .L56
 1110 0196 3B6A     		ldr	r3, [r7, #32]
 1111 0198 1B01     		lsls	r3, r3, #4
 1112 019a D318     		adds	r3, r2, r3
 1113 019c 0833     		adds	r3, r3, #8
 1114 019e 1B68     		ldr	r3, [r3]
 1115 01a0 DBB2     		uxtb	r3, r3
 1116 01a2 1800     		movs	r0, r3
 1117 01a4 FFF7FEFF 		bl	J_Write
 154:main.c        ****         K_Write(digits[k][1]);
 1118              		.loc 2 154 0 discriminator 3
 1119 01a8 714A     		ldr	r2, .L56
 1120 01aa 3B6A     		ldr	r3, [r7, #32]
 1121 01ac 1B01     		lsls	r3, r3, #4
 1122 01ae D318     		adds	r3, r2, r3
 1123 01b0 0433     		adds	r3, r3, #4
 1124 01b2 1B68     		ldr	r3, [r3]
 1125 01b4 DBB2     		uxtb	r3, r3
 1126 01b6 1800     		movs	r0, r3
 1127 01b8 FFF7FEFF 		bl	K_Write
 155:main.c        ****         L_Write(digits[k][0]);
 1128              		.loc 2 155 0 discriminator 3
 1129 01bc 6C4B     		ldr	r3, .L56
 1130 01be 3A6A     		ldr	r2, [r7, #32]
 1131 01c0 1201     		lsls	r2, r2, #4
 1132 01c2 D358     		ldr	r3, [r2, r3]
 1133 01c4 DBB2     		uxtb	r3, r3
 1134 01c6 1800     		movs	r0, r3
 1135 01c8 FFF7FEFF 		bl	L_Write
 156:main.c        ****         CyDelay(80);
 1136              		.loc 2 156 0 discriminator 3
 1137 01cc 5020     		movs	r0, #80
 1138 01ce FFF7FEFF 		bl	CyDelay
 151:main.c        ****         I_Write(digits[k][3]);
 1139              		.loc 2 151 0 discriminator 3
 1140 01d2 3B6A     		ldr	r3, [r7, #32]
 1141 01d4 0133     		adds	r3, r3, #1
 1142 01d6 3B62     		str	r3, [r7, #32]
 1143              	.L38:
 151:main.c        ****         I_Write(digits[k][3]);
 1144              		.loc 2 151 0 is_stmt 0 discriminator 1
 1145 01d8 3B6A     		ldr	r3, [r7, #32]
 1146 01da 092B     		cmp	r3, #9
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 38


 1147 01dc D0DD     		ble	.L39
 1148              	.LBE5:
 157:main.c        ****     }
 158:main.c        ****     I_Write(0);
 1149              		.loc 2 158 0 is_stmt 1
 1150 01de 0020     		movs	r0, #0
 1151 01e0 FFF7FEFF 		bl	I_Write
 159:main.c        ****     J_Write(0);
 1152              		.loc 2 159 0
 1153 01e4 0020     		movs	r0, #0
 1154 01e6 FFF7FEFF 		bl	J_Write
 160:main.c        ****     K_Write(0);
 1155              		.loc 2 160 0
 1156 01ea 0020     		movs	r0, #0
 1157 01ec FFF7FEFF 		bl	K_Write
 161:main.c        ****     L_Write(0);
 1158              		.loc 2 161 0
 1159 01f0 0020     		movs	r0, #0
 1160 01f2 FFF7FEFF 		bl	L_Write
 1161              	.LBB6:
 162:main.c        ****     
 163:main.c        ****     
 164:main.c        ****     for(int j = 0; j < 10; j++){
 1162              		.loc 2 164 0
 1163 01f6 0023     		movs	r3, #0
 1164 01f8 FB61     		str	r3, [r7, #28]
 1165 01fa 2BE0     		b	.L40
 1166              	.L41:
 165:main.c        ****         E_Write(digits[j][3]);
 1167              		.loc 2 165 0 discriminator 3
 1168 01fc 5C4A     		ldr	r2, .L56
 1169 01fe FB69     		ldr	r3, [r7, #28]
 1170 0200 1B01     		lsls	r3, r3, #4
 1171 0202 D318     		adds	r3, r2, r3
 1172 0204 0C33     		adds	r3, r3, #12
 1173 0206 1B68     		ldr	r3, [r3]
 1174 0208 DBB2     		uxtb	r3, r3
 1175 020a 1800     		movs	r0, r3
 1176 020c FFF7FEFF 		bl	E_Write
 166:main.c        ****         F_Write(digits[j][2]);
 1177              		.loc 2 166 0 discriminator 3
 1178 0210 574A     		ldr	r2, .L56
 1179 0212 FB69     		ldr	r3, [r7, #28]
 1180 0214 1B01     		lsls	r3, r3, #4
 1181 0216 D318     		adds	r3, r2, r3
 1182 0218 0833     		adds	r3, r3, #8
 1183 021a 1B68     		ldr	r3, [r3]
 1184 021c DBB2     		uxtb	r3, r3
 1185 021e 1800     		movs	r0, r3
 1186 0220 FFF7FEFF 		bl	F_Write
 167:main.c        ****         G_Write(digits[j][1]);
 1187              		.loc 2 167 0 discriminator 3
 1188 0224 524A     		ldr	r2, .L56
 1189 0226 FB69     		ldr	r3, [r7, #28]
 1190 0228 1B01     		lsls	r3, r3, #4
 1191 022a D318     		adds	r3, r2, r3
 1192 022c 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 39


 1193 022e 1B68     		ldr	r3, [r3]
 1194 0230 DBB2     		uxtb	r3, r3
 1195 0232 1800     		movs	r0, r3
 1196 0234 FFF7FEFF 		bl	G_Write
 168:main.c        ****         H_Write(digits[j][0]);
 1197              		.loc 2 168 0 discriminator 3
 1198 0238 4D4B     		ldr	r3, .L56
 1199 023a FA69     		ldr	r2, [r7, #28]
 1200 023c 1201     		lsls	r2, r2, #4
 1201 023e D358     		ldr	r3, [r2, r3]
 1202 0240 DBB2     		uxtb	r3, r3
 1203 0242 1800     		movs	r0, r3
 1204 0244 FFF7FEFF 		bl	H_Write
 169:main.c        ****         CyDelay(80);
 1205              		.loc 2 169 0 discriminator 3
 1206 0248 5020     		movs	r0, #80
 1207 024a FFF7FEFF 		bl	CyDelay
 164:main.c        ****         E_Write(digits[j][3]);
 1208              		.loc 2 164 0 discriminator 3
 1209 024e FB69     		ldr	r3, [r7, #28]
 1210 0250 0133     		adds	r3, r3, #1
 1211 0252 FB61     		str	r3, [r7, #28]
 1212              	.L40:
 164:main.c        ****         E_Write(digits[j][3]);
 1213              		.loc 2 164 0 is_stmt 0 discriminator 1
 1214 0254 FB69     		ldr	r3, [r7, #28]
 1215 0256 092B     		cmp	r3, #9
 1216 0258 D0DD     		ble	.L41
 1217              	.LBE6:
 170:main.c        ****     }
 171:main.c        ****     E_Write(0);
 1218              		.loc 2 171 0 is_stmt 1
 1219 025a 0020     		movs	r0, #0
 1220 025c FFF7FEFF 		bl	E_Write
 172:main.c        ****     F_Write(0);
 1221              		.loc 2 172 0
 1222 0260 0020     		movs	r0, #0
 1223 0262 FFF7FEFF 		bl	F_Write
 173:main.c        ****     G_Write(0);
 1224              		.loc 2 173 0
 1225 0266 0020     		movs	r0, #0
 1226 0268 FFF7FEFF 		bl	G_Write
 174:main.c        ****     H_Write(0);
 1227              		.loc 2 174 0
 1228 026c 0020     		movs	r0, #0
 1229 026e FFF7FEFF 		bl	H_Write
 1230              	.LBB7:
 175:main.c        ****     
 176:main.c        ****     
 177:main.c        ****     for(int i = 0; i < 10; i++){
 1231              		.loc 2 177 0
 1232 0272 0023     		movs	r3, #0
 1233 0274 BB61     		str	r3, [r7, #24]
 1234 0276 2BE0     		b	.L42
 1235              	.L43:
 178:main.c        ****         A_Write(digits[i][3]);
 1236              		.loc 2 178 0 discriminator 3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 40


 1237 0278 3D4A     		ldr	r2, .L56
 1238 027a BB69     		ldr	r3, [r7, #24]
 1239 027c 1B01     		lsls	r3, r3, #4
 1240 027e D318     		adds	r3, r2, r3
 1241 0280 0C33     		adds	r3, r3, #12
 1242 0282 1B68     		ldr	r3, [r3]
 1243 0284 DBB2     		uxtb	r3, r3
 1244 0286 1800     		movs	r0, r3
 1245 0288 FFF7FEFF 		bl	A_Write
 179:main.c        ****         B_Write(digits[i][2]);
 1246              		.loc 2 179 0 discriminator 3
 1247 028c 384A     		ldr	r2, .L56
 1248 028e BB69     		ldr	r3, [r7, #24]
 1249 0290 1B01     		lsls	r3, r3, #4
 1250 0292 D318     		adds	r3, r2, r3
 1251 0294 0833     		adds	r3, r3, #8
 1252 0296 1B68     		ldr	r3, [r3]
 1253 0298 DBB2     		uxtb	r3, r3
 1254 029a 1800     		movs	r0, r3
 1255 029c FFF7FEFF 		bl	B_Write
 180:main.c        ****         C_Write(digits[i][1]);
 1256              		.loc 2 180 0 discriminator 3
 1257 02a0 334A     		ldr	r2, .L56
 1258 02a2 BB69     		ldr	r3, [r7, #24]
 1259 02a4 1B01     		lsls	r3, r3, #4
 1260 02a6 D318     		adds	r3, r2, r3
 1261 02a8 0433     		adds	r3, r3, #4
 1262 02aa 1B68     		ldr	r3, [r3]
 1263 02ac DBB2     		uxtb	r3, r3
 1264 02ae 1800     		movs	r0, r3
 1265 02b0 FFF7FEFF 		bl	C_Write
 181:main.c        ****         D_Write(digits[i][0]);
 1266              		.loc 2 181 0 discriminator 3
 1267 02b4 2E4B     		ldr	r3, .L56
 1268 02b6 BA69     		ldr	r2, [r7, #24]
 1269 02b8 1201     		lsls	r2, r2, #4
 1270 02ba D358     		ldr	r3, [r2, r3]
 1271 02bc DBB2     		uxtb	r3, r3
 1272 02be 1800     		movs	r0, r3
 1273 02c0 FFF7FEFF 		bl	D_Write
 182:main.c        ****         CyDelay(80);
 1274              		.loc 2 182 0 discriminator 3
 1275 02c4 5020     		movs	r0, #80
 1276 02c6 FFF7FEFF 		bl	CyDelay
 177:main.c        ****         A_Write(digits[i][3]);
 1277              		.loc 2 177 0 discriminator 3
 1278 02ca BB69     		ldr	r3, [r7, #24]
 1279 02cc 0133     		adds	r3, r3, #1
 1280 02ce BB61     		str	r3, [r7, #24]
 1281              	.L42:
 177:main.c        ****         A_Write(digits[i][3]);
 1282              		.loc 2 177 0 is_stmt 0 discriminator 1
 1283 02d0 BB69     		ldr	r3, [r7, #24]
 1284 02d2 092B     		cmp	r3, #9
 1285 02d4 D0DD     		ble	.L43
 1286              	.LBE7:
 183:main.c        ****     }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 41


 184:main.c        ****     A_Write(0);
 1287              		.loc 2 184 0 is_stmt 1
 1288 02d6 0020     		movs	r0, #0
 1289 02d8 FFF7FEFF 		bl	A_Write
 185:main.c        ****     B_Write(0);
 1290              		.loc 2 185 0
 1291 02dc 0020     		movs	r0, #0
 1292 02de FFF7FEFF 		bl	B_Write
 186:main.c        ****     C_Write(0);
 1293              		.loc 2 186 0
 1294 02e2 0020     		movs	r0, #0
 1295 02e4 FFF7FEFF 		bl	C_Write
 187:main.c        ****     D_Write(0);
 1296              		.loc 2 187 0
 1297 02e8 0020     		movs	r0, #0
 1298 02ea FFF7FEFF 		bl	D_Write
 1299              	.LBB8:
 188:main.c        ****     
 189:main.c        ****     
 190:main.c        ****     for(int j = 0; j < 10; j++){
 1300              		.loc 2 190 0
 1301 02ee 0023     		movs	r3, #0
 1302 02f0 7B61     		str	r3, [r7, #20]
 1303 02f2 2BE0     		b	.L44
 1304              	.L45:
 191:main.c        ****         E_Write(digits[j][3]);
 1305              		.loc 2 191 0 discriminator 3
 1306 02f4 1E4A     		ldr	r2, .L56
 1307 02f6 7B69     		ldr	r3, [r7, #20]
 1308 02f8 1B01     		lsls	r3, r3, #4
 1309 02fa D318     		adds	r3, r2, r3
 1310 02fc 0C33     		adds	r3, r3, #12
 1311 02fe 1B68     		ldr	r3, [r3]
 1312 0300 DBB2     		uxtb	r3, r3
 1313 0302 1800     		movs	r0, r3
 1314 0304 FFF7FEFF 		bl	E_Write
 192:main.c        ****         F_Write(digits[j][2]);
 1315              		.loc 2 192 0 discriminator 3
 1316 0308 194A     		ldr	r2, .L56
 1317 030a 7B69     		ldr	r3, [r7, #20]
 1318 030c 1B01     		lsls	r3, r3, #4
 1319 030e D318     		adds	r3, r2, r3
 1320 0310 0833     		adds	r3, r3, #8
 1321 0312 1B68     		ldr	r3, [r3]
 1322 0314 DBB2     		uxtb	r3, r3
 1323 0316 1800     		movs	r0, r3
 1324 0318 FFF7FEFF 		bl	F_Write
 193:main.c        ****         G_Write(digits[j][1]);
 1325              		.loc 2 193 0 discriminator 3
 1326 031c 144A     		ldr	r2, .L56
 1327 031e 7B69     		ldr	r3, [r7, #20]
 1328 0320 1B01     		lsls	r3, r3, #4
 1329 0322 D318     		adds	r3, r2, r3
 1330 0324 0433     		adds	r3, r3, #4
 1331 0326 1B68     		ldr	r3, [r3]
 1332 0328 DBB2     		uxtb	r3, r3
 1333 032a 1800     		movs	r0, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 42


 1334 032c FFF7FEFF 		bl	G_Write
 194:main.c        ****         H_Write(digits[j][0]);
 1335              		.loc 2 194 0 discriminator 3
 1336 0330 0F4B     		ldr	r3, .L56
 1337 0332 7A69     		ldr	r2, [r7, #20]
 1338 0334 1201     		lsls	r2, r2, #4
 1339 0336 D358     		ldr	r3, [r2, r3]
 1340 0338 DBB2     		uxtb	r3, r3
 1341 033a 1800     		movs	r0, r3
 1342 033c FFF7FEFF 		bl	H_Write
 195:main.c        ****         CyDelay(80);
 1343              		.loc 2 195 0 discriminator 3
 1344 0340 5020     		movs	r0, #80
 1345 0342 FFF7FEFF 		bl	CyDelay
 190:main.c        ****         E_Write(digits[j][3]);
 1346              		.loc 2 190 0 discriminator 3
 1347 0346 7B69     		ldr	r3, [r7, #20]
 1348 0348 0133     		adds	r3, r3, #1
 1349 034a 7B61     		str	r3, [r7, #20]
 1350              	.L44:
 190:main.c        ****         E_Write(digits[j][3]);
 1351              		.loc 2 190 0 is_stmt 0 discriminator 1
 1352 034c 7B69     		ldr	r3, [r7, #20]
 1353 034e 092B     		cmp	r3, #9
 1354 0350 D0DD     		ble	.L45
 1355              	.LBE8:
 196:main.c        ****     }
 197:main.c        ****     E_Write(0);
 1356              		.loc 2 197 0 is_stmt 1
 1357 0352 0020     		movs	r0, #0
 1358 0354 FFF7FEFF 		bl	E_Write
 198:main.c        ****     F_Write(0);
 1359              		.loc 2 198 0
 1360 0358 0020     		movs	r0, #0
 1361 035a FFF7FEFF 		bl	F_Write
 199:main.c        ****     G_Write(0);
 1362              		.loc 2 199 0
 1363 035e 0020     		movs	r0, #0
 1364 0360 FFF7FEFF 		bl	G_Write
 200:main.c        ****     H_Write(0);
 1365              		.loc 2 200 0
 1366 0364 0020     		movs	r0, #0
 1367 0366 FFF7FEFF 		bl	H_Write
 1368              	.LBB9:
 201:main.c        **** 
 202:main.c        ****     for(int k = 0; k < 10; k++){
 1369              		.loc 2 202 0
 1370 036a 0023     		movs	r3, #0
 1371 036c 3B61     		str	r3, [r7, #16]
 1372 036e 2DE0     		b	.L46
 1373              	.L57:
 1374              		.align	2
 1375              	.L56:
 1376 0370 00000000 		.word	digits
 1377              	.L47:
 203:main.c        ****         I_Write(digits[k][3]);
 1378              		.loc 2 203 0 discriminator 3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 43


 1379 0374 7B4A     		ldr	r2, .L58
 1380 0376 3B69     		ldr	r3, [r7, #16]
 1381 0378 1B01     		lsls	r3, r3, #4
 1382 037a D318     		adds	r3, r2, r3
 1383 037c 0C33     		adds	r3, r3, #12
 1384 037e 1B68     		ldr	r3, [r3]
 1385 0380 DBB2     		uxtb	r3, r3
 1386 0382 1800     		movs	r0, r3
 1387 0384 FFF7FEFF 		bl	I_Write
 204:main.c        ****         J_Write(digits[k][2]);
 1388              		.loc 2 204 0 discriminator 3
 1389 0388 764A     		ldr	r2, .L58
 1390 038a 3B69     		ldr	r3, [r7, #16]
 1391 038c 1B01     		lsls	r3, r3, #4
 1392 038e D318     		adds	r3, r2, r3
 1393 0390 0833     		adds	r3, r3, #8
 1394 0392 1B68     		ldr	r3, [r3]
 1395 0394 DBB2     		uxtb	r3, r3
 1396 0396 1800     		movs	r0, r3
 1397 0398 FFF7FEFF 		bl	J_Write
 205:main.c        ****         K_Write(digits[k][1]);
 1398              		.loc 2 205 0 discriminator 3
 1399 039c 714A     		ldr	r2, .L58
 1400 039e 3B69     		ldr	r3, [r7, #16]
 1401 03a0 1B01     		lsls	r3, r3, #4
 1402 03a2 D318     		adds	r3, r2, r3
 1403 03a4 0433     		adds	r3, r3, #4
 1404 03a6 1B68     		ldr	r3, [r3]
 1405 03a8 DBB2     		uxtb	r3, r3
 1406 03aa 1800     		movs	r0, r3
 1407 03ac FFF7FEFF 		bl	K_Write
 206:main.c        ****         L_Write(digits[k][0]);
 1408              		.loc 2 206 0 discriminator 3
 1409 03b0 6C4B     		ldr	r3, .L58
 1410 03b2 3A69     		ldr	r2, [r7, #16]
 1411 03b4 1201     		lsls	r2, r2, #4
 1412 03b6 D358     		ldr	r3, [r2, r3]
 1413 03b8 DBB2     		uxtb	r3, r3
 1414 03ba 1800     		movs	r0, r3
 1415 03bc FFF7FEFF 		bl	L_Write
 207:main.c        ****         CyDelay(80);
 1416              		.loc 2 207 0 discriminator 3
 1417 03c0 5020     		movs	r0, #80
 1418 03c2 FFF7FEFF 		bl	CyDelay
 202:main.c        ****         I_Write(digits[k][3]);
 1419              		.loc 2 202 0 discriminator 3
 1420 03c6 3B69     		ldr	r3, [r7, #16]
 1421 03c8 0133     		adds	r3, r3, #1
 1422 03ca 3B61     		str	r3, [r7, #16]
 1423              	.L46:
 202:main.c        ****         I_Write(digits[k][3]);
 1424              		.loc 2 202 0 is_stmt 0 discriminator 1
 1425 03cc 3B69     		ldr	r3, [r7, #16]
 1426 03ce 092B     		cmp	r3, #9
 1427 03d0 D0DD     		ble	.L47
 1428              	.LBE9:
 208:main.c        ****     }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 44


 209:main.c        ****     I_Write(0);
 1429              		.loc 2 209 0 is_stmt 1
 1430 03d2 0020     		movs	r0, #0
 1431 03d4 FFF7FEFF 		bl	I_Write
 210:main.c        ****     J_Write(0);
 1432              		.loc 2 210 0
 1433 03d8 0020     		movs	r0, #0
 1434 03da FFF7FEFF 		bl	J_Write
 211:main.c        ****     K_Write(0);
 1435              		.loc 2 211 0
 1436 03de 0020     		movs	r0, #0
 1437 03e0 FFF7FEFF 		bl	K_Write
 212:main.c        ****     L_Write(0);
 1438              		.loc 2 212 0
 1439 03e4 0020     		movs	r0, #0
 1440 03e6 FFF7FEFF 		bl	L_Write
 1441              	.LBB10:
 213:main.c        ****     
 214:main.c        ****     for(int l = 0; l < 10; l++){
 1442              		.loc 2 214 0
 1443 03ea 0023     		movs	r3, #0
 1444 03ec FB60     		str	r3, [r7, #12]
 1445 03ee 2BE0     		b	.L48
 1446              	.L49:
 215:main.c        ****         M_Write(digits[l][3]);
 1447              		.loc 2 215 0 discriminator 3
 1448 03f0 5C4A     		ldr	r2, .L58
 1449 03f2 FB68     		ldr	r3, [r7, #12]
 1450 03f4 1B01     		lsls	r3, r3, #4
 1451 03f6 D318     		adds	r3, r2, r3
 1452 03f8 0C33     		adds	r3, r3, #12
 1453 03fa 1B68     		ldr	r3, [r3]
 1454 03fc DBB2     		uxtb	r3, r3
 1455 03fe 1800     		movs	r0, r3
 1456 0400 FFF7FEFF 		bl	M_Write
 216:main.c        ****         N_Write(digits[l][2]);
 1457              		.loc 2 216 0 discriminator 3
 1458 0404 574A     		ldr	r2, .L58
 1459 0406 FB68     		ldr	r3, [r7, #12]
 1460 0408 1B01     		lsls	r3, r3, #4
 1461 040a D318     		adds	r3, r2, r3
 1462 040c 0833     		adds	r3, r3, #8
 1463 040e 1B68     		ldr	r3, [r3]
 1464 0410 DBB2     		uxtb	r3, r3
 1465 0412 1800     		movs	r0, r3
 1466 0414 FFF7FEFF 		bl	N_Write
 217:main.c        ****         O_Write(digits[l][1]);
 1467              		.loc 2 217 0 discriminator 3
 1468 0418 524A     		ldr	r2, .L58
 1469 041a FB68     		ldr	r3, [r7, #12]
 1470 041c 1B01     		lsls	r3, r3, #4
 1471 041e D318     		adds	r3, r2, r3
 1472 0420 0433     		adds	r3, r3, #4
 1473 0422 1B68     		ldr	r3, [r3]
 1474 0424 DBB2     		uxtb	r3, r3
 1475 0426 1800     		movs	r0, r3
 1476 0428 FFF7FEFF 		bl	O_Write
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 45


 218:main.c        ****         P_Write(digits[l][0]);
 1477              		.loc 2 218 0 discriminator 3
 1478 042c 4D4B     		ldr	r3, .L58
 1479 042e FA68     		ldr	r2, [r7, #12]
 1480 0430 1201     		lsls	r2, r2, #4
 1481 0432 D358     		ldr	r3, [r2, r3]
 1482 0434 DBB2     		uxtb	r3, r3
 1483 0436 1800     		movs	r0, r3
 1484 0438 FFF7FEFF 		bl	P_Write
 219:main.c        ****         CyDelay(80);
 1485              		.loc 2 219 0 discriminator 3
 1486 043c 5020     		movs	r0, #80
 1487 043e FFF7FEFF 		bl	CyDelay
 214:main.c        ****         M_Write(digits[l][3]);
 1488              		.loc 2 214 0 discriminator 3
 1489 0442 FB68     		ldr	r3, [r7, #12]
 1490 0444 0133     		adds	r3, r3, #1
 1491 0446 FB60     		str	r3, [r7, #12]
 1492              	.L48:
 214:main.c        ****         M_Write(digits[l][3]);
 1493              		.loc 2 214 0 is_stmt 0 discriminator 1
 1494 0448 FB68     		ldr	r3, [r7, #12]
 1495 044a 092B     		cmp	r3, #9
 1496 044c D0DD     		ble	.L49
 1497              	.LBE10:
 220:main.c        ****     }
 221:main.c        ****     M_Write(0);
 1498              		.loc 2 221 0 is_stmt 1
 1499 044e 0020     		movs	r0, #0
 1500 0450 FFF7FEFF 		bl	M_Write
 222:main.c        ****     N_Write(0);
 1501              		.loc 2 222 0
 1502 0454 0020     		movs	r0, #0
 1503 0456 FFF7FEFF 		bl	N_Write
 223:main.c        ****     O_Write(0);
 1504              		.loc 2 223 0
 1505 045a 0020     		movs	r0, #0
 1506 045c FFF7FEFF 		bl	O_Write
 224:main.c        ****     P_Write(0);
 1507              		.loc 2 224 0
 1508 0460 0020     		movs	r0, #0
 1509 0462 FFF7FEFF 		bl	P_Write
 1510              	.LBB11:
 225:main.c        **** 
 226:main.c        ****     for(int m = 0; m < 10; m++){
 1511              		.loc 2 226 0
 1512 0466 0023     		movs	r3, #0
 1513 0468 BB60     		str	r3, [r7, #8]
 1514 046a 2BE0     		b	.L50
 1515              	.L51:
 227:main.c        ****         Q_Write(digits[m][3]);
 1516              		.loc 2 227 0 discriminator 3
 1517 046c 3D4A     		ldr	r2, .L58
 1518 046e BB68     		ldr	r3, [r7, #8]
 1519 0470 1B01     		lsls	r3, r3, #4
 1520 0472 D318     		adds	r3, r2, r3
 1521 0474 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 46


 1522 0476 1B68     		ldr	r3, [r3]
 1523 0478 DBB2     		uxtb	r3, r3
 1524 047a 1800     		movs	r0, r3
 1525 047c FFF7FEFF 		bl	Q_Write
 228:main.c        ****         R_Write(digits[m][2]);
 1526              		.loc 2 228 0 discriminator 3
 1527 0480 384A     		ldr	r2, .L58
 1528 0482 BB68     		ldr	r3, [r7, #8]
 1529 0484 1B01     		lsls	r3, r3, #4
 1530 0486 D318     		adds	r3, r2, r3
 1531 0488 0833     		adds	r3, r3, #8
 1532 048a 1B68     		ldr	r3, [r3]
 1533 048c DBB2     		uxtb	r3, r3
 1534 048e 1800     		movs	r0, r3
 1535 0490 FFF7FEFF 		bl	R_Write
 229:main.c        ****         S_Write(digits[m][1]);
 1536              		.loc 2 229 0 discriminator 3
 1537 0494 334A     		ldr	r2, .L58
 1538 0496 BB68     		ldr	r3, [r7, #8]
 1539 0498 1B01     		lsls	r3, r3, #4
 1540 049a D318     		adds	r3, r2, r3
 1541 049c 0433     		adds	r3, r3, #4
 1542 049e 1B68     		ldr	r3, [r3]
 1543 04a0 DBB2     		uxtb	r3, r3
 1544 04a2 1800     		movs	r0, r3
 1545 04a4 FFF7FEFF 		bl	S_Write
 230:main.c        ****         T_Write(digits[m][0]);
 1546              		.loc 2 230 0 discriminator 3
 1547 04a8 2E4B     		ldr	r3, .L58
 1548 04aa BA68     		ldr	r2, [r7, #8]
 1549 04ac 1201     		lsls	r2, r2, #4
 1550 04ae D358     		ldr	r3, [r2, r3]
 1551 04b0 DBB2     		uxtb	r3, r3
 1552 04b2 1800     		movs	r0, r3
 1553 04b4 FFF7FEFF 		bl	T_Write
 231:main.c        ****         CyDelay(80);
 1554              		.loc 2 231 0 discriminator 3
 1555 04b8 5020     		movs	r0, #80
 1556 04ba FFF7FEFF 		bl	CyDelay
 226:main.c        ****         Q_Write(digits[m][3]);
 1557              		.loc 2 226 0 discriminator 3
 1558 04be BB68     		ldr	r3, [r7, #8]
 1559 04c0 0133     		adds	r3, r3, #1
 1560 04c2 BB60     		str	r3, [r7, #8]
 1561              	.L50:
 226:main.c        ****         Q_Write(digits[m][3]);
 1562              		.loc 2 226 0 is_stmt 0 discriminator 1
 1563 04c4 BB68     		ldr	r3, [r7, #8]
 1564 04c6 092B     		cmp	r3, #9
 1565 04c8 D0DD     		ble	.L51
 1566              	.LBE11:
 232:main.c        ****     }
 233:main.c        ****     Q_Write(0);
 1567              		.loc 2 233 0 is_stmt 1
 1568 04ca 0020     		movs	r0, #0
 1569 04cc FFF7FEFF 		bl	Q_Write
 234:main.c        ****     R_Write(0);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 47


 1570              		.loc 2 234 0
 1571 04d0 0020     		movs	r0, #0
 1572 04d2 FFF7FEFF 		bl	R_Write
 235:main.c        ****     S_Write(0);
 1573              		.loc 2 235 0
 1574 04d6 0020     		movs	r0, #0
 1575 04d8 FFF7FEFF 		bl	S_Write
 236:main.c        ****     T_Write(0);
 1576              		.loc 2 236 0
 1577 04dc 0020     		movs	r0, #0
 1578 04de FFF7FEFF 		bl	T_Write
 1579              	.LBB12:
 237:main.c        **** 
 238:main.c        ****     for(int n = 0; n < 10; n++){
 1580              		.loc 2 238 0
 1581 04e2 0023     		movs	r3, #0
 1582 04e4 7B60     		str	r3, [r7, #4]
 1583 04e6 2BE0     		b	.L52
 1584              	.L53:
 239:main.c        ****         U_Write(digits[n][3]);
 1585              		.loc 2 239 0 discriminator 3
 1586 04e8 1E4A     		ldr	r2, .L58
 1587 04ea 7B68     		ldr	r3, [r7, #4]
 1588 04ec 1B01     		lsls	r3, r3, #4
 1589 04ee D318     		adds	r3, r2, r3
 1590 04f0 0C33     		adds	r3, r3, #12
 1591 04f2 1B68     		ldr	r3, [r3]
 1592 04f4 DBB2     		uxtb	r3, r3
 1593 04f6 1800     		movs	r0, r3
 1594 04f8 FFF7FEFF 		bl	U_Write
 240:main.c        ****         V_Write(digits[n][2]);
 1595              		.loc 2 240 0 discriminator 3
 1596 04fc 194A     		ldr	r2, .L58
 1597 04fe 7B68     		ldr	r3, [r7, #4]
 1598 0500 1B01     		lsls	r3, r3, #4
 1599 0502 D318     		adds	r3, r2, r3
 1600 0504 0833     		adds	r3, r3, #8
 1601 0506 1B68     		ldr	r3, [r3]
 1602 0508 DBB2     		uxtb	r3, r3
 1603 050a 1800     		movs	r0, r3
 1604 050c FFF7FEFF 		bl	V_Write
 241:main.c        ****         W_Write(digits[n][1]);
 1605              		.loc 2 241 0 discriminator 3
 1606 0510 144A     		ldr	r2, .L58
 1607 0512 7B68     		ldr	r3, [r7, #4]
 1608 0514 1B01     		lsls	r3, r3, #4
 1609 0516 D318     		adds	r3, r2, r3
 1610 0518 0433     		adds	r3, r3, #4
 1611 051a 1B68     		ldr	r3, [r3]
 1612 051c DBB2     		uxtb	r3, r3
 1613 051e 1800     		movs	r0, r3
 1614 0520 FFF7FEFF 		bl	W_Write
 242:main.c        ****         X_Write(digits[n][0]);
 1615              		.loc 2 242 0 discriminator 3
 1616 0524 0F4B     		ldr	r3, .L58
 1617 0526 7A68     		ldr	r2, [r7, #4]
 1618 0528 1201     		lsls	r2, r2, #4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 48


 1619 052a D358     		ldr	r3, [r2, r3]
 1620 052c DBB2     		uxtb	r3, r3
 1621 052e 1800     		movs	r0, r3
 1622 0530 FFF7FEFF 		bl	X_Write
 243:main.c        ****         CyDelay(80);
 1623              		.loc 2 243 0 discriminator 3
 1624 0534 5020     		movs	r0, #80
 1625 0536 FFF7FEFF 		bl	CyDelay
 238:main.c        ****         U_Write(digits[n][3]);
 1626              		.loc 2 238 0 discriminator 3
 1627 053a 7B68     		ldr	r3, [r7, #4]
 1628 053c 0133     		adds	r3, r3, #1
 1629 053e 7B60     		str	r3, [r7, #4]
 1630              	.L52:
 238:main.c        ****         U_Write(digits[n][3]);
 1631              		.loc 2 238 0 is_stmt 0 discriminator 1
 1632 0540 7B68     		ldr	r3, [r7, #4]
 1633 0542 092B     		cmp	r3, #9
 1634 0544 D0DD     		ble	.L53
 1635              	.LBE12:
 244:main.c        ****     }
 245:main.c        ****     U_Write(0);
 1636              		.loc 2 245 0 is_stmt 1
 1637 0546 0020     		movs	r0, #0
 1638 0548 FFF7FEFF 		bl	U_Write
 246:main.c        ****     V_Write(0);
 1639              		.loc 2 246 0
 1640 054c 0020     		movs	r0, #0
 1641 054e FFF7FEFF 		bl	V_Write
 247:main.c        ****     W_Write(0);
 1642              		.loc 2 247 0
 1643 0552 0020     		movs	r0, #0
 1644 0554 FFF7FEFF 		bl	W_Write
 248:main.c        ****     X_Write(0);
 1645              		.loc 2 248 0
 1646 0558 0020     		movs	r0, #0
 1647 055a FFF7FEFF 		bl	X_Write
 1648              	.LBB13:
 249:main.c        ****         
 250:main.c        ****     for(int i = 0; i < 10; i++) {
 1649              		.loc 2 250 0
 1650 055e 0023     		movs	r3, #0
 1651 0560 3B60     		str	r3, [r7]
 1652 0562 EEE0     		b	.L54
 1653              	.L59:
 1654              		.align	2
 1655              	.L58:
 1656 0564 00000000 		.word	digits
 1657              	.L55:
 251:main.c        ****         
 252:main.c        ****         A_Write(digits[i][3]);
 1658              		.loc 2 252 0 discriminator 3
 1659 0568 834A     		ldr	r2, .L60
 1660 056a 3B68     		ldr	r3, [r7]
 1661 056c 1B01     		lsls	r3, r3, #4
 1662 056e D318     		adds	r3, r2, r3
 1663 0570 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 49


 1664 0572 1B68     		ldr	r3, [r3]
 1665 0574 DBB2     		uxtb	r3, r3
 1666 0576 1800     		movs	r0, r3
 1667 0578 FFF7FEFF 		bl	A_Write
 253:main.c        ****         B_Write(digits[i][2]);
 1668              		.loc 2 253 0 discriminator 3
 1669 057c 7E4A     		ldr	r2, .L60
 1670 057e 3B68     		ldr	r3, [r7]
 1671 0580 1B01     		lsls	r3, r3, #4
 1672 0582 D318     		adds	r3, r2, r3
 1673 0584 0833     		adds	r3, r3, #8
 1674 0586 1B68     		ldr	r3, [r3]
 1675 0588 DBB2     		uxtb	r3, r3
 1676 058a 1800     		movs	r0, r3
 1677 058c FFF7FEFF 		bl	B_Write
 254:main.c        ****         C_Write(digits[i][1]);
 1678              		.loc 2 254 0 discriminator 3
 1679 0590 794A     		ldr	r2, .L60
 1680 0592 3B68     		ldr	r3, [r7]
 1681 0594 1B01     		lsls	r3, r3, #4
 1682 0596 D318     		adds	r3, r2, r3
 1683 0598 0433     		adds	r3, r3, #4
 1684 059a 1B68     		ldr	r3, [r3]
 1685 059c DBB2     		uxtb	r3, r3
 1686 059e 1800     		movs	r0, r3
 1687 05a0 FFF7FEFF 		bl	C_Write
 255:main.c        ****         D_Write(digits[i][0]);
 1688              		.loc 2 255 0 discriminator 3
 1689 05a4 744B     		ldr	r3, .L60
 1690 05a6 3A68     		ldr	r2, [r7]
 1691 05a8 1201     		lsls	r2, r2, #4
 1692 05aa D358     		ldr	r3, [r2, r3]
 1693 05ac DBB2     		uxtb	r3, r3
 1694 05ae 1800     		movs	r0, r3
 1695 05b0 FFF7FEFF 		bl	D_Write
 256:main.c        ****         
 257:main.c        ****         E_Write(digits[i][3]);
 1696              		.loc 2 257 0 discriminator 3
 1697 05b4 704A     		ldr	r2, .L60
 1698 05b6 3B68     		ldr	r3, [r7]
 1699 05b8 1B01     		lsls	r3, r3, #4
 1700 05ba D318     		adds	r3, r2, r3
 1701 05bc 0C33     		adds	r3, r3, #12
 1702 05be 1B68     		ldr	r3, [r3]
 1703 05c0 DBB2     		uxtb	r3, r3
 1704 05c2 1800     		movs	r0, r3
 1705 05c4 FFF7FEFF 		bl	E_Write
 258:main.c        ****         F_Write(digits[i][2]);
 1706              		.loc 2 258 0 discriminator 3
 1707 05c8 6B4A     		ldr	r2, .L60
 1708 05ca 3B68     		ldr	r3, [r7]
 1709 05cc 1B01     		lsls	r3, r3, #4
 1710 05ce D318     		adds	r3, r2, r3
 1711 05d0 0833     		adds	r3, r3, #8
 1712 05d2 1B68     		ldr	r3, [r3]
 1713 05d4 DBB2     		uxtb	r3, r3
 1714 05d6 1800     		movs	r0, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 50


 1715 05d8 FFF7FEFF 		bl	F_Write
 259:main.c        ****         G_Write(digits[i][1]);
 1716              		.loc 2 259 0 discriminator 3
 1717 05dc 664A     		ldr	r2, .L60
 1718 05de 3B68     		ldr	r3, [r7]
 1719 05e0 1B01     		lsls	r3, r3, #4
 1720 05e2 D318     		adds	r3, r2, r3
 1721 05e4 0433     		adds	r3, r3, #4
 1722 05e6 1B68     		ldr	r3, [r3]
 1723 05e8 DBB2     		uxtb	r3, r3
 1724 05ea 1800     		movs	r0, r3
 1725 05ec FFF7FEFF 		bl	G_Write
 260:main.c        ****         H_Write(digits[i][0]);
 1726              		.loc 2 260 0 discriminator 3
 1727 05f0 614B     		ldr	r3, .L60
 1728 05f2 3A68     		ldr	r2, [r7]
 1729 05f4 1201     		lsls	r2, r2, #4
 1730 05f6 D358     		ldr	r3, [r2, r3]
 1731 05f8 DBB2     		uxtb	r3, r3
 1732 05fa 1800     		movs	r0, r3
 1733 05fc FFF7FEFF 		bl	H_Write
 261:main.c        ****         
 262:main.c        ****         I_Write(digits[i][3]);
 1734              		.loc 2 262 0 discriminator 3
 1735 0600 5D4A     		ldr	r2, .L60
 1736 0602 3B68     		ldr	r3, [r7]
 1737 0604 1B01     		lsls	r3, r3, #4
 1738 0606 D318     		adds	r3, r2, r3
 1739 0608 0C33     		adds	r3, r3, #12
 1740 060a 1B68     		ldr	r3, [r3]
 1741 060c DBB2     		uxtb	r3, r3
 1742 060e 1800     		movs	r0, r3
 1743 0610 FFF7FEFF 		bl	I_Write
 263:main.c        ****         J_Write(digits[i][2]);
 1744              		.loc 2 263 0 discriminator 3
 1745 0614 584A     		ldr	r2, .L60
 1746 0616 3B68     		ldr	r3, [r7]
 1747 0618 1B01     		lsls	r3, r3, #4
 1748 061a D318     		adds	r3, r2, r3
 1749 061c 0833     		adds	r3, r3, #8
 1750 061e 1B68     		ldr	r3, [r3]
 1751 0620 DBB2     		uxtb	r3, r3
 1752 0622 1800     		movs	r0, r3
 1753 0624 FFF7FEFF 		bl	J_Write
 264:main.c        ****         K_Write(digits[i][1]);
 1754              		.loc 2 264 0 discriminator 3
 1755 0628 534A     		ldr	r2, .L60
 1756 062a 3B68     		ldr	r3, [r7]
 1757 062c 1B01     		lsls	r3, r3, #4
 1758 062e D318     		adds	r3, r2, r3
 1759 0630 0433     		adds	r3, r3, #4
 1760 0632 1B68     		ldr	r3, [r3]
 1761 0634 DBB2     		uxtb	r3, r3
 1762 0636 1800     		movs	r0, r3
 1763 0638 FFF7FEFF 		bl	K_Write
 265:main.c        ****         L_Write(digits[i][0]);
 1764              		.loc 2 265 0 discriminator 3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 51


 1765 063c 4E4B     		ldr	r3, .L60
 1766 063e 3A68     		ldr	r2, [r7]
 1767 0640 1201     		lsls	r2, r2, #4
 1768 0642 D358     		ldr	r3, [r2, r3]
 1769 0644 DBB2     		uxtb	r3, r3
 1770 0646 1800     		movs	r0, r3
 1771 0648 FFF7FEFF 		bl	L_Write
 266:main.c        ****         CyDelay(80);
 1772              		.loc 2 266 0 discriminator 3
 1773 064c 5020     		movs	r0, #80
 1774 064e FFF7FEFF 		bl	CyDelay
 267:main.c        **** 
 268:main.c        ****         M_Write(digits[i][3]);
 1775              		.loc 2 268 0 discriminator 3
 1776 0652 494A     		ldr	r2, .L60
 1777 0654 3B68     		ldr	r3, [r7]
 1778 0656 1B01     		lsls	r3, r3, #4
 1779 0658 D318     		adds	r3, r2, r3
 1780 065a 0C33     		adds	r3, r3, #12
 1781 065c 1B68     		ldr	r3, [r3]
 1782 065e DBB2     		uxtb	r3, r3
 1783 0660 1800     		movs	r0, r3
 1784 0662 FFF7FEFF 		bl	M_Write
 269:main.c        ****         N_Write(digits[i][2]);
 1785              		.loc 2 269 0 discriminator 3
 1786 0666 444A     		ldr	r2, .L60
 1787 0668 3B68     		ldr	r3, [r7]
 1788 066a 1B01     		lsls	r3, r3, #4
 1789 066c D318     		adds	r3, r2, r3
 1790 066e 0833     		adds	r3, r3, #8
 1791 0670 1B68     		ldr	r3, [r3]
 1792 0672 DBB2     		uxtb	r3, r3
 1793 0674 1800     		movs	r0, r3
 1794 0676 FFF7FEFF 		bl	N_Write
 270:main.c        ****         O_Write(digits[i][1]);
 1795              		.loc 2 270 0 discriminator 3
 1796 067a 3F4A     		ldr	r2, .L60
 1797 067c 3B68     		ldr	r3, [r7]
 1798 067e 1B01     		lsls	r3, r3, #4
 1799 0680 D318     		adds	r3, r2, r3
 1800 0682 0433     		adds	r3, r3, #4
 1801 0684 1B68     		ldr	r3, [r3]
 1802 0686 DBB2     		uxtb	r3, r3
 1803 0688 1800     		movs	r0, r3
 1804 068a FFF7FEFF 		bl	O_Write
 271:main.c        ****         P_Write(digits[i][0]);
 1805              		.loc 2 271 0 discriminator 3
 1806 068e 3A4B     		ldr	r3, .L60
 1807 0690 3A68     		ldr	r2, [r7]
 1808 0692 1201     		lsls	r2, r2, #4
 1809 0694 D358     		ldr	r3, [r2, r3]
 1810 0696 DBB2     		uxtb	r3, r3
 1811 0698 1800     		movs	r0, r3
 1812 069a FFF7FEFF 		bl	P_Write
 272:main.c        ****         
 273:main.c        ****         Q_Write(digits[i][3]);
 1813              		.loc 2 273 0 discriminator 3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 52


 1814 069e 364A     		ldr	r2, .L60
 1815 06a0 3B68     		ldr	r3, [r7]
 1816 06a2 1B01     		lsls	r3, r3, #4
 1817 06a4 D318     		adds	r3, r2, r3
 1818 06a6 0C33     		adds	r3, r3, #12
 1819 06a8 1B68     		ldr	r3, [r3]
 1820 06aa DBB2     		uxtb	r3, r3
 1821 06ac 1800     		movs	r0, r3
 1822 06ae FFF7FEFF 		bl	Q_Write
 274:main.c        ****         R_Write(digits[i][2]);
 1823              		.loc 2 274 0 discriminator 3
 1824 06b2 314A     		ldr	r2, .L60
 1825 06b4 3B68     		ldr	r3, [r7]
 1826 06b6 1B01     		lsls	r3, r3, #4
 1827 06b8 D318     		adds	r3, r2, r3
 1828 06ba 0833     		adds	r3, r3, #8
 1829 06bc 1B68     		ldr	r3, [r3]
 1830 06be DBB2     		uxtb	r3, r3
 1831 06c0 1800     		movs	r0, r3
 1832 06c2 FFF7FEFF 		bl	R_Write
 275:main.c        ****         S_Write(digits[i][1]);
 1833              		.loc 2 275 0 discriminator 3
 1834 06c6 2C4A     		ldr	r2, .L60
 1835 06c8 3B68     		ldr	r3, [r7]
 1836 06ca 1B01     		lsls	r3, r3, #4
 1837 06cc D318     		adds	r3, r2, r3
 1838 06ce 0433     		adds	r3, r3, #4
 1839 06d0 1B68     		ldr	r3, [r3]
 1840 06d2 DBB2     		uxtb	r3, r3
 1841 06d4 1800     		movs	r0, r3
 1842 06d6 FFF7FEFF 		bl	S_Write
 276:main.c        ****         T_Write(digits[i][0]);
 1843              		.loc 2 276 0 discriminator 3
 1844 06da 274B     		ldr	r3, .L60
 1845 06dc 3A68     		ldr	r2, [r7]
 1846 06de 1201     		lsls	r2, r2, #4
 1847 06e0 D358     		ldr	r3, [r2, r3]
 1848 06e2 DBB2     		uxtb	r3, r3
 1849 06e4 1800     		movs	r0, r3
 1850 06e6 FFF7FEFF 		bl	T_Write
 277:main.c        ****         
 278:main.c        ****         U_Write(digits[i][3]);
 1851              		.loc 2 278 0 discriminator 3
 1852 06ea 234A     		ldr	r2, .L60
 1853 06ec 3B68     		ldr	r3, [r7]
 1854 06ee 1B01     		lsls	r3, r3, #4
 1855 06f0 D318     		adds	r3, r2, r3
 1856 06f2 0C33     		adds	r3, r3, #12
 1857 06f4 1B68     		ldr	r3, [r3]
 1858 06f6 DBB2     		uxtb	r3, r3
 1859 06f8 1800     		movs	r0, r3
 1860 06fa FFF7FEFF 		bl	U_Write
 279:main.c        ****         V_Write(digits[i][2]);
 1861              		.loc 2 279 0 discriminator 3
 1862 06fe 1E4A     		ldr	r2, .L60
 1863 0700 3B68     		ldr	r3, [r7]
 1864 0702 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 53


 1865 0704 D318     		adds	r3, r2, r3
 1866 0706 0833     		adds	r3, r3, #8
 1867 0708 1B68     		ldr	r3, [r3]
 1868 070a DBB2     		uxtb	r3, r3
 1869 070c 1800     		movs	r0, r3
 1870 070e FFF7FEFF 		bl	V_Write
 280:main.c        ****         W_Write(digits[i][1]);
 1871              		.loc 2 280 0 discriminator 3
 1872 0712 194A     		ldr	r2, .L60
 1873 0714 3B68     		ldr	r3, [r7]
 1874 0716 1B01     		lsls	r3, r3, #4
 1875 0718 D318     		adds	r3, r2, r3
 1876 071a 0433     		adds	r3, r3, #4
 1877 071c 1B68     		ldr	r3, [r3]
 1878 071e DBB2     		uxtb	r3, r3
 1879 0720 1800     		movs	r0, r3
 1880 0722 FFF7FEFF 		bl	W_Write
 281:main.c        ****         X_Write(digits[i][0]);
 1881              		.loc 2 281 0 discriminator 3
 1882 0726 144B     		ldr	r3, .L60
 1883 0728 3A68     		ldr	r2, [r7]
 1884 072a 1201     		lsls	r2, r2, #4
 1885 072c D358     		ldr	r3, [r2, r3]
 1886 072e DBB2     		uxtb	r3, r3
 1887 0730 1800     		movs	r0, r3
 1888 0732 FFF7FEFF 		bl	X_Write
 282:main.c        ****         
 283:main.c        ****         CyDelay(80);
 1889              		.loc 2 283 0 discriminator 3
 1890 0736 5020     		movs	r0, #80
 1891 0738 FFF7FEFF 		bl	CyDelay
 250:main.c        ****         
 1892              		.loc 2 250 0 discriminator 3
 1893 073c 3B68     		ldr	r3, [r7]
 1894 073e 0133     		adds	r3, r3, #1
 1895 0740 3B60     		str	r3, [r7]
 1896              	.L54:
 250:main.c        ****         
 1897              		.loc 2 250 0 is_stmt 0 discriminator 1
 1898 0742 3B68     		ldr	r3, [r7]
 1899 0744 092B     		cmp	r3, #9
 1900 0746 00DC     		bgt	.LCB1586
 1901 0748 0EE7     		b	.L55	@long jump
 1902              	.LCB1586:
 1903              	.LBE13:
 284:main.c        ****     }
 285:main.c        ****     time = RTC_GetTime();
 1904              		.loc 2 285 0 is_stmt 1
 1905 074a FFF7FEFF 		bl	RTC_GetTime
 1906 074e 0200     		movs	r2, r0
 1907 0750 0A4B     		ldr	r3, .L60+4
 1908 0752 1A60     		str	r2, [r3]
 286:main.c        ****     minutes = RTC_GetMinutes(time);
 1909              		.loc 2 286 0
 1910 0754 094B     		ldr	r3, .L60+4
 1911 0756 1B68     		ldr	r3, [r3]
 1912 0758 1800     		movs	r0, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 54


 1913 075a FFF7FEFF 		bl	RTC_GetMinutes
 1914 075e 0200     		movs	r2, r0
 1915 0760 074B     		ldr	r3, .L60+8
 1916 0762 1A60     		str	r2, [r3]
 287:main.c        ****     
 288:main.c        ****     done = 1;
 1917              		.loc 2 288 0
 1918 0764 074B     		ldr	r3, .L60+12
 1919 0766 0122     		movs	r2, #1
 1920 0768 1A60     		str	r2, [r3]
 289:main.c        ****     
 290:main.c        ****     wdt_callback();
 1921              		.loc 2 290 0
 1922 076a FFF7FEFF 		bl	wdt_callback
 291:main.c        **** }
 1923              		.loc 2 291 0
 1924 076e C046     		nop
 1925 0770 BD46     		mov	sp, r7
 1926 0772 0CB0     		add	sp, sp, #48
 1927              		@ sp needed
 1928 0774 80BD     		pop	{r7, pc}
 1929              	.L61:
 1930 0776 C046     		.align	2
 1931              	.L60:
 1932 0778 00000000 		.word	digits
 1933 077c 00000000 		.word	time
 1934 0780 00000000 		.word	minutes
 1935 0784 00000000 		.word	done
 1936              		.cfi_endproc
 1937              	.LFE65:
 1938              		.size	cathode_antidote, .-cathode_antidote
 1939              		.section	.text.set_time,"ax",%progbits
 1940              		.align	2
 1941              		.global	set_time
 1942              		.code	16
 1943              		.thumb_func
 1944              		.type	set_time, %function
 1945              	set_time:
 1946              	.LFB66:
 292:main.c        **** 
 293:main.c        **** void set_time(){
 1947              		.loc 2 293 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 0
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951 0000 80B5     		push	{r7, lr}
 1952              		.cfi_def_cfa_offset 8
 1953              		.cfi_offset 7, -8
 1954              		.cfi_offset 14, -4
 1955 0002 00AF     		add	r7, sp, #0
 1956              		.cfi_def_cfa_register 7
 294:main.c        ****     CyGlobalIntDisable;
 1957              		.loc 2 294 0
 1958              		.syntax divided
 1959              	@ 294 "main.c" 1
 1960 0004 72B6     		CPSID   i
 1961              	@ 0 "" 2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 55


 295:main.c        ****     A_Write(digits[8][3]);
 1962              		.loc 2 295 0
 1963              		.thumb
 1964              		.syntax unified
 1965 0006 0F4B     		ldr	r3, .L63
 1966 0008 8C22     		movs	r2, #140
 1967 000a 9B58     		ldr	r3, [r3, r2]
 1968 000c DBB2     		uxtb	r3, r3
 1969 000e 1800     		movs	r0, r3
 1970 0010 FFF7FEFF 		bl	A_Write
 296:main.c        ****     B_Write(digits[8][2]);
 1971              		.loc 2 296 0
 1972 0014 0B4B     		ldr	r3, .L63
 1973 0016 8822     		movs	r2, #136
 1974 0018 9B58     		ldr	r3, [r3, r2]
 1975 001a DBB2     		uxtb	r3, r3
 1976 001c 1800     		movs	r0, r3
 1977 001e FFF7FEFF 		bl	B_Write
 297:main.c        ****     C_Write(digits[8][1]);
 1978              		.loc 2 297 0
 1979 0022 084B     		ldr	r3, .L63
 1980 0024 8422     		movs	r2, #132
 1981 0026 9B58     		ldr	r3, [r3, r2]
 1982 0028 DBB2     		uxtb	r3, r3
 1983 002a 1800     		movs	r0, r3
 1984 002c FFF7FEFF 		bl	C_Write
 298:main.c        ****     D_Write(digits[8][0]);
 1985              		.loc 2 298 0
 1986 0030 044B     		ldr	r3, .L63
 1987 0032 8022     		movs	r2, #128
 1988 0034 9B58     		ldr	r3, [r3, r2]
 1989 0036 DBB2     		uxtb	r3, r3
 1990 0038 1800     		movs	r0, r3
 1991 003a FFF7FEFF 		bl	D_Write
 299:main.c        **** }
 1992              		.loc 2 299 0
 1993 003e C046     		nop
 1994 0040 BD46     		mov	sp, r7
 1995              		@ sp needed
 1996 0042 80BD     		pop	{r7, pc}
 1997              	.L64:
 1998              		.align	2
 1999              	.L63:
 2000 0044 00000000 		.word	digits
 2001              		.cfi_endproc
 2002              	.LFE66:
 2003              		.size	set_time, .-set_time
 2004              		.section	.text.set_date,"ax",%progbits
 2005              		.align	2
 2006              		.global	set_date
 2007              		.code	16
 2008              		.thumb_func
 2009              		.type	set_date, %function
 2010              	set_date:
 2011              	.LFB67:
 300:main.c        **** 
 301:main.c        **** void set_date(){
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 56


 2012              		.loc 2 301 0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 1, uses_anonymous_args = 0
 2016 0000 80B5     		push	{r7, lr}
 2017              		.cfi_def_cfa_offset 8
 2018              		.cfi_offset 7, -8
 2019              		.cfi_offset 14, -4
 2020 0002 00AF     		add	r7, sp, #0
 2021              		.cfi_def_cfa_register 7
 302:main.c        ****     
 303:main.c        ****     A_Write(digits[3][3]);
 2022              		.loc 2 303 0
 2023 0004 0D4B     		ldr	r3, .L66
 2024 0006 DB6B     		ldr	r3, [r3, #60]
 2025 0008 DBB2     		uxtb	r3, r3
 2026 000a 1800     		movs	r0, r3
 2027 000c FFF7FEFF 		bl	A_Write
 304:main.c        ****     B_Write(digits[3][2]);
 2028              		.loc 2 304 0
 2029 0010 0A4B     		ldr	r3, .L66
 2030 0012 9B6B     		ldr	r3, [r3, #56]
 2031 0014 DBB2     		uxtb	r3, r3
 2032 0016 1800     		movs	r0, r3
 2033 0018 FFF7FEFF 		bl	B_Write
 305:main.c        ****     C_Write(digits[3][1]);
 2034              		.loc 2 305 0
 2035 001c 074B     		ldr	r3, .L66
 2036 001e 5B6B     		ldr	r3, [r3, #52]
 2037 0020 DBB2     		uxtb	r3, r3
 2038 0022 1800     		movs	r0, r3
 2039 0024 FFF7FEFF 		bl	C_Write
 306:main.c        ****     D_Write(digits[3][0]);
 2040              		.loc 2 306 0
 2041 0028 044B     		ldr	r3, .L66
 2042 002a 1B6B     		ldr	r3, [r3, #48]
 2043 002c DBB2     		uxtb	r3, r3
 2044 002e 1800     		movs	r0, r3
 2045 0030 FFF7FEFF 		bl	D_Write
 307:main.c        **** }
 2046              		.loc 2 307 0
 2047 0034 C046     		nop
 2048 0036 BD46     		mov	sp, r7
 2049              		@ sp needed
 2050 0038 80BD     		pop	{r7, pc}
 2051              	.L67:
 2052 003a C046     		.align	2
 2053              	.L66:
 2054 003c 00000000 		.word	digits
 2055              		.cfi_endproc
 2056              	.LFE67:
 2057              		.size	set_date, .-set_date
 2058              		.section	.text.main,"ax",%progbits
 2059              		.align	2
 2060              		.global	main
 2061              		.code	16
 2062              		.thumb_func
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 57


 2063              		.type	main, %function
 2064              	main:
 2065              	.LFB68:
 308:main.c        **** 
 309:main.c        **** int main() {
 2066              		.loc 2 309 0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 8
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070 0000 80B5     		push	{r7, lr}
 2071              		.cfi_def_cfa_offset 8
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 2074 0002 82B0     		sub	sp, sp, #8
 2075              		.cfi_def_cfa_offset 16
 2076 0004 00AF     		add	r7, sp, #0
 2077              		.cfi_def_cfa_register 7
 310:main.c        ****     
 311:main.c        ****     // setting up the real time clock
 312:main.c        ****     RTC_Start();
 2078              		.loc 2 312 0
 2079 0006 FFF7FEFF 		bl	RTC_Start
 313:main.c        ****     RTC_SetDateAndTime(0x071739,0x10042022);    // setting the time (0xHHMMSS) and date (0xDDMMYYYY
 2080              		.loc 2 313 0
 2081 000a 554A     		ldr	r2, .L75
 2082 000c 554B     		ldr	r3, .L75+4
 2083 000e 1100     		movs	r1, r2
 2084 0010 1800     		movs	r0, r3
 2085 0012 FFF7FEFF 		bl	RTC_SetDateAndTime
 314:main.c        ****     
 315:main.c        ****     // setting up global interrupts 
 316:main.c        ****     CyGlobalIntEnable;
 2086              		.loc 2 316 0
 2087              		.syntax divided
 2088              	@ 316 "main.c" 1
 2089 0016 62B6     		CPSIE   i
 2090              	@ 0 "" 2
 317:main.c        ****     CySysWdtSetInterruptCallback(0, wdt_callback);  // Watch dog timer interrupt callback
 2091              		.loc 2 317 0
 2092              		.thumb
 2093              		.syntax unified
 2094 0018 534B     		ldr	r3, .L75+8
 2095 001a 1900     		movs	r1, r3
 2096 001c 0020     		movs	r0, #0
 2097 001e FFF7FEFF 		bl	CySysWdtSetInterruptCallback
 318:main.c        ****     
 319:main.c        ****     int start = 0, end = 0;
 2098              		.loc 2 319 0
 2099 0022 0023     		movs	r3, #0
 2100 0024 7B60     		str	r3, [r7, #4]
 2101 0026 0023     		movs	r3, #0
 2102 0028 3B60     		str	r3, [r7]
 320:main.c        ****     Timer_Start();
 2103              		.loc 2 320 0
 2104 002a FFF7FEFF 		bl	Timer_Start
 2105              	.L74:
 321:main.c        ****     
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 58


 322:main.c        ****     while(1){
 323:main.c        **** 
 324:main.c        ****         while(PB_Read());   // while the button is not pressed, loop
 2106              		.loc 2 324 0 discriminator 1
 2107 002e C046     		nop
 2108              	.L69:
 2109 0030 FFF7FEFF 		bl	PB_Read
 2110 0034 031E     		subs	r3, r0, #0
 2111 0036 FBD1     		bne	.L69
 325:main.c        ****         
 326:main.c        ****         start = Timer_ReadCounter();    // when the button is pressed, read the "start" of the time
 2112              		.loc 2 326 0
 2113 0038 FFF7FEFF 		bl	Timer_ReadCounter
 2114 003c 0300     		movs	r3, r0
 2115 003e 7B60     		str	r3, [r7, #4]
 327:main.c        ****         
 328:main.c        ****         while(!PB_Read());              // when the button is released read the "end" of the timer
 2116              		.loc 2 328 0
 2117 0040 C046     		nop
 2118              	.L70:
 2119              		.loc 2 328 0 is_stmt 0 discriminator 1
 2120 0042 FFF7FEFF 		bl	PB_Read
 2121 0046 031E     		subs	r3, r0, #0
 2122 0048 FBD0     		beq	.L70
 329:main.c        ****         end = Timer_ReadCounter();
 2123              		.loc 2 329 0 is_stmt 1
 2124 004a FFF7FEFF 		bl	Timer_ReadCounter
 2125 004e 0300     		movs	r3, r0
 2126 0050 3B60     		str	r3, [r7]
 330:main.c        ****         
 331:main.c        ****         if((start - end) <= 30000000){      // short press
 2127              		.loc 2 331 0
 2128 0052 7A68     		ldr	r2, [r7, #4]
 2129 0054 3B68     		ldr	r3, [r7]
 2130 0056 D31A     		subs	r3, r2, r3
 2131 0058 444A     		ldr	r2, .L75+12
 2132 005a 9342     		cmp	r3, r2
 2133 005c 6EDC     		bgt	.L71
 332:main.c        ****             display_mode = ~display_mode;
 2134              		.loc 2 332 0
 2135 005e 444B     		ldr	r3, .L75+16
 2136 0060 1B68     		ldr	r3, [r3]
 2137 0062 DA43     		mvns	r2, r3
 2138 0064 424B     		ldr	r3, .L75+16
 2139 0066 1A60     		str	r2, [r3]
 333:main.c        **** 
 334:main.c        ****             if(display_mode){   // if we are on the date mode
 2140              		.loc 2 334 0
 2141 0068 414B     		ldr	r3, .L75+16
 2142 006a 1B68     		ldr	r3, [r3]
 2143 006c 002B     		cmp	r3, #0
 2144 006e 65D0     		beq	.L71
 335:main.c        ****                 date = RTC_GetDate();
 2145              		.loc 2 335 0
 2146 0070 FFF7FEFF 		bl	RTC_GetDate
 2147 0074 0200     		movs	r2, r0
 2148 0076 3F4B     		ldr	r3, .L75+20
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 59


 2149 0078 1A60     		str	r2, [r3]
 336:main.c        **** 
 337:main.c        ****                 day = RTC_GetDay(date);
 2150              		.loc 2 337 0
 2151 007a 3E4B     		ldr	r3, .L75+20
 2152 007c 1B68     		ldr	r3, [r3]
 2153 007e 1800     		movs	r0, r3
 2154 0080 FFF7FEFF 		bl	RTC_GetDay
 2155 0084 0200     		movs	r2, r0
 2156 0086 3C4B     		ldr	r3, .L75+24
 2157 0088 1A60     		str	r2, [r3]
 338:main.c        ****                 month = RTC_GetMonth(date);
 2158              		.loc 2 338 0
 2159 008a 3A4B     		ldr	r3, .L75+20
 2160 008c 1B68     		ldr	r3, [r3]
 2161 008e 1800     		movs	r0, r3
 2162 0090 FFF7FEFF 		bl	RTC_GetMonth
 2163 0094 0200     		movs	r2, r0
 2164 0096 394B     		ldr	r3, .L75+28
 2165 0098 1A60     		str	r2, [r3]
 339:main.c        ****                 year = RTC_GetYear(date);
 2166              		.loc 2 339 0
 2167 009a 364B     		ldr	r3, .L75+20
 2168 009c 1B68     		ldr	r3, [r3]
 2169 009e 1800     		movs	r0, r3
 2170 00a0 FFF7FEFF 		bl	RTC_GetYear
 2171 00a4 0200     		movs	r2, r0
 2172 00a6 364B     		ldr	r3, .L75+32
 2173 00a8 1A60     		str	r2, [r3]
 340:main.c        **** 
 341:main.c        ****                 nixie_write(0,day/10);
 2174              		.loc 2 341 0
 2175 00aa 334B     		ldr	r3, .L75+24
 2176 00ac 1B68     		ldr	r3, [r3]
 2177 00ae 0A21     		movs	r1, #10
 2178 00b0 1800     		movs	r0, r3
 2179 00b2 FFF7FEFF 		bl	__aeabi_uidiv
 2180 00b6 0300     		movs	r3, r0
 2181 00b8 1900     		movs	r1, r3
 2182 00ba 0020     		movs	r0, #0
 2183 00bc FFF7FEFF 		bl	nixie_write
 342:main.c        ****                 nixie_write(1,day%10);
 2184              		.loc 2 342 0
 2185 00c0 2D4B     		ldr	r3, .L75+24
 2186 00c2 1B68     		ldr	r3, [r3]
 2187 00c4 0A21     		movs	r1, #10
 2188 00c6 1800     		movs	r0, r3
 2189 00c8 FFF7FEFF 		bl	__aeabi_uidivmod
 2190 00cc 0B00     		movs	r3, r1
 2191 00ce 1900     		movs	r1, r3
 2192 00d0 0120     		movs	r0, #1
 2193 00d2 FFF7FEFF 		bl	nixie_write
 343:main.c        ****                 
 344:main.c        ****                 nixie_write(2,month/10);
 2194              		.loc 2 344 0
 2195 00d6 294B     		ldr	r3, .L75+28
 2196 00d8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 60


 2197 00da 0A21     		movs	r1, #10
 2198 00dc 1800     		movs	r0, r3
 2199 00de FFF7FEFF 		bl	__aeabi_uidiv
 2200 00e2 0300     		movs	r3, r0
 2201 00e4 1900     		movs	r1, r3
 2202 00e6 0220     		movs	r0, #2
 2203 00e8 FFF7FEFF 		bl	nixie_write
 345:main.c        ****                 nixie_write(3,month%10);
 2204              		.loc 2 345 0
 2205 00ec 234B     		ldr	r3, .L75+28
 2206 00ee 1B68     		ldr	r3, [r3]
 2207 00f0 0A21     		movs	r1, #10
 2208 00f2 1800     		movs	r0, r3
 2209 00f4 FFF7FEFF 		bl	__aeabi_uidivmod
 2210 00f8 0B00     		movs	r3, r1
 2211 00fa 1900     		movs	r1, r3
 2212 00fc 0320     		movs	r0, #3
 2213 00fe FFF7FEFF 		bl	nixie_write
 346:main.c        ****                 
 347:main.c        ****                 nixie_write(4,(year%100)/10);
 2214              		.loc 2 347 0
 2215 0102 1F4B     		ldr	r3, .L75+32
 2216 0104 1B68     		ldr	r3, [r3]
 2217 0106 6421     		movs	r1, #100
 2218 0108 1800     		movs	r0, r3
 2219 010a FFF7FEFF 		bl	__aeabi_uidivmod
 2220 010e 0B00     		movs	r3, r1
 2221 0110 0A21     		movs	r1, #10
 2222 0112 1800     		movs	r0, r3
 2223 0114 FFF7FEFF 		bl	__aeabi_uidiv
 2224 0118 0300     		movs	r3, r0
 2225 011a 1900     		movs	r1, r3
 2226 011c 0420     		movs	r0, #4
 2227 011e FFF7FEFF 		bl	nixie_write
 348:main.c        ****                 nixie_write(5,year%10);
 2228              		.loc 2 348 0
 2229 0122 174B     		ldr	r3, .L75+32
 2230 0124 1B68     		ldr	r3, [r3]
 2231 0126 0A21     		movs	r1, #10
 2232 0128 1800     		movs	r0, r3
 2233 012a FFF7FEFF 		bl	__aeabi_uidivmod
 2234 012e 0B00     		movs	r3, r1
 2235 0130 1900     		movs	r1, r3
 2236 0132 0520     		movs	r0, #5
 2237 0134 FFF7FEFF 		bl	nixie_write
 349:main.c        ****                 
 350:main.c        ****                 RTC_Update();
 2238              		.loc 2 350 0
 2239 0138 FFF7FEFF 		bl	RTC_Update
 2240              	.L71:
 351:main.c        ****             }
 352:main.c        ****         }
 353:main.c        ****         
 354:main.c        ****         if((start - end) > 30000000){       // long press
 2241              		.loc 2 354 0
 2242 013c 7A68     		ldr	r2, [r7, #4]
 2243 013e 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 61


 2244 0140 D31A     		subs	r3, r2, r3
 2245 0142 0A4A     		ldr	r2, .L75+12
 2246 0144 9342     		cmp	r3, r2
 2247 0146 00DC     		bgt	.LCB1871
 2248 0148 71E7     		b	.L74	@long jump
 2249              	.LCB1871:
 355:main.c        ****             if(!display_mode) { // if on time mode when theres a long press, set the time
 2250              		.loc 2 355 0
 2251 014a 094B     		ldr	r3, .L75+16
 2252 014c 1B68     		ldr	r3, [r3]
 2253 014e 002B     		cmp	r3, #0
 2254 0150 02D1     		bne	.L73
 356:main.c        ****                 set_time();
 2255              		.loc 2 356 0
 2256 0152 FFF7FEFF 		bl	set_time
 2257 0156 6AE7     		b	.L74
 2258              	.L73:
 357:main.c        ****             }
 358:main.c        ****             else {              // if on date mode when theres a long press, set the date
 359:main.c        ****                 set_date();
 2259              		.loc 2 359 0
 2260 0158 FFF7FEFF 		bl	set_date
 360:main.c        ****             }
 361:main.c        ****         }
 362:main.c        ****     }
 2261              		.loc 2 362 0
 2262 015c 67E7     		b	.L74
 2263              	.L76:
 2264 015e C046     		.align	2
 2265              	.L75:
 2266 0160 22200410 		.word	268705826
 2267 0164 39170700 		.word	464697
 2268 0168 00000000 		.word	wdt_callback
 2269 016c 80C3C901 		.word	30000000
 2270 0170 00000000 		.word	display_mode
 2271 0174 00000000 		.word	date
 2272 0178 00000000 		.word	day
 2273 017c 00000000 		.word	month
 2274 0180 00000000 		.word	year
 2275              		.cfi_endproc
 2276              	.LFE68:
 2277              		.size	main, .-main
 2278              		.text
 2279              	.Letext0:
 2280              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 2281              		.section	.debug_info,"",%progbits
 2282              	.Ldebug_info0:
 2283 0000 D8040000 		.4byte	0x4d8
 2284 0004 0400     		.2byte	0x4
 2285 0006 00000000 		.4byte	.Ldebug_abbrev0
 2286 000a 04       		.byte	0x4
 2287 000b 01       		.uleb128 0x1
 2288 000c 75000000 		.4byte	.LASF41
 2289 0010 0C       		.byte	0xc
 2290 0011 A1010000 		.4byte	.LASF42
 2291 0015 36020000 		.4byte	.LASF43
 2292 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 62


 2293 001d 00000000 		.4byte	0
 2294 0021 00000000 		.4byte	.Ldebug_line0
 2295 0025 02       		.uleb128 0x2
 2296 0026 01       		.byte	0x1
 2297 0027 06       		.byte	0x6
 2298 0028 1D020000 		.4byte	.LASF0
 2299 002c 02       		.uleb128 0x2
 2300 002d 01       		.byte	0x1
 2301 002e 08       		.byte	0x8
 2302 002f 23010000 		.4byte	.LASF1
 2303 0033 02       		.uleb128 0x2
 2304 0034 02       		.byte	0x2
 2305 0035 05       		.byte	0x5
 2306 0036 B4010000 		.4byte	.LASF2
 2307 003a 02       		.uleb128 0x2
 2308 003b 02       		.byte	0x2
 2309 003c 07       		.byte	0x7
 2310 003d 18000000 		.4byte	.LASF3
 2311 0041 02       		.uleb128 0x2
 2312 0042 04       		.byte	0x4
 2313 0043 05       		.byte	0x5
 2314 0044 F1010000 		.4byte	.LASF4
 2315 0048 02       		.uleb128 0x2
 2316 0049 04       		.byte	0x4
 2317 004a 07       		.byte	0x7
 2318 004b 5A000000 		.4byte	.LASF5
 2319 004f 02       		.uleb128 0x2
 2320 0050 08       		.byte	0x8
 2321 0051 05       		.byte	0x5
 2322 0052 8B010000 		.4byte	.LASF6
 2323 0056 02       		.uleb128 0x2
 2324 0057 08       		.byte	0x8
 2325 0058 07       		.byte	0x7
 2326 0059 4A010000 		.4byte	.LASF7
 2327 005d 03       		.uleb128 0x3
 2328 005e 04       		.byte	0x4
 2329 005f 05       		.byte	0x5
 2330 0060 696E7400 		.ascii	"int\000"
 2331 0064 02       		.uleb128 0x2
 2332 0065 04       		.byte	0x4
 2333 0066 07       		.byte	0x7
 2334 0067 31010000 		.4byte	.LASF8
 2335 006b 04       		.uleb128 0x4
 2336 006c 15010000 		.4byte	.LASF9
 2337 0070 03       		.byte	0x3
 2338 0071 E501     		.2byte	0x1e5
 2339 0073 3A000000 		.4byte	0x3a
 2340 0077 04       		.uleb128 0x4
 2341 0078 1C010000 		.4byte	.LASF10
 2342 007c 03       		.byte	0x3
 2343 007d E601     		.2byte	0x1e6
 2344 007f 48000000 		.4byte	0x48
 2345 0083 02       		.uleb128 0x2
 2346 0084 04       		.byte	0x4
 2347 0085 04       		.byte	0x4
 2348 0086 38000000 		.4byte	.LASF11
 2349 008a 02       		.uleb128 0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 63


 2350 008b 08       		.byte	0x8
 2351 008c 04       		.byte	0x4
 2352 008d 09010000 		.4byte	.LASF12
 2353 0091 02       		.uleb128 0x2
 2354 0092 01       		.byte	0x1
 2355 0093 08       		.byte	0x8
 2356 0094 A8010000 		.4byte	.LASF13
 2357 0098 02       		.uleb128 0x2
 2358 0099 08       		.byte	0x8
 2359 009a 04       		.byte	0x4
 2360 009b 11020000 		.4byte	.LASF14
 2361 009f 02       		.uleb128 0x2
 2362 00a0 04       		.byte	0x4
 2363 00a1 07       		.byte	0x7
 2364 00a2 82010000 		.4byte	.LASF15
 2365 00a6 05       		.uleb128 0x5
 2366 00a7 BE010000 		.4byte	.LASF16
 2367 00ab 01       		.byte	0x1
 2368 00ac 8902     		.2byte	0x289
 2369 00ae 77000000 		.4byte	0x77
 2370 00b2 00000000 		.4byte	.LFB3
 2371 00b6 30000000 		.4byte	.LFE3-.LFB3
 2372 00ba 01       		.uleb128 0x1
 2373 00bb 9C       		.byte	0x9c
 2374 00bc DF000000 		.4byte	0xdf
 2375 00c0 06       		.uleb128 0x6
 2376 00c1 50000000 		.4byte	.LASF18
 2377 00c5 01       		.byte	0x1
 2378 00c6 8902     		.2byte	0x289
 2379 00c8 77000000 		.4byte	0x77
 2380 00cc 02       		.uleb128 0x2
 2381 00cd 91       		.byte	0x91
 2382 00ce 6C       		.sleb128 -20
 2383 00cf 07       		.uleb128 0x7
 2384 00d0 31000000 		.4byte	.LASF19
 2385 00d4 01       		.byte	0x1
 2386 00d5 8B02     		.2byte	0x28b
 2387 00d7 77000000 		.4byte	0x77
 2388 00db 02       		.uleb128 0x2
 2389 00dc 91       		.byte	0x91
 2390 00dd 74       		.sleb128 -12
 2391 00de 00       		.byte	0
 2392 00df 05       		.uleb128 0x5
 2393 00e0 6E010000 		.4byte	.LASF17
 2394 00e4 01       		.byte	0x1
 2395 00e5 A202     		.2byte	0x2a2
 2396 00e7 77000000 		.4byte	0x77
 2397 00eb 00000000 		.4byte	.LFB4
 2398 00ef 32000000 		.4byte	.LFE4-.LFB4
 2399 00f3 01       		.uleb128 0x1
 2400 00f4 9C       		.byte	0x9c
 2401 00f5 18010000 		.4byte	0x118
 2402 00f9 06       		.uleb128 0x6
 2403 00fa 50000000 		.4byte	.LASF18
 2404 00fe 01       		.byte	0x1
 2405 00ff A202     		.2byte	0x2a2
 2406 0101 77000000 		.4byte	0x77
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 64


 2407 0105 02       		.uleb128 0x2
 2408 0106 91       		.byte	0x91
 2409 0107 6C       		.sleb128 -20
 2410 0108 07       		.uleb128 0x7
 2411 0109 31000000 		.4byte	.LASF19
 2412 010d 01       		.byte	0x1
 2413 010e A402     		.2byte	0x2a4
 2414 0110 77000000 		.4byte	0x77
 2415 0114 02       		.uleb128 0x2
 2416 0115 91       		.byte	0x91
 2417 0116 74       		.sleb128 -12
 2418 0117 00       		.byte	0
 2419 0118 05       		.uleb128 0x5
 2420 0119 7B020000 		.4byte	.LASF20
 2421 011d 01       		.byte	0x1
 2422 011e BA02     		.2byte	0x2ba
 2423 0120 77000000 		.4byte	0x77
 2424 0124 00000000 		.4byte	.LFB5
 2425 0128 32000000 		.4byte	.LFE5-.LFB5
 2426 012c 01       		.uleb128 0x1
 2427 012d 9C       		.byte	0x9c
 2428 012e 51010000 		.4byte	0x151
 2429 0132 06       		.uleb128 0x6
 2430 0133 50000000 		.4byte	.LASF18
 2431 0137 01       		.byte	0x1
 2432 0138 BA02     		.2byte	0x2ba
 2433 013a 77000000 		.4byte	0x77
 2434 013e 02       		.uleb128 0x2
 2435 013f 91       		.byte	0x91
 2436 0140 6C       		.sleb128 -20
 2437 0141 07       		.uleb128 0x7
 2438 0142 31000000 		.4byte	.LASF19
 2439 0146 01       		.byte	0x1
 2440 0147 BC02     		.2byte	0x2bc
 2441 0149 77000000 		.4byte	0x77
 2442 014d 02       		.uleb128 0x2
 2443 014e 91       		.byte	0x91
 2444 014f 74       		.sleb128 -12
 2445 0150 00       		.byte	0
 2446 0151 05       		.uleb128 0x5
 2447 0152 DD010000 		.4byte	.LASF21
 2448 0156 01       		.byte	0x1
 2449 0157 E502     		.2byte	0x2e5
 2450 0159 77000000 		.4byte	0x77
 2451 015d 00000000 		.4byte	.LFB7
 2452 0161 32000000 		.4byte	.LFE7-.LFB7
 2453 0165 01       		.uleb128 0x1
 2454 0166 9C       		.byte	0x9c
 2455 0167 8A010000 		.4byte	0x18a
 2456 016b 06       		.uleb128 0x6
 2457 016c 3E000000 		.4byte	.LASF22
 2458 0170 01       		.byte	0x1
 2459 0171 E502     		.2byte	0x2e5
 2460 0173 77000000 		.4byte	0x77
 2461 0177 02       		.uleb128 0x2
 2462 0178 91       		.byte	0x91
 2463 0179 6C       		.sleb128 -20
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 65


 2464 017a 07       		.uleb128 0x7
 2465 017b 31000000 		.4byte	.LASF19
 2466 017f 01       		.byte	0x1
 2467 0180 E702     		.2byte	0x2e7
 2468 0182 77000000 		.4byte	0x77
 2469 0186 02       		.uleb128 0x2
 2470 0187 91       		.byte	0x91
 2471 0188 74       		.sleb128 -12
 2472 0189 00       		.byte	0
 2473 018a 05       		.uleb128 0x5
 2474 018b 29020000 		.4byte	.LASF23
 2475 018f 01       		.byte	0x1
 2476 0190 FD02     		.2byte	0x2fd
 2477 0192 77000000 		.4byte	0x77
 2478 0196 00000000 		.4byte	.LFB8
 2479 019a 32000000 		.4byte	.LFE8-.LFB8
 2480 019e 01       		.uleb128 0x1
 2481 019f 9C       		.byte	0x9c
 2482 01a0 C3010000 		.4byte	0x1c3
 2483 01a4 06       		.uleb128 0x6
 2484 01a5 3E000000 		.4byte	.LASF22
 2485 01a9 01       		.byte	0x1
 2486 01aa FD02     		.2byte	0x2fd
 2487 01ac 77000000 		.4byte	0x77
 2488 01b0 02       		.uleb128 0x2
 2489 01b1 91       		.byte	0x91
 2490 01b2 6C       		.sleb128 -20
 2491 01b3 07       		.uleb128 0x7
 2492 01b4 31000000 		.4byte	.LASF19
 2493 01b8 01       		.byte	0x1
 2494 01b9 FF02     		.2byte	0x2ff
 2495 01bb 77000000 		.4byte	0x77
 2496 01bf 02       		.uleb128 0x2
 2497 01c0 91       		.byte	0x91
 2498 01c1 74       		.sleb128 -12
 2499 01c2 00       		.byte	0
 2500 01c3 05       		.uleb128 0x5
 2501 01c4 3E010000 		.4byte	.LASF24
 2502 01c8 01       		.byte	0x1
 2503 01c9 1503     		.2byte	0x315
 2504 01cb 77000000 		.4byte	0x77
 2505 01cf 00000000 		.4byte	.LFB9
 2506 01d3 58000000 		.4byte	.LFE9-.LFB9
 2507 01d7 01       		.uleb128 0x1
 2508 01d8 9C       		.byte	0x9c
 2509 01d9 FC010000 		.4byte	0x1fc
 2510 01dd 06       		.uleb128 0x6
 2511 01de 3E000000 		.4byte	.LASF22
 2512 01e2 01       		.byte	0x1
 2513 01e3 1503     		.2byte	0x315
 2514 01e5 77000000 		.4byte	0x77
 2515 01e9 02       		.uleb128 0x2
 2516 01ea 91       		.byte	0x91
 2517 01eb 6C       		.sleb128 -20
 2518 01ec 07       		.uleb128 0x7
 2519 01ed 31000000 		.4byte	.LASF19
 2520 01f1 01       		.byte	0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 66


 2521 01f2 1703     		.2byte	0x317
 2522 01f4 77000000 		.4byte	0x77
 2523 01f8 02       		.uleb128 0x2
 2524 01f9 91       		.byte	0x91
 2525 01fa 74       		.sleb128 -12
 2526 01fb 00       		.byte	0
 2527 01fc 08       		.uleb128 0x8
 2528 01fd 88020000 		.4byte	.LASF28
 2529 0201 02       		.byte	0x2
 2530 0202 21       		.byte	0x21
 2531 0203 00000000 		.4byte	.LFB63
 2532 0207 04020000 		.4byte	.LFE63-.LFB63
 2533 020b 01       		.uleb128 0x1
 2534 020c 9C       		.byte	0x9c
 2535 020d 2C020000 		.4byte	0x22c
 2536 0211 09       		.uleb128 0x9
 2537 0212 08000000 		.4byte	.LASF25
 2538 0216 02       		.byte	0x2
 2539 0217 21       		.byte	0x21
 2540 0218 5D000000 		.4byte	0x5d
 2541 021c 02       		.uleb128 0x2
 2542 021d 91       		.byte	0x91
 2543 021e 74       		.sleb128 -12
 2544 021f 0A       		.uleb128 0xa
 2545 0220 6900     		.ascii	"i\000"
 2546 0222 02       		.byte	0x2
 2547 0223 21       		.byte	0x21
 2548 0224 5D000000 		.4byte	0x5d
 2549 0228 02       		.uleb128 0x2
 2550 0229 91       		.byte	0x91
 2551 022a 70       		.sleb128 -16
 2552 022b 00       		.byte	0
 2553 022c 0B       		.uleb128 0xb
 2554 022d 61010000 		.4byte	.LASF44
 2555 0231 02       		.byte	0x2
 2556 0232 4F       		.byte	0x4f
 2557 0233 00000000 		.4byte	.LFB64
 2558 0237 10010000 		.4byte	.LFE64-.LFB64
 2559 023b 01       		.uleb128 0x1
 2560 023c 9C       		.byte	0x9c
 2561 023d 0C       		.uleb128 0xc
 2562 023e CC010000 		.4byte	.LASF45
 2563 0242 02       		.byte	0x2
 2564 0243 6E       		.byte	0x6e
 2565 0244 00000000 		.4byte	.LFB65
 2566 0248 88070000 		.4byte	.LFE65-.LFB65
 2567 024c 01       		.uleb128 0x1
 2568 024d 9C       		.byte	0x9c
 2569 024e 87030000 		.4byte	0x387
 2570 0252 0D       		.uleb128 0xd
 2571 0253 06000000 		.4byte	.LBB2
 2572 0257 64000000 		.4byte	.LBE2-.LBB2
 2573 025b 6C020000 		.4byte	0x26c
 2574 025f 0E       		.uleb128 0xe
 2575 0260 6E00     		.ascii	"n\000"
 2576 0262 02       		.byte	0x2
 2577 0263 70       		.byte	0x70
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 67


 2578 0264 5D000000 		.4byte	0x5d
 2579 0268 02       		.uleb128 0x2
 2580 0269 91       		.byte	0x91
 2581 026a 74       		.sleb128 -12
 2582 026b 00       		.byte	0
 2583 026c 0D       		.uleb128 0xd
 2584 026d 82000000 		.4byte	.LBB3
 2585 0271 64000000 		.4byte	.LBE3-.LBB3
 2586 0275 86020000 		.4byte	0x286
 2587 0279 0E       		.uleb128 0xe
 2588 027a 6D00     		.ascii	"m\000"
 2589 027c 02       		.byte	0x2
 2590 027d 7D       		.byte	0x7d
 2591 027e 5D000000 		.4byte	0x5d
 2592 0282 02       		.uleb128 0x2
 2593 0283 91       		.byte	0x91
 2594 0284 70       		.sleb128 -16
 2595 0285 00       		.byte	0
 2596 0286 0D       		.uleb128 0xd
 2597 0287 FE000000 		.4byte	.LBB4
 2598 028b 64000000 		.4byte	.LBE4-.LBB4
 2599 028f A0020000 		.4byte	0x2a0
 2600 0293 0E       		.uleb128 0xe
 2601 0294 6C00     		.ascii	"l\000"
 2602 0296 02       		.byte	0x2
 2603 0297 8A       		.byte	0x8a
 2604 0298 5D000000 		.4byte	0x5d
 2605 029c 02       		.uleb128 0x2
 2606 029d 91       		.byte	0x91
 2607 029e 6C       		.sleb128 -20
 2608 029f 00       		.byte	0
 2609 02a0 0D       		.uleb128 0xd
 2610 02a1 7A010000 		.4byte	.LBB5
 2611 02a5 64000000 		.4byte	.LBE5-.LBB5
 2612 02a9 BA020000 		.4byte	0x2ba
 2613 02ad 0E       		.uleb128 0xe
 2614 02ae 6B00     		.ascii	"k\000"
 2615 02b0 02       		.byte	0x2
 2616 02b1 97       		.byte	0x97
 2617 02b2 5D000000 		.4byte	0x5d
 2618 02b6 02       		.uleb128 0x2
 2619 02b7 91       		.byte	0x91
 2620 02b8 68       		.sleb128 -24
 2621 02b9 00       		.byte	0
 2622 02ba 0D       		.uleb128 0xd
 2623 02bb F6010000 		.4byte	.LBB6
 2624 02bf 64000000 		.4byte	.LBE6-.LBB6
 2625 02c3 D4020000 		.4byte	0x2d4
 2626 02c7 0E       		.uleb128 0xe
 2627 02c8 6A00     		.ascii	"j\000"
 2628 02ca 02       		.byte	0x2
 2629 02cb A4       		.byte	0xa4
 2630 02cc 5D000000 		.4byte	0x5d
 2631 02d0 02       		.uleb128 0x2
 2632 02d1 91       		.byte	0x91
 2633 02d2 64       		.sleb128 -28
 2634 02d3 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 68


 2635 02d4 0D       		.uleb128 0xd
 2636 02d5 72020000 		.4byte	.LBB7
 2637 02d9 64000000 		.4byte	.LBE7-.LBB7
 2638 02dd EE020000 		.4byte	0x2ee
 2639 02e1 0E       		.uleb128 0xe
 2640 02e2 6900     		.ascii	"i\000"
 2641 02e4 02       		.byte	0x2
 2642 02e5 B1       		.byte	0xb1
 2643 02e6 5D000000 		.4byte	0x5d
 2644 02ea 02       		.uleb128 0x2
 2645 02eb 91       		.byte	0x91
 2646 02ec 60       		.sleb128 -32
 2647 02ed 00       		.byte	0
 2648 02ee 0D       		.uleb128 0xd
 2649 02ef EE020000 		.4byte	.LBB8
 2650 02f3 64000000 		.4byte	.LBE8-.LBB8
 2651 02f7 08030000 		.4byte	0x308
 2652 02fb 0E       		.uleb128 0xe
 2653 02fc 6A00     		.ascii	"j\000"
 2654 02fe 02       		.byte	0x2
 2655 02ff BE       		.byte	0xbe
 2656 0300 5D000000 		.4byte	0x5d
 2657 0304 02       		.uleb128 0x2
 2658 0305 91       		.byte	0x91
 2659 0306 5C       		.sleb128 -36
 2660 0307 00       		.byte	0
 2661 0308 0D       		.uleb128 0xd
 2662 0309 6A030000 		.4byte	.LBB9
 2663 030d 68000000 		.4byte	.LBE9-.LBB9
 2664 0311 22030000 		.4byte	0x322
 2665 0315 0E       		.uleb128 0xe
 2666 0316 6B00     		.ascii	"k\000"
 2667 0318 02       		.byte	0x2
 2668 0319 CA       		.byte	0xca
 2669 031a 5D000000 		.4byte	0x5d
 2670 031e 02       		.uleb128 0x2
 2671 031f 91       		.byte	0x91
 2672 0320 58       		.sleb128 -40
 2673 0321 00       		.byte	0
 2674 0322 0D       		.uleb128 0xd
 2675 0323 EA030000 		.4byte	.LBB10
 2676 0327 64000000 		.4byte	.LBE10-.LBB10
 2677 032b 3C030000 		.4byte	0x33c
 2678 032f 0E       		.uleb128 0xe
 2679 0330 6C00     		.ascii	"l\000"
 2680 0332 02       		.byte	0x2
 2681 0333 D6       		.byte	0xd6
 2682 0334 5D000000 		.4byte	0x5d
 2683 0338 02       		.uleb128 0x2
 2684 0339 91       		.byte	0x91
 2685 033a 54       		.sleb128 -44
 2686 033b 00       		.byte	0
 2687 033c 0D       		.uleb128 0xd
 2688 033d 66040000 		.4byte	.LBB11
 2689 0341 64000000 		.4byte	.LBE11-.LBB11
 2690 0345 56030000 		.4byte	0x356
 2691 0349 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 69


 2692 034a 6D00     		.ascii	"m\000"
 2693 034c 02       		.byte	0x2
 2694 034d E2       		.byte	0xe2
 2695 034e 5D000000 		.4byte	0x5d
 2696 0352 02       		.uleb128 0x2
 2697 0353 91       		.byte	0x91
 2698 0354 50       		.sleb128 -48
 2699 0355 00       		.byte	0
 2700 0356 0D       		.uleb128 0xd
 2701 0357 E2040000 		.4byte	.LBB12
 2702 035b 64000000 		.4byte	.LBE12-.LBB12
 2703 035f 70030000 		.4byte	0x370
 2704 0363 0E       		.uleb128 0xe
 2705 0364 6E00     		.ascii	"n\000"
 2706 0366 02       		.byte	0x2
 2707 0367 EE       		.byte	0xee
 2708 0368 5D000000 		.4byte	0x5d
 2709 036c 02       		.uleb128 0x2
 2710 036d 91       		.byte	0x91
 2711 036e 4C       		.sleb128 -52
 2712 036f 00       		.byte	0
 2713 0370 0F       		.uleb128 0xf
 2714 0371 5E050000 		.4byte	.LBB13
 2715 0375 EC010000 		.4byte	.LBE13-.LBB13
 2716 0379 0E       		.uleb128 0xe
 2717 037a 6900     		.ascii	"i\000"
 2718 037c 02       		.byte	0x2
 2719 037d FA       		.byte	0xfa
 2720 037e 5D000000 		.4byte	0x5d
 2721 0382 02       		.uleb128 0x2
 2722 0383 91       		.byte	0x91
 2723 0384 48       		.sleb128 -56
 2724 0385 00       		.byte	0
 2725 0386 00       		.byte	0
 2726 0387 10       		.uleb128 0x10
 2727 0388 E8010000 		.4byte	.LASF26
 2728 038c 02       		.byte	0x2
 2729 038d 2501     		.2byte	0x125
 2730 038f 00000000 		.4byte	.LFB66
 2731 0393 48000000 		.4byte	.LFE66-.LFB66
 2732 0397 01       		.uleb128 0x1
 2733 0398 9C       		.byte	0x9c
 2734 0399 10       		.uleb128 0x10
 2735 039a 6C000000 		.4byte	.LASF27
 2736 039e 02       		.byte	0x2
 2737 039f 2D01     		.2byte	0x12d
 2738 03a1 00000000 		.4byte	.LFB67
 2739 03a5 40000000 		.4byte	.LFE67-.LFB67
 2740 03a9 01       		.uleb128 0x1
 2741 03aa 9C       		.byte	0x9c
 2742 03ab 11       		.uleb128 0x11
 2743 03ac 10010000 		.4byte	.LASF29
 2744 03b0 02       		.byte	0x2
 2745 03b1 3501     		.2byte	0x135
 2746 03b3 5D000000 		.4byte	0x5d
 2747 03b7 00000000 		.4byte	.LFB68
 2748 03bb 84010000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 70


 2749 03bf 01       		.uleb128 0x1
 2750 03c0 9C       		.byte	0x9c
 2751 03c1 E4030000 		.4byte	0x3e4
 2752 03c5 07       		.uleb128 0x7
 2753 03c6 12000000 		.4byte	.LASF30
 2754 03ca 02       		.byte	0x2
 2755 03cb 3F01     		.2byte	0x13f
 2756 03cd 5D000000 		.4byte	0x5d
 2757 03d1 02       		.uleb128 0x2
 2758 03d2 91       		.byte	0x91
 2759 03d3 74       		.sleb128 -12
 2760 03d4 12       		.uleb128 0x12
 2761 03d5 656E6400 		.ascii	"end\000"
 2762 03d9 02       		.byte	0x2
 2763 03da 3F01     		.2byte	0x13f
 2764 03dc 5D000000 		.4byte	0x5d
 2765 03e0 02       		.uleb128 0x2
 2766 03e1 91       		.byte	0x91
 2767 03e2 70       		.sleb128 -16
 2768 03e3 00       		.byte	0
 2769 03e4 13       		.uleb128 0x13
 2770 03e5 F4030000 		.4byte	0x3f4
 2771 03e9 F4030000 		.4byte	0x3f4
 2772 03ed 14       		.uleb128 0x14
 2773 03ee 9F000000 		.4byte	0x9f
 2774 03f2 0B       		.byte	0xb
 2775 03f3 00       		.byte	0
 2776 03f4 15       		.uleb128 0x15
 2777 03f5 6B000000 		.4byte	0x6b
 2778 03f9 16       		.uleb128 0x16
 2779 03fa FA010000 		.4byte	.LASF31
 2780 03fe 01       		.byte	0x1
 2781 03ff E001     		.2byte	0x1e0
 2782 0401 05040000 		.4byte	0x405
 2783 0405 15       		.uleb128 0x15
 2784 0406 E4030000 		.4byte	0x3e4
 2785 040a 13       		.uleb128 0x13
 2786 040b 5D000000 		.4byte	0x5d
 2787 040f 20040000 		.4byte	0x420
 2788 0413 14       		.uleb128 0x14
 2789 0414 9F000000 		.4byte	0x9f
 2790 0418 09       		.byte	0x9
 2791 0419 14       		.uleb128 0x14
 2792 041a 9F000000 		.4byte	0x9f
 2793 041e 03       		.byte	0x3
 2794 041f 00       		.byte	0
 2795 0420 17       		.uleb128 0x17
 2796 0421 AD010000 		.4byte	.LASF32
 2797 0425 02       		.byte	0x2
 2798 0426 06       		.byte	0x6
 2799 0427 0A040000 		.4byte	0x40a
 2800 042b 05       		.uleb128 0x5
 2801 042c 03       		.byte	0x3
 2802 042d 00000000 		.4byte	digits
 2803 0431 17       		.uleb128 0x17
 2804 0432 7D010000 		.4byte	.LASF33
 2805 0436 02       		.byte	0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 71


 2806 0437 13       		.byte	0x13
 2807 0438 77000000 		.4byte	0x77
 2808 043c 05       		.uleb128 0x5
 2809 043d 03       		.byte	0x3
 2810 043e 00000000 		.4byte	time
 2811 0442 17       		.uleb128 0x17
 2812 0443 03010000 		.4byte	.LASF34
 2813 0447 02       		.byte	0x2
 2814 0448 13       		.byte	0x13
 2815 0449 77000000 		.4byte	0x77
 2816 044d 05       		.uleb128 0x5
 2817 044e 03       		.byte	0x3
 2818 044f 00000000 		.4byte	hours
 2819 0453 17       		.uleb128 0x17
 2820 0454 00000000 		.4byte	.LASF35
 2821 0458 02       		.byte	0x2
 2822 0459 13       		.byte	0x13
 2823 045a 77000000 		.4byte	0x77
 2824 045e 05       		.uleb128 0x5
 2825 045f 03       		.byte	0x3
 2826 0460 00000000 		.4byte	minutes
 2827 0464 17       		.uleb128 0x17
 2828 0465 99010000 		.4byte	.LASF36
 2829 0469 02       		.byte	0x2
 2830 046a 13       		.byte	0x13
 2831 046b 77000000 		.4byte	0x77
 2832 046f 05       		.uleb128 0x5
 2833 0470 03       		.byte	0x3
 2834 0471 00000000 		.4byte	seconds
 2835 0475 17       		.uleb128 0x17
 2836 0476 3E000000 		.4byte	.LASF22
 2837 047a 02       		.byte	0x2
 2838 047b 14       		.byte	0x14
 2839 047c 77000000 		.4byte	0x77
 2840 0480 05       		.uleb128 0x5
 2841 0481 03       		.byte	0x3
 2842 0482 00000000 		.4byte	date
 2843 0486 17       		.uleb128 0x17
 2844 0487 0D000000 		.4byte	.LASF37
 2845 048b 02       		.byte	0x2
 2846 048c 14       		.byte	0x14
 2847 048d 77000000 		.4byte	0x77
 2848 0491 05       		.uleb128 0x5
 2849 0492 03       		.byte	0x3
 2850 0493 00000000 		.4byte	year
 2851 0497 17       		.uleb128 0x17
 2852 0498 2B000000 		.4byte	.LASF38
 2853 049c 02       		.byte	0x2
 2854 049d 14       		.byte	0x14
 2855 049e 77000000 		.4byte	0x77
 2856 04a2 05       		.uleb128 0x5
 2857 04a3 03       		.byte	0x3
 2858 04a4 00000000 		.4byte	month
 2859 04a8 18       		.uleb128 0x18
 2860 04a9 64617900 		.ascii	"day\000"
 2861 04ad 02       		.byte	0x2
 2862 04ae 14       		.byte	0x14
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 72


 2863 04af 77000000 		.4byte	0x77
 2864 04b3 05       		.uleb128 0x5
 2865 04b4 03       		.byte	0x3
 2866 04b5 00000000 		.4byte	day
 2867 04b9 17       		.uleb128 0x17
 2868 04ba 43000000 		.4byte	.LASF39
 2869 04be 02       		.byte	0x2
 2870 04bf 16       		.byte	0x16
 2871 04c0 5D000000 		.4byte	0x5d
 2872 04c4 05       		.uleb128 0x5
 2873 04c5 03       		.byte	0x3
 2874 04c6 00000000 		.4byte	display_mode
 2875 04ca 17       		.uleb128 0x17
 2876 04cb 94020000 		.4byte	.LASF40
 2877 04cf 02       		.byte	0x2
 2878 04d0 17       		.byte	0x17
 2879 04d1 5D000000 		.4byte	0x5d
 2880 04d5 05       		.uleb128 0x5
 2881 04d6 03       		.byte	0x3
 2882 04d7 00000000 		.4byte	done
 2883 04db 00       		.byte	0
 2884              		.section	.debug_abbrev,"",%progbits
 2885              	.Ldebug_abbrev0:
 2886 0000 01       		.uleb128 0x1
 2887 0001 11       		.uleb128 0x11
 2888 0002 01       		.byte	0x1
 2889 0003 25       		.uleb128 0x25
 2890 0004 0E       		.uleb128 0xe
 2891 0005 13       		.uleb128 0x13
 2892 0006 0B       		.uleb128 0xb
 2893 0007 03       		.uleb128 0x3
 2894 0008 0E       		.uleb128 0xe
 2895 0009 1B       		.uleb128 0x1b
 2896 000a 0E       		.uleb128 0xe
 2897 000b 55       		.uleb128 0x55
 2898 000c 17       		.uleb128 0x17
 2899 000d 11       		.uleb128 0x11
 2900 000e 01       		.uleb128 0x1
 2901 000f 10       		.uleb128 0x10
 2902 0010 17       		.uleb128 0x17
 2903 0011 00       		.byte	0
 2904 0012 00       		.byte	0
 2905 0013 02       		.uleb128 0x2
 2906 0014 24       		.uleb128 0x24
 2907 0015 00       		.byte	0
 2908 0016 0B       		.uleb128 0xb
 2909 0017 0B       		.uleb128 0xb
 2910 0018 3E       		.uleb128 0x3e
 2911 0019 0B       		.uleb128 0xb
 2912 001a 03       		.uleb128 0x3
 2913 001b 0E       		.uleb128 0xe
 2914 001c 00       		.byte	0
 2915 001d 00       		.byte	0
 2916 001e 03       		.uleb128 0x3
 2917 001f 24       		.uleb128 0x24
 2918 0020 00       		.byte	0
 2919 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 73


 2920 0022 0B       		.uleb128 0xb
 2921 0023 3E       		.uleb128 0x3e
 2922 0024 0B       		.uleb128 0xb
 2923 0025 03       		.uleb128 0x3
 2924 0026 08       		.uleb128 0x8
 2925 0027 00       		.byte	0
 2926 0028 00       		.byte	0
 2927 0029 04       		.uleb128 0x4
 2928 002a 16       		.uleb128 0x16
 2929 002b 00       		.byte	0
 2930 002c 03       		.uleb128 0x3
 2931 002d 0E       		.uleb128 0xe
 2932 002e 3A       		.uleb128 0x3a
 2933 002f 0B       		.uleb128 0xb
 2934 0030 3B       		.uleb128 0x3b
 2935 0031 05       		.uleb128 0x5
 2936 0032 49       		.uleb128 0x49
 2937 0033 13       		.uleb128 0x13
 2938 0034 00       		.byte	0
 2939 0035 00       		.byte	0
 2940 0036 05       		.uleb128 0x5
 2941 0037 2E       		.uleb128 0x2e
 2942 0038 01       		.byte	0x1
 2943 0039 03       		.uleb128 0x3
 2944 003a 0E       		.uleb128 0xe
 2945 003b 3A       		.uleb128 0x3a
 2946 003c 0B       		.uleb128 0xb
 2947 003d 3B       		.uleb128 0x3b
 2948 003e 05       		.uleb128 0x5
 2949 003f 27       		.uleb128 0x27
 2950 0040 19       		.uleb128 0x19
 2951 0041 49       		.uleb128 0x49
 2952 0042 13       		.uleb128 0x13
 2953 0043 11       		.uleb128 0x11
 2954 0044 01       		.uleb128 0x1
 2955 0045 12       		.uleb128 0x12
 2956 0046 06       		.uleb128 0x6
 2957 0047 40       		.uleb128 0x40
 2958 0048 18       		.uleb128 0x18
 2959 0049 9742     		.uleb128 0x2117
 2960 004b 19       		.uleb128 0x19
 2961 004c 01       		.uleb128 0x1
 2962 004d 13       		.uleb128 0x13
 2963 004e 00       		.byte	0
 2964 004f 00       		.byte	0
 2965 0050 06       		.uleb128 0x6
 2966 0051 05       		.uleb128 0x5
 2967 0052 00       		.byte	0
 2968 0053 03       		.uleb128 0x3
 2969 0054 0E       		.uleb128 0xe
 2970 0055 3A       		.uleb128 0x3a
 2971 0056 0B       		.uleb128 0xb
 2972 0057 3B       		.uleb128 0x3b
 2973 0058 05       		.uleb128 0x5
 2974 0059 49       		.uleb128 0x49
 2975 005a 13       		.uleb128 0x13
 2976 005b 02       		.uleb128 0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 74


 2977 005c 18       		.uleb128 0x18
 2978 005d 00       		.byte	0
 2979 005e 00       		.byte	0
 2980 005f 07       		.uleb128 0x7
 2981 0060 34       		.uleb128 0x34
 2982 0061 00       		.byte	0
 2983 0062 03       		.uleb128 0x3
 2984 0063 0E       		.uleb128 0xe
 2985 0064 3A       		.uleb128 0x3a
 2986 0065 0B       		.uleb128 0xb
 2987 0066 3B       		.uleb128 0x3b
 2988 0067 05       		.uleb128 0x5
 2989 0068 49       		.uleb128 0x49
 2990 0069 13       		.uleb128 0x13
 2991 006a 02       		.uleb128 0x2
 2992 006b 18       		.uleb128 0x18
 2993 006c 00       		.byte	0
 2994 006d 00       		.byte	0
 2995 006e 08       		.uleb128 0x8
 2996 006f 2E       		.uleb128 0x2e
 2997 0070 01       		.byte	0x1
 2998 0071 3F       		.uleb128 0x3f
 2999 0072 19       		.uleb128 0x19
 3000 0073 03       		.uleb128 0x3
 3001 0074 0E       		.uleb128 0xe
 3002 0075 3A       		.uleb128 0x3a
 3003 0076 0B       		.uleb128 0xb
 3004 0077 3B       		.uleb128 0x3b
 3005 0078 0B       		.uleb128 0xb
 3006 0079 27       		.uleb128 0x27
 3007 007a 19       		.uleb128 0x19
 3008 007b 11       		.uleb128 0x11
 3009 007c 01       		.uleb128 0x1
 3010 007d 12       		.uleb128 0x12
 3011 007e 06       		.uleb128 0x6
 3012 007f 40       		.uleb128 0x40
 3013 0080 18       		.uleb128 0x18
 3014 0081 9642     		.uleb128 0x2116
 3015 0083 19       		.uleb128 0x19
 3016 0084 01       		.uleb128 0x1
 3017 0085 13       		.uleb128 0x13
 3018 0086 00       		.byte	0
 3019 0087 00       		.byte	0
 3020 0088 09       		.uleb128 0x9
 3021 0089 05       		.uleb128 0x5
 3022 008a 00       		.byte	0
 3023 008b 03       		.uleb128 0x3
 3024 008c 0E       		.uleb128 0xe
 3025 008d 3A       		.uleb128 0x3a
 3026 008e 0B       		.uleb128 0xb
 3027 008f 3B       		.uleb128 0x3b
 3028 0090 0B       		.uleb128 0xb
 3029 0091 49       		.uleb128 0x49
 3030 0092 13       		.uleb128 0x13
 3031 0093 02       		.uleb128 0x2
 3032 0094 18       		.uleb128 0x18
 3033 0095 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 75


 3034 0096 00       		.byte	0
 3035 0097 0A       		.uleb128 0xa
 3036 0098 05       		.uleb128 0x5
 3037 0099 00       		.byte	0
 3038 009a 03       		.uleb128 0x3
 3039 009b 08       		.uleb128 0x8
 3040 009c 3A       		.uleb128 0x3a
 3041 009d 0B       		.uleb128 0xb
 3042 009e 3B       		.uleb128 0x3b
 3043 009f 0B       		.uleb128 0xb
 3044 00a0 49       		.uleb128 0x49
 3045 00a1 13       		.uleb128 0x13
 3046 00a2 02       		.uleb128 0x2
 3047 00a3 18       		.uleb128 0x18
 3048 00a4 00       		.byte	0
 3049 00a5 00       		.byte	0
 3050 00a6 0B       		.uleb128 0xb
 3051 00a7 2E       		.uleb128 0x2e
 3052 00a8 00       		.byte	0
 3053 00a9 3F       		.uleb128 0x3f
 3054 00aa 19       		.uleb128 0x19
 3055 00ab 03       		.uleb128 0x3
 3056 00ac 0E       		.uleb128 0xe
 3057 00ad 3A       		.uleb128 0x3a
 3058 00ae 0B       		.uleb128 0xb
 3059 00af 3B       		.uleb128 0x3b
 3060 00b0 0B       		.uleb128 0xb
 3061 00b1 27       		.uleb128 0x27
 3062 00b2 19       		.uleb128 0x19
 3063 00b3 11       		.uleb128 0x11
 3064 00b4 01       		.uleb128 0x1
 3065 00b5 12       		.uleb128 0x12
 3066 00b6 06       		.uleb128 0x6
 3067 00b7 40       		.uleb128 0x40
 3068 00b8 18       		.uleb128 0x18
 3069 00b9 9642     		.uleb128 0x2116
 3070 00bb 19       		.uleb128 0x19
 3071 00bc 00       		.byte	0
 3072 00bd 00       		.byte	0
 3073 00be 0C       		.uleb128 0xc
 3074 00bf 2E       		.uleb128 0x2e
 3075 00c0 01       		.byte	0x1
 3076 00c1 3F       		.uleb128 0x3f
 3077 00c2 19       		.uleb128 0x19
 3078 00c3 03       		.uleb128 0x3
 3079 00c4 0E       		.uleb128 0xe
 3080 00c5 3A       		.uleb128 0x3a
 3081 00c6 0B       		.uleb128 0xb
 3082 00c7 3B       		.uleb128 0x3b
 3083 00c8 0B       		.uleb128 0xb
 3084 00c9 11       		.uleb128 0x11
 3085 00ca 01       		.uleb128 0x1
 3086 00cb 12       		.uleb128 0x12
 3087 00cc 06       		.uleb128 0x6
 3088 00cd 40       		.uleb128 0x40
 3089 00ce 18       		.uleb128 0x18
 3090 00cf 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 76


 3091 00d1 19       		.uleb128 0x19
 3092 00d2 01       		.uleb128 0x1
 3093 00d3 13       		.uleb128 0x13
 3094 00d4 00       		.byte	0
 3095 00d5 00       		.byte	0
 3096 00d6 0D       		.uleb128 0xd
 3097 00d7 0B       		.uleb128 0xb
 3098 00d8 01       		.byte	0x1
 3099 00d9 11       		.uleb128 0x11
 3100 00da 01       		.uleb128 0x1
 3101 00db 12       		.uleb128 0x12
 3102 00dc 06       		.uleb128 0x6
 3103 00dd 01       		.uleb128 0x1
 3104 00de 13       		.uleb128 0x13
 3105 00df 00       		.byte	0
 3106 00e0 00       		.byte	0
 3107 00e1 0E       		.uleb128 0xe
 3108 00e2 34       		.uleb128 0x34
 3109 00e3 00       		.byte	0
 3110 00e4 03       		.uleb128 0x3
 3111 00e5 08       		.uleb128 0x8
 3112 00e6 3A       		.uleb128 0x3a
 3113 00e7 0B       		.uleb128 0xb
 3114 00e8 3B       		.uleb128 0x3b
 3115 00e9 0B       		.uleb128 0xb
 3116 00ea 49       		.uleb128 0x49
 3117 00eb 13       		.uleb128 0x13
 3118 00ec 02       		.uleb128 0x2
 3119 00ed 18       		.uleb128 0x18
 3120 00ee 00       		.byte	0
 3121 00ef 00       		.byte	0
 3122 00f0 0F       		.uleb128 0xf
 3123 00f1 0B       		.uleb128 0xb
 3124 00f2 01       		.byte	0x1
 3125 00f3 11       		.uleb128 0x11
 3126 00f4 01       		.uleb128 0x1
 3127 00f5 12       		.uleb128 0x12
 3128 00f6 06       		.uleb128 0x6
 3129 00f7 00       		.byte	0
 3130 00f8 00       		.byte	0
 3131 00f9 10       		.uleb128 0x10
 3132 00fa 2E       		.uleb128 0x2e
 3133 00fb 00       		.byte	0
 3134 00fc 3F       		.uleb128 0x3f
 3135 00fd 19       		.uleb128 0x19
 3136 00fe 03       		.uleb128 0x3
 3137 00ff 0E       		.uleb128 0xe
 3138 0100 3A       		.uleb128 0x3a
 3139 0101 0B       		.uleb128 0xb
 3140 0102 3B       		.uleb128 0x3b
 3141 0103 05       		.uleb128 0x5
 3142 0104 11       		.uleb128 0x11
 3143 0105 01       		.uleb128 0x1
 3144 0106 12       		.uleb128 0x12
 3145 0107 06       		.uleb128 0x6
 3146 0108 40       		.uleb128 0x40
 3147 0109 18       		.uleb128 0x18
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 77


 3148 010a 9642     		.uleb128 0x2116
 3149 010c 19       		.uleb128 0x19
 3150 010d 00       		.byte	0
 3151 010e 00       		.byte	0
 3152 010f 11       		.uleb128 0x11
 3153 0110 2E       		.uleb128 0x2e
 3154 0111 01       		.byte	0x1
 3155 0112 3F       		.uleb128 0x3f
 3156 0113 19       		.uleb128 0x19
 3157 0114 03       		.uleb128 0x3
 3158 0115 0E       		.uleb128 0xe
 3159 0116 3A       		.uleb128 0x3a
 3160 0117 0B       		.uleb128 0xb
 3161 0118 3B       		.uleb128 0x3b
 3162 0119 05       		.uleb128 0x5
 3163 011a 49       		.uleb128 0x49
 3164 011b 13       		.uleb128 0x13
 3165 011c 11       		.uleb128 0x11
 3166 011d 01       		.uleb128 0x1
 3167 011e 12       		.uleb128 0x12
 3168 011f 06       		.uleb128 0x6
 3169 0120 40       		.uleb128 0x40
 3170 0121 18       		.uleb128 0x18
 3171 0122 9642     		.uleb128 0x2116
 3172 0124 19       		.uleb128 0x19
 3173 0125 01       		.uleb128 0x1
 3174 0126 13       		.uleb128 0x13
 3175 0127 00       		.byte	0
 3176 0128 00       		.byte	0
 3177 0129 12       		.uleb128 0x12
 3178 012a 34       		.uleb128 0x34
 3179 012b 00       		.byte	0
 3180 012c 03       		.uleb128 0x3
 3181 012d 08       		.uleb128 0x8
 3182 012e 3A       		.uleb128 0x3a
 3183 012f 0B       		.uleb128 0xb
 3184 0130 3B       		.uleb128 0x3b
 3185 0131 05       		.uleb128 0x5
 3186 0132 49       		.uleb128 0x49
 3187 0133 13       		.uleb128 0x13
 3188 0134 02       		.uleb128 0x2
 3189 0135 18       		.uleb128 0x18
 3190 0136 00       		.byte	0
 3191 0137 00       		.byte	0
 3192 0138 13       		.uleb128 0x13
 3193 0139 01       		.uleb128 0x1
 3194 013a 01       		.byte	0x1
 3195 013b 49       		.uleb128 0x49
 3196 013c 13       		.uleb128 0x13
 3197 013d 01       		.uleb128 0x1
 3198 013e 13       		.uleb128 0x13
 3199 013f 00       		.byte	0
 3200 0140 00       		.byte	0
 3201 0141 14       		.uleb128 0x14
 3202 0142 21       		.uleb128 0x21
 3203 0143 00       		.byte	0
 3204 0144 49       		.uleb128 0x49
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 78


 3205 0145 13       		.uleb128 0x13
 3206 0146 2F       		.uleb128 0x2f
 3207 0147 0B       		.uleb128 0xb
 3208 0148 00       		.byte	0
 3209 0149 00       		.byte	0
 3210 014a 15       		.uleb128 0x15
 3211 014b 26       		.uleb128 0x26
 3212 014c 00       		.byte	0
 3213 014d 49       		.uleb128 0x49
 3214 014e 13       		.uleb128 0x13
 3215 014f 00       		.byte	0
 3216 0150 00       		.byte	0
 3217 0151 16       		.uleb128 0x16
 3218 0152 34       		.uleb128 0x34
 3219 0153 00       		.byte	0
 3220 0154 03       		.uleb128 0x3
 3221 0155 0E       		.uleb128 0xe
 3222 0156 3A       		.uleb128 0x3a
 3223 0157 0B       		.uleb128 0xb
 3224 0158 3B       		.uleb128 0x3b
 3225 0159 05       		.uleb128 0x5
 3226 015a 49       		.uleb128 0x49
 3227 015b 13       		.uleb128 0x13
 3228 015c 3F       		.uleb128 0x3f
 3229 015d 19       		.uleb128 0x19
 3230 015e 3C       		.uleb128 0x3c
 3231 015f 19       		.uleb128 0x19
 3232 0160 00       		.byte	0
 3233 0161 00       		.byte	0
 3234 0162 17       		.uleb128 0x17
 3235 0163 34       		.uleb128 0x34
 3236 0164 00       		.byte	0
 3237 0165 03       		.uleb128 0x3
 3238 0166 0E       		.uleb128 0xe
 3239 0167 3A       		.uleb128 0x3a
 3240 0168 0B       		.uleb128 0xb
 3241 0169 3B       		.uleb128 0x3b
 3242 016a 0B       		.uleb128 0xb
 3243 016b 49       		.uleb128 0x49
 3244 016c 13       		.uleb128 0x13
 3245 016d 3F       		.uleb128 0x3f
 3246 016e 19       		.uleb128 0x19
 3247 016f 02       		.uleb128 0x2
 3248 0170 18       		.uleb128 0x18
 3249 0171 00       		.byte	0
 3250 0172 00       		.byte	0
 3251 0173 18       		.uleb128 0x18
 3252 0174 34       		.uleb128 0x34
 3253 0175 00       		.byte	0
 3254 0176 03       		.uleb128 0x3
 3255 0177 08       		.uleb128 0x8
 3256 0178 3A       		.uleb128 0x3a
 3257 0179 0B       		.uleb128 0xb
 3258 017a 3B       		.uleb128 0x3b
 3259 017b 0B       		.uleb128 0xb
 3260 017c 49       		.uleb128 0x49
 3261 017d 13       		.uleb128 0x13
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 79


 3262 017e 3F       		.uleb128 0x3f
 3263 017f 19       		.uleb128 0x19
 3264 0180 02       		.uleb128 0x2
 3265 0181 18       		.uleb128 0x18
 3266 0182 00       		.byte	0
 3267 0183 00       		.byte	0
 3268 0184 00       		.byte	0
 3269              		.section	.debug_aranges,"",%progbits
 3270 0000 74000000 		.4byte	0x74
 3271 0004 0200     		.2byte	0x2
 3272 0006 00000000 		.4byte	.Ldebug_info0
 3273 000a 04       		.byte	0x4
 3274 000b 00       		.byte	0
 3275 000c 0000     		.2byte	0
 3276 000e 0000     		.2byte	0
 3277 0010 00000000 		.4byte	.LFB3
 3278 0014 30000000 		.4byte	.LFE3-.LFB3
 3279 0018 00000000 		.4byte	.LFB4
 3280 001c 32000000 		.4byte	.LFE4-.LFB4
 3281 0020 00000000 		.4byte	.LFB5
 3282 0024 32000000 		.4byte	.LFE5-.LFB5
 3283 0028 00000000 		.4byte	.LFB7
 3284 002c 32000000 		.4byte	.LFE7-.LFB7
 3285 0030 00000000 		.4byte	.LFB8
 3286 0034 32000000 		.4byte	.LFE8-.LFB8
 3287 0038 00000000 		.4byte	.LFB9
 3288 003c 58000000 		.4byte	.LFE9-.LFB9
 3289 0040 00000000 		.4byte	.LFB63
 3290 0044 04020000 		.4byte	.LFE63-.LFB63
 3291 0048 00000000 		.4byte	.LFB64
 3292 004c 10010000 		.4byte	.LFE64-.LFB64
 3293 0050 00000000 		.4byte	.LFB65
 3294 0054 88070000 		.4byte	.LFE65-.LFB65
 3295 0058 00000000 		.4byte	.LFB66
 3296 005c 48000000 		.4byte	.LFE66-.LFB66
 3297 0060 00000000 		.4byte	.LFB67
 3298 0064 40000000 		.4byte	.LFE67-.LFB67
 3299 0068 00000000 		.4byte	.LFB68
 3300 006c 84010000 		.4byte	.LFE68-.LFB68
 3301 0070 00000000 		.4byte	0
 3302 0074 00000000 		.4byte	0
 3303              		.section	.debug_ranges,"",%progbits
 3304              	.Ldebug_ranges0:
 3305 0000 00000000 		.4byte	.LFB3
 3306 0004 30000000 		.4byte	.LFE3
 3307 0008 00000000 		.4byte	.LFB4
 3308 000c 32000000 		.4byte	.LFE4
 3309 0010 00000000 		.4byte	.LFB5
 3310 0014 32000000 		.4byte	.LFE5
 3311 0018 00000000 		.4byte	.LFB7
 3312 001c 32000000 		.4byte	.LFE7
 3313 0020 00000000 		.4byte	.LFB8
 3314 0024 32000000 		.4byte	.LFE8
 3315 0028 00000000 		.4byte	.LFB9
 3316 002c 58000000 		.4byte	.LFE9
 3317 0030 00000000 		.4byte	.LFB63
 3318 0034 04020000 		.4byte	.LFE63
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 80


 3319 0038 00000000 		.4byte	.LFB64
 3320 003c 10010000 		.4byte	.LFE64
 3321 0040 00000000 		.4byte	.LFB65
 3322 0044 88070000 		.4byte	.LFE65
 3323 0048 00000000 		.4byte	.LFB66
 3324 004c 48000000 		.4byte	.LFE66
 3325 0050 00000000 		.4byte	.LFB67
 3326 0054 40000000 		.4byte	.LFE67
 3327 0058 00000000 		.4byte	.LFB68
 3328 005c 84010000 		.4byte	.LFE68
 3329 0060 00000000 		.4byte	0
 3330 0064 00000000 		.4byte	0
 3331              		.section	.debug_line,"",%progbits
 3332              	.Ldebug_line0:
 3333 0000 06040000 		.section	.debug_str,"MS",%progbits,1
 3333      02004A00 
 3333      00000201 
 3333      FB0E0D00 
 3333      01010101 
 3334              	.LASF35:
 3335 0000 6D696E75 		.ascii	"minutes\000"
 3335      74657300 
 3336              	.LASF25:
 3337 0008 74756265 		.ascii	"tube\000"
 3337      00
 3338              	.LASF37:
 3339 000d 79656172 		.ascii	"year\000"
 3339      00
 3340              	.LASF30:
 3341 0012 73746172 		.ascii	"start\000"
 3341      7400
 3342              	.LASF3:
 3343 0018 73686F72 		.ascii	"short unsigned int\000"
 3343      7420756E 
 3343      7369676E 
 3343      65642069 
 3343      6E7400
 3344              	.LASF38:
 3345 002b 6D6F6E74 		.ascii	"month\000"
 3345      6800
 3346              	.LASF19:
 3347 0031 72657456 		.ascii	"retVal\000"
 3347      616C00
 3348              	.LASF11:
 3349 0038 666C6F61 		.ascii	"float\000"
 3349      7400
 3350              	.LASF22:
 3351 003e 64617465 		.ascii	"date\000"
 3351      00
 3352              	.LASF39:
 3353 0043 64697370 		.ascii	"display_mode\000"
 3353      6C61795F 
 3353      6D6F6465 
 3353      00
 3354              	.LASF18:
 3355 0050 696E7075 		.ascii	"inputTime\000"
 3355      7454696D 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 81


 3355      6500
 3356              	.LASF5:
 3357 005a 6C6F6E67 		.ascii	"long unsigned int\000"
 3357      20756E73 
 3357      69676E65 
 3357      6420696E 
 3357      7400
 3358              	.LASF27:
 3359 006c 7365745F 		.ascii	"set_date\000"
 3359      64617465 
 3359      00
 3360              	.LASF41:
 3361 0075 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3361      43313120 
 3361      352E342E 
 3361      31203230 
 3361      31363036 
 3362 00a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3362      20726576 
 3362      6973696F 
 3362      6E203233 
 3362      37373135 
 3363 00db 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3363      66756E63 
 3363      74696F6E 
 3363      2D736563 
 3363      74696F6E 
 3364              	.LASF34:
 3365 0103 686F7572 		.ascii	"hours\000"
 3365      7300
 3366              	.LASF12:
 3367 0109 646F7562 		.ascii	"double\000"
 3367      6C6500
 3368              	.LASF29:
 3369 0110 6D61696E 		.ascii	"main\000"
 3369      00
 3370              	.LASF9:
 3371 0115 75696E74 		.ascii	"uint16\000"
 3371      313600
 3372              	.LASF10:
 3373 011c 75696E74 		.ascii	"uint32\000"
 3373      333200
 3374              	.LASF1:
 3375 0123 756E7369 		.ascii	"unsigned char\000"
 3375      676E6564 
 3375      20636861 
 3375      7200
 3376              	.LASF8:
 3377 0131 756E7369 		.ascii	"unsigned int\000"
 3377      676E6564 
 3377      20696E74 
 3377      00
 3378              	.LASF24:
 3379 013e 5254435F 		.ascii	"RTC_GetYear\000"
 3379      47657459 
 3379      65617200 
 3380              	.LASF7:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 82


 3381 014a 6C6F6E67 		.ascii	"long long unsigned int\000"
 3381      206C6F6E 
 3381      6720756E 
 3381      7369676E 
 3381      65642069 
 3382              	.LASF44:
 3383 0161 7764745F 		.ascii	"wdt_callback\000"
 3383      63616C6C 
 3383      6261636B 
 3383      00
 3384              	.LASF17:
 3385 016e 5254435F 		.ascii	"RTC_GetMinutes\000"
 3385      4765744D 
 3385      696E7574 
 3385      657300
 3386              	.LASF33:
 3387 017d 74696D65 		.ascii	"time\000"
 3387      00
 3388              	.LASF15:
 3389 0182 73697A65 		.ascii	"sizetype\000"
 3389      74797065 
 3389      00
 3390              	.LASF6:
 3391 018b 6C6F6E67 		.ascii	"long long int\000"
 3391      206C6F6E 
 3391      6720696E 
 3391      7400
 3392              	.LASF36:
 3393 0199 7365636F 		.ascii	"seconds\000"
 3393      6E647300 
 3394              	.LASF42:
 3395 01a1 6D61696E 		.ascii	"main.c\000"
 3395      2E6300
 3396              	.LASF13:
 3397 01a8 63686172 		.ascii	"char\000"
 3397      00
 3398              	.LASF32:
 3399 01ad 64696769 		.ascii	"digits\000"
 3399      747300
 3400              	.LASF2:
 3401 01b4 73686F72 		.ascii	"short int\000"
 3401      7420696E 
 3401      7400
 3402              	.LASF16:
 3403 01be 5254435F 		.ascii	"RTC_GetSecond\000"
 3403      47657453 
 3403      65636F6E 
 3403      6400
 3404              	.LASF45:
 3405 01cc 63617468 		.ascii	"cathode_antidote\000"
 3405      6F64655F 
 3405      616E7469 
 3405      646F7465 
 3405      00
 3406              	.LASF21:
 3407 01dd 5254435F 		.ascii	"RTC_GetDay\000"
 3407      47657444 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc4LLFBB.s 			page 83


 3407      617900
 3408              	.LASF26:
 3409 01e8 7365745F 		.ascii	"set_time\000"
 3409      74696D65 
 3409      00
 3410              	.LASF4:
 3411 01f1 6C6F6E67 		.ascii	"long int\000"
 3411      20696E74 
 3411      00
 3412              	.LASF31:
 3413 01fa 5254435F 		.ascii	"RTC_daysBeforeMonthTbl\000"
 3413      64617973 
 3413      4265666F 
 3413      72654D6F 
 3413      6E746854 
 3414              	.LASF14:
 3415 0211 6C6F6E67 		.ascii	"long double\000"
 3415      20646F75 
 3415      626C6500 
 3416              	.LASF0:
 3417 021d 7369676E 		.ascii	"signed char\000"
 3417      65642063 
 3417      68617200 
 3418              	.LASF23:
 3419 0229 5254435F 		.ascii	"RTC_GetMonth\000"
 3419      4765744D 
 3419      6F6E7468 
 3419      00
 3420              	.LASF43:
 3421 0236 433A5C55 		.ascii	"C:\\Users\\Jason\\Desktop\\github\\nixie-psoc-proje"
 3421      73657273 
 3421      5C4A6173 
 3421      6F6E5C44 
 3421      65736B74 
 3422 0264 63745C6E 		.ascii	"ct\\nixie_control.cydsn\000"
 3422      69786965 
 3422      5F636F6E 
 3422      74726F6C 
 3422      2E637964 
 3423              	.LASF20:
 3424 027b 5254435F 		.ascii	"RTC_GetHours\000"
 3424      47657448 
 3424      6F757273 
 3424      00
 3425              	.LASF28:
 3426 0288 6E697869 		.ascii	"nixie_write\000"
 3426      655F7772 
 3426      69746500 
 3427              	.LASF40:
 3428 0294 646F6E65 		.ascii	"done\000"
 3428      00
 3429              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
