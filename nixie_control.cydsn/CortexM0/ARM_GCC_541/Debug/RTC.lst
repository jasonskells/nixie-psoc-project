ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_IsBitSet,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	RTC_IsBitSet, %function
  24              	RTC_IsBitSet:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC4\\RTC.h"
   1:Generated_Source\PSoC4/RTC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC.h **** * \file Name: RTC.h
   3:Generated_Source\PSoC4/RTC.h **** * \version 1.30
   4:Generated_Source\PSoC4/RTC.h **** *
   5:Generated_Source\PSoC4/RTC.h **** *  This file provides constants and parameter values for the RTC_P4 Component.
   6:Generated_Source\PSoC4/RTC.h **** *
   7:Generated_Source\PSoC4/RTC.h **** ********************************************************************************
   8:Generated_Source\PSoC4/RTC.h **** * Copyright 2015-2017, Cypress Semiconductor Corporation.  All rights reserved.
   9:Generated_Source\PSoC4/RTC.h **** * You may use this file only in accordance with the license, terms, conditions,
  10:Generated_Source\PSoC4/RTC.h **** * disclaimers, and limitations in the end user license agreement accompanying
  11:Generated_Source\PSoC4/RTC.h **** * the software package with which this file was provided.
  12:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  13:Generated_Source\PSoC4/RTC.h **** 
  14:Generated_Source\PSoC4/RTC.h **** #if !defined(CY_RTC_P4_RTC_H)
  15:Generated_Source\PSoC4/RTC.h **** #define CY_RTC_P4_RTC_H
  16:Generated_Source\PSoC4/RTC.h **** 
  17:Generated_Source\PSoC4/RTC.h **** #include <cytypes.h>
  18:Generated_Source\PSoC4/RTC.h **** #include <CyLib.h>
  19:Generated_Source\PSoC4/RTC.h **** 
  20:Generated_Source\PSoC4/RTC.h **** 
  21:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  22:Generated_Source\PSoC4/RTC.h **** *    Data types definition
  23:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  24:Generated_Source\PSoC4/RTC.h **** /**
  25:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_enums
  26:Generated_Source\PSoC4/RTC.h **** * \{
  27:Generated_Source\PSoC4/RTC.h **** */
  28:Generated_Source\PSoC4/RTC.h **** /** Daylight saving Time format enumeration */
  29:Generated_Source\PSoC4/RTC.h **** typedef enum
  30:Generated_Source\PSoC4/RTC.h **** {
  31:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_RELATIVE = 0u,  /**< Relative DST format */
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 2


  32:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_FIXED = 1u      /**< Fixed DST format */
  33:Generated_Source\PSoC4/RTC.h **** }RTC_DST_DATETYPE_ENUM;
  34:Generated_Source\PSoC4/RTC.h **** /** \} group_enums */
  35:Generated_Source\PSoC4/RTC.h **** 
  36:Generated_Source\PSoC4/RTC.h **** /**
  37:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_structures
  38:Generated_Source\PSoC4/RTC.h **** * \{
  39:Generated_Source\PSoC4/RTC.h **** */
  40:Generated_Source\PSoC4/RTC.h **** 
  41:Generated_Source\PSoC4/RTC.h **** /** RTC_DATE_TIME structure is the data structure that is used to 
  42:Generated_Source\PSoC4/RTC.h **** * save the current time and date (RTC_currentTimeDate), and Alarm time and date 
  43:Generated_Source\PSoC4/RTC.h **** *(RTC_alarmCfgTimeDate)
  44:Generated_Source\PSoC4/RTC.h **** *
  45:Generated_Source\PSoC4/RTC.h **** */
  46:Generated_Source\PSoC4/RTC.h **** typedef struct
  47:Generated_Source\PSoC4/RTC.h **** {
  48:Generated_Source\PSoC4/RTC.h ****     uint32 time;        /**< Time in the format used in API*/
  49:Generated_Source\PSoC4/RTC.h ****     uint32 date;        /**< Date in the format used in API*/
  50:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;   /**< Day of the week, see \ref group_rtc_day_of_the_week */
  51:Generated_Source\PSoC4/RTC.h ****     uint32 status;      /**< RTC status, see \ref group_rtc_status */
  52:Generated_Source\PSoC4/RTC.h **** }RTC_DATE_TIME;
  53:Generated_Source\PSoC4/RTC.h **** 
  54:Generated_Source\PSoC4/RTC.h **** /*
  55:Generated_Source\PSoC4/RTC.h **** * RTC_DST_TIME structure is the data structure that is used to 
  56:Generated_Source\PSoC4/RTC.h **** * save time and date values for Daylight Savings Time Start and Stop 
  57:Generated_Source\PSoC4/RTC.h **** * (RTC_dstTimeDateStart and RTC_dstTimeDateStop)
  58:Generated_Source\PSoC4/RTC.h **** */
  59:Generated_Source\PSoC4/RTC.h **** typedef struct
  60:Generated_Source\PSoC4/RTC.h **** {
  61:Generated_Source\PSoC4/RTC.h ****     uint32 hour;          /**< Hour value */
  62:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;     /**< Day of the week, see \ref group_rtc_day_of_the_week */
  63:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfMonth;    /**< Day of the month */
  64:Generated_Source\PSoC4/RTC.h ****     uint32 weekOfMonth;   /**< Week of the month, see \ref group_rtc_dst_week_of_month */
  65:Generated_Source\PSoC4/RTC.h ****     uint32 month;         /**< Month value, see \ref group_rtc_month */
  66:Generated_Source\PSoC4/RTC.h ****     uint8  timeFormat;    /**< The DST operation mode, see \ref 
  67:Generated_Source\PSoC4/RTC.h ****                                RTC_DST_DATETYPE_ENUM */
  68:Generated_Source\PSoC4/RTC.h **** }RTC_DST_TIME;
  69:Generated_Source\PSoC4/RTC.h **** /** \} group_structures */
  70:Generated_Source\PSoC4/RTC.h **** 
  71:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  72:Generated_Source\PSoC4/RTC.h **** *    Enumerated Types and Parameters
  73:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  74:Generated_Source\PSoC4/RTC.h **** /* Time Format setting constants */
  75:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_12 1
  76:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_24 0
  77:Generated_Source\PSoC4/RTC.h **** 
  78:Generated_Source\PSoC4/RTC.h **** /*  Date Format setting constants */
  79:Generated_Source\PSoC4/RTC.h **** #define RTC__MM_DD_YYYY 0
  80:Generated_Source\PSoC4/RTC.h **** #define RTC__DD_MM_YYYY 1
  81:Generated_Source\PSoC4/RTC.h **** #define RTC__YYYY_MM_DD 2
  82:Generated_Source\PSoC4/RTC.h **** 
  83:Generated_Source\PSoC4/RTC.h **** /* Date Type setting constants */
  84:Generated_Source\PSoC4/RTC.h **** #define RTC__RELATIVE 0
  85:Generated_Source\PSoC4/RTC.h **** #define RTC__FIXED 1
  86:Generated_Source\PSoC4/RTC.h **** 
  87:Generated_Source\PSoC4/RTC.h **** /* DST Hour setting constants */
  88:Generated_Source\PSoC4/RTC.h **** #define RTC__H0000 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 3


  89:Generated_Source\PSoC4/RTC.h **** #define RTC__H0100 1
  90:Generated_Source\PSoC4/RTC.h **** #define RTC__H0200 2
  91:Generated_Source\PSoC4/RTC.h **** #define RTC__H0300 3
  92:Generated_Source\PSoC4/RTC.h **** #define RTC__H0400 4
  93:Generated_Source\PSoC4/RTC.h **** #define RTC__H0500 5
  94:Generated_Source\PSoC4/RTC.h **** #define RTC__H0600 6
  95:Generated_Source\PSoC4/RTC.h **** #define RTC__H0700 7
  96:Generated_Source\PSoC4/RTC.h **** #define RTC__H0800 8
  97:Generated_Source\PSoC4/RTC.h **** #define RTC__H0900 9
  98:Generated_Source\PSoC4/RTC.h **** #define RTC__H1000 10
  99:Generated_Source\PSoC4/RTC.h **** #define RTC__H1100 11
 100:Generated_Source\PSoC4/RTC.h **** #define RTC__H1200 12
 101:Generated_Source\PSoC4/RTC.h **** #define RTC__H1300 13
 102:Generated_Source\PSoC4/RTC.h **** #define RTC__H1400 14
 103:Generated_Source\PSoC4/RTC.h **** #define RTC__H1500 15
 104:Generated_Source\PSoC4/RTC.h **** #define RTC__H1600 16
 105:Generated_Source\PSoC4/RTC.h **** #define RTC__H1700 17
 106:Generated_Source\PSoC4/RTC.h **** #define RTC__H1800 18
 107:Generated_Source\PSoC4/RTC.h **** #define RTC__H1900 19
 108:Generated_Source\PSoC4/RTC.h **** #define RTC__H2000 20
 109:Generated_Source\PSoC4/RTC.h **** #define RTC__H2100 21
 110:Generated_Source\PSoC4/RTC.h **** #define RTC__H2200 22
 111:Generated_Source\PSoC4/RTC.h **** #define RTC__H2300 23
 112:Generated_Source\PSoC4/RTC.h **** 
 113:Generated_Source\PSoC4/RTC.h **** /* DST DayOfWeek setting constants */
 114:Generated_Source\PSoC4/RTC.h **** #define RTC__SUNDAY 1
 115:Generated_Source\PSoC4/RTC.h **** #define RTC__MONDAY 2
 116:Generated_Source\PSoC4/RTC.h **** #define RTC__TUESDAY 3
 117:Generated_Source\PSoC4/RTC.h **** #define RTC__WEDNESDAY 4
 118:Generated_Source\PSoC4/RTC.h **** #define RTC__THURSDAY 5
 119:Generated_Source\PSoC4/RTC.h **** #define RTC__FRIDAY 6
 120:Generated_Source\PSoC4/RTC.h **** #define RTC__SATURDAY 7
 121:Generated_Source\PSoC4/RTC.h **** 
 122:Generated_Source\PSoC4/RTC.h **** /* DST Month setting constants */
 123:Generated_Source\PSoC4/RTC.h **** #define RTC__JAN 1
 124:Generated_Source\PSoC4/RTC.h **** #define RTC__FEB 2
 125:Generated_Source\PSoC4/RTC.h **** #define RTC__MAR 3
 126:Generated_Source\PSoC4/RTC.h **** #define RTC__APR 4
 127:Generated_Source\PSoC4/RTC.h **** #define RTC__MAY 5
 128:Generated_Source\PSoC4/RTC.h **** #define RTC__JUN 6
 129:Generated_Source\PSoC4/RTC.h **** #define RTC__JUL 7
 130:Generated_Source\PSoC4/RTC.h **** #define RTC__AUG 8
 131:Generated_Source\PSoC4/RTC.h **** #define RTC__SEP 9
 132:Generated_Source\PSoC4/RTC.h **** #define RTC__OCT 10
 133:Generated_Source\PSoC4/RTC.h **** #define RTC__NOV 11
 134:Generated_Source\PSoC4/RTC.h **** #define RTC__DEC 12
 135:Generated_Source\PSoC4/RTC.h **** 
 136:Generated_Source\PSoC4/RTC.h **** /* DST WeekOfMonth setting constants */
 137:Generated_Source\PSoC4/RTC.h **** #define RTC__FIRST 1
 138:Generated_Source\PSoC4/RTC.h **** #define RTC__SECOND 2
 139:Generated_Source\PSoC4/RTC.h **** #define RTC__THIRD 3
 140:Generated_Source\PSoC4/RTC.h **** #define RTC__FOURTH 4
 141:Generated_Source\PSoC4/RTC.h **** #define RTC__FIFTH 5
 142:Generated_Source\PSoC4/RTC.h **** #define RTC__LAST 6
 143:Generated_Source\PSoC4/RTC.h **** 
 144:Generated_Source\PSoC4/RTC.h **** 
 145:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DATA_FORMAT     (1u)
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 4


 146:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_TIME_FORMAT     (0u)
 147:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_UPDATE_MODE     (0u)
 148:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_SECOND          (0u)
 149:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MINUTE          (0u)
 150:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_HOUR            (0u)
 151:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DAY             (1u)
 152:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MONTH           (1u)
 153:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_YEAR            (1970u)
 154:Generated_Source\PSoC4/RTC.h **** 
 155:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_ALARM_STATUS    (0u)
 156:Generated_Source\PSoC4/RTC.h **** 
 157:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STATUS      (0u)
 158:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_DATE_TYPE   (0u)
 159:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_MONTH (3uL)
 160:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_WOM   (6uL)
 161:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOM   (22uL)
 162:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOW   (1uL)
 163:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_HRS   (0uL)
 164:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_MONTH  (10uL)
 165:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOM    (22uL)
 166:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOW    (1uL)
 167:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_WOM    (6uL)
 168:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_HRS    (0uL)
 169:Generated_Source\PSoC4/RTC.h **** 
 170:Generated_Source\PSoC4/RTC.h **** /**
 171:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_constants
 172:Generated_Source\PSoC4/RTC.h **** * \{
 173:Generated_Source\PSoC4/RTC.h **** */
 174:Generated_Source\PSoC4/RTC.h **** 
 175:Generated_Source\PSoC4/RTC.h **** /**
 176:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_day_of_the_week Day of the week definitions
 177:Generated_Source\PSoC4/RTC.h **** * \{
 178:Generated_Source\PSoC4/RTC.h **** * Definitions of days in the week
 179:Generated_Source\PSoC4/RTC.h **** */
 180:Generated_Source\PSoC4/RTC.h **** #define RTC_SUNDAY     (RTC__SUNDAY)       /**< Sequential number of Sunday in the week */
 181:Generated_Source\PSoC4/RTC.h **** #define RTC_MONDAY     (RTC__MONDAY)       /**< Sequential number of Monday in the week */
 182:Generated_Source\PSoC4/RTC.h **** #define RTC_TUESDAY    (RTC__TUESDAY)      /**< Sequential number of Tuesday in the week */
 183:Generated_Source\PSoC4/RTC.h **** #define RTC_WEDNESDAY  (RTC__WEDNESDAY)    /**< Sequential number of Wednesday in the week */
 184:Generated_Source\PSoC4/RTC.h **** #define RTC_THURSDAY   (RTC__THURSDAY)     /**< Sequential number of Thursday in the week */
 185:Generated_Source\PSoC4/RTC.h **** #define RTC_FRIDAY     (RTC__FRIDAY)       /**< Sequential number of Friday in the week */
 186:Generated_Source\PSoC4/RTC.h **** #define RTC_SATURDAY   (RTC__SATURDAY)     /**< Sequential number of Saturday in the week */
 187:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_day_of_the_week */
 188:Generated_Source\PSoC4/RTC.h **** 
 189:Generated_Source\PSoC4/RTC.h **** /**
 190:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_dst_week_of_month DST Week of month setting constants definitions
 191:Generated_Source\PSoC4/RTC.h **** * \{
 192:Generated_Source\PSoC4/RTC.h **** * Week of month setting constants definitions for Daylight Saving Time feature
 193:Generated_Source\PSoC4/RTC.h **** */
 194:Generated_Source\PSoC4/RTC.h **** #define RTC_FIRST      (RTC__FIRST)   /**< First week in the month */
 195:Generated_Source\PSoC4/RTC.h **** #define RTC_SECOND     (RTC__SECOND)  /**< Second week in the month  */
 196:Generated_Source\PSoC4/RTC.h **** #define RTC_THIRD      (RTC__THIRD)   /**< Third week in the month  */
 197:Generated_Source\PSoC4/RTC.h **** #define RTC_FOURTH     (RTC__FOURTH)  /**< Fourth week in the month  */
 198:Generated_Source\PSoC4/RTC.h **** #define RTC_FIFTH      (RTC__FIFTH)   /**< Fifth week in the month  */
 199:Generated_Source\PSoC4/RTC.h **** #define RTC_LAST       (RTC__LAST)    /**< Last week in the month  */
 200:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_dst_week_of_month */
 201:Generated_Source\PSoC4/RTC.h **** 
 202:Generated_Source\PSoC4/RTC.h **** /**
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 5


 203:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_month Month definitions
 204:Generated_Source\PSoC4/RTC.h **** * \{
 205:Generated_Source\PSoC4/RTC.h **** * Constants definition for Months
 206:Generated_Source\PSoC4/RTC.h **** */
 207:Generated_Source\PSoC4/RTC.h **** #define RTC_JANUARY    (RTC__JAN)    /**< Sequential number of January in the year */
 208:Generated_Source\PSoC4/RTC.h **** #define RTC_FEBRUARY   (RTC__FEB)    /**< Sequential number of February in the year */
 209:Generated_Source\PSoC4/RTC.h **** #define RTC_MARCH      (RTC__MAR)    /**< Sequential number of March in the year */
 210:Generated_Source\PSoC4/RTC.h **** #define RTC_APRIL      (RTC__APR)    /**< Sequential number of April in the year */
 211:Generated_Source\PSoC4/RTC.h **** #define RTC_MAY        (RTC__MAY)    /**< Sequential number of May in the year */
 212:Generated_Source\PSoC4/RTC.h **** #define RTC_JUNE       (RTC__JUN)    /**< Sequential number of June in the year */
 213:Generated_Source\PSoC4/RTC.h **** #define RTC_JULY       (RTC__JUL)    /**< Sequential number of July in the year */
 214:Generated_Source\PSoC4/RTC.h **** #define RTC_AUGUST     (RTC__AUG)    /**< Sequential number of August in the year */
 215:Generated_Source\PSoC4/RTC.h **** #define RTC_SEPTEMBER  (RTC__SEP)    /**< Sequential number of September in the year */
 216:Generated_Source\PSoC4/RTC.h **** #define RTC_OCTOBER    (RTC__OCT)    /**< Sequential number of October in the year */
 217:Generated_Source\PSoC4/RTC.h **** #define RTC_NOVEMBER   (RTC__NOV)    /**< Sequential number of November in the year */
 218:Generated_Source\PSoC4/RTC.h **** #define RTC_DECEMBER   (RTC__DEC)    /**< Sequential number of December in the year */
 219:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_month */
 220:Generated_Source\PSoC4/RTC.h **** 
 221:Generated_Source\PSoC4/RTC.h **** /**
 222:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_am_pm AM/PM status definitions
 223:Generated_Source\PSoC4/RTC.h **** * \{
 224:Generated_Source\PSoC4/RTC.h **** * Definitions for 12 hour format for indicating the AM/PM period of day
 225:Generated_Source\PSoC4/RTC.h **** */
 226:Generated_Source\PSoC4/RTC.h **** #define RTC_AM                 (0u)    /**< AM period of day */
 227:Generated_Source\PSoC4/RTC.h **** #define RTC_PM                 (1u)    /**< PM period of day */
 228:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_am_pm */
 229:Generated_Source\PSoC4/RTC.h **** 
 230:Generated_Source\PSoC4/RTC.h **** /**
 231:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_hour_format Hour format definitions
 232:Generated_Source\PSoC4/RTC.h **** * \{
 233:Generated_Source\PSoC4/RTC.h **** * Definitions for hour format
 234:Generated_Source\PSoC4/RTC.h **** */
 235:Generated_Source\PSoC4/RTC.h **** #define RTC_12_HOURS_FORMAT    (RTC__HOUR_12) /**< The 12 hour (AM/PM) format */
 236:Generated_Source\PSoC4/RTC.h **** #define RTC_24_HOURS_FORMAT    (RTC__HOUR_24) /**< The 24 hour format */
 237:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_hour_format */
 238:Generated_Source\PSoC4/RTC.h **** 
 239:Generated_Source\PSoC4/RTC.h **** /**
 240:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_days_in_month Number of days in month definitions
 241:Generated_Source\PSoC4/RTC.h **** * \{
 242:Generated_Source\PSoC4/RTC.h **** * Definition of days in current month
 243:Generated_Source\PSoC4/RTC.h **** */
 244:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JANUARY     (31u)    /**< Number of days in January  */
 245:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_FEBRUARY    (28u)    /**< Number of days in February */
 246:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MARCH       (31u)    /**< Number of days in March */
 247:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_APRIL       (30u)    /**< Number of days in April */
 248:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MAY         (31u)    /**< Number of days in May */
 249:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JUNE        (30u)    /**< Number of days in June */
 250:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JULY        (31u)    /**< Number of days in July */
 251:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_AUGUST      (31u)    /**< Number of days in August */
 252:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_SEPTEMBER   (30u)    /**< Number of days in September */
 253:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_OCTOBER     (31u)    /**< Number of days in October */
 254:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_NOVEMBER    (30u)    /**< Number of days in November */
 255:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_DECEMBER    (31u)    /**< Number of days in December */
 256:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_days_in_month */
 257:Generated_Source\PSoC4/RTC.h **** 
 258:Generated_Source\PSoC4/RTC.h **** /**
 259:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_status Definitions of the RTC status values
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 6


 260:Generated_Source\PSoC4/RTC.h **** * \{
 261:Generated_Source\PSoC4/RTC.h **** * Definitions for status software register, which has flags for DST (DST),
 262:Generated_Source\PSoC4/RTC.h **** * Leap Year (LY), AM/PM (AM_PM).
 263:Generated_Source\PSoC4/RTC.h **** */
 264:Generated_Source\PSoC4/RTC.h **** 
 265:Generated_Source\PSoC4/RTC.h **** /** Status of Daylight Saving Time. This bit
 266:Generated_Source\PSoC4/RTC.h **** * goes high when the current time and date match the DST time and date and the 
 267:Generated_Source\PSoC4/RTC.h **** * time is incremented. This bit goes low after the DST interval and the time is 
 268:Generated_Source\PSoC4/RTC.h **** * decremented.
 269:Generated_Source\PSoC4/RTC.h **** */
 270:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST     (1uL << RTC_STATUS_DST_OFFSET)
 271:Generated_Source\PSoC4/RTC.h **** 
 272:Generated_Source\PSoC4/RTC.h **** /** Status of Leap Year. This bit goes high when the current year is a leap year */
 273:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY      (1uL << RTC_STATUS_LY_OFFSET)
 274:Generated_Source\PSoC4/RTC.h **** 
 275:Generated_Source\PSoC4/RTC.h **** /** Status of Current Time. This bit is low from midnight to noon and high from 
 276:Generated_Source\PSoC4/RTC.h **** *  noon to midnight. */
 277:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM   (1uL << RTC_STATUS_AM_PM_OFFSET)
 278:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_status */
 279:Generated_Source\PSoC4/RTC.h **** 
 280:Generated_Source\PSoC4/RTC.h **** /**
 281:Generated_Source\PSoC4/RTC.h **** * \defgroup group_rtc_alarm_mask Definitions for Alarm Mask software register
 282:Generated_Source\PSoC4/RTC.h **** * \{
 283:Generated_Source\PSoC4/RTC.h **** * Definitions for Alarm Mask software register. These masks allow 
 284:Generated_Source\PSoC4/RTC.h **** * matching the alarm value register with the current value register.
 285:Generated_Source\PSoC4/RTC.h **** */
 286:Generated_Source\PSoC4/RTC.h **** 
 287:Generated_Source\PSoC4/RTC.h **** /** The second alarm mask allows matching the alarm second register with the 
 288:Generated_Source\PSoC4/RTC.h **** *   current second register.
 289:Generated_Source\PSoC4/RTC.h **** */
 290:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_SEC_MASK         (0x00000001uL)
 291:Generated_Source\PSoC4/RTC.h **** 
 292:Generated_Source\PSoC4/RTC.h **** /** The minute alarm mask allows matching the alarm minute register with the 
 293:Generated_Source\PSoC4/RTC.h **** *   current minute register.
 294:Generated_Source\PSoC4/RTC.h **** */
 295:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MIN_MASK         (0x00000002uL)
 296:Generated_Source\PSoC4/RTC.h **** 
 297:Generated_Source\PSoC4/RTC.h **** /** The hour alarm mask allows matching the alarm hour register with the 
 298:Generated_Source\PSoC4/RTC.h **** *   current hour register.
 299:Generated_Source\PSoC4/RTC.h **** */
 300:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_HOUR_MASK        (0x00000004uL)
 301:Generated_Source\PSoC4/RTC.h **** 
 302:Generated_Source\PSoC4/RTC.h **** /** The day of the week alarm mask allows matching the alarm hour register with 
 303:Generated_Source\PSoC4/RTC.h **** *   the current day of the week register.
 304:Generated_Source\PSoC4/RTC.h **** */
 305:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFWEEK_MASK   (0x00000008uL)
 306:Generated_Source\PSoC4/RTC.h **** 
 307:Generated_Source\PSoC4/RTC.h **** /** The day of the Month alarm mask allows matching the alarm hour register with 
 308:Generated_Source\PSoC4/RTC.h **** *   the current day of the Month register.
 309:Generated_Source\PSoC4/RTC.h **** */
 310:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFMONTH_MASK  (0x00000010uL)
 311:Generated_Source\PSoC4/RTC.h **** 
 312:Generated_Source\PSoC4/RTC.h **** /** The month alarm mask allows matching the alarm hour register with the
 313:Generated_Source\PSoC4/RTC.h **** *   current month register.
 314:Generated_Source\PSoC4/RTC.h **** */
 315:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MONTH_MASK       (0x00000020uL)
 316:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 7


 317:Generated_Source\PSoC4/RTC.h **** /** The year alarm mask allows matching the alarm hour register with the
 318:Generated_Source\PSoC4/RTC.h **** *   current year register.
 319:Generated_Source\PSoC4/RTC.h **** */
 320:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_YEAR_MASK        (0x00000040uL)
 321:Generated_Source\PSoC4/RTC.h **** 
 322:Generated_Source\PSoC4/RTC.h **** /** \} group_rtc_alarm_mask */
 323:Generated_Source\PSoC4/RTC.h **** /** \} group_constants */
 324:Generated_Source\PSoC4/RTC.h **** 
 325:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_PER_WEEK       (7u)
 326:Generated_Source\PSoC4/RTC.h **** 
 327:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTHS_PER_YEAR     (12uL)
 328:Generated_Source\PSoC4/RTC.h **** 
 329:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_DAY       (24uL)
 330:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_HALF_DAY  (12uL)
 331:Generated_Source\PSoC4/RTC.h **** 
 332:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_MINUTE  (60uL)
 333:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_HOUR    (3600uL)
 334:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_DAY     (24uL * 3600uL)
 335:Generated_Source\PSoC4/RTC.h **** 
 336:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_LEAP_YEAR    (366uL * 24uL * 3600uL)
 337:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_NONLEAP_YEAR (365uL * 24uL * 3600uL)
 338:Generated_Source\PSoC4/RTC.h **** 
 339:Generated_Source\PSoC4/RTC.h **** #define RTC_UNIX_TIME_PM        ((12uL * 3600uL) + 1uL)
 340:Generated_Source\PSoC4/RTC.h **** 
 341:Generated_Source\PSoC4/RTC.h **** /* Unix time begins in 1970 year */
 342:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_0             (1970u)
 343:Generated_Source\PSoC4/RTC.h **** 
 344:Generated_Source\PSoC4/RTC.h **** /* Definition of date register fields */
 345:Generated_Source\PSoC4/RTC.h **** #if(RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY)
 346:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (28u)
 347:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (24u)
 348:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (20u)
 349:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (16u)
 350:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 351:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 352:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 353:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 354:Generated_Source\PSoC4/RTC.h **** #elif(RTC_INITIAL_DATA_FORMAT == RTC__DD_MM_YYYY)
 355:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (20u)
 356:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (16u)
 357:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (28u)
 358:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (24u)
 359:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 360:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 361:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 362:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 363:Generated_Source\PSoC4/RTC.h **** #else
 364:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (12u)
 365:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (8u)
 366:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (4u)
 367:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (0u)
 368:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (28u)
 369:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (24u)
 370:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (20u)
 371:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (16u)
 372:Generated_Source\PSoC4/RTC.h **** #endif /* (RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY) */
 373:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 8


 374:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MONTH_MASK          (0x00000001uL << RTC_10_MONTH_OFFSET)
 375:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTH_MASK             (0x0000000FuL << RTC_MONTH_OFFSET)
 376:Generated_Source\PSoC4/RTC.h **** #define RTC_10_DAY_MASK            (0x00000003uL << RTC_10_DAY_OFFSET)
 377:Generated_Source\PSoC4/RTC.h **** #define RTC_DAY_MASK               (0x0000000FuL << RTC_DAY_OFFSET)
 378:Generated_Source\PSoC4/RTC.h **** #define RTC_1000_YEAR_MASK         (0x00000003uL << RTC_1000_YEAR_OFFSET)
 379:Generated_Source\PSoC4/RTC.h **** #define RTC_100_YEAR_MASK          (0x0000000FuL << RTC_100_YEAR_OFFSET)
 380:Generated_Source\PSoC4/RTC.h **** #define RTC_10_YEAR_MASK           (0x0000000FuL << RTC_10_YEAR_OFFSET)
 381:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_MASK              (0x0000000FuL << RTC_YEAR_OFFSET)
 382:Generated_Source\PSoC4/RTC.h **** 
 383:Generated_Source\PSoC4/RTC.h **** #define  RTC_MONTH_FULL_MASK       (RTC_10_MONTH_MASK  | RTC_MONTH_MASK)
 384:Generated_Source\PSoC4/RTC.h **** #define  RTC_DAY_FULL_MASK         (RTC_10_DAY_MASK    | RTC_DAY_MASK)
 385:Generated_Source\PSoC4/RTC.h **** #define  RTC_YEAR_FULL_MASK        (RTC_1000_YEAR_MASK | RTC_100_YEAR_MASK |\
 386:Generated_Source\PSoC4/RTC.h ****                                                  RTC_10_YEAR_MASK   | RTC_YEAR_MASK)
 387:Generated_Source\PSoC4/RTC.h **** 
 388:Generated_Source\PSoC4/RTC.h **** /* Definition of time register fields */
 389:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_OFFSET     (23u)
 390:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_OFFSET   (22u)
 391:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_OFFSET        (20u)
 392:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_OFFSET           (16u)
 393:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_OFFSET      (12u)
 394:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_OFFSET         (8u)
 395:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_OFFSET      (4u)
 396:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_OFFSET         (0u)
 397:Generated_Source\PSoC4/RTC.h **** 
 398:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_MASK       (0x00000001uL << RTC_TIME_FORMAT_OFFSET)
 399:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_MASK     (0x00000001uL << RTC_PERIOD_OF_DAY_OFFSET)
 400:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_MASK          (0x00000003uL << RTC_10_HOURS_OFFSET)
 401:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_MASK             (0x0000000FuL << RTC_HOURS_OFFSET)
 402:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_MASK        (0x00000007uL << RTC_10_MINUTES_OFFSET)
 403:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_MASK           (0x0000000FuL << RTC_MINUTES_OFFSET)
 404:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_MASK        (0x00000007uL << RTC_10_SECONDS_OFFSET)
 405:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_MASK           (0x0000000FuL << RTC_SECONDS_OFFSET)
 406:Generated_Source\PSoC4/RTC.h **** 
 407:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_FULL_MASK        (RTC_10_HOURS_MASK   | RTC_HOURS_MASK)
 408:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_FULL_MASK      (RTC_10_MINUTES_MASK | RTC_MINUTES_MASK)
 409:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_FULL_MASK      (RTC_10_SECONDS_MASK | RTC_SECONDS_MASK)
 410:Generated_Source\PSoC4/RTC.h **** 
 411:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST_OFFSET      (1u)
 412:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_ALARM_OFFSET    (2u)
 413:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY_OFFSET       (3u)
 414:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM_OFFSET    (4u)
 415:Generated_Source\PSoC4/RTC.h **** 
 416:Generated_Source\PSoC4/RTC.h **** /* Number of bits per one BCD digit */
 417:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_NUMBER_SIZE        (4u)
 418:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_ONE_DIGIT_MASK     (0x0000000FuL)
 419:Generated_Source\PSoC4/RTC.h **** 
 420:Generated_Source\PSoC4/RTC.h **** 
 421:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 422:Generated_Source\PSoC4/RTC.h **** *    External Variables
 423:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 424:Generated_Source\PSoC4/RTC.h **** /**
 425:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_globals
 426:Generated_Source\PSoC4/RTC.h **** * \{
 427:Generated_Source\PSoC4/RTC.h **** */
 428:Generated_Source\PSoC4/RTC.h **** 
 429:Generated_Source\PSoC4/RTC.h **** /**
 430:Generated_Source\PSoC4/RTC.h **** * Indicates whether the RTC has been initialized; The variable is initialized to
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 9


 431:Generated_Source\PSoC4/RTC.h **** * 0 and set to 1 the first time RTC_Start() is called. This allows the component
 432:Generated_Source\PSoC4/RTC.h **** * to restart without reinitialization after the first call to the RTC_Start() 
 433:Generated_Source\PSoC4/RTC.h **** * routine.
 434:Generated_Source\PSoC4/RTC.h **** */
 435:Generated_Source\PSoC4/RTC.h **** extern uint8  RTC_initVar;
 436:Generated_Source\PSoC4/RTC.h **** 
 437:Generated_Source\PSoC4/RTC.h **** /** The DST start/stop status */
 438:Generated_Source\PSoC4/RTC.h **** extern uint8  RTC_dstStatus;
 439:Generated_Source\PSoC4/RTC.h **** 
 440:Generated_Source\PSoC4/RTC.h **** /**
 441:Generated_Source\PSoC4/RTC.h **** * The uint64 variable represents the standard Unix time (number of seconds 
 442:Generated_Source\PSoC4/RTC.h **** * elapsed from January 1, 1970 00:00 hours UTC) in 64-bit 
 443:Generated_Source\PSoC4/RTC.h **** */
 444:Generated_Source\PSoC4/RTC.h **** extern volatile uint64 RTC_unixTime;
 445:Generated_Source\PSoC4/RTC.h **** 
 446:Generated_Source\PSoC4/RTC.h **** /** The values for the time and date of the DST start */
 447:Generated_Source\PSoC4/RTC.h **** extern RTC_DST_TIME RTC_dstStartTime;
 448:Generated_Source\PSoC4/RTC.h **** 
 449:Generated_Source\PSoC4/RTC.h **** /** The values for the time and date of the DST stop */
 450:Generated_Source\PSoC4/RTC.h **** extern RTC_DST_TIME RTC_dstStopTime;
 451:Generated_Source\PSoC4/RTC.h **** 
 452:Generated_Source\PSoC4/RTC.h **** /**
 453:Generated_Source\PSoC4/RTC.h **** * The last updated time and date values are stored in this structure (update 
 454:Generated_Source\PSoC4/RTC.h **** * happens in Get time/date APIs)
 455:Generated_Source\PSoC4/RTC.h **** */
 456:Generated_Source\PSoC4/RTC.h **** extern RTC_DATE_TIME RTC_currentTimeDate;
 457:Generated_Source\PSoC4/RTC.h **** 
 458:Generated_Source\PSoC4/RTC.h **** /** The alarm time and date values are stored in this variable */
 459:Generated_Source\PSoC4/RTC.h **** extern RTC_DATE_TIME RTC_alarmCfgTimeDate;
 460:Generated_Source\PSoC4/RTC.h **** 
 461:Generated_Source\PSoC4/RTC.h **** /**
 462:Generated_Source\PSoC4/RTC.h **** * This variable is used to mask alarm events; mask seconds alarm, mask minutes 
 463:Generated_Source\PSoC4/RTC.h **** * alarm, and so on. It will have bit masks for each time item masking that item 
 464:Generated_Source\PSoC4/RTC.h **** * for alarm generation
 465:Generated_Source\PSoC4/RTC.h **** */
 466:Generated_Source\PSoC4/RTC.h **** extern uint32  RTC_alarmCfgMask;
 467:Generated_Source\PSoC4/RTC.h **** 
 468:Generated_Source\PSoC4/RTC.h **** /**
 469:Generated_Source\PSoC4/RTC.h **** * This variable is used to indicate current active alarm status per time item 
 470:Generated_Source\PSoC4/RTC.h **** * used in the alarm; whether seconds alarm is active, minute's alarm is active, 
 471:Generated_Source\PSoC4/RTC.h **** * and so on. It will have bit masks for each time item (seconds, minutes, hours,
 472:Generated_Source\PSoC4/RTC.h **** * day, and so on) showing the status
 473:Generated_Source\PSoC4/RTC.h **** */
 474:Generated_Source\PSoC4/RTC.h **** extern uint32 RTC_alarmCurStatus;
 475:Generated_Source\PSoC4/RTC.h **** 
 476:Generated_Source\PSoC4/RTC.h **** /** \} group_globals */
 477:Generated_Source\PSoC4/RTC.h **** 
 478:Generated_Source\PSoC4/RTC.h **** extern void (*RTC_alarmCallbackPtr)(void);
 479:Generated_Source\PSoC4/RTC.h **** 
 480:Generated_Source\PSoC4/RTC.h **** extern const uint16 RTC_daysBeforeMonthTbl[RTC_MONTHS_PER_YEAR];
 481:Generated_Source\PSoC4/RTC.h **** extern const uint8  RTC_daysInMonthTbl[RTC_MONTHS_PER_YEAR];
 482:Generated_Source\PSoC4/RTC.h **** 
 483:Generated_Source\PSoC4/RTC.h **** 
 484:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 485:Generated_Source\PSoC4/RTC.h **** *    Function Prototypes
 486:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 487:Generated_Source\PSoC4/RTC.h **** /**
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 10


 488:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_general
 489:Generated_Source\PSoC4/RTC.h **** * \{
 490:Generated_Source\PSoC4/RTC.h **** */
 491:Generated_Source\PSoC4/RTC.h **** void   RTC_Start(void);
 492:Generated_Source\PSoC4/RTC.h **** void   RTC_Stop(void);
 493:Generated_Source\PSoC4/RTC.h **** void   RTC_Init(void);
 494:Generated_Source\PSoC4/RTC.h **** void   RTC_SetUnixTime(uint64 unixTime);
 495:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetUnixTime(void);
 496:Generated_Source\PSoC4/RTC.h **** void   RTC_SetPeriod(uint32 ticks, uint32 refOneSecTicks);
 497:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetPeriod(void);
 498:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetRefOneSec(void);
 499:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDateAndTime(uint32 inputTime, uint32 inputDate);
 500:Generated_Source\PSoC4/RTC.h **** void   RTC_GetDateAndTime(RTC_DATE_TIME* dateTime);
 501:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetTime(void);
 502:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetDate(void);
 503:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmDateAndTime(const RTC_DATE_TIME* alarmTime);
 504:Generated_Source\PSoC4/RTC.h **** void   RTC_GetAlarmDateAndTime(RTC_DATE_TIME* alarmTimeDate);
 505:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmMask(uint32 mask);
 506:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmMask(void);
 507:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ReadStatus(void);
 508:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmStatus(void);
 509:Generated_Source\PSoC4/RTC.h **** void   RTC_ClearAlarmStatus(void);
 510:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStartTime(const RTC_DST_TIME* dstStartTime,
 511:Generated_Source\PSoC4/RTC.h ****                                               RTC_DST_DATETYPE_ENUM type);
 512:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStopTime(const RTC_DST_TIME* dstStopTime,
 513:Generated_Source\PSoC4/RTC.h ****                                              RTC_DST_DATETYPE_ENUM type);
 514:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertBCDToDec(uint32 bcdNum);
 515:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertDecToBCD(uint32 decNum);
 516:Generated_Source\PSoC4/RTC.h **** void   RTC_Update(void);
 517:Generated_Source\PSoC4/RTC.h **** void*  RTC_SetAlarmHandler(void (*CallbackFunction)(void));
 518:Generated_Source\PSoC4/RTC.h **** 
 519:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructDate(uint32 month, uint32 day, uint32 year);
 520:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 min, uint3
 521:Generated_Source\PSoC4/RTC.h **** /** \} group_general */
 522:Generated_Source\PSoC4/RTC.h **** 
 523:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetTimeFormat(uint32 inputTime);
 524:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetTimeFormat(uint32 inputTime, uint32 timeFormat);
 525:Generated_Source\PSoC4/RTC.h **** 
 526:Generated_Source\PSoC4/RTC.h **** /**
 527:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_general
 528:Generated_Source\PSoC4/RTC.h **** * \{
 529:Generated_Source\PSoC4/RTC.h **** */
 530:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_LeapYear(uint32 year);
 531:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_IsBitSet(uint32 var, uint32 mask);
 532:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetSecond(uint32 inputTime);
 533:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMinutes(uint32 inputTime);
 534:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetHours(uint32 inputTime);
 535:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetAmPm(uint32 inputTime);
 536:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDay(uint32 date);
 537:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMonth(uint32 date);
 538:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetYear(uint32 date);
 539:Generated_Source\PSoC4/RTC.h **** /** \} group_general */
 540:Generated_Source\PSoC4/RTC.h **** 
 541:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetSecond(uint32 inputTime, uint32 inputSecond);
 542:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMinutes(uint32 inputTime, uint32 inputMinute);
 543:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetHours(uint32 inputTime, uint32 inputHours);
 544:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetAmPm(uint32 inputTime, uint32 periodOfDay);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 11


 545:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetDay(uint32 inputDate, uint32 inputDay);
 546:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMonth(uint32 inputDate, uint32 inputMonth);
 547:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetYear(uint32 inputDate, uint32 inputYear);
 548:Generated_Source\PSoC4/RTC.h **** 
 549:Generated_Source\PSoC4/RTC.h **** uint64 RTC_ConstructUnixAlarmTime(const RTC_DATE_TIME* alarmTime, uint8 alarmCfgMask);
 550:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetDstUnixTime(const RTC_DST_TIME* dstTime);
 551:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask);
 552:Generated_Source\PSoC4/RTC.h **** 
 553:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMinSec(uint32 curVal);
 554:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextHour(uint32 curVal);
 555:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarmCfgMask);
 556:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMonth(uint32 curMonth);
 557:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextYear(uint32 curYear);
 558:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDayOfWeek(uint32 day, uint32 month, uint32 year);
 559:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_DaysBeforeMonth(uint32 month, uint32 year);
 560:Generated_Source\PSoC4/RTC.h **** 
 561:Generated_Source\PSoC4/RTC.h **** uint32 RTC_DaysInMonth(uint32 month, uint32 year);
 562:Generated_Source\PSoC4/RTC.h **** 
 563:Generated_Source\PSoC4/RTC.h **** /**
 564:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_general
 565:Generated_Source\PSoC4/RTC.h **** * \{
 566:Generated_Source\PSoC4/RTC.h **** */
 567:Generated_Source\PSoC4/RTC.h **** void   RTC_UnixToDateTime(RTC_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat);
 568:Generated_Source\PSoC4/RTC.h **** uint64 RTC_DateTimeToUnix(uint32 inputDate, uint32 inputTime);
 569:Generated_Source\PSoC4/RTC.h **** 
 570:Generated_Source\PSoC4/RTC.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
 571:Generated_Source\PSoC4/RTC.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
 572:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcSetCallback(uint32 wdtNumber);
 573:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcResetCallback(uint32 wdtNumber);
 574:Generated_Source\PSoC4/RTC.h ****     #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 575:Generated_Source\PSoC4/RTC.h **** #endif /* (CYDEV_RTC_SOURCE_WDT) */
 576:Generated_Source\PSoC4/RTC.h **** 
 577:Generated_Source\PSoC4/RTC.h **** /** \} group_general */
 578:Generated_Source\PSoC4/RTC.h **** 
 579:Generated_Source\PSoC4/RTC.h **** uint32 RTC_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year);
 580:Generated_Source\PSoC4/RTC.h **** 
 581:Generated_Source\PSoC4/RTC.h **** 
 582:Generated_Source\PSoC4/RTC.h **** 
 583:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 584:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_IsBitSet
 585:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 586:Generated_Source\PSoC4/RTC.h **** *
 587:Generated_Source\PSoC4/RTC.h **** * Checks the state of a bit passed through parameter.
 588:Generated_Source\PSoC4/RTC.h **** *
 589:Generated_Source\PSoC4/RTC.h **** * \param var
 590:Generated_Source\PSoC4/RTC.h **** * The variable to be checked.
 591:Generated_Source\PSoC4/RTC.h **** *
 592:Generated_Source\PSoC4/RTC.h **** * \param mask
 593:Generated_Source\PSoC4/RTC.h **** * The mask for a bit to be checked.
 594:Generated_Source\PSoC4/RTC.h **** *
 595:Generated_Source\PSoC4/RTC.h **** * \return
 596:Generated_Source\PSoC4/RTC.h **** *  0u - Bit is not set. <br> 1u - Bit is set.
 597:Generated_Source\PSoC4/RTC.h **** *
 598:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 599:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_IsBitSet(uint32 var, uint32 mask)
 600:Generated_Source\PSoC4/RTC.h **** {
  27              		.loc 1 600 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 12


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40 0008 3960     		str	r1, [r7]
 601:Generated_Source\PSoC4/RTC.h ****     return ((mask == (var & mask)) ? 1Lu : 0Lu);
  41              		.loc 1 601 0
  42 000a 7B68     		ldr	r3, [r7, #4]
  43 000c 3A68     		ldr	r2, [r7]
  44 000e 1A40     		ands	r2, r3
  45 0010 3B68     		ldr	r3, [r7]
  46 0012 9A42     		cmp	r2, r3
  47 0014 01D1     		bne	.L2
  48              		.loc 1 601 0 is_stmt 0 discriminator 1
  49 0016 0123     		movs	r3, #1
  50 0018 00E0     		b	.L4
  51              	.L2:
  52              		.loc 1 601 0 discriminator 2
  53 001a 0023     		movs	r3, #0
  54              	.L4:
 602:Generated_Source\PSoC4/RTC.h **** }
  55              		.loc 1 602 0 is_stmt 1 discriminator 5
  56 001c 1800     		movs	r0, r3
  57 001e BD46     		mov	sp, r7
  58 0020 02B0     		add	sp, sp, #8
  59              		@ sp needed
  60 0022 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE1:
  63              		.size	RTC_IsBitSet, .-RTC_IsBitSet
  64              		.global	__aeabi_uidivmod
  65              		.section	.text.RTC_LeapYear,"ax",%progbits
  66              		.align	2
  67              		.code	16
  68              		.thumb_func
  69              		.type	RTC_LeapYear, %function
  70              	RTC_LeapYear:
  71              	.LFB2:
 603:Generated_Source\PSoC4/RTC.h **** 
 604:Generated_Source\PSoC4/RTC.h **** 
 605:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 606:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_LeapYear
 607:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 608:Generated_Source\PSoC4/RTC.h **** *
 609:Generated_Source\PSoC4/RTC.h **** * Checks whether the year passed through the parameter is leap or no.
 610:Generated_Source\PSoC4/RTC.h **** *
 611:Generated_Source\PSoC4/RTC.h **** * \param year
 612:Generated_Source\PSoC4/RTC.h **** * The year to be checked.
 613:Generated_Source\PSoC4/RTC.h **** *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 13


 614:Generated_Source\PSoC4/RTC.h **** * \return
 615:Generated_Source\PSoC4/RTC.h **** * 0u - The year is not leap <br> 1u - The year is leap.
 616:Generated_Source\PSoC4/RTC.h **** *
 617:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 618:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_LeapYear(uint32 year)
 619:Generated_Source\PSoC4/RTC.h **** {
  72              		.loc 1 619 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 84B0     		sub	sp, sp, #16
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
 620:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 621:Generated_Source\PSoC4/RTC.h **** 
 622:Generated_Source\PSoC4/RTC.h ****     if(((0u == (year % 4Lu)) && (0u != (year % 100Lu))) || (0u == (year % 400Lu)))
  85              		.loc 1 622 0
  86 0008 7B68     		ldr	r3, [r7, #4]
  87 000a 0322     		movs	r2, #3
  88 000c 1340     		ands	r3, r2
  89 000e 06D1     		bne	.L6
  90              		.loc 1 622 0 is_stmt 0 discriminator 1
  91 0010 7B68     		ldr	r3, [r7, #4]
  92 0012 6421     		movs	r1, #100
  93 0014 1800     		movs	r0, r3
  94 0016 FFF7FEFF 		bl	__aeabi_uidivmod
  95 001a 0B1E     		subs	r3, r1, #0
  96 001c 07D1     		bne	.L7
  97              	.L6:
  98              		.loc 1 622 0 discriminator 3
  99 001e 7A68     		ldr	r2, [r7, #4]
 100 0020 C823     		movs	r3, #200
 101 0022 5900     		lsls	r1, r3, #1
 102 0024 1000     		movs	r0, r2
 103 0026 FFF7FEFF 		bl	__aeabi_uidivmod
 104 002a 0B1E     		subs	r3, r1, #0
 105 002c 02D1     		bne	.L8
 106              	.L7:
 623:Generated_Source\PSoC4/RTC.h ****     {
 624:Generated_Source\PSoC4/RTC.h ****         retVal = 1uL;
 107              		.loc 1 624 0 is_stmt 1
 108 002e 0123     		movs	r3, #1
 109 0030 FB60     		str	r3, [r7, #12]
 110 0032 01E0     		b	.L9
 111              	.L8:
 625:Generated_Source\PSoC4/RTC.h ****     }
 626:Generated_Source\PSoC4/RTC.h ****     else
 627:Generated_Source\PSoC4/RTC.h ****     {
 628:Generated_Source\PSoC4/RTC.h ****         retVal = 0uL;
 112              		.loc 1 628 0
 113 0034 0023     		movs	r3, #0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 14


 114 0036 FB60     		str	r3, [r7, #12]
 115              	.L9:
 629:Generated_Source\PSoC4/RTC.h ****     }
 630:Generated_Source\PSoC4/RTC.h **** 
 631:Generated_Source\PSoC4/RTC.h ****     return(retVal);
 116              		.loc 1 631 0
 117 0038 FB68     		ldr	r3, [r7, #12]
 632:Generated_Source\PSoC4/RTC.h **** }
 118              		.loc 1 632 0
 119 003a 1800     		movs	r0, r3
 120 003c BD46     		mov	sp, r7
 121 003e 04B0     		add	sp, sp, #16
 122              		@ sp needed
 123 0040 80BD     		pop	{r7, pc}
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	RTC_LeapYear, .-RTC_LeapYear
 127 0042 C046     		.section	.text.RTC_GetSecond,"ax",%progbits
 128              		.align	2
 129              		.code	16
 130              		.thumb_func
 131              		.type	RTC_GetSecond, %function
 132              	RTC_GetSecond:
 133              	.LFB3:
 633:Generated_Source\PSoC4/RTC.h **** 
 634:Generated_Source\PSoC4/RTC.h **** 
 635:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 636:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetSecond
 637:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 638:Generated_Source\PSoC4/RTC.h **** *
 639:Generated_Source\PSoC4/RTC.h **** * Returns the seconds value from the time value that is passed as a/the 
 640:Generated_Source\PSoC4/RTC.h **** * parameter.
 641:Generated_Source\PSoC4/RTC.h **** *
 642:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 643:Generated_Source\PSoC4/RTC.h **** * The time value.
 644:Generated_Source\PSoC4/RTC.h **** *
 645:Generated_Source\PSoC4/RTC.h **** * \return
 646:Generated_Source\PSoC4/RTC.h **** * The seconds value.
 647:Generated_Source\PSoC4/RTC.h **** *
 648:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 649:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetSecond(uint32 inputTime)
 650:Generated_Source\PSoC4/RTC.h **** {
 134              		.loc 1 650 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 84B0     		sub	sp, sp, #16
 143              		.cfi_def_cfa_offset 24
 144 0004 00AF     		add	r7, sp, #0
 145              		.cfi_def_cfa_register 7
 146 0006 7860     		str	r0, [r7, #4]
 651:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 652:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 15


 653:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_SECONDS_MASK) >> RTC_10_SECONDS_OFFSET) * 10u;
 147              		.loc 1 653 0
 148 0008 7B68     		ldr	r3, [r7, #4]
 149 000a 1B09     		lsrs	r3, r3, #4
 150 000c 0722     		movs	r2, #7
 151 000e 1A40     		ands	r2, r3
 152 0010 1300     		movs	r3, r2
 153 0012 9B00     		lsls	r3, r3, #2
 154 0014 9B18     		adds	r3, r3, r2
 155 0016 5B00     		lsls	r3, r3, #1
 156 0018 FB60     		str	r3, [r7, #12]
 654:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_SECONDS_MASK) >> RTC_SECONDS_OFFSET;
 157              		.loc 1 654 0
 158 001a 7B68     		ldr	r3, [r7, #4]
 159 001c 0F22     		movs	r2, #15
 160 001e 1340     		ands	r3, r2
 161 0020 FA68     		ldr	r2, [r7, #12]
 162 0022 D318     		adds	r3, r2, r3
 163 0024 FB60     		str	r3, [r7, #12]
 655:Generated_Source\PSoC4/RTC.h **** 
 656:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 164              		.loc 1 656 0
 165 0026 FB68     		ldr	r3, [r7, #12]
 657:Generated_Source\PSoC4/RTC.h **** }
 166              		.loc 1 657 0
 167 0028 1800     		movs	r0, r3
 168 002a BD46     		mov	sp, r7
 169 002c 04B0     		add	sp, sp, #16
 170              		@ sp needed
 171 002e 80BD     		pop	{r7, pc}
 172              		.cfi_endproc
 173              	.LFE3:
 174              		.size	RTC_GetSecond, .-RTC_GetSecond
 175              		.section	.text.RTC_GetMinutes,"ax",%progbits
 176              		.align	2
 177              		.code	16
 178              		.thumb_func
 179              		.type	RTC_GetMinutes, %function
 180              	RTC_GetMinutes:
 181              	.LFB4:
 658:Generated_Source\PSoC4/RTC.h **** 
 659:Generated_Source\PSoC4/RTC.h **** 
 660:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 661:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMinutes
 662:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 663:Generated_Source\PSoC4/RTC.h **** *
 664:Generated_Source\PSoC4/RTC.h **** * Returns the minutes value from the time value that is passed as a/the 
 665:Generated_Source\PSoC4/RTC.h **** * parameter.
 666:Generated_Source\PSoC4/RTC.h **** *
 667:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 668:Generated_Source\PSoC4/RTC.h **** * The time value.
 669:Generated_Source\PSoC4/RTC.h **** *
 670:Generated_Source\PSoC4/RTC.h **** * \return
 671:Generated_Source\PSoC4/RTC.h **** * The minutes value.
 672:Generated_Source\PSoC4/RTC.h **** *
 673:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 674:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMinutes(uint32 inputTime)
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 16


 675:Generated_Source\PSoC4/RTC.h **** {
 182              		.loc 1 675 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 16
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 84B0     		sub	sp, sp, #16
 191              		.cfi_def_cfa_offset 24
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
 676:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 677:Generated_Source\PSoC4/RTC.h **** 
 678:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_MINUTES_MASK) >> RTC_10_MINUTES_OFFSET) * 10u;
 195              		.loc 1 678 0
 196 0008 7B68     		ldr	r3, [r7, #4]
 197 000a 1B0B     		lsrs	r3, r3, #12
 198 000c 0722     		movs	r2, #7
 199 000e 1A40     		ands	r2, r3
 200 0010 1300     		movs	r3, r2
 201 0012 9B00     		lsls	r3, r3, #2
 202 0014 9B18     		adds	r3, r3, r2
 203 0016 5B00     		lsls	r3, r3, #1
 204 0018 FB60     		str	r3, [r7, #12]
 679:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_MINUTES_MASK) >> RTC_MINUTES_OFFSET;
 205              		.loc 1 679 0
 206 001a 7B68     		ldr	r3, [r7, #4]
 207 001c 1B0A     		lsrs	r3, r3, #8
 208 001e 0F22     		movs	r2, #15
 209 0020 1340     		ands	r3, r2
 210 0022 FA68     		ldr	r2, [r7, #12]
 211 0024 D318     		adds	r3, r2, r3
 212 0026 FB60     		str	r3, [r7, #12]
 680:Generated_Source\PSoC4/RTC.h **** 
 681:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 213              		.loc 1 681 0
 214 0028 FB68     		ldr	r3, [r7, #12]
 682:Generated_Source\PSoC4/RTC.h **** }
 215              		.loc 1 682 0
 216 002a 1800     		movs	r0, r3
 217 002c BD46     		mov	sp, r7
 218 002e 04B0     		add	sp, sp, #16
 219              		@ sp needed
 220 0030 80BD     		pop	{r7, pc}
 221              		.cfi_endproc
 222              	.LFE4:
 223              		.size	RTC_GetMinutes, .-RTC_GetMinutes
 224 0032 C046     		.section	.text.RTC_GetHours,"ax",%progbits
 225              		.align	2
 226              		.code	16
 227              		.thumb_func
 228              		.type	RTC_GetHours, %function
 229              	RTC_GetHours:
 230              	.LFB5:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 17


 683:Generated_Source\PSoC4/RTC.h **** 
 684:Generated_Source\PSoC4/RTC.h **** 
 685:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 686:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetHours
 687:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 688:Generated_Source\PSoC4/RTC.h **** *
 689:Generated_Source\PSoC4/RTC.h **** * Returns the hours value from the time value that is passed as a/the parameter.
 690:Generated_Source\PSoC4/RTC.h **** *
 691:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 692:Generated_Source\PSoC4/RTC.h **** * The time value.
 693:Generated_Source\PSoC4/RTC.h **** *
 694:Generated_Source\PSoC4/RTC.h **** * \return
 695:Generated_Source\PSoC4/RTC.h **** * The hours value.
 696:Generated_Source\PSoC4/RTC.h **** *
 697:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 698:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetHours(uint32 inputTime)
 699:Generated_Source\PSoC4/RTC.h **** {
 231              		.loc 1 699 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 16
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 80B5     		push	{r7, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 84B0     		sub	sp, sp, #16
 240              		.cfi_def_cfa_offset 24
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 243 0006 7860     		str	r0, [r7, #4]
 700:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 701:Generated_Source\PSoC4/RTC.h **** 
 702:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_HOURS_MASK) >> RTC_10_HOURS_OFFSET) * 10u;
 244              		.loc 1 702 0
 245 0008 7B68     		ldr	r3, [r7, #4]
 246 000a 1B0D     		lsrs	r3, r3, #20
 247 000c 0322     		movs	r2, #3
 248 000e 1A40     		ands	r2, r3
 249 0010 1300     		movs	r3, r2
 250 0012 9B00     		lsls	r3, r3, #2
 251 0014 9B18     		adds	r3, r3, r2
 252 0016 5B00     		lsls	r3, r3, #1
 253 0018 FB60     		str	r3, [r7, #12]
 703:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_HOURS_MASK) >> RTC_HOURS_OFFSET;
 254              		.loc 1 703 0
 255 001a 7B68     		ldr	r3, [r7, #4]
 256 001c 1B0C     		lsrs	r3, r3, #16
 257 001e 0F22     		movs	r2, #15
 258 0020 1340     		ands	r3, r2
 259 0022 FA68     		ldr	r2, [r7, #12]
 260 0024 D318     		adds	r3, r2, r3
 261 0026 FB60     		str	r3, [r7, #12]
 704:Generated_Source\PSoC4/RTC.h **** 
 705:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 262              		.loc 1 705 0
 263 0028 FB68     		ldr	r3, [r7, #12]
 706:Generated_Source\PSoC4/RTC.h **** }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 18


 264              		.loc 1 706 0
 265 002a 1800     		movs	r0, r3
 266 002c BD46     		mov	sp, r7
 267 002e 04B0     		add	sp, sp, #16
 268              		@ sp needed
 269 0030 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE5:
 272              		.size	RTC_GetHours, .-RTC_GetHours
 273 0032 C046     		.section	.text.RTC_GetAmPm,"ax",%progbits
 274              		.align	2
 275              		.code	16
 276              		.thumb_func
 277              		.type	RTC_GetAmPm, %function
 278              	RTC_GetAmPm:
 279              	.LFB6:
 707:Generated_Source\PSoC4/RTC.h **** 
 708:Generated_Source\PSoC4/RTC.h **** 
 709:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 710:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetAmPm
 711:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 712:Generated_Source\PSoC4/RTC.h **** *
 713:Generated_Source\PSoC4/RTC.h **** * Returns the AM/PM status from the time value that is passed as parameter.
 714:Generated_Source\PSoC4/RTC.h **** *
 715:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 716:Generated_Source\PSoC4/RTC.h **** * The time value.
 717:Generated_Source\PSoC4/RTC.h **** *
 718:Generated_Source\PSoC4/RTC.h **** * \return
 719:Generated_Source\PSoC4/RTC.h **** * The am/pm period of day, see \ref group_rtc_am_pm.
 720:Generated_Source\PSoC4/RTC.h **** *
 721:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 722:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetAmPm(uint32 inputTime)
 723:Generated_Source\PSoC4/RTC.h **** {
 280              		.loc 1 723 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 80B5     		push	{r7, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 82B0     		sub	sp, sp, #8
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 292 0006 7860     		str	r0, [r7, #4]
 724:Generated_Source\PSoC4/RTC.h ****     return (RTC_IsBitSet(inputTime, RTC_PERIOD_OF_DAY_MASK));
 293              		.loc 1 724 0
 294 0008 8023     		movs	r3, #128
 295 000a DA03     		lsls	r2, r3, #15
 296 000c 7B68     		ldr	r3, [r7, #4]
 297 000e 1100     		movs	r1, r2
 298 0010 1800     		movs	r0, r3
 299 0012 FFF7FEFF 		bl	RTC_IsBitSet
 300 0016 0300     		movs	r3, r0
 725:Generated_Source\PSoC4/RTC.h **** }
 301              		.loc 1 725 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 19


 302 0018 1800     		movs	r0, r3
 303 001a BD46     		mov	sp, r7
 304 001c 02B0     		add	sp, sp, #8
 305              		@ sp needed
 306 001e 80BD     		pop	{r7, pc}
 307              		.cfi_endproc
 308              	.LFE6:
 309              		.size	RTC_GetAmPm, .-RTC_GetAmPm
 310              		.section	.text.RTC_GetDay,"ax",%progbits
 311              		.align	2
 312              		.code	16
 313              		.thumb_func
 314              		.type	RTC_GetDay, %function
 315              	RTC_GetDay:
 316              	.LFB7:
 726:Generated_Source\PSoC4/RTC.h **** 
 727:Generated_Source\PSoC4/RTC.h **** 
 728:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 729:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetDay
 730:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 731:Generated_Source\PSoC4/RTC.h **** *
 732:Generated_Source\PSoC4/RTC.h **** * Returns the day value from the date value that is passed as parameter.
 733:Generated_Source\PSoC4/RTC.h **** *
 734:Generated_Source\PSoC4/RTC.h **** * \param date
 735:Generated_Source\PSoC4/RTC.h **** * The date value.
 736:Generated_Source\PSoC4/RTC.h **** *
 737:Generated_Source\PSoC4/RTC.h **** * \return
 738:Generated_Source\PSoC4/RTC.h **** * The day value.
 739:Generated_Source\PSoC4/RTC.h **** *
 740:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 741:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetDay(uint32 date)
 742:Generated_Source\PSoC4/RTC.h **** {
 317              		.loc 1 742 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 16
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321 0000 80B5     		push	{r7, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 84B0     		sub	sp, sp, #16
 326              		.cfi_def_cfa_offset 24
 327 0004 00AF     		add	r7, sp, #0
 328              		.cfi_def_cfa_register 7
 329 0006 7860     		str	r0, [r7, #4]
 743:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 744:Generated_Source\PSoC4/RTC.h **** 
 745:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_DAY_MASK) >> RTC_10_DAY_OFFSET) * 10u;
 330              		.loc 1 745 0
 331 0008 7B68     		ldr	r3, [r7, #4]
 332 000a 1B0F     		lsrs	r3, r3, #28
 333 000c 0322     		movs	r2, #3
 334 000e 1A40     		ands	r2, r3
 335 0010 1300     		movs	r3, r2
 336 0012 9B00     		lsls	r3, r3, #2
 337 0014 9B18     		adds	r3, r3, r2
 338 0016 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 20


 339 0018 FB60     		str	r3, [r7, #12]
 746:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_DAY_MASK) >> RTC_DAY_OFFSET;
 340              		.loc 1 746 0
 341 001a 7B68     		ldr	r3, [r7, #4]
 342 001c 1B0E     		lsrs	r3, r3, #24
 343 001e 0F22     		movs	r2, #15
 344 0020 1340     		ands	r3, r2
 345 0022 FA68     		ldr	r2, [r7, #12]
 346 0024 D318     		adds	r3, r2, r3
 347 0026 FB60     		str	r3, [r7, #12]
 747:Generated_Source\PSoC4/RTC.h **** 
 748:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 348              		.loc 1 748 0
 349 0028 FB68     		ldr	r3, [r7, #12]
 749:Generated_Source\PSoC4/RTC.h **** }
 350              		.loc 1 749 0
 351 002a 1800     		movs	r0, r3
 352 002c BD46     		mov	sp, r7
 353 002e 04B0     		add	sp, sp, #16
 354              		@ sp needed
 355 0030 80BD     		pop	{r7, pc}
 356              		.cfi_endproc
 357              	.LFE7:
 358              		.size	RTC_GetDay, .-RTC_GetDay
 359 0032 C046     		.section	.text.RTC_GetMonth,"ax",%progbits
 360              		.align	2
 361              		.code	16
 362              		.thumb_func
 363              		.type	RTC_GetMonth, %function
 364              	RTC_GetMonth:
 365              	.LFB8:
 750:Generated_Source\PSoC4/RTC.h **** 
 751:Generated_Source\PSoC4/RTC.h **** 
 752:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 753:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMonth
 754:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 755:Generated_Source\PSoC4/RTC.h **** *
 756:Generated_Source\PSoC4/RTC.h **** * Returns the month value from the date value that is passed as parameter.
 757:Generated_Source\PSoC4/RTC.h **** *
 758:Generated_Source\PSoC4/RTC.h **** * \param date
 759:Generated_Source\PSoC4/RTC.h **** * The date value.
 760:Generated_Source\PSoC4/RTC.h **** *
 761:Generated_Source\PSoC4/RTC.h **** * \return
 762:Generated_Source\PSoC4/RTC.h **** * The month value.
 763:Generated_Source\PSoC4/RTC.h **** *
 764:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 765:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMonth(uint32 date)
 766:Generated_Source\PSoC4/RTC.h **** {
 366              		.loc 1 766 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 16
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370 0000 80B5     		push	{r7, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 374 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 21


 375              		.cfi_def_cfa_offset 24
 376 0004 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 378 0006 7860     		str	r0, [r7, #4]
 767:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 768:Generated_Source\PSoC4/RTC.h **** 
 769:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_10_MONTH_MASK) >> RTC_10_MONTH_OFFSET) * 10u;
 379              		.loc 1 769 0
 380 0008 7B68     		ldr	r3, [r7, #4]
 381 000a 1B0D     		lsrs	r3, r3, #20
 382 000c 0122     		movs	r2, #1
 383 000e 1A40     		ands	r2, r3
 384 0010 1300     		movs	r3, r2
 385 0012 9B00     		lsls	r3, r3, #2
 386 0014 9B18     		adds	r3, r3, r2
 387 0016 5B00     		lsls	r3, r3, #1
 388 0018 FB60     		str	r3, [r7, #12]
 770:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_MONTH_MASK) >> RTC_MONTH_OFFSET;
 389              		.loc 1 770 0
 390 001a 7B68     		ldr	r3, [r7, #4]
 391 001c 1B0C     		lsrs	r3, r3, #16
 392 001e 0F22     		movs	r2, #15
 393 0020 1340     		ands	r3, r2
 394 0022 FA68     		ldr	r2, [r7, #12]
 395 0024 D318     		adds	r3, r2, r3
 396 0026 FB60     		str	r3, [r7, #12]
 771:Generated_Source\PSoC4/RTC.h **** 
 772:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 397              		.loc 1 772 0
 398 0028 FB68     		ldr	r3, [r7, #12]
 773:Generated_Source\PSoC4/RTC.h **** }
 399              		.loc 1 773 0
 400 002a 1800     		movs	r0, r3
 401 002c BD46     		mov	sp, r7
 402 002e 04B0     		add	sp, sp, #16
 403              		@ sp needed
 404 0030 80BD     		pop	{r7, pc}
 405              		.cfi_endproc
 406              	.LFE8:
 407              		.size	RTC_GetMonth, .-RTC_GetMonth
 408 0032 C046     		.section	.text.RTC_GetYear,"ax",%progbits
 409              		.align	2
 410              		.code	16
 411              		.thumb_func
 412              		.type	RTC_GetYear, %function
 413              	RTC_GetYear:
 414              	.LFB9:
 774:Generated_Source\PSoC4/RTC.h **** 
 775:Generated_Source\PSoC4/RTC.h **** 
 776:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 777:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetYear
 778:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 779:Generated_Source\PSoC4/RTC.h **** *
 780:Generated_Source\PSoC4/RTC.h **** * Returns the year value from the date value that is passed as parameter.
 781:Generated_Source\PSoC4/RTC.h **** *
 782:Generated_Source\PSoC4/RTC.h **** * \param date
 783:Generated_Source\PSoC4/RTC.h **** * The date value.
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 22


 784:Generated_Source\PSoC4/RTC.h **** *
 785:Generated_Source\PSoC4/RTC.h **** * \return
 786:Generated_Source\PSoC4/RTC.h **** * The year value.
 787:Generated_Source\PSoC4/RTC.h **** *
 788:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 789:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetYear(uint32 date)
 790:Generated_Source\PSoC4/RTC.h **** {
 415              		.loc 1 790 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 16
 418              		@ frame_needed = 1, uses_anonymous_args = 0
 419 0000 80B5     		push	{r7, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 7, -8
 422              		.cfi_offset 14, -4
 423 0002 84B0     		sub	sp, sp, #16
 424              		.cfi_def_cfa_offset 24
 425 0004 00AF     		add	r7, sp, #0
 426              		.cfi_def_cfa_register 7
 427 0006 7860     		str	r0, [r7, #4]
 791:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 792:Generated_Source\PSoC4/RTC.h **** 
 793:Generated_Source\PSoC4/RTC.h ****     retVal  = ((date & RTC_1000_YEAR_MASK) >> RTC_1000_YEAR_OFFSET) * 1000u;
 428              		.loc 1 793 0
 429 0008 7B68     		ldr	r3, [r7, #4]
 430 000a 1B0B     		lsrs	r3, r3, #12
 431 000c 0322     		movs	r2, #3
 432 000e 1340     		ands	r3, r2
 433 0010 FA22     		movs	r2, #250
 434 0012 9200     		lsls	r2, r2, #2
 435 0014 5343     		muls	r3, r2
 436 0016 FB60     		str	r3, [r7, #12]
 794:Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_100_YEAR_MASK) >> RTC_100_YEAR_OFFSET) * 100u;
 437              		.loc 1 794 0
 438 0018 7B68     		ldr	r3, [r7, #4]
 439 001a 1B0A     		lsrs	r3, r3, #8
 440 001c 0F22     		movs	r2, #15
 441 001e 1340     		ands	r3, r2
 442 0020 6422     		movs	r2, #100
 443 0022 5343     		muls	r3, r2
 444 0024 FA68     		ldr	r2, [r7, #12]
 445 0026 D318     		adds	r3, r2, r3
 446 0028 FB60     		str	r3, [r7, #12]
 795:Generated_Source\PSoC4/RTC.h ****     retVal += ((date & RTC_10_YEAR_MASK) >> RTC_10_YEAR_OFFSET) * 10u;
 447              		.loc 1 795 0
 448 002a 7B68     		ldr	r3, [r7, #4]
 449 002c 1B09     		lsrs	r3, r3, #4
 450 002e 0F22     		movs	r2, #15
 451 0030 1A40     		ands	r2, r3
 452 0032 1300     		movs	r3, r2
 453 0034 9B00     		lsls	r3, r3, #2
 454 0036 9B18     		adds	r3, r3, r2
 455 0038 5B00     		lsls	r3, r3, #1
 456 003a 1A00     		movs	r2, r3
 457 003c FB68     		ldr	r3, [r7, #12]
 458 003e 9B18     		adds	r3, r3, r2
 459 0040 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 23


 796:Generated_Source\PSoC4/RTC.h ****     retVal += (date & RTC_YEAR_MASK) >> RTC_YEAR_OFFSET;
 460              		.loc 1 796 0
 461 0042 7B68     		ldr	r3, [r7, #4]
 462 0044 0F22     		movs	r2, #15
 463 0046 1340     		ands	r3, r2
 464 0048 FA68     		ldr	r2, [r7, #12]
 465 004a D318     		adds	r3, r2, r3
 466 004c FB60     		str	r3, [r7, #12]
 797:Generated_Source\PSoC4/RTC.h **** 
 798:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 467              		.loc 1 798 0
 468 004e FB68     		ldr	r3, [r7, #12]
 799:Generated_Source\PSoC4/RTC.h **** }
 469              		.loc 1 799 0
 470 0050 1800     		movs	r0, r3
 471 0052 BD46     		mov	sp, r7
 472 0054 04B0     		add	sp, sp, #16
 473              		@ sp needed
 474 0056 80BD     		pop	{r7, pc}
 475              		.cfi_endproc
 476              	.LFE9:
 477              		.size	RTC_GetYear, .-RTC_GetYear
 478              		.section	.text.RTC_GetTimeFormat,"ax",%progbits
 479              		.align	2
 480              		.code	16
 481              		.thumb_func
 482              		.type	RTC_GetTimeFormat, %function
 483              	RTC_GetTimeFormat:
 484              	.LFB23:
 800:Generated_Source\PSoC4/RTC.h **** 
 801:Generated_Source\PSoC4/RTC.h **** 
 802:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 803:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetSecond
 804:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 805:Generated_Source\PSoC4/RTC.h **** * \internal
 806:Generated_Source\PSoC4/RTC.h **** * Updates the time with the new second value.
 807:Generated_Source\PSoC4/RTC.h **** *
 808:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 809:Generated_Source\PSoC4/RTC.h **** * The current date.
 810:Generated_Source\PSoC4/RTC.h **** *
 811:Generated_Source\PSoC4/RTC.h **** * \param inputSecond
 812:Generated_Source\PSoC4/RTC.h **** * The seconds value to be set to the time variable.
 813:Generated_Source\PSoC4/RTC.h **** *
 814:Generated_Source\PSoC4/RTC.h **** * \return
 815:Generated_Source\PSoC4/RTC.h **** * The updated time variable.
 816:Generated_Source\PSoC4/RTC.h **** * \endinternal
 817:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 818:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetSecond(uint32 inputTime, uint32 inputSecond)
 819:Generated_Source\PSoC4/RTC.h **** {
 820:Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_SECONDS_FULL_MASK);
 821:Generated_Source\PSoC4/RTC.h **** 
 822:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputSecond / 10u) << RTC_10_SECONDS_OFFSET;
 823:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputSecond % 10u) << RTC_SECONDS_OFFSET;
 824:Generated_Source\PSoC4/RTC.h **** 
 825:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 826:Generated_Source\PSoC4/RTC.h **** }
 827:Generated_Source\PSoC4/RTC.h **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 24


 828:Generated_Source\PSoC4/RTC.h **** 
 829:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 830:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetMinutes
 831:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 832:Generated_Source\PSoC4/RTC.h **** * \internal
 833:Generated_Source\PSoC4/RTC.h **** *  Updates the time with the new minute value.
 834:Generated_Source\PSoC4/RTC.h **** *
 835:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 836:Generated_Source\PSoC4/RTC.h **** * The current date.
 837:Generated_Source\PSoC4/RTC.h **** *
 838:Generated_Source\PSoC4/RTC.h **** * \param inputMinute
 839:Generated_Source\PSoC4/RTC.h **** * The minutes value to be set to the time variable.
 840:Generated_Source\PSoC4/RTC.h **** *
 841:Generated_Source\PSoC4/RTC.h **** * \return
 842:Generated_Source\PSoC4/RTC.h **** * The updated time variable.
 843:Generated_Source\PSoC4/RTC.h **** * \endinternal
 844:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 845:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetMinutes(uint32 inputTime, uint32 inputMinute)
 846:Generated_Source\PSoC4/RTC.h **** {
 847:Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_MINUTES_FULL_MASK);
 848:Generated_Source\PSoC4/RTC.h **** 
 849:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputMinute / 10u) << RTC_10_MINUTES_OFFSET;
 850:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputMinute % 10u) << RTC_MINUTES_OFFSET;
 851:Generated_Source\PSoC4/RTC.h **** 
 852:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 853:Generated_Source\PSoC4/RTC.h **** }
 854:Generated_Source\PSoC4/RTC.h **** 
 855:Generated_Source\PSoC4/RTC.h **** 
 856:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 857:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetHours
 858:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 859:Generated_Source\PSoC4/RTC.h **** * \internal
 860:Generated_Source\PSoC4/RTC.h **** *  Updates the time with the new hour value.
 861:Generated_Source\PSoC4/RTC.h **** *
 862:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 863:Generated_Source\PSoC4/RTC.h **** * The current date.
 864:Generated_Source\PSoC4/RTC.h **** *
 865:Generated_Source\PSoC4/RTC.h **** * \param inputHours
 866:Generated_Source\PSoC4/RTC.h **** * The hours value to be set to the time variable.
 867:Generated_Source\PSoC4/RTC.h **** *
 868:Generated_Source\PSoC4/RTC.h **** * \return
 869:Generated_Source\PSoC4/RTC.h **** * The updated time variable.
 870:Generated_Source\PSoC4/RTC.h **** * \endinternal
 871:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 872:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetHours(uint32 inputTime, uint32 inputHours)
 873:Generated_Source\PSoC4/RTC.h **** {
 874:Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_HOURS_FULL_MASK);
 875:Generated_Source\PSoC4/RTC.h **** 
 876:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputHours / 10u) << RTC_10_HOURS_OFFSET;
 877:Generated_Source\PSoC4/RTC.h ****     inputTime |= (inputHours % 10u) << RTC_HOURS_OFFSET;
 878:Generated_Source\PSoC4/RTC.h **** 
 879:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 880:Generated_Source\PSoC4/RTC.h **** }
 881:Generated_Source\PSoC4/RTC.h **** 
 882:Generated_Source\PSoC4/RTC.h **** 
 883:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 884:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetAmPm
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 25


 885:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 886:Generated_Source\PSoC4/RTC.h **** * \internal
 887:Generated_Source\PSoC4/RTC.h **** * Updates the time variable with the AmPm status.
 888:Generated_Source\PSoC4/RTC.h **** *
 889:Generated_Source\PSoC4/RTC.h **** * \param inputTime
 890:Generated_Source\PSoC4/RTC.h **** * The current date.
 891:Generated_Source\PSoC4/RTC.h **** *
 892:Generated_Source\PSoC4/RTC.h **** * \param periodOfDay
 893:Generated_Source\PSoC4/RTC.h **** * The AmPm status to be set to the time variable.
 894:Generated_Source\PSoC4/RTC.h **** *
 895:Generated_Source\PSoC4/RTC.h **** * \return
 896:Generated_Source\PSoC4/RTC.h **** * The updated time variable.
 897:Generated_Source\PSoC4/RTC.h **** * \endinternal
 898:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 899:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetAmPm(uint32 inputTime, uint32 periodOfDay)
 900:Generated_Source\PSoC4/RTC.h **** {
 901:Generated_Source\PSoC4/RTC.h ****     if(0u != periodOfDay)
 902:Generated_Source\PSoC4/RTC.h ****     {
 903:Generated_Source\PSoC4/RTC.h ****         inputTime &= ~(RTC_PERIOD_OF_DAY_MASK);
 904:Generated_Source\PSoC4/RTC.h ****     }
 905:Generated_Source\PSoC4/RTC.h ****     else
 906:Generated_Source\PSoC4/RTC.h ****     {
 907:Generated_Source\PSoC4/RTC.h ****         inputTime |= RTC_PERIOD_OF_DAY_MASK;
 908:Generated_Source\PSoC4/RTC.h ****     }
 909:Generated_Source\PSoC4/RTC.h **** 
 910:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
 911:Generated_Source\PSoC4/RTC.h **** }
 912:Generated_Source\PSoC4/RTC.h **** 
 913:Generated_Source\PSoC4/RTC.h **** 
 914:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 915:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetDay
 916:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 917:Generated_Source\PSoC4/RTC.h **** * \internal
 918:Generated_Source\PSoC4/RTC.h **** * Updates the date variable with the new day value.
 919:Generated_Source\PSoC4/RTC.h **** *
 920:Generated_Source\PSoC4/RTC.h **** * \param inputDate
 921:Generated_Source\PSoC4/RTC.h **** * The current date.
 922:Generated_Source\PSoC4/RTC.h **** *
 923:Generated_Source\PSoC4/RTC.h **** * \param inputDay
 924:Generated_Source\PSoC4/RTC.h **** * day The month to be set to the date variable.
 925:Generated_Source\PSoC4/RTC.h **** *
 926:Generated_Source\PSoC4/RTC.h **** * \return
 927:Generated_Source\PSoC4/RTC.h **** * The updated date variable.
 928:Generated_Source\PSoC4/RTC.h **** * \endinternal
 929:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 930:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetDay(uint32 inputDate, uint32 inputDay)
 931:Generated_Source\PSoC4/RTC.h **** {
 932:Generated_Source\PSoC4/RTC.h ****     inputDate &= ~(RTC_DAY_FULL_MASK);
 933:Generated_Source\PSoC4/RTC.h **** 
 934:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputDay / 10u) << RTC_10_DAY_OFFSET;
 935:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputDay % 10u) << RTC_DAY_OFFSET;
 936:Generated_Source\PSoC4/RTC.h **** 
 937:Generated_Source\PSoC4/RTC.h ****     return(inputDate);
 938:Generated_Source\PSoC4/RTC.h **** }
 939:Generated_Source\PSoC4/RTC.h **** 
 940:Generated_Source\PSoC4/RTC.h **** 
 941:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 26


 942:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetMonth
 943:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 944:Generated_Source\PSoC4/RTC.h **** * \internal
 945:Generated_Source\PSoC4/RTC.h **** * Updates the date variable with the new month value.
 946:Generated_Source\PSoC4/RTC.h **** *
 947:Generated_Source\PSoC4/RTC.h **** * \param inputDate
 948:Generated_Source\PSoC4/RTC.h **** * The current date.
 949:Generated_Source\PSoC4/RTC.h **** *
 950:Generated_Source\PSoC4/RTC.h **** * \param inputMonth
 951:Generated_Source\PSoC4/RTC.h **** * The month that to be set to the date variable.
 952:Generated_Source\PSoC4/RTC.h **** *
 953:Generated_Source\PSoC4/RTC.h **** * \return
 954:Generated_Source\PSoC4/RTC.h **** * The updated date variable.
 955:Generated_Source\PSoC4/RTC.h **** * \endinternal
 956:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 957:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetMonth(uint32 inputDate, uint32 inputMonth)
 958:Generated_Source\PSoC4/RTC.h **** {
 959:Generated_Source\PSoC4/RTC.h ****     inputDate &= ~(RTC_MONTH_FULL_MASK);
 960:Generated_Source\PSoC4/RTC.h **** 
 961:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputMonth / 10u) << RTC_10_MONTH_OFFSET;
 962:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputMonth % 10u) << RTC_MONTH_OFFSET;
 963:Generated_Source\PSoC4/RTC.h **** 
 964:Generated_Source\PSoC4/RTC.h ****     return(inputDate);
 965:Generated_Source\PSoC4/RTC.h **** }
 966:Generated_Source\PSoC4/RTC.h **** 
 967:Generated_Source\PSoC4/RTC.h **** 
 968:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 969:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetYear
 970:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 971:Generated_Source\PSoC4/RTC.h **** *\internal
 972:Generated_Source\PSoC4/RTC.h **** * Updates the date variable with the new year value.
 973:Generated_Source\PSoC4/RTC.h **** *
 974:Generated_Source\PSoC4/RTC.h **** * \param inputDate
 975:Generated_Source\PSoC4/RTC.h **** * The current date.
 976:Generated_Source\PSoC4/RTC.h **** *
 977:Generated_Source\PSoC4/RTC.h **** * \param inputYear
 978:Generated_Source\PSoC4/RTC.h **** * The year to be set to the date variable.
 979:Generated_Source\PSoC4/RTC.h **** *
 980:Generated_Source\PSoC4/RTC.h **** * \return
 981:Generated_Source\PSoC4/RTC.h **** * The updated date variable.
 982:Generated_Source\PSoC4/RTC.h **** * \endinternal
 983:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 984:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetYear(uint32 inputDate, uint32 inputYear)
 985:Generated_Source\PSoC4/RTC.h **** {
 986:Generated_Source\PSoC4/RTC.h ****     inputDate  &= ~(RTC_YEAR_FULL_MASK);
 987:Generated_Source\PSoC4/RTC.h **** 
 988:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear / 1000u) << RTC_1000_YEAR_OFFSET;
 989:Generated_Source\PSoC4/RTC.h ****     inputYear %= 1000u;
 990:Generated_Source\PSoC4/RTC.h **** 
 991:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear / 100u) << RTC_100_YEAR_OFFSET;
 992:Generated_Source\PSoC4/RTC.h ****     inputYear %= 100u;
 993:Generated_Source\PSoC4/RTC.h **** 
 994:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear / 10u) << RTC_10_YEAR_OFFSET;
 995:Generated_Source\PSoC4/RTC.h ****     inputDate |= (inputYear % 10u) << RTC_YEAR_OFFSET;
 996:Generated_Source\PSoC4/RTC.h **** 
 997:Generated_Source\PSoC4/RTC.h ****     return(inputDate);
 998:Generated_Source\PSoC4/RTC.h **** }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 27


 999:Generated_Source\PSoC4/RTC.h **** 
1000:Generated_Source\PSoC4/RTC.h **** 
1001:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1002:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextMinSec
1003:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1004:Generated_Source\PSoC4/RTC.h **** *\internal
1005:Generated_Source\PSoC4/RTC.h **** * This is an internal function that calculates the value of the next Second/Minute
1006:Generated_Source\PSoC4/RTC.h **** * that follows after the current Minute/Second.
1007:Generated_Source\PSoC4/RTC.h **** *
1008:Generated_Source\PSoC4/RTC.h **** * \param curVal
1009:Generated_Source\PSoC4/RTC.h **** * The current Second/Minute value.
1010:Generated_Source\PSoC4/RTC.h **** *
1011:Generated_Source\PSoC4/RTC.h **** * \return
1012:Generated_Source\PSoC4/RTC.h **** * Returns the Second/Minute which follows after the current Second/Minute.
1013:Generated_Source\PSoC4/RTC.h **** * \endinternal
1014:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1015:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextMinSec(uint32 curVal)
1016:Generated_Source\PSoC4/RTC.h **** {
1017:Generated_Source\PSoC4/RTC.h ****     return((curVal < 59u) ? (curVal + 1u) : 0u);
1018:Generated_Source\PSoC4/RTC.h **** }
1019:Generated_Source\PSoC4/RTC.h **** 
1020:Generated_Source\PSoC4/RTC.h **** 
1021:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1022:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextHour
1023:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1024:Generated_Source\PSoC4/RTC.h **** * \internal
1025:Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next Hour
1026:Generated_Source\PSoC4/RTC.h **** *  that follows after the current Hour.
1027:Generated_Source\PSoC4/RTC.h **** *
1028:Generated_Source\PSoC4/RTC.h **** * \param curVal
1029:Generated_Source\PSoC4/RTC.h **** * The current Hour value.
1030:Generated_Source\PSoC4/RTC.h **** *
1031:Generated_Source\PSoC4/RTC.h **** * \return
1032:Generated_Source\PSoC4/RTC.h **** * Returns the Hour which follows after the current Hour.
1033:Generated_Source\PSoC4/RTC.h **** * \endinternal
1034:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1035:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextHour(uint32 curVal)
1036:Generated_Source\PSoC4/RTC.h **** {
1037:Generated_Source\PSoC4/RTC.h ****     return((curVal < 23u) ? (curVal + 1u) : 0u);
1038:Generated_Source\PSoC4/RTC.h **** }
1039:Generated_Source\PSoC4/RTC.h **** 
1040:Generated_Source\PSoC4/RTC.h **** 
1041:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1042:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextDay
1043:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1044:Generated_Source\PSoC4/RTC.h **** * \internal
1045:Generated_Source\PSoC4/RTC.h **** *  This is an internal function that calculates the value of the next Day
1046:Generated_Source\PSoC4/RTC.h **** *  that follows after the current Day.
1047:Generated_Source\PSoC4/RTC.h **** *
1048:Generated_Source\PSoC4/RTC.h **** * \param curYear
1049:Generated_Source\PSoC4/RTC.h **** * The current year.
1050:Generated_Source\PSoC4/RTC.h **** *
1051:Generated_Source\PSoC4/RTC.h **** * \param curMonth
1052:Generated_Source\PSoC4/RTC.h **** * The current month.
1053:Generated_Source\PSoC4/RTC.h **** *
1054:Generated_Source\PSoC4/RTC.h **** * \param curDay
1055:Generated_Source\PSoC4/RTC.h **** * The current day.
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 28


1056:Generated_Source\PSoC4/RTC.h **** *
1057:Generated_Source\PSoC4/RTC.h **** * \param alarmCfgMask
1058:Generated_Source\PSoC4/RTC.h **** * Alarm Config Mask.
1059:Generated_Source\PSoC4/RTC.h **** *
1060:Generated_Source\PSoC4/RTC.h **** * \return
1061:Generated_Source\PSoC4/RTC.h **** * Returns the day which follows after the current Day.
1062:Generated_Source\PSoC4/RTC.h **** * \endinternal
1063:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1064:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextDay(uint32 curYear, uint32 curMonth,
1065:Generated_Source\PSoC4/RTC.h ****                                                     uint32 curDay, uint32 alarmCfgMask)
1066:Generated_Source\PSoC4/RTC.h **** {
1067:Generated_Source\PSoC4/RTC.h ****     uint32 daysInMonth;
1068:Generated_Source\PSoC4/RTC.h ****     uint32 tmpVal;
1069:Generated_Source\PSoC4/RTC.h **** 
1070:Generated_Source\PSoC4/RTC.h ****     daysInMonth = RTC_DaysInMonth(curMonth, curYear);
1071:Generated_Source\PSoC4/RTC.h **** 
1072:Generated_Source\PSoC4/RTC.h ****     if(0u != (alarmCfgMask & RTC_ALARM_DAYOFWEEK_MASK))
1073:Generated_Source\PSoC4/RTC.h ****     {
1074:Generated_Source\PSoC4/RTC.h ****         tmpVal = curDay + RTC_DAYS_PER_WEEK;
1075:Generated_Source\PSoC4/RTC.h ****         tmpVal = (tmpVal > daysInMonth) ? (tmpVal - daysInMonth) : tmpVal;
1076:Generated_Source\PSoC4/RTC.h ****     }
1077:Generated_Source\PSoC4/RTC.h ****     else
1078:Generated_Source\PSoC4/RTC.h ****     {
1079:Generated_Source\PSoC4/RTC.h ****         tmpVal = (curDay < daysInMonth) ? (curDay + 1u) : 1u;
1080:Generated_Source\PSoC4/RTC.h ****     }
1081:Generated_Source\PSoC4/RTC.h **** 
1082:Generated_Source\PSoC4/RTC.h ****     return(tmpVal);
1083:Generated_Source\PSoC4/RTC.h **** }
1084:Generated_Source\PSoC4/RTC.h **** 
1085:Generated_Source\PSoC4/RTC.h **** 
1086:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1087:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextMonth
1088:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1089:Generated_Source\PSoC4/RTC.h **** * \internal
1090:Generated_Source\PSoC4/RTC.h **** * This is an internal function that calculates the value of the next month
1091:Generated_Source\PSoC4/RTC.h **** * that follows after the current month.
1092:Generated_Source\PSoC4/RTC.h **** *
1093:Generated_Source\PSoC4/RTC.h **** * \param curMonth
1094:Generated_Source\PSoC4/RTC.h **** * The current month.
1095:Generated_Source\PSoC4/RTC.h **** *
1096:Generated_Source\PSoC4/RTC.h **** * \return
1097:Generated_Source\PSoC4/RTC.h **** * Returns the month which follows after the current month.
1098:Generated_Source\PSoC4/RTC.h **** * \endinternal
1099:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1100:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextMonth(uint32 curMonth)
1101:Generated_Source\PSoC4/RTC.h **** {
1102:Generated_Source\PSoC4/RTC.h ****     return((curMonth < 12u) ? (curMonth + 1u) : 1u);
1103:Generated_Source\PSoC4/RTC.h **** }
1104:Generated_Source\PSoC4/RTC.h **** 
1105:Generated_Source\PSoC4/RTC.h **** 
1106:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1107:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetNextYear
1108:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1109:Generated_Source\PSoC4/RTC.h **** * \internal
1110:Generated_Source\PSoC4/RTC.h **** * This is an internal function that calculates the value of the next year
1111:Generated_Source\PSoC4/RTC.h **** * that follows after the current year.
1112:Generated_Source\PSoC4/RTC.h **** *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 29


1113:Generated_Source\PSoC4/RTC.h **** * \param curYear
1114:Generated_Source\PSoC4/RTC.h **** * The current year.
1115:Generated_Source\PSoC4/RTC.h **** *
1116:Generated_Source\PSoC4/RTC.h **** * \return
1117:Generated_Source\PSoC4/RTC.h **** * Returns the year which follows after the current year.
1118:Generated_Source\PSoC4/RTC.h **** * \endinternal
1119:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1120:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetNextYear(uint32 curYear)
1121:Generated_Source\PSoC4/RTC.h **** {
1122:Generated_Source\PSoC4/RTC.h ****     return(curYear + 1u);
1123:Generated_Source\PSoC4/RTC.h **** }
1124:Generated_Source\PSoC4/RTC.h **** 
1125:Generated_Source\PSoC4/RTC.h **** 
1126:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1127:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_SetTimeFormat
1128:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1129:Generated_Source\PSoC4/RTC.h **** * \internal
1130:Generated_Source\PSoC4/RTC.h **** * Updates the "Time Format" value in the variable that contains time in the
1131:Generated_Source\PSoC4/RTC.h **** * "HH:MM:SS" format.
1132:Generated_Source\PSoC4/RTC.h **** *
1133:Generated_Source\PSoC4/RTC.h **** * \param inputTime
1134:Generated_Source\PSoC4/RTC.h **** * The current value of the time in the "HH:MM:SS" format.
1135:Generated_Source\PSoC4/RTC.h **** *
1136:Generated_Source\PSoC4/RTC.h **** * \param timeFormat
1137:Generated_Source\PSoC4/RTC.h **** * Required time format
1138:Generated_Source\PSoC4/RTC.h **** *
1139:Generated_Source\PSoC4/RTC.h **** * \return
1140:Generated_Source\PSoC4/RTC.h **** * Returns the updated value of the time in the "HH:MM:SS" format.
1141:Generated_Source\PSoC4/RTC.h **** * \endinternal
1142:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1143:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_SetTimeFormat(uint32 inputTime, uint32 timeFormat)
1144:Generated_Source\PSoC4/RTC.h **** {
1145:Generated_Source\PSoC4/RTC.h ****     inputTime &= ~(RTC_TIME_FORMAT_MASK);
1146:Generated_Source\PSoC4/RTC.h **** 
1147:Generated_Source\PSoC4/RTC.h ****     if((uint32)RTC_12_HOURS_FORMAT != timeFormat)
1148:Generated_Source\PSoC4/RTC.h ****     {
1149:Generated_Source\PSoC4/RTC.h ****         inputTime |= RTC_TIME_FORMAT_MASK;
1150:Generated_Source\PSoC4/RTC.h ****     }
1151:Generated_Source\PSoC4/RTC.h **** 
1152:Generated_Source\PSoC4/RTC.h ****     return(inputTime);
1153:Generated_Source\PSoC4/RTC.h **** }
1154:Generated_Source\PSoC4/RTC.h **** 
1155:Generated_Source\PSoC4/RTC.h **** 
1156:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1157:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetTimeFormat
1158:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1159:Generated_Source\PSoC4/RTC.h **** * \internal
1160:Generated_Source\PSoC4/RTC.h **** * Reads the time format from the variable that contains time in the
1161:Generated_Source\PSoC4/RTC.h **** * "HH:MM:SS" format.
1162:Generated_Source\PSoC4/RTC.h **** *
1163:Generated_Source\PSoC4/RTC.h **** * \param inputTime
1164:Generated_Source\PSoC4/RTC.h **** * The current value of the time in the "HH:MM:SS" format.
1165:Generated_Source\PSoC4/RTC.h **** *
1166:Generated_Source\PSoC4/RTC.h **** * \return
1167:Generated_Source\PSoC4/RTC.h **** * Returns the time format that is stored in the variable that contains time
1168:Generated_Source\PSoC4/RTC.h **** * in the "HH:MM:SS" format.
1169:Generated_Source\PSoC4/RTC.h **** * \endinternal
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 30


1170:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1171:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetTimeFormat(uint32 inputTime)
1172:Generated_Source\PSoC4/RTC.h **** {
 485              		.loc 1 1172 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 82B0     		sub	sp, sp, #8
 494              		.cfi_def_cfa_offset 16
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]
1173:Generated_Source\PSoC4/RTC.h ****     return ((0uL != (inputTime & (1uL << RTC_TIME_FORMAT_OFFSET))) ?
 498              		.loc 1 1173 0
 499 0008 7A68     		ldr	r2, [r7, #4]
 500 000a 8023     		movs	r3, #128
 501 000c 1B04     		lsls	r3, r3, #16
 502 000e 1340     		ands	r3, r2
1174:Generated_Source\PSoC4/RTC.h ****                                        (uint32)RTC_12_HOURS_FORMAT :
 503              		.loc 1 1174 0
 504 0010 01D0     		beq	.L26
 505              		.loc 1 1174 0 is_stmt 0 discriminator 1
 506 0012 0123     		movs	r3, #1
1173:Generated_Source\PSoC4/RTC.h ****     return ((0uL != (inputTime & (1uL << RTC_TIME_FORMAT_OFFSET))) ?
 507              		.loc 1 1173 0 is_stmt 1 discriminator 1
 508 0014 00E0     		b	.L28
 509              	.L26:
 510              		.loc 1 1174 0 discriminator 2
 511 0016 0023     		movs	r3, #0
 512              	.L28:
1175:Generated_Source\PSoC4/RTC.h ****                                        (uint32)RTC_24_HOURS_FORMAT);
1176:Generated_Source\PSoC4/RTC.h **** }
 513              		.loc 1 1176 0 discriminator 1
 514 0018 1800     		movs	r0, r3
 515 001a BD46     		mov	sp, r7
 516 001c 02B0     		add	sp, sp, #8
 517              		@ sp needed
 518 001e 80BD     		pop	{r7, pc}
 519              		.cfi_endproc
 520              	.LFE23:
 521              		.size	RTC_GetTimeFormat, .-RTC_GetTimeFormat
 522              		.global	__aeabi_uidiv
 523              		.section	.text.RTC_ConstructTime,"ax",%progbits
 524              		.align	2
 525              		.code	16
 526              		.thumb_func
 527              		.type	RTC_ConstructTime, %function
 528              	RTC_ConstructTime:
 529              	.LFB24:
1177:Generated_Source\PSoC4/RTC.h **** 
1178:Generated_Source\PSoC4/RTC.h **** 
1179:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1180:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_ConstructTime
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 31


1181:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1182:Generated_Source\PSoC4/RTC.h **** *
1183:Generated_Source\PSoC4/RTC.h **** * Returns the time in the format used in APIs from individual elements
1184:Generated_Source\PSoC4/RTC.h **** * passed (hour, min, sec etc)
1185:Generated_Source\PSoC4/RTC.h **** *
1186:Generated_Source\PSoC4/RTC.h **** * \param timeFormat
1187:Generated_Source\PSoC4/RTC.h **** * The 12/24 hours time format, see \ref group_rtc_hour_format
1188:Generated_Source\PSoC4/RTC.h **** *
1189:Generated_Source\PSoC4/RTC.h **** * \param stateAmPm 
1190:Generated_Source\PSoC4/RTC.h **** * The AM/PM status, see \ref group_rtc_am_pm.
1191:Generated_Source\PSoC4/RTC.h **** *
1192:Generated_Source\PSoC4/RTC.h **** * \param hour
1193:Generated_Source\PSoC4/RTC.h **** * The hour.
1194:Generated_Source\PSoC4/RTC.h **** *
1195:Generated_Source\PSoC4/RTC.h **** * \param min
1196:Generated_Source\PSoC4/RTC.h **** * The minute.
1197:Generated_Source\PSoC4/RTC.h **** *
1198:Generated_Source\PSoC4/RTC.h **** * \param sec
1199:Generated_Source\PSoC4/RTC.h **** * The second.
1200:Generated_Source\PSoC4/RTC.h **** *
1201:Generated_Source\PSoC4/RTC.h **** * \return
1202:Generated_Source\PSoC4/RTC.h **** * Time in the format used in API.
1203:Generated_Source\PSoC4/RTC.h **** *
1204:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1205:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_ConstructTime(uint32 timeFormat, uint32 stateAmPm, 
1206:Generated_Source\PSoC4/RTC.h ****                                                        uint32 hour, uint32 min, uint32 sec)
1207:Generated_Source\PSoC4/RTC.h **** {
 530              		.loc 1 1207 0
 531              		.cfi_startproc
 532              		@ args = 4, pretend = 0, frame = 24
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534 0000 80B5     		push	{r7, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 86B0     		sub	sp, sp, #24
 539              		.cfi_def_cfa_offset 32
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 542 0006 F860     		str	r0, [r7, #12]
 543 0008 B960     		str	r1, [r7, #8]
 544 000a 7A60     		str	r2, [r7, #4]
 545 000c 3B60     		str	r3, [r7]
1208:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
1209:Generated_Source\PSoC4/RTC.h **** 
1210:Generated_Source\PSoC4/RTC.h ****     retVal  = timeFormat << RTC_TIME_FORMAT_OFFSET;
 546              		.loc 1 1210 0
 547 000e FB68     		ldr	r3, [r7, #12]
 548 0010 DB05     		lsls	r3, r3, #23
 549 0012 7B61     		str	r3, [r7, #20]
1211:Generated_Source\PSoC4/RTC.h ****     retVal |= stateAmPm << RTC_PERIOD_OF_DAY_OFFSET;
 550              		.loc 1 1211 0
 551 0014 BB68     		ldr	r3, [r7, #8]
 552 0016 9B05     		lsls	r3, r3, #22
 553 0018 7A69     		ldr	r2, [r7, #20]
 554 001a 1343     		orrs	r3, r2
 555 001c 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 32


1212:Generated_Source\PSoC4/RTC.h **** 
1213:Generated_Source\PSoC4/RTC.h ****     retVal |= (hour / 10u) << RTC_10_HOURS_OFFSET;
 556              		.loc 1 1213 0
 557 001e 7B68     		ldr	r3, [r7, #4]
 558 0020 0A21     		movs	r1, #10
 559 0022 1800     		movs	r0, r3
 560 0024 FFF7FEFF 		bl	__aeabi_uidiv
 561 0028 0300     		movs	r3, r0
 562 002a 1B05     		lsls	r3, r3, #20
 563 002c 7A69     		ldr	r2, [r7, #20]
 564 002e 1343     		orrs	r3, r2
 565 0030 7B61     		str	r3, [r7, #20]
1214:Generated_Source\PSoC4/RTC.h ****     retVal |= (hour % 10u) << RTC_HOURS_OFFSET;
 566              		.loc 1 1214 0
 567 0032 7B68     		ldr	r3, [r7, #4]
 568 0034 0A21     		movs	r1, #10
 569 0036 1800     		movs	r0, r3
 570 0038 FFF7FEFF 		bl	__aeabi_uidivmod
 571 003c 0B00     		movs	r3, r1
 572 003e 1B04     		lsls	r3, r3, #16
 573 0040 7A69     		ldr	r2, [r7, #20]
 574 0042 1343     		orrs	r3, r2
 575 0044 7B61     		str	r3, [r7, #20]
1215:Generated_Source\PSoC4/RTC.h **** 
1216:Generated_Source\PSoC4/RTC.h ****     retVal |= (min / 10u) << RTC_10_MINUTES_OFFSET;
 576              		.loc 1 1216 0
 577 0046 3B68     		ldr	r3, [r7]
 578 0048 0A21     		movs	r1, #10
 579 004a 1800     		movs	r0, r3
 580 004c FFF7FEFF 		bl	__aeabi_uidiv
 581 0050 0300     		movs	r3, r0
 582 0052 1B03     		lsls	r3, r3, #12
 583 0054 7A69     		ldr	r2, [r7, #20]
 584 0056 1343     		orrs	r3, r2
 585 0058 7B61     		str	r3, [r7, #20]
1217:Generated_Source\PSoC4/RTC.h ****     retVal |= (min % 10u) << RTC_MINUTES_OFFSET;
 586              		.loc 1 1217 0
 587 005a 3B68     		ldr	r3, [r7]
 588 005c 0A21     		movs	r1, #10
 589 005e 1800     		movs	r0, r3
 590 0060 FFF7FEFF 		bl	__aeabi_uidivmod
 591 0064 0B00     		movs	r3, r1
 592 0066 1B02     		lsls	r3, r3, #8
 593 0068 7A69     		ldr	r2, [r7, #20]
 594 006a 1343     		orrs	r3, r2
 595 006c 7B61     		str	r3, [r7, #20]
1218:Generated_Source\PSoC4/RTC.h **** 
1219:Generated_Source\PSoC4/RTC.h ****     retVal |= (sec / 10u) << RTC_10_SECONDS_OFFSET;
 596              		.loc 1 1219 0
 597 006e 3B6A     		ldr	r3, [r7, #32]
 598 0070 0A21     		movs	r1, #10
 599 0072 1800     		movs	r0, r3
 600 0074 FFF7FEFF 		bl	__aeabi_uidiv
 601 0078 0300     		movs	r3, r0
 602 007a 1B01     		lsls	r3, r3, #4
 603 007c 7A69     		ldr	r2, [r7, #20]
 604 007e 1343     		orrs	r3, r2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 33


 605 0080 7B61     		str	r3, [r7, #20]
1220:Generated_Source\PSoC4/RTC.h ****     retVal |= (sec % 10u) << RTC_SECONDS_OFFSET;
 606              		.loc 1 1220 0
 607 0082 3B6A     		ldr	r3, [r7, #32]
 608 0084 0A21     		movs	r1, #10
 609 0086 1800     		movs	r0, r3
 610 0088 FFF7FEFF 		bl	__aeabi_uidivmod
 611 008c 0B00     		movs	r3, r1
 612 008e 1A00     		movs	r2, r3
 613 0090 7B69     		ldr	r3, [r7, #20]
 614 0092 1343     		orrs	r3, r2
 615 0094 7B61     		str	r3, [r7, #20]
1221:Generated_Source\PSoC4/RTC.h **** 
1222:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 616              		.loc 1 1222 0
 617 0096 7B69     		ldr	r3, [r7, #20]
1223:Generated_Source\PSoC4/RTC.h **** }
 618              		.loc 1 1223 0
 619 0098 1800     		movs	r0, r3
 620 009a BD46     		mov	sp, r7
 621 009c 06B0     		add	sp, sp, #24
 622              		@ sp needed
 623 009e 80BD     		pop	{r7, pc}
 624              		.cfi_endproc
 625              	.LFE24:
 626              		.size	RTC_ConstructTime, .-RTC_ConstructTime
 627              		.section	.text.RTC_ConstructDate,"ax",%progbits
 628              		.align	2
 629              		.code	16
 630              		.thumb_func
 631              		.type	RTC_ConstructDate, %function
 632              	RTC_ConstructDate:
 633              	.LFB25:
1224:Generated_Source\PSoC4/RTC.h **** 
1225:Generated_Source\PSoC4/RTC.h **** 
1226:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1227:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_ConstructDate
1228:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1229:Generated_Source\PSoC4/RTC.h **** *
1230:Generated_Source\PSoC4/RTC.h **** *  Returns the date in the format used in APIs from individual elements
1231:Generated_Source\PSoC4/RTC.h **** *  passed (day. Month and year)
1232:Generated_Source\PSoC4/RTC.h **** *
1233:Generated_Source\PSoC4/RTC.h **** * \param month
1234:Generated_Source\PSoC4/RTC.h **** * The month.
1235:Generated_Source\PSoC4/RTC.h **** *
1236:Generated_Source\PSoC4/RTC.h **** * \param day
1237:Generated_Source\PSoC4/RTC.h **** * The day.
1238:Generated_Source\PSoC4/RTC.h **** *
1239:Generated_Source\PSoC4/RTC.h **** * \param year
1240:Generated_Source\PSoC4/RTC.h **** * The year.
1241:Generated_Source\PSoC4/RTC.h **** *
1242:Generated_Source\PSoC4/RTC.h **** * \return
1243:Generated_Source\PSoC4/RTC.h **** * The date in the format used in API.
1244:Generated_Source\PSoC4/RTC.h **** *
1245:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1246:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_ConstructDate(uint32 month, uint32 day, uint32 year)
1247:Generated_Source\PSoC4/RTC.h **** {
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 34


 634              		.loc 1 1247 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 24
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638 0000 80B5     		push	{r7, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 86B0     		sub	sp, sp, #24
 643              		.cfi_def_cfa_offset 32
 644 0004 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 646 0006 F860     		str	r0, [r7, #12]
 647 0008 B960     		str	r1, [r7, #8]
 648 000a 7A60     		str	r2, [r7, #4]
1248:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
1249:Generated_Source\PSoC4/RTC.h ****     uint32 tmpVal = year;
 649              		.loc 1 1249 0
 650 000c 7B68     		ldr	r3, [r7, #4]
 651 000e 7B61     		str	r3, [r7, #20]
1250:Generated_Source\PSoC4/RTC.h **** 
1251:Generated_Source\PSoC4/RTC.h ****     retVal  = (month / 10u) << RTC_10_MONTH_OFFSET;
 652              		.loc 1 1251 0
 653 0010 FB68     		ldr	r3, [r7, #12]
 654 0012 0A21     		movs	r1, #10
 655 0014 1800     		movs	r0, r3
 656 0016 FFF7FEFF 		bl	__aeabi_uidiv
 657 001a 0300     		movs	r3, r0
 658 001c 1B05     		lsls	r3, r3, #20
 659 001e 3B61     		str	r3, [r7, #16]
1252:Generated_Source\PSoC4/RTC.h ****     retVal |= (month % 10u) << RTC_MONTH_OFFSET;
 660              		.loc 1 1252 0
 661 0020 FB68     		ldr	r3, [r7, #12]
 662 0022 0A21     		movs	r1, #10
 663 0024 1800     		movs	r0, r3
 664 0026 FFF7FEFF 		bl	__aeabi_uidivmod
 665 002a 0B00     		movs	r3, r1
 666 002c 1B04     		lsls	r3, r3, #16
 667 002e 3A69     		ldr	r2, [r7, #16]
 668 0030 1343     		orrs	r3, r2
 669 0032 3B61     		str	r3, [r7, #16]
1253:Generated_Source\PSoC4/RTC.h **** 
1254:Generated_Source\PSoC4/RTC.h ****     retVal |= (day / 10u) << RTC_10_DAY_OFFSET;
 670              		.loc 1 1254 0
 671 0034 BB68     		ldr	r3, [r7, #8]
 672 0036 0A21     		movs	r1, #10
 673 0038 1800     		movs	r0, r3
 674 003a FFF7FEFF 		bl	__aeabi_uidiv
 675 003e 0300     		movs	r3, r0
 676 0040 1B07     		lsls	r3, r3, #28
 677 0042 3A69     		ldr	r2, [r7, #16]
 678 0044 1343     		orrs	r3, r2
 679 0046 3B61     		str	r3, [r7, #16]
1255:Generated_Source\PSoC4/RTC.h ****     retVal |= (day % 10u) << RTC_DAY_OFFSET;
 680              		.loc 1 1255 0
 681 0048 BB68     		ldr	r3, [r7, #8]
 682 004a 0A21     		movs	r1, #10
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 35


 683 004c 1800     		movs	r0, r3
 684 004e FFF7FEFF 		bl	__aeabi_uidivmod
 685 0052 0B00     		movs	r3, r1
 686 0054 1B06     		lsls	r3, r3, #24
 687 0056 3A69     		ldr	r2, [r7, #16]
 688 0058 1343     		orrs	r3, r2
 689 005a 3B61     		str	r3, [r7, #16]
1256:Generated_Source\PSoC4/RTC.h **** 
1257:Generated_Source\PSoC4/RTC.h ****     retVal |= (year / 1000u) << RTC_1000_YEAR_OFFSET;
 690              		.loc 1 1257 0
 691 005c 7A68     		ldr	r2, [r7, #4]
 692 005e FA23     		movs	r3, #250
 693 0060 9900     		lsls	r1, r3, #2
 694 0062 1000     		movs	r0, r2
 695 0064 FFF7FEFF 		bl	__aeabi_uidiv
 696 0068 0300     		movs	r3, r0
 697 006a 1B03     		lsls	r3, r3, #12
 698 006c 3A69     		ldr	r2, [r7, #16]
 699 006e 1343     		orrs	r3, r2
 700 0070 3B61     		str	r3, [r7, #16]
1258:Generated_Source\PSoC4/RTC.h ****     tmpVal %= 1000u;
 701              		.loc 1 1258 0
 702 0072 7A69     		ldr	r2, [r7, #20]
 703 0074 FA23     		movs	r3, #250
 704 0076 9900     		lsls	r1, r3, #2
 705 0078 1000     		movs	r0, r2
 706 007a FFF7FEFF 		bl	__aeabi_uidivmod
 707 007e 0B00     		movs	r3, r1
 708 0080 7B61     		str	r3, [r7, #20]
1259:Generated_Source\PSoC4/RTC.h **** 
1260:Generated_Source\PSoC4/RTC.h ****     retVal |= (tmpVal / 100u) << RTC_100_YEAR_OFFSET;
 709              		.loc 1 1260 0
 710 0082 7B69     		ldr	r3, [r7, #20]
 711 0084 6421     		movs	r1, #100
 712 0086 1800     		movs	r0, r3
 713 0088 FFF7FEFF 		bl	__aeabi_uidiv
 714 008c 0300     		movs	r3, r0
 715 008e 1B02     		lsls	r3, r3, #8
 716 0090 3A69     		ldr	r2, [r7, #16]
 717 0092 1343     		orrs	r3, r2
 718 0094 3B61     		str	r3, [r7, #16]
1261:Generated_Source\PSoC4/RTC.h ****     tmpVal %= 100u;
 719              		.loc 1 1261 0
 720 0096 7B69     		ldr	r3, [r7, #20]
 721 0098 6421     		movs	r1, #100
 722 009a 1800     		movs	r0, r3
 723 009c FFF7FEFF 		bl	__aeabi_uidivmod
 724 00a0 0B00     		movs	r3, r1
 725 00a2 7B61     		str	r3, [r7, #20]
1262:Generated_Source\PSoC4/RTC.h **** 
1263:Generated_Source\PSoC4/RTC.h ****     retVal |= (tmpVal / 10u) << RTC_10_YEAR_OFFSET;
 726              		.loc 1 1263 0
 727 00a4 7B69     		ldr	r3, [r7, #20]
 728 00a6 0A21     		movs	r1, #10
 729 00a8 1800     		movs	r0, r3
 730 00aa FFF7FEFF 		bl	__aeabi_uidiv
 731 00ae 0300     		movs	r3, r0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 36


 732 00b0 1B01     		lsls	r3, r3, #4
 733 00b2 3A69     		ldr	r2, [r7, #16]
 734 00b4 1343     		orrs	r3, r2
 735 00b6 3B61     		str	r3, [r7, #16]
1264:Generated_Source\PSoC4/RTC.h ****     retVal |= (tmpVal % 10u) << RTC_YEAR_OFFSET;
 736              		.loc 1 1264 0
 737 00b8 7B69     		ldr	r3, [r7, #20]
 738 00ba 0A21     		movs	r1, #10
 739 00bc 1800     		movs	r0, r3
 740 00be FFF7FEFF 		bl	__aeabi_uidivmod
 741 00c2 0B00     		movs	r3, r1
 742 00c4 1A00     		movs	r2, r3
 743 00c6 3B69     		ldr	r3, [r7, #16]
 744 00c8 1343     		orrs	r3, r2
 745 00ca 3B61     		str	r3, [r7, #16]
1265:Generated_Source\PSoC4/RTC.h **** 
1266:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 746              		.loc 1 1266 0
 747 00cc 3B69     		ldr	r3, [r7, #16]
1267:Generated_Source\PSoC4/RTC.h **** }
 748              		.loc 1 1267 0
 749 00ce 1800     		movs	r0, r3
 750 00d0 BD46     		mov	sp, r7
 751 00d2 06B0     		add	sp, sp, #24
 752              		@ sp needed
 753 00d4 80BD     		pop	{r7, pc}
 754              		.cfi_endproc
 755              	.LFE25:
 756              		.size	RTC_ConstructDate, .-RTC_ConstructDate
 757              		.section	.text.RTC_GetDayOfWeek,"ax",%progbits
 758              		.align	2
 759              		.code	16
 760              		.thumb_func
 761              		.type	RTC_GetDayOfWeek, %function
 762              	RTC_GetDayOfWeek:
 763              	.LFB26:
1268:Generated_Source\PSoC4/RTC.h **** 
1269:Generated_Source\PSoC4/RTC.h **** 
1270:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1271:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetDayOfWeek
1272:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1273:Generated_Source\PSoC4/RTC.h **** * \internal
1274:Generated_Source\PSoC4/RTC.h **** *
1275:Generated_Source\PSoC4/RTC.h **** *  Returns a day of the week for a year, month, and day of month that are passed
1276:Generated_Source\PSoC4/RTC.h **** *  through parameters. Zeller's congruence is used to calculate the day of
1277:Generated_Source\PSoC4/RTC.h **** *  the week.
1278:Generated_Source\PSoC4/RTC.h **** *
1279:Generated_Source\PSoC4/RTC.h **** *  For the Georgian calendar, Zeller's congruence is:
1280:Generated_Source\PSoC4/RTC.h **** *  h = (q + [13 * (m + 1)] + K + [K/4] + [J/4] - 2J) mod 7;
1281:Generated_Source\PSoC4/RTC.h **** *
1282:Generated_Source\PSoC4/RTC.h **** *  h - The day of the week (0 = Saturday, 1 = Sunday, 2 = Monday, ..., 
1283:Generated_Source\PSoC4/RTC.h **** *  6 = Friday).
1284:Generated_Source\PSoC4/RTC.h **** *  q - The day of the month.
1285:Generated_Source\PSoC4/RTC.h **** *  m - The month (3 = March, 4 = April, 5 = May, ..., 14 = February).
1286:Generated_Source\PSoC4/RTC.h **** *  K - The year of the century (year \mod 100).
1287:Generated_Source\PSoC4/RTC.h **** *  J - The zero-based century (actually [year/100]) For example, the zero-based
1288:Generated_Source\PSoC4/RTC.h **** *  centuries for 1995 and 2000 are 19 and 20 respectively (not to be
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 37


1289:Generated_Source\PSoC4/RTC.h **** *  confused with the common ordinal century enumeration which indicates
1290:Generated_Source\PSoC4/RTC.h **** *  20th for both cases).
1291:Generated_Source\PSoC4/RTC.h **** *
1292:Generated_Source\PSoC4/RTC.h **** * \note
1293:Generated_Source\PSoC4/RTC.h **** * In this algorithm January and February are counted as months 13 and 14
1294:Generated_Source\PSoC4/RTC.h **** * of the previous year.
1295:Generated_Source\PSoC4/RTC.h **** *
1296:Generated_Source\PSoC4/RTC.h **** * \param day
1297:Generated_Source\PSoC4/RTC.h **** * The day of the month(1..31)
1298:Generated_Source\PSoC4/RTC.h **** *
1299:Generated_Source\PSoC4/RTC.h **** * \param month
1300:Generated_Source\PSoC4/RTC.h **** * The month of the year, see \ref group_rtc_month
1301:Generated_Source\PSoC4/RTC.h **** *
1302:Generated_Source\PSoC4/RTC.h **** * \param year
1303:Generated_Source\PSoC4/RTC.h **** * The year value.
1304:Generated_Source\PSoC4/RTC.h **** *
1305:Generated_Source\PSoC4/RTC.h **** * \return
1306:Generated_Source\PSoC4/RTC.h **** * Returns a day of the week, see \ref group_rtc_day_of_the_week.
1307:Generated_Source\PSoC4/RTC.h **** *
1308:Generated_Source\PSoC4/RTC.h **** * \endinternal
1309:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1310:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetDayOfWeek(uint32 day, uint32 month, uint32 year)
1311:Generated_Source\PSoC4/RTC.h **** {
 764              		.loc 1 1311 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 24
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 90B5     		push	{r4, r7, lr}
 769              		.cfi_def_cfa_offset 12
 770              		.cfi_offset 4, -12
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 14, -4
 773 0002 87B0     		sub	sp, sp, #28
 774              		.cfi_def_cfa_offset 40
 775 0004 00AF     		add	r7, sp, #0
 776              		.cfi_def_cfa_register 7
 777 0006 F860     		str	r0, [r7, #12]
 778 0008 B960     		str	r1, [r7, #8]
 779 000a 7A60     		str	r2, [r7, #4]
1312:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
1313:Generated_Source\PSoC4/RTC.h **** 
1314:Generated_Source\PSoC4/RTC.h ****     /* Converts month number from regular convention
1315:Generated_Source\PSoC4/RTC.h ****      * (1=January,..., 12=December) to convention required for this
1316:Generated_Source\PSoC4/RTC.h ****      * algorithm(January and February are counted as months 13 and 14 of
1317:Generated_Source\PSoC4/RTC.h ****      * previous year).
1318:Generated_Source\PSoC4/RTC.h ****     */
1319:Generated_Source\PSoC4/RTC.h ****     if(month < (uint32)RTC_MARCH)
 780              		.loc 1 1319 0
 781 000c BB68     		ldr	r3, [r7, #8]
 782 000e 022B     		cmp	r3, #2
 783 0010 05D8     		bhi	.L34
1320:Generated_Source\PSoC4/RTC.h ****     {
1321:Generated_Source\PSoC4/RTC.h ****         month = 12u + month;
 784              		.loc 1 1321 0
 785 0012 BB68     		ldr	r3, [r7, #8]
 786 0014 0C33     		adds	r3, r3, #12
 787 0016 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 38


1322:Generated_Source\PSoC4/RTC.h ****         year--;
 788              		.loc 1 1322 0
 789 0018 7B68     		ldr	r3, [r7, #4]
 790 001a 013B     		subs	r3, r3, #1
 791 001c 7B60     		str	r3, [r7, #4]
 792              	.L34:
1323:Generated_Source\PSoC4/RTC.h ****     }
1324:Generated_Source\PSoC4/RTC.h **** 
1325:Generated_Source\PSoC4/RTC.h ****     /* Calculates Day of Week using Zeller's congruence algorithms */
1326:Generated_Source\PSoC4/RTC.h ****     retVal = (day + (((month + 1u) * 26u) / 10u) + year + (year / 4u) + (6u * (year / 100u)) + (yea
 793              		.loc 1 1326 0
 794 001e BB68     		ldr	r3, [r7, #8]
 795 0020 0133     		adds	r3, r3, #1
 796 0022 1A22     		movs	r2, #26
 797 0024 5343     		muls	r3, r2
 798 0026 0A21     		movs	r1, #10
 799 0028 1800     		movs	r0, r3
 800 002a FFF7FEFF 		bl	__aeabi_uidiv
 801 002e 0300     		movs	r3, r0
 802 0030 1A00     		movs	r2, r3
 803 0032 FB68     		ldr	r3, [r7, #12]
 804 0034 D218     		adds	r2, r2, r3
 805 0036 7B68     		ldr	r3, [r7, #4]
 806 0038 D218     		adds	r2, r2, r3
 807 003a 7B68     		ldr	r3, [r7, #4]
 808 003c 9B08     		lsrs	r3, r3, #2
 809 003e D418     		adds	r4, r2, r3
 810 0040 7B68     		ldr	r3, [r7, #4]
 811 0042 6421     		movs	r1, #100
 812 0044 1800     		movs	r0, r3
 813 0046 FFF7FEFF 		bl	__aeabi_uidiv
 814 004a 0300     		movs	r3, r0
 815 004c 1A00     		movs	r2, r3
 816 004e 1300     		movs	r3, r2
 817 0050 5B00     		lsls	r3, r3, #1
 818 0052 9B18     		adds	r3, r3, r2
 819 0054 5B00     		lsls	r3, r3, #1
 820 0056 E418     		adds	r4, r4, r3
 821 0058 7A68     		ldr	r2, [r7, #4]
 822 005a C823     		movs	r3, #200
 823 005c 5900     		lsls	r1, r3, #1
 824 005e 1000     		movs	r0, r2
 825 0060 FFF7FEFF 		bl	__aeabi_uidiv
 826 0064 0300     		movs	r3, r0
 827 0066 E318     		adds	r3, r4, r3
 828 0068 0721     		movs	r1, #7
 829 006a 1800     		movs	r0, r3
 830 006c FFF7FEFF 		bl	__aeabi_uidivmod
 831 0070 0B00     		movs	r3, r1
 832 0072 7B61     		str	r3, [r7, #20]
1327:Generated_Source\PSoC4/RTC.h **** 
1328:Generated_Source\PSoC4/RTC.h ****     /* Makes correction for Saturday. Saturday number should be 7 instead of 0. */
1329:Generated_Source\PSoC4/RTC.h ****     if(0u == retVal)
 833              		.loc 1 1329 0
 834 0074 7B69     		ldr	r3, [r7, #20]
 835 0076 002B     		cmp	r3, #0
 836 0078 01D1     		bne	.L35
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 39


1330:Generated_Source\PSoC4/RTC.h ****     {
1331:Generated_Source\PSoC4/RTC.h ****         retVal = (uint32)RTC_SATURDAY;
 837              		.loc 1 1331 0
 838 007a 0723     		movs	r3, #7
 839 007c 7B61     		str	r3, [r7, #20]
 840              	.L35:
1332:Generated_Source\PSoC4/RTC.h ****     }
1333:Generated_Source\PSoC4/RTC.h **** 
1334:Generated_Source\PSoC4/RTC.h ****     return(retVal);
 841              		.loc 1 1334 0
 842 007e 7B69     		ldr	r3, [r7, #20]
1335:Generated_Source\PSoC4/RTC.h **** }
 843              		.loc 1 1335 0
 844 0080 1800     		movs	r0, r3
 845 0082 BD46     		mov	sp, r7
 846 0084 07B0     		add	sp, sp, #28
 847              		@ sp needed
 848 0086 90BD     		pop	{r4, r7, pc}
 849              		.cfi_endproc
 850              	.LFE26:
 851              		.size	RTC_GetDayOfWeek, .-RTC_GetDayOfWeek
 852              		.section	.text.RTC_DaysBeforeMonth,"ax",%progbits
 853              		.align	2
 854              		.code	16
 855              		.thumb_func
 856              		.type	RTC_DaysBeforeMonth, %function
 857              	RTC_DaysBeforeMonth:
 858              	.LFB27:
1336:Generated_Source\PSoC4/RTC.h **** 
1337:Generated_Source\PSoC4/RTC.h **** 
1338:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
1339:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_DaysBeforeMonth
1340:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
1341:Generated_Source\PSoC4/RTC.h **** *
1342:Generated_Source\PSoC4/RTC.h **** * Calculates how many days elapsed from the beginning of the year to the
1343:Generated_Source\PSoC4/RTC.h **** * beginning of the current month.
1344:Generated_Source\PSoC4/RTC.h **** *
1345:Generated_Source\PSoC4/RTC.h **** * \param month
1346:Generated_Source\PSoC4/RTC.h **** * A month of a year, see \ref group_rtc_month
1347:Generated_Source\PSoC4/RTC.h **** *
1348:Generated_Source\PSoC4/RTC.h **** * \param year
1349:Generated_Source\PSoC4/RTC.h **** * A year value.
1350:Generated_Source\PSoC4/RTC.h **** *
1351:Generated_Source\PSoC4/RTC.h **** * \return
1352:Generated_Source\PSoC4/RTC.h **** * A number of days elapsed from the beginning of the year to the
1353:Generated_Source\PSoC4/RTC.h **** * beginning of the current month passed through the parameters.
1354:Generated_Source\PSoC4/RTC.h **** *
1355:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
1356:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_DaysBeforeMonth(uint32 month, uint32 year)
1357:Generated_Source\PSoC4/RTC.h **** {
 859              		.loc 1 1357 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 16
 862              		@ frame_needed = 1, uses_anonymous_args = 0
 863 0000 80B5     		push	{r7, lr}
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 7, -8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 40


 866              		.cfi_offset 14, -4
 867 0002 84B0     		sub	sp, sp, #16
 868              		.cfi_def_cfa_offset 24
 869 0004 00AF     		add	r7, sp, #0
 870              		.cfi_def_cfa_register 7
 871 0006 7860     		str	r0, [r7, #4]
 872 0008 3960     		str	r1, [r7]
1358:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
1359:Generated_Source\PSoC4/RTC.h **** 
1360:Generated_Source\PSoC4/RTC.h ****     retVal = RTC_daysBeforeMonthTbl[month - 1u];
 873              		.loc 1 1360 0
 874 000a 7B68     		ldr	r3, [r7, #4]
 875 000c 5A1E     		subs	r2, r3, #1
 876 000e 0A4B     		ldr	r3, .L40
 877 0010 5200     		lsls	r2, r2, #1
 878 0012 D35A     		ldrh	r3, [r2, r3]
 879 0014 FB60     		str	r3, [r7, #12]
1361:Generated_Source\PSoC4/RTC.h ****     if((0u != RTC_LeapYear(year)) && (month > (uint32)RTC_FEBRUARY))
 880              		.loc 1 1361 0
 881 0016 3B68     		ldr	r3, [r7]
 882 0018 1800     		movs	r0, r3
 883 001a FFF7FEFF 		bl	RTC_LeapYear
 884 001e 031E     		subs	r3, r0, #0
 885 0020 05D0     		beq	.L38
 886              		.loc 1 1361 0 is_stmt 0 discriminator 1
 887 0022 7B68     		ldr	r3, [r7, #4]
 888 0024 022B     		cmp	r3, #2
 889 0026 02D9     		bls	.L38
1362:Generated_Source\PSoC4/RTC.h ****     {
1363:Generated_Source\PSoC4/RTC.h ****         retVal++;
 890              		.loc 1 1363 0 is_stmt 1
 891 0028 FB68     		ldr	r3, [r7, #12]
 892 002a 0133     		adds	r3, r3, #1
 893 002c FB60     		str	r3, [r7, #12]
 894              	.L38:
1364:Generated_Source\PSoC4/RTC.h ****     }
1365:Generated_Source\PSoC4/RTC.h **** 
1366:Generated_Source\PSoC4/RTC.h ****     return(retVal);
 895              		.loc 1 1366 0
 896 002e FB68     		ldr	r3, [r7, #12]
1367:Generated_Source\PSoC4/RTC.h **** }
 897              		.loc 1 1367 0
 898 0030 1800     		movs	r0, r3
 899 0032 BD46     		mov	sp, r7
 900 0034 04B0     		add	sp, sp, #16
 901              		@ sp needed
 902 0036 80BD     		pop	{r7, pc}
 903              	.L41:
 904              		.align	2
 905              	.L40:
 906 0038 00000000 		.word	RTC_daysBeforeMonthTbl
 907              		.cfi_endproc
 908              	.LFE27:
 909              		.size	RTC_DaysBeforeMonth, .-RTC_DaysBeforeMonth
 910              		.section	.text.RTC_CySysRtcSetCallback,"ax",%progbits
 911              		.align	2
 912              		.code	16
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 41


 913              		.thumb_func
 914              		.type	RTC_CySysRtcSetCallback, %function
 915              	RTC_CySysRtcSetCallback:
 916              	.LFB28:
1368:Generated_Source\PSoC4/RTC.h **** 
1369:Generated_Source\PSoC4/RTC.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
1370:Generated_Source\PSoC4/RTC.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
1371:Generated_Source\PSoC4/RTC.h **** 
1372:Generated_Source\PSoC4/RTC.h ****         /*******************************************************************************
1373:Generated_Source\PSoC4/RTC.h ****         * Function Name: RTC_CySysRtcSetCallback
1374:Generated_Source\PSoC4/RTC.h ****         ****************************************************************************//**
1375:Generated_Source\PSoC4/RTC.h ****         *
1376:Generated_Source\PSoC4/RTC.h ****         *  This is an internal function that registers a callback for the
1377:Generated_Source\PSoC4/RTC.h ****         *  RTC_Update() function by address "0".
1378:Generated_Source\PSoC4/RTC.h ****         *
1379:Generated_Source\PSoC4/RTC.h ****         * \param wdtNumber
1380:Generated_Source\PSoC4/RTC.h ****         * The number of the WDT or DeepSleep Timer to be used to pull the
1381:Generated_Source\PSoC4/RTC.h ****         * RTC_Update() function.
1382:Generated_Source\PSoC4/RTC.h ****         *
1383:Generated_Source\PSoC4/RTC.h ****         * The callback registered before by address "0" is replaced
1384:Generated_Source\PSoC4/RTC.h ****         * by the RTC_Update() function.
1385:Generated_Source\PSoC4/RTC.h ****         *
1386:Generated_Source\PSoC4/RTC.h ****         *******************************************************************************/
1387:Generated_Source\PSoC4/RTC.h ****         static CY_INLINE void RTC_CySysRtcSetCallback(uint32 wdtNumber)
1388:Generated_Source\PSoC4/RTC.h ****         {
 917              		.loc 1 1388 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 8
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921 0000 80B5     		push	{r7, lr}
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 82B0     		sub	sp, sp, #8
 926              		.cfi_def_cfa_offset 16
 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 929 0006 7860     		str	r0, [r7, #4]
1389:Generated_Source\PSoC4/RTC.h ****             #if((0u != CY_IP_WCO_WDT_EN) && (0u != CY_IP_SRSSLT))
1390:Generated_Source\PSoC4/RTC.h ****                 (void)CySysTimerSetInterruptCallback(wdtNumber, &RTC_Update);
1391:Generated_Source\PSoC4/RTC.h ****             #else
1392:Generated_Source\PSoC4/RTC.h ****                 (void)CySysWdtSetIsrCallback(wdtNumber, &RTC_Update);
 930              		.loc 1 1392 0
 931 0008 044A     		ldr	r2, .L43
 932 000a 7B68     		ldr	r3, [r7, #4]
 933 000c 1100     		movs	r1, r2
 934 000e 1800     		movs	r0, r3
 935 0010 FFF7FEFF 		bl	CySysWdtSetInterruptCallback
1393:Generated_Source\PSoC4/RTC.h ****             #endif /* ((0u != CY_IP_WCO_WDT_EN) && (0u != CY_IP_SRSSLT)) */
1394:Generated_Source\PSoC4/RTC.h ****         }
 936              		.loc 1 1394 0
 937 0014 C046     		nop
 938 0016 BD46     		mov	sp, r7
 939 0018 02B0     		add	sp, sp, #8
 940              		@ sp needed
 941 001a 80BD     		pop	{r7, pc}
 942              	.L44:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 42


 943              		.align	2
 944              	.L43:
 945 001c 00000000 		.word	RTC_Update
 946              		.cfi_endproc
 947              	.LFE28:
 948              		.size	RTC_CySysRtcSetCallback, .-RTC_CySysRtcSetCallback
 949              		.section	.text.RTC_CySysRtcResetCallback,"ax",%progbits
 950              		.align	2
 951              		.code	16
 952              		.thumb_func
 953              		.type	RTC_CySysRtcResetCallback, %function
 954              	RTC_CySysRtcResetCallback:
 955              	.LFB29:
1395:Generated_Source\PSoC4/RTC.h **** 
1396:Generated_Source\PSoC4/RTC.h **** 
1397:Generated_Source\PSoC4/RTC.h ****         /*******************************************************************************
1398:Generated_Source\PSoC4/RTC.h ****         * Function Name: RTC_CySysRtcResetCallback
1399:Generated_Source\PSoC4/RTC.h ****         ****************************************************************************//**
1400:Generated_Source\PSoC4/RTC.h ****         *
1401:Generated_Source\PSoC4/RTC.h ****         *  This is an internal function that clears a callback by address "0".
1402:Generated_Source\PSoC4/RTC.h ****         *
1403:Generated_Source\PSoC4/RTC.h ****         * \param wdtNumber
1404:Generated_Source\PSoC4/RTC.h ****         * The number of the WDT or DeeSleep Timer to be cleared callback for.
1405:Generated_Source\PSoC4/RTC.h ****         *
1406:Generated_Source\PSoC4/RTC.h ****         * The callback registered before by address "0" is replaced
1407:Generated_Source\PSoC4/RTC.h ****         * by the NULL pointer.
1408:Generated_Source\PSoC4/RTC.h ****         *
1409:Generated_Source\PSoC4/RTC.h ****         *******************************************************************************/
1410:Generated_Source\PSoC4/RTC.h ****         static CY_INLINE void RTC_CySysRtcResetCallback(uint32 wdtNumber)
1411:Generated_Source\PSoC4/RTC.h ****         {
 956              		.loc 1 1411 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 8
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960 0000 80B5     		push	{r7, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 82B0     		sub	sp, sp, #8
 965              		.cfi_def_cfa_offset 16
 966 0004 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
 968 0006 7860     		str	r0, [r7, #4]
1412:Generated_Source\PSoC4/RTC.h ****             #if((0u != CY_IP_WCO_WDT_EN) && (0u != CY_IP_SRSSLT))
1413:Generated_Source\PSoC4/RTC.h ****                 (void)CySysTimerSetInterruptCallback(wdtNumber, (void *)0);
1414:Generated_Source\PSoC4/RTC.h ****             #else
1415:Generated_Source\PSoC4/RTC.h ****                 (void)CySysWdtSetIsrCallback(wdtNumber, (void *)0);
 969              		.loc 1 1415 0
 970 0008 7B68     		ldr	r3, [r7, #4]
 971 000a 0021     		movs	r1, #0
 972 000c 1800     		movs	r0, r3
 973 000e FFF7FEFF 		bl	CySysWdtSetInterruptCallback
1416:Generated_Source\PSoC4/RTC.h ****             #endif /* ((0u != CY_IP_WCO_WDT_EN) && (0u != CY_IP_SRSSLT)) */
1417:Generated_Source\PSoC4/RTC.h ****         }
 974              		.loc 1 1417 0
 975 0012 C046     		nop
 976 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 43


 977 0016 02B0     		add	sp, sp, #8
 978              		@ sp needed
 979 0018 80BD     		pop	{r7, pc}
 980              		.cfi_endproc
 981              	.LFE29:
 982              		.size	RTC_CySysRtcResetCallback, .-RTC_CySysRtcResetCallback
 983              		.comm	RTC_initVar,1,1
 984              		.comm	RTC_unixTime,8,8
 985              		.comm	RTC_currentTimeDate,16,4
 986 001a C046     		.bss
 987              		.align	2
 988              	RTC_updateTimePeriod:
 989 0000 00000000 		.space	4
 990              		.align	2
 991              	RTC_tickRefOneSec:
 992 0004 00000000 		.space	4
 993              		.comm	RTC_dstStatus,1,1
 994              		.align	2
 995              	RTC_dstTimeOffset:
 996 0008 00000000 		.space	4
 997              		.comm	RTC_alarmCurStatus,4,4
 998              		.global	RTC_daysBeforeMonthTbl
 999              		.section	.rodata
 1000              		.align	2
 1001              		.type	RTC_daysBeforeMonthTbl, %object
 1002              		.size	RTC_daysBeforeMonthTbl, 24
 1003              	RTC_daysBeforeMonthTbl:
 1004 0000 0000     		.short	0
 1005 0002 1F00     		.short	31
 1006 0004 3B00     		.short	59
 1007 0006 5A00     		.short	90
 1008 0008 7800     		.short	120
 1009 000a 9700     		.short	151
 1010 000c B500     		.short	181
 1011 000e D400     		.short	212
 1012 0010 F300     		.short	243
 1013 0012 1101     		.short	273
 1014 0014 3001     		.short	304
 1015 0016 4E01     		.short	334
 1016              		.global	RTC_daysInMonthTbl
 1017              		.align	2
 1018              		.type	RTC_daysInMonthTbl, %object
 1019              		.size	RTC_daysInMonthTbl, 12
 1020              	RTC_daysInMonthTbl:
 1021 0018 1F       		.byte	31
 1022 0019 1C       		.byte	28
 1023 001a 1F       		.byte	31
 1024 001b 1E       		.byte	30
 1025 001c 1F       		.byte	31
 1026 001d 1E       		.byte	30
 1027 001e 1F       		.byte	31
 1028 001f 1F       		.byte	31
 1029 0020 1E       		.byte	30
 1030 0021 1F       		.byte	31
 1031 0022 1E       		.byte	30
 1032 0023 1F       		.byte	31
 1033              		.section	.text.RTC_Start,"ax",%progbits
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 44


 1034              		.align	2
 1035              		.global	RTC_Start
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	RTC_Start, %function
 1039              	RTC_Start:
 1040              	.LFB30:
 1041              		.file 2 "Generated_Source\\PSoC4\\RTC.c"
   1:Generated_Source\PSoC4/RTC.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC.c **** * \file Name: RTC.c
   3:Generated_Source\PSoC4/RTC.c **** * \version 1.30
   4:Generated_Source\PSoC4/RTC.c **** *
   5:Generated_Source\PSoC4/RTC.c **** *  This file provides the source code to the API for the RTC_P4 Component.
   6:Generated_Source\PSoC4/RTC.c **** *
   7:Generated_Source\PSoC4/RTC.c **** ********************************************************************************
   8:Generated_Source\PSoC4/RTC.c **** * \copyright
   9:Generated_Source\PSoC4/RTC.c **** * Copyright 2015-2017, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC4/RTC.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/RTC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/RTC.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/RTC.c **** 
  15:Generated_Source\PSoC4/RTC.c **** #include "RTC.h"
  16:Generated_Source\PSoC4/RTC.c **** 
  17:Generated_Source\PSoC4/RTC.c **** uint8  RTC_initVar;
  18:Generated_Source\PSoC4/RTC.c **** 
  19:Generated_Source\PSoC4/RTC.c **** volatile uint64 RTC_unixTime;
  20:Generated_Source\PSoC4/RTC.c **** RTC_DATE_TIME RTC_currentTimeDate;
  21:Generated_Source\PSoC4/RTC.c **** 
  22:Generated_Source\PSoC4/RTC.c **** static uint32 RTC_updateTimePeriod;
  23:Generated_Source\PSoC4/RTC.c **** static uint32 RTC_tickRefOneSec;
  24:Generated_Source\PSoC4/RTC.c **** 
  25:Generated_Source\PSoC4/RTC.c **** uint8  RTC_dstStatus;
  26:Generated_Source\PSoC4/RTC.c **** static uint32 RTC_dstTimeOffset;
  27:Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_DST_STATUS)
  28:Generated_Source\PSoC4/RTC.c ****     static volatile uint64 RTC_unixTimeDstStart;
  29:Generated_Source\PSoC4/RTC.c ****     static volatile uint64 RTC_unixTimeDstStop;
  30:Generated_Source\PSoC4/RTC.c ****     RTC_DST_TIME RTC_dstStartTime;
  31:Generated_Source\PSoC4/RTC.c ****     RTC_DST_TIME RTC_dstStopTime;
  32:Generated_Source\PSoC4/RTC.c **** #endif /* (0u != RTC_INITIAL_DST_STATUS) */
  33:Generated_Source\PSoC4/RTC.c **** 
  34:Generated_Source\PSoC4/RTC.c **** uint32 RTC_alarmCurStatus;
  35:Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_ALARM_STATUS)
  36:Generated_Source\PSoC4/RTC.c ****     uint32  RTC_alarmCfgMask = 0xFFu;
  37:Generated_Source\PSoC4/RTC.c ****     static volatile uint64 RTC_unixTimeAlarm;
  38:Generated_Source\PSoC4/RTC.c ****     RTC_DATE_TIME RTC_alarmCfgTimeDate;
  39:Generated_Source\PSoC4/RTC.c ****     void (*RTC_alarmCallbackPtr)(void) = (void *)0;
  40:Generated_Source\PSoC4/RTC.c **** #endif /* (0u != RTC_INITIAL_ALARM_STATUS) */
  41:Generated_Source\PSoC4/RTC.c **** 
  42:Generated_Source\PSoC4/RTC.c **** const uint16 RTC_daysBeforeMonthTbl[RTC_MONTHS_PER_YEAR] = {
  43:Generated_Source\PSoC4/RTC.c ****                                                  (0u), /* JANUARY */
  44:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u), /* FEBRUARY */
  45:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u), /* MARCH */
  46:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u), /* APRIL */
  47:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u), /* MAY */
  48:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u), /* JUNE */
  49:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u), /* JULY 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 45


  50:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u), /*
  51:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  52:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  53:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  54:Generated_Source\PSoC4/RTC.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  55:Generated_Source\PSoC4/RTC.c **** 
  56:Generated_Source\PSoC4/RTC.c **** const uint8 RTC_daysInMonthTbl[RTC_MONTHS_PER_YEAR] = {RTC_DAYS_IN_JANUARY,
  57:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_FEBRUA
  58:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_MARCH,
  59:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_APRIL,
  60:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_MAY,
  61:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_JUNE,
  62:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_JULY,
  63:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_AUGUST
  64:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_SEPTEM
  65:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_OCTOBE
  66:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_NOVEMB
  67:Generated_Source\PSoC4/RTC.c ****                                                                                  RTC_DAYS_IN_DECEMB
  68:Generated_Source\PSoC4/RTC.c **** 
  69:Generated_Source\PSoC4/RTC.c **** 
  70:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
  71:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Start
  72:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
  73:Generated_Source\PSoC4/RTC.c **** *
  74:Generated_Source\PSoC4/RTC.c **** * Performs all the required calculations for the time and date registers and
  75:Generated_Source\PSoC4/RTC.c **** * initializes the component along with the date and time selected in the
  76:Generated_Source\PSoC4/RTC.c **** * customizer. 
  77:Generated_Source\PSoC4/RTC.c **** *
  78:Generated_Source\PSoC4/RTC.c **** * If "Implement RTC update manually" is disabled in the customizer
  79:Generated_Source\PSoC4/RTC.c **** * and if WDT or DeepSleep timer is selected as a source in the clocks 
  80:Generated_Source\PSoC4/RTC.c **** * configuration window (low frequency clocks tab), attaches RTC_Update API to a
  81:Generated_Source\PSoC4/RTC.c **** * corresponding ISR callback of WDT or DeepSleep Timer.
  82:Generated_Source\PSoC4/RTC.c **** *
  83:Generated_Source\PSoC4/RTC.c **** * \note "Implement RTC update manually" checkbox is available for PSoC 4200L / 
  84:Generated_Source\PSoC4/RTC.c **** * PSoC 4100M / PSoC 4200M / PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4000S / PSoC 
  85:Generated_Source\PSoC4/RTC.c **** * 4100S and Analog Coprocessor.
  86:Generated_Source\PSoC4/RTC.c **** *
  87:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
  88:Generated_Source\PSoC4/RTC.c **** void RTC_Start(void)
  89:Generated_Source\PSoC4/RTC.c **** {
 1042              		.loc 2 89 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046 0000 80B5     		push	{r7, lr}
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 7, -8
 1049              		.cfi_offset 14, -4
 1050 0002 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
  90:Generated_Source\PSoC4/RTC.c ****     if(0u == RTC_initVar)
 1052              		.loc 2 90 0
 1053 0004 054B     		ldr	r3, .L48
 1054 0006 1B78     		ldrb	r3, [r3]
 1055 0008 002B     		cmp	r3, #0
 1056 000a 01D1     		bne	.L47
  91:Generated_Source\PSoC4/RTC.c ****     {
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 46


  92:Generated_Source\PSoC4/RTC.c ****         RTC_Init();
 1057              		.loc 2 92 0
 1058 000c FFF7FEFF 		bl	RTC_Init
 1059              	.L47:
  93:Generated_Source\PSoC4/RTC.c ****     }
  94:Generated_Source\PSoC4/RTC.c **** 
  95:Generated_Source\PSoC4/RTC.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
  96:Generated_Source\PSoC4/RTC.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
  97:Generated_Source\PSoC4/RTC.c ****             RTC_CySysRtcSetCallback(CYDEV_RTC_SOURCE_WDT);
 1060              		.loc 2 97 0
 1061 0010 0020     		movs	r0, #0
 1062 0012 FFF7FEFF 		bl	RTC_CySysRtcSetCallback
  98:Generated_Source\PSoC4/RTC.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
  99:Generated_Source\PSoC4/RTC.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
 100:Generated_Source\PSoC4/RTC.c **** }
 1063              		.loc 2 100 0
 1064 0016 C046     		nop
 1065 0018 BD46     		mov	sp, r7
 1066              		@ sp needed
 1067 001a 80BD     		pop	{r7, pc}
 1068              	.L49:
 1069              		.align	2
 1070              	.L48:
 1071 001c 00000000 		.word	RTC_initVar
 1072              		.cfi_endproc
 1073              	.LFE30:
 1074              		.size	RTC_Start, .-RTC_Start
 1075              		.section	.text.RTC_Stop,"ax",%progbits
 1076              		.align	2
 1077              		.global	RTC_Stop
 1078              		.code	16
 1079              		.thumb_func
 1080              		.type	RTC_Stop, %function
 1081              	RTC_Stop:
 1082              	.LFB31:
 101:Generated_Source\PSoC4/RTC.c **** 
 102:Generated_Source\PSoC4/RTC.c **** 
 103:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 104:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Stop
 105:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 106:Generated_Source\PSoC4/RTC.c **** *
 107:Generated_Source\PSoC4/RTC.c **** * Stops the time and date updates.
 108:Generated_Source\PSoC4/RTC.c **** *
 109:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 110:Generated_Source\PSoC4/RTC.c **** void RTC_Stop(void)
 111:Generated_Source\PSoC4/RTC.c **** {
 1083              		.loc 2 111 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 1, uses_anonymous_args = 0
 1087 0000 80B5     		push	{r7, lr}
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
 1091 0002 00AF     		add	r7, sp, #0
 1092              		.cfi_def_cfa_register 7
 112:Generated_Source\PSoC4/RTC.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 47


 113:Generated_Source\PSoC4/RTC.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
 114:Generated_Source\PSoC4/RTC.c ****             RTC_CySysRtcResetCallback(CYDEV_RTC_SOURCE_WDT);
 1093              		.loc 2 114 0
 1094 0004 0020     		movs	r0, #0
 1095 0006 FFF7FEFF 		bl	RTC_CySysRtcResetCallback
 115:Generated_Source\PSoC4/RTC.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 116:Generated_Source\PSoC4/RTC.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
 117:Generated_Source\PSoC4/RTC.c **** }
 1096              		.loc 2 117 0
 1097 000a C046     		nop
 1098 000c BD46     		mov	sp, r7
 1099              		@ sp needed
 1100 000e 80BD     		pop	{r7, pc}
 1101              		.cfi_endproc
 1102              	.LFE31:
 1103              		.size	RTC_Stop, .-RTC_Stop
 1104              		.section	.text.RTC_Init,"ax",%progbits
 1105              		.align	2
 1106              		.global	RTC_Init
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	RTC_Init, %function
 1110              	RTC_Init:
 1111              	.LFB32:
 118:Generated_Source\PSoC4/RTC.c **** 
 119:Generated_Source\PSoC4/RTC.c **** 
 120:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 121:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Init
 122:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 123:Generated_Source\PSoC4/RTC.c **** *
 124:Generated_Source\PSoC4/RTC.c **** * Initializes or restores the component according to the customizer Configure
 125:Generated_Source\PSoC4/RTC.c **** * dialogue settings.
 126:Generated_Source\PSoC4/RTC.c **** *
 127:Generated_Source\PSoC4/RTC.c **** * It is not necessary to call RTC_Init() because RTC_Start() API calls this 
 128:Generated_Source\PSoC4/RTC.c **** * function and is the preferred method to begin component operation.
 129:Generated_Source\PSoC4/RTC.c **** *
 130:Generated_Source\PSoC4/RTC.c **** * All registers are set to values according to the customizer Configure
 131:Generated_Source\PSoC4/RTC.c **** * dialogue. The default date value, if not set by the user before this function
 132:Generated_Source\PSoC4/RTC.c **** * call, is 12:00:00 AM January 1, 2000.
 133:Generated_Source\PSoC4/RTC.c **** *
 134:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 135:Generated_Source\PSoC4/RTC.c **** void RTC_Init(void)
 136:Generated_Source\PSoC4/RTC.c **** {
 1112              		.loc 2 136 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              		.cfi_def_cfa_offset 8
 1118              		.cfi_offset 7, -8
 1119              		.cfi_offset 14, -4
 1120 0002 84B0     		sub	sp, sp, #16
 1121              		.cfi_def_cfa_offset 24
 1122 0004 02AF     		add	r7, sp, #8
 1123              		.cfi_def_cfa 7, 16
 137:Generated_Source\PSoC4/RTC.c ****     uint32 tmpDate;
 138:Generated_Source\PSoC4/RTC.c ****     uint32 tmpTime;
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 48


 139:Generated_Source\PSoC4/RTC.c **** 
 140:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 141:Generated_Source\PSoC4/RTC.c ****         RTC_DST_TIME dstTimeTmp;
 142:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 143:Generated_Source\PSoC4/RTC.c **** 
 144:Generated_Source\PSoC4/RTC.c ****     RTC_initVar = 1u;
 1124              		.loc 2 144 0
 1125 0006 154B     		ldr	r3, .L52
 1126 0008 0122     		movs	r2, #1
 1127 000a 1A70     		strb	r2, [r3]
 145:Generated_Source\PSoC4/RTC.c ****     RTC_dstTimeOffset = 0uL;
 1128              		.loc 2 145 0
 1129 000c 144B     		ldr	r3, .L52+4
 1130 000e 0022     		movs	r2, #0
 1131 0010 1A60     		str	r2, [r3]
 146:Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.status = 0uL;
 1132              		.loc 2 146 0
 1133 0012 144B     		ldr	r3, .L52+8
 1134 0014 0022     		movs	r2, #0
 1135 0016 DA60     		str	r2, [r3, #12]
 147:Generated_Source\PSoC4/RTC.c **** 
 148:Generated_Source\PSoC4/RTC.c ****     RTC_dstStatus      = RTC_INITIAL_DST_STATUS;
 1136              		.loc 2 148 0
 1137 0018 134B     		ldr	r3, .L52+12
 1138 001a 0022     		movs	r2, #0
 1139 001c 1A70     		strb	r2, [r3]
 149:Generated_Source\PSoC4/RTC.c ****     RTC_alarmCurStatus = RTC_INITIAL_ALARM_STATUS;
 1140              		.loc 2 149 0
 1141 001e 134B     		ldr	r3, .L52+16
 1142 0020 0022     		movs	r2, #0
 1143 0022 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/RTC.c **** 
 151:Generated_Source\PSoC4/RTC.c ****     tmpDate = RTC_ConstructDate(RTC_INITIAL_MONTH,
 1144              		.loc 2 151 0
 1145 0024 124B     		ldr	r3, .L52+20
 1146 0026 1A00     		movs	r2, r3
 1147 0028 0121     		movs	r1, #1
 1148 002a 0120     		movs	r0, #1
 1149 002c FFF7FEFF 		bl	RTC_ConstructDate
 1150 0030 0300     		movs	r3, r0
 1151 0032 7B60     		str	r3, [r7, #4]
 152:Generated_Source\PSoC4/RTC.c ****                                              RTC_INITIAL_DAY,
 153:Generated_Source\PSoC4/RTC.c ****                                              RTC_INITIAL_YEAR);
 154:Generated_Source\PSoC4/RTC.c **** 
 155:Generated_Source\PSoC4/RTC.c ****     tmpTime = RTC_ConstructTime(RTC_INITIAL_TIME_FORMAT,
 1152              		.loc 2 155 0
 1153 0034 0023     		movs	r3, #0
 1154 0036 0093     		str	r3, [sp]
 1155 0038 0023     		movs	r3, #0
 1156 003a 0022     		movs	r2, #0
 1157 003c 0021     		movs	r1, #0
 1158 003e 0020     		movs	r0, #0
 1159 0040 FFF7FEFF 		bl	RTC_ConstructTime
 1160 0044 0300     		movs	r3, r0
 1161 0046 3B60     		str	r3, [r7]
 156:Generated_Source\PSoC4/RTC.c ****                                              0u,
 157:Generated_Source\PSoC4/RTC.c ****                                             RTC_INITIAL_HOUR,
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 49


 158:Generated_Source\PSoC4/RTC.c ****                                             RTC_INITIAL_MINUTE,
 159:Generated_Source\PSoC4/RTC.c ****                                             RTC_INITIAL_SECOND);
 160:Generated_Source\PSoC4/RTC.c **** 
 161:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 162:Generated_Source\PSoC4/RTC.c ****         RTC_dstStatus = 0u;
 163:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status = (1uL << RTC_STATUS_DST_OFFSET);
 164:Generated_Source\PSoC4/RTC.c **** 
 165:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.timeFormat    = RTC_INITIAL_DST_DATE_TYPE;
 166:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.hour          = RTC_INITIAL_DST_START_HRS;
 167:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfWeek     = RTC_INITIAL_DST_START_DOW;
 168:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.weekOfMonth   = RTC_INITIAL_DST_START_WOM;
 169:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfMonth    = RTC_INITIAL_DST_START_DOM;
 170:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.month         = RTC_INITIAL_DST_START_MONTH;
 171:Generated_Source\PSoC4/RTC.c ****         RTC_SetDSTStartTime(&dstTimeTmp, 
 172:Generated_Source\PSoC4/RTC.c ****                                         (RTC_DST_DATETYPE_ENUM)RTC_INITIAL_DST_DATE_TYPE);
 173:Generated_Source\PSoC4/RTC.c **** 
 174:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.timeFormat    = RTC_INITIAL_DST_DATE_TYPE;
 175:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.hour          = RTC_INITIAL_DST_STOP_HRS;
 176:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfWeek     = RTC_INITIAL_DST_STOP_DOW;
 177:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.weekOfMonth   = RTC_INITIAL_DST_STOP_WOM;
 178:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.dayOfMonth    = RTC_INITIAL_DST_STOP_DOM;
 179:Generated_Source\PSoC4/RTC.c ****         dstTimeTmp.month         = RTC_INITIAL_DST_STOP_MONTH;
 180:Generated_Source\PSoC4/RTC.c ****         RTC_SetDSTStopTime(&dstTimeTmp, 
 181:Generated_Source\PSoC4/RTC.c ****                                        (RTC_DST_DATETYPE_ENUM)RTC_INITIAL_DST_DATE_TYPE);
 182:Generated_Source\PSoC4/RTC.c **** 
 183:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 184:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 185:Generated_Source\PSoC4/RTC.c **** 
 186:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 187:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 188:Generated_Source\PSoC4/RTC.c ****         {
 189:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 190:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 191:Generated_Source\PSoC4/RTC.c ****         }
 192:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 193:Generated_Source\PSoC4/RTC.c **** 
 194:Generated_Source\PSoC4/RTC.c ****     RTC_SetDateAndTime(tmpTime, tmpDate);
 1162              		.loc 2 194 0
 1163 0048 7A68     		ldr	r2, [r7, #4]
 1164 004a 3B68     		ldr	r3, [r7]
 1165 004c 1100     		movs	r1, r2
 1166 004e 1800     		movs	r0, r3
 1167 0050 FFF7FEFF 		bl	RTC_SetDateAndTime
 195:Generated_Source\PSoC4/RTC.c **** }
 1168              		.loc 2 195 0
 1169 0054 C046     		nop
 1170 0056 BD46     		mov	sp, r7
 1171 0058 02B0     		add	sp, sp, #8
 1172              		@ sp needed
 1173 005a 80BD     		pop	{r7, pc}
 1174              	.L53:
 1175              		.align	2
 1176              	.L52:
 1177 005c 00000000 		.word	RTC_initVar
 1178 0060 08000000 		.word	RTC_dstTimeOffset
 1179 0064 00000000 		.word	RTC_currentTimeDate
 1180 0068 00000000 		.word	RTC_dstStatus
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 50


 1181 006c 00000000 		.word	RTC_alarmCurStatus
 1182 0070 B2070000 		.word	1970
 1183              		.cfi_endproc
 1184              	.LFE32:
 1185              		.size	RTC_Init, .-RTC_Init
 1186              		.section	.text.RTC_SetDateAndTime,"ax",%progbits
 1187              		.align	2
 1188              		.global	RTC_SetDateAndTime
 1189              		.code	16
 1190              		.thumb_func
 1191              		.type	RTC_SetDateAndTime, %function
 1192              	RTC_SetDateAndTime:
 1193              	.LFB33:
 196:Generated_Source\PSoC4/RTC.c **** 
 197:Generated_Source\PSoC4/RTC.c **** 
 198:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 199:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetDateAndTime
 200:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 201:Generated_Source\PSoC4/RTC.c **** *
 202:Generated_Source\PSoC4/RTC.c **** * Sets the time and date values as the current time and date.
 203:Generated_Source\PSoC4/RTC.c **** *
 204:Generated_Source\PSoC4/RTC.c **** * \param inputTime
 205:Generated_Source\PSoC4/RTC.c **** * The time value in the HH:MM:SS format. <br>
 206:Generated_Source\PSoC4/RTC.c **** * "HH"- The 2nd 8-bit MSB that denotes the hour value.
 207:Generated_Source\PSoC4/RTC.c **** * (0-23 for the 24-hour format and 1-12 for the 12-hour format. The MSB bit of 
 208:Generated_Source\PSoC4/RTC.c **** * the value denotes AM/PM for the 12-hour format (0-AM and 1-PM). <br>
 209:Generated_Source\PSoC4/RTC.c **** * "MM" - The 3nd 8-bit MSB denotes the minutes value, the valid 
 210:Generated_Source\PSoC4/RTC.c **** * entries -> 0-59.<br>
 211:Generated_Source\PSoC4/RTC.c **** * "SS" - The 8-bit LSB denotes the seconds value, the valid entries -> 0-59.
 212:Generated_Source\PSoC4/RTC.c **** * Each byte is in the BCD format. Invalid time entries retain the
 213:Generated_Source\PSoC4/RTC.c **** * previously set values.
 214:Generated_Source\PSoC4/RTC.c **** *
 215:Generated_Source\PSoC4/RTC.c **** * \param inputDate
 216:Generated_Source\PSoC4/RTC.c **** * The date value in the format selected in the customizer.
 217:Generated_Source\PSoC4/RTC.c **** * For the MM/DD/YYYY format: <br>
 218:Generated_Source\PSoC4/RTC.c **** * "MM" - The 8-bit MSB denotes the month value in BCD, the valid 
 219:Generated_Source\PSoC4/RTC.c **** * entries -> 1-12<br>
 220:Generated_Source\PSoC4/RTC.c **** * "DD" - The 2nd 8-bit MSB denotes a day of the month value in BCD, the valid
 221:Generated_Source\PSoC4/RTC.c **** * entries -> 1-31.<br>
 222:Generated_Source\PSoC4/RTC.c **** * "YYYY" - The 16-bit LSB denotes a year in BCD, the valid entries -> 1900-2200.
 223:Generated_Source\PSoC4/RTC.c **** * Each byte is in the BCD format. Invalid date entries retain the
 224:Generated_Source\PSoC4/RTC.c **** * previously set values.
 225:Generated_Source\PSoC4/RTC.c **** *
 226:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 227:Generated_Source\PSoC4/RTC.c **** void RTC_SetDateAndTime(uint32 inputTime, uint32 inputDate)
 228:Generated_Source\PSoC4/RTC.c **** {
 1194              		.loc 2 228 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 24
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0000 90B5     		push	{r4, r7, lr}
 1199              		.cfi_def_cfa_offset 12
 1200              		.cfi_offset 4, -12
 1201              		.cfi_offset 7, -8
 1202              		.cfi_offset 14, -4
 1203 0002 87B0     		sub	sp, sp, #28
 1204              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 51


 1205 0004 00AF     		add	r7, sp, #0
 1206              		.cfi_def_cfa_register 7
 1207 0006 7860     		str	r0, [r7, #4]
 1208 0008 3960     		str	r1, [r7]
 229:Generated_Source\PSoC4/RTC.c ****     uint32 tmpDay;
 230:Generated_Source\PSoC4/RTC.c ****     uint32 tmpMonth;
 231:Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
 232:Generated_Source\PSoC4/RTC.c **** 
 233:Generated_Source\PSoC4/RTC.c ****     tmpDay   = RTC_GetDay(inputDate);
 1209              		.loc 2 233 0
 1210 000a 3B68     		ldr	r3, [r7]
 1211 000c 1800     		movs	r0, r3
 1212 000e FFF7FEFF 		bl	RTC_GetDay
 1213 0012 0300     		movs	r3, r0
 1214 0014 7B61     		str	r3, [r7, #20]
 234:Generated_Source\PSoC4/RTC.c ****     tmpMonth = RTC_GetMonth(inputDate);
 1215              		.loc 2 234 0
 1216 0016 3B68     		ldr	r3, [r7]
 1217 0018 1800     		movs	r0, r3
 1218 001a FFF7FEFF 		bl	RTC_GetMonth
 1219 001e 0300     		movs	r3, r0
 1220 0020 3B61     		str	r3, [r7, #16]
 235:Generated_Source\PSoC4/RTC.c ****     tmpYear  = RTC_GetYear(inputDate);
 1221              		.loc 2 235 0
 1222 0022 3B68     		ldr	r3, [r7]
 1223 0024 1800     		movs	r0, r3
 1224 0026 FFF7FEFF 		bl	RTC_GetYear
 1225 002a 0300     		movs	r3, r0
 1226 002c FB60     		str	r3, [r7, #12]
 236:Generated_Source\PSoC4/RTC.c **** 
 237:Generated_Source\PSoC4/RTC.c ****     RTC_unixTime = RTC_DateTimeToUnix(inputDate, inputTime);
 1227              		.loc 2 237 0
 1228 002e 7A68     		ldr	r2, [r7, #4]
 1229 0030 3B68     		ldr	r3, [r7]
 1230 0032 1100     		movs	r1, r2
 1231 0034 1800     		movs	r0, r3
 1232 0036 FFF7FEFF 		bl	RTC_DateTimeToUnix
 1233 003a 0300     		movs	r3, r0
 1234 003c 0C00     		movs	r4, r1
 1235 003e 0B4A     		ldr	r2, .L55
 1236 0040 1360     		str	r3, [r2]
 1237 0042 5460     		str	r4, [r2, #4]
 238:Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.date = inputDate;
 1238              		.loc 2 238 0
 1239 0044 0A4B     		ldr	r3, .L55+4
 1240 0046 3A68     		ldr	r2, [r7]
 1241 0048 5A60     		str	r2, [r3, #4]
 239:Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.time = inputTime;
 1242              		.loc 2 239 0
 1243 004a 094B     		ldr	r3, .L55+4
 1244 004c 7A68     		ldr	r2, [r7, #4]
 1245 004e 1A60     		str	r2, [r3]
 240:Generated_Source\PSoC4/RTC.c ****     RTC_currentTimeDate.dayOfWeek = RTC_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 1246              		.loc 2 240 0
 1247 0050 FA68     		ldr	r2, [r7, #12]
 1248 0052 3969     		ldr	r1, [r7, #16]
 1249 0054 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 52


 1250 0056 1800     		movs	r0, r3
 1251 0058 FFF7FEFF 		bl	RTC_GetDayOfWeek
 1252 005c 0200     		movs	r2, r0
 1253 005e 044B     		ldr	r3, .L55+4
 1254 0060 9A60     		str	r2, [r3, #8]
 241:Generated_Source\PSoC4/RTC.c **** 
 242:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 243:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 244:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 245:Generated_Source\PSoC4/RTC.c **** 
 246:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 247:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 248:Generated_Source\PSoC4/RTC.c ****         {
 249:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 250:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 251:Generated_Source\PSoC4/RTC.c ****             RTC_unixTime -= RTC_dstTimeOffset;
 252:Generated_Source\PSoC4/RTC.c ****         }
 253:Generated_Source\PSoC4/RTC.c ****         else
 254:Generated_Source\PSoC4/RTC.c ****         {
 255:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
 256:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
 257:Generated_Source\PSoC4/RTC.c ****         }
 258:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 259:Generated_Source\PSoC4/RTC.c **** 
 260:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_ALARM_STATUS)
 261:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeAlarm = RTC_ConstructUnixAlarmTime(&RTC_alarmCfgTimeDate,
 262:Generated_Source\PSoC4/RTC.c ****                                                                                  (uint8)RTC_alarmCf
 263:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_ALARM_STATUS) */
 264:Generated_Source\PSoC4/RTC.c **** }
 1255              		.loc 2 264 0
 1256 0062 C046     		nop
 1257 0064 BD46     		mov	sp, r7
 1258 0066 07B0     		add	sp, sp, #28
 1259              		@ sp needed
 1260 0068 90BD     		pop	{r4, r7, pc}
 1261              	.L56:
 1262 006a C046     		.align	2
 1263              	.L55:
 1264 006c 00000000 		.word	RTC_unixTime
 1265 0070 00000000 		.word	RTC_currentTimeDate
 1266              		.cfi_endproc
 1267              	.LFE33:
 1268              		.size	RTC_SetDateAndTime, .-RTC_SetDateAndTime
 1269              		.section	.text.RTC_SetUnixTime,"ax",%progbits
 1270              		.align	2
 1271              		.global	RTC_SetUnixTime
 1272              		.code	16
 1273              		.thumb_func
 1274              		.type	RTC_SetUnixTime, %function
 1275              	RTC_SetUnixTime:
 1276              	.LFB34:
 265:Generated_Source\PSoC4/RTC.c **** 
 266:Generated_Source\PSoC4/RTC.c **** 
 267:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 268:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetUnixTime
 269:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/RTC.c **** *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 53


 271:Generated_Source\PSoC4/RTC.c **** * Sets the time in the Unix/Epoch time format - the number of seconds elapsed
 272:Generated_Source\PSoC4/RTC.c **** * from January 1, 1970 UTC 00:00 hrs.
 273:Generated_Source\PSoC4/RTC.c **** *
 274:Generated_Source\PSoC4/RTC.c **** * \param unixTime
 275:Generated_Source\PSoC4/RTC.c **** * The time value in the Unix time/Epoch time format.
 276:Generated_Source\PSoC4/RTC.c **** *
 277:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 278:Generated_Source\PSoC4/RTC.c **** void RTC_SetUnixTime(uint64 unixTime)
 279:Generated_Source\PSoC4/RTC.c **** {
 1277              		.loc 2 279 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 24
 1280              		@ frame_needed = 1, uses_anonymous_args = 0
 1281 0000 90B5     		push	{r4, r7, lr}
 1282              		.cfi_def_cfa_offset 12
 1283              		.cfi_offset 4, -12
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 89B0     		sub	sp, sp, #36
 1287              		.cfi_def_cfa_offset 48
 1288 0004 02AF     		add	r7, sp, #8
 1289              		.cfi_def_cfa 7, 40
 1290 0006 3860     		str	r0, [r7]
 1291 0008 7960     		str	r1, [r7, #4]
 280:Generated_Source\PSoC4/RTC.c ****     RTC_DATE_TIME tmpDateTime;
 281:Generated_Source\PSoC4/RTC.c **** 
 282:Generated_Source\PSoC4/RTC.c ****     RTC_unixTime = unixTime;
 1292              		.loc 2 282 0
 1293 000a 0A4A     		ldr	r2, .L58
 1294 000c 3B68     		ldr	r3, [r7]
 1295 000e 7C68     		ldr	r4, [r7, #4]
 1296 0010 1360     		str	r3, [r2]
 1297 0012 5460     		str	r4, [r2, #4]
 283:Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(&tmpDateTime, unixTime, (uint32)RTC_24_HOURS_FORMAT);
 1298              		.loc 2 283 0
 1299 0014 3B68     		ldr	r3, [r7]
 1300 0016 7C68     		ldr	r4, [r7, #4]
 1301 0018 0822     		movs	r2, #8
 1302 001a B918     		adds	r1, r7, r2
 1303 001c 0022     		movs	r2, #0
 1304 001e 0092     		str	r2, [sp]
 1305 0020 1A00     		movs	r2, r3
 1306 0022 2300     		movs	r3, r4
 1307 0024 0800     		movs	r0, r1
 1308 0026 FFF7FEFF 		bl	RTC_UnixToDateTime
 284:Generated_Source\PSoC4/RTC.c **** 
 285:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
 286:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 287:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 288:Generated_Source\PSoC4/RTC.c **** 
 289:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 290:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 291:Generated_Source\PSoC4/RTC.c ****         {
 292:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 293:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 294:Generated_Source\PSoC4/RTC.c ****         }
 295:Generated_Source\PSoC4/RTC.c ****         else
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 54


 296:Generated_Source\PSoC4/RTC.c ****         {
 297:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
 298:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
 299:Generated_Source\PSoC4/RTC.c ****         }
 300:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
 301:Generated_Source\PSoC4/RTC.c **** }
 1309              		.loc 2 301 0
 1310 002a C046     		nop
 1311 002c BD46     		mov	sp, r7
 1312 002e 07B0     		add	sp, sp, #28
 1313              		@ sp needed
 1314 0030 90BD     		pop	{r4, r7, pc}
 1315              	.L59:
 1316 0032 C046     		.align	2
 1317              	.L58:
 1318 0034 00000000 		.word	RTC_unixTime
 1319              		.cfi_endproc
 1320              	.LFE34:
 1321              		.size	RTC_SetUnixTime, .-RTC_SetUnixTime
 1322              		.section	.text.RTC_GetUnixTime,"ax",%progbits
 1323              		.align	2
 1324              		.global	RTC_GetUnixTime
 1325              		.code	16
 1326              		.thumb_func
 1327              		.type	RTC_GetUnixTime, %function
 1328              	RTC_GetUnixTime:
 1329              	.LFB35:
 302:Generated_Source\PSoC4/RTC.c **** 
 303:Generated_Source\PSoC4/RTC.c **** 
 304:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 305:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetUnixTime
 306:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 307:Generated_Source\PSoC4/RTC.c **** *
 308:Generated_Source\PSoC4/RTC.c **** * Returns the time in the Unix/Epoch time format - the number of seconds 
 309:Generated_Source\PSoC4/RTC.c **** * elapsed from January 1, 1970 UTC 00:00 hrs.
 310:Generated_Source\PSoC4/RTC.c **** *
 311:Generated_Source\PSoC4/RTC.c **** * \return
 312:Generated_Source\PSoC4/RTC.c **** * Time The time value in the Unix time/Epoch time format.
 313:Generated_Source\PSoC4/RTC.c **** *
 314:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/RTC.c **** uint64 RTC_GetUnixTime(void)
 316:Generated_Source\PSoC4/RTC.c **** {
 1330              		.loc 2 316 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334 0000 90B5     		push	{r4, r7, lr}
 1335              		.cfi_def_cfa_offset 12
 1336              		.cfi_offset 4, -12
 1337              		.cfi_offset 7, -8
 1338              		.cfi_offset 14, -4
 1339 0002 00AF     		add	r7, sp, #0
 1340              		.cfi_def_cfa_register 7
 317:Generated_Source\PSoC4/RTC.c ****     return (RTC_unixTime);
 1341              		.loc 2 317 0
 1342 0004 034B     		ldr	r3, .L62
 1343 0006 5C68     		ldr	r4, [r3, #4]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 55


 1344 0008 1B68     		ldr	r3, [r3]
 318:Generated_Source\PSoC4/RTC.c **** }
 1345              		.loc 2 318 0
 1346 000a 1800     		movs	r0, r3
 1347 000c 2100     		movs	r1, r4
 1348 000e BD46     		mov	sp, r7
 1349              		@ sp needed
 1350 0010 90BD     		pop	{r4, r7, pc}
 1351              	.L63:
 1352 0012 C046     		.align	2
 1353              	.L62:
 1354 0014 00000000 		.word	RTC_unixTime
 1355              		.cfi_endproc
 1356              	.LFE35:
 1357              		.size	RTC_GetUnixTime, .-RTC_GetUnixTime
 1358              		.section	.text.RTC_SetPeriod,"ax",%progbits
 1359              		.align	2
 1360              		.global	RTC_SetPeriod
 1361              		.code	16
 1362              		.thumb_func
 1363              		.type	RTC_SetPeriod, %function
 1364              	RTC_SetPeriod:
 1365              	.LFB36:
 319:Generated_Source\PSoC4/RTC.c **** 
 320:Generated_Source\PSoC4/RTC.c **** 
 321:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 322:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetPeriod
 323:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 324:Generated_Source\PSoC4/RTC.c **** *
 325:Generated_Source\PSoC4/RTC.c **** * Sets the RTC time update API period.
 326:Generated_Source\PSoC4/RTC.c **** *
 327:Generated_Source\PSoC4/RTC.c **** * The user needs to pass the period as
 328:Generated_Source\PSoC4/RTC.c **** * a number of ticks and also a reference number of ticks taken by the same 
 329:Generated_Source\PSoC4/RTC.c **** * clock source for one second. For instance, for a 32 kHz clock source and RTC
 330:Generated_Source\PSoC4/RTC.c **** * period of 100 ms, the "ticks" value is 3200 and the "refOneSecTicks" value
 331:Generated_Source\PSoC4/RTC.c **** * is 32000. This value is used to increment the time every time
 332:Generated_Source\PSoC4/RTC.c **** * RTC_Update() API is called.
 333:Generated_Source\PSoC4/RTC.c **** *
 334:Generated_Source\PSoC4/RTC.c **** * \param ticks
 335:Generated_Source\PSoC4/RTC.c **** * The clock period taken as a number of ticks.
 336:Generated_Source\PSoC4/RTC.c **** *
 337:Generated_Source\PSoC4/RTC.c **** * \param refOneSecTicks
 338:Generated_Source\PSoC4/RTC.c **** * The reference number of ticks taken by the same clock source
 339:Generated_Source\PSoC4/RTC.c **** * for one second (the input clock frequency in Hz).
 340:Generated_Source\PSoC4/RTC.c **** *
 341:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 342:Generated_Source\PSoC4/RTC.c **** void RTC_SetPeriod(uint32 ticks, uint32 refOneSecTicks)
 343:Generated_Source\PSoC4/RTC.c **** {
 1366              		.loc 2 343 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 8
 1369              		@ frame_needed = 1, uses_anonymous_args = 0
 1370 0000 80B5     		push	{r7, lr}
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 7, -8
 1373              		.cfi_offset 14, -4
 1374 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 56


 1375              		.cfi_def_cfa_offset 16
 1376 0004 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 1378 0006 7860     		str	r0, [r7, #4]
 1379 0008 3960     		str	r1, [r7]
 344:Generated_Source\PSoC4/RTC.c ****     RTC_updateTimePeriod = ticks;
 1380              		.loc 2 344 0
 1381 000a 054B     		ldr	r3, .L65
 1382 000c 7A68     		ldr	r2, [r7, #4]
 1383 000e 1A60     		str	r2, [r3]
 345:Generated_Source\PSoC4/RTC.c ****     RTC_tickRefOneSec    = refOneSecTicks;
 1384              		.loc 2 345 0
 1385 0010 044B     		ldr	r3, .L65+4
 1386 0012 3A68     		ldr	r2, [r7]
 1387 0014 1A60     		str	r2, [r3]
 346:Generated_Source\PSoC4/RTC.c **** }
 1388              		.loc 2 346 0
 1389 0016 C046     		nop
 1390 0018 BD46     		mov	sp, r7
 1391 001a 02B0     		add	sp, sp, #8
 1392              		@ sp needed
 1393 001c 80BD     		pop	{r7, pc}
 1394              	.L66:
 1395 001e C046     		.align	2
 1396              	.L65:
 1397 0020 00000000 		.word	RTC_updateTimePeriod
 1398 0024 04000000 		.word	RTC_tickRefOneSec
 1399              		.cfi_endproc
 1400              	.LFE36:
 1401              		.size	RTC_SetPeriod, .-RTC_SetPeriod
 1402              		.section	.text.RTC_GetPeriod,"ax",%progbits
 1403              		.align	2
 1404              		.global	RTC_GetPeriod
 1405              		.code	16
 1406              		.thumb_func
 1407              		.type	RTC_GetPeriod, %function
 1408              	RTC_GetPeriod:
 1409              	.LFB37:
 347:Generated_Source\PSoC4/RTC.c **** 
 348:Generated_Source\PSoC4/RTC.c **** 
 349:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_SetPeriod
 351:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/RTC.c **** *
 353:Generated_Source\PSoC4/RTC.c **** * Gets the RTC time update API period.
 354:Generated_Source\PSoC4/RTC.c **** *
 355:Generated_Source\PSoC4/RTC.c **** * \return
 356:Generated_Source\PSoC4/RTC.c **** * Period The clock period taken as a number of ticks.
 357:Generated_Source\PSoC4/RTC.c **** *
 358:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 359:Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetPeriod(void)
 360:Generated_Source\PSoC4/RTC.c **** {
 1410              		.loc 2 360 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 57


 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 00AF     		add	r7, sp, #0
 1419              		.cfi_def_cfa_register 7
 361:Generated_Source\PSoC4/RTC.c ****     return(RTC_updateTimePeriod);
 1420              		.loc 2 361 0
 1421 0004 024B     		ldr	r3, .L69
 1422 0006 1B68     		ldr	r3, [r3]
 362:Generated_Source\PSoC4/RTC.c **** }
 1423              		.loc 2 362 0
 1424 0008 1800     		movs	r0, r3
 1425 000a BD46     		mov	sp, r7
 1426              		@ sp needed
 1427 000c 80BD     		pop	{r7, pc}
 1428              	.L70:
 1429 000e C046     		.align	2
 1430              	.L69:
 1431 0010 00000000 		.word	RTC_updateTimePeriod
 1432              		.cfi_endproc
 1433              	.LFE37:
 1434              		.size	RTC_GetPeriod, .-RTC_GetPeriod
 1435              		.section	.text.RTC_GetRefOneSec,"ax",%progbits
 1436              		.align	2
 1437              		.global	RTC_GetRefOneSec
 1438              		.code	16
 1439              		.thumb_func
 1440              		.type	RTC_GetRefOneSec, %function
 1441              	RTC_GetRefOneSec:
 1442              	.LFB38:
 363:Generated_Source\PSoC4/RTC.c **** 
 364:Generated_Source\PSoC4/RTC.c **** 
 365:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 366:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetRefOneSec
 367:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 368:Generated_Source\PSoC4/RTC.c **** *
 369:Generated_Source\PSoC4/RTC.c **** * Gets the RTC time update API period.
 370:Generated_Source\PSoC4/RTC.c **** *
 371:Generated_Source\PSoC4/RTC.c **** * \return
 372:Generated_Source\PSoC4/RTC.c **** * Period The reference number of ticks taken by the RTC clock source for one
 373:Generated_Source\PSoC4/RTC.c **** * second.
 374:Generated_Source\PSoC4/RTC.c **** *
 375:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 376:Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetRefOneSec(void)
 377:Generated_Source\PSoC4/RTC.c **** {
 1443              		.loc 2 377 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 1, uses_anonymous_args = 0
 1447 0000 80B5     		push	{r7, lr}
 1448              		.cfi_def_cfa_offset 8
 1449              		.cfi_offset 7, -8
 1450              		.cfi_offset 14, -4
 1451 0002 00AF     		add	r7, sp, #0
 1452              		.cfi_def_cfa_register 7
 378:Generated_Source\PSoC4/RTC.c ****     return(RTC_tickRefOneSec);
 1453              		.loc 2 378 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 58


 1454 0004 024B     		ldr	r3, .L73
 1455 0006 1B68     		ldr	r3, [r3]
 379:Generated_Source\PSoC4/RTC.c **** }
 1456              		.loc 2 379 0
 1457 0008 1800     		movs	r0, r3
 1458 000a BD46     		mov	sp, r7
 1459              		@ sp needed
 1460 000c 80BD     		pop	{r7, pc}
 1461              	.L74:
 1462 000e C046     		.align	2
 1463              	.L73:
 1464 0010 04000000 		.word	RTC_tickRefOneSec
 1465              		.cfi_endproc
 1466              	.LFE38:
 1467              		.size	RTC_GetRefOneSec, .-RTC_GetRefOneSec
 1468              		.section	.text.RTC_GetDateAndTime,"ax",%progbits
 1469              		.align	2
 1470              		.global	RTC_GetDateAndTime
 1471              		.code	16
 1472              		.thumb_func
 1473              		.type	RTC_GetDateAndTime, %function
 1474              	RTC_GetDateAndTime:
 1475              	.LFB39:
 380:Generated_Source\PSoC4/RTC.c **** 
 381:Generated_Source\PSoC4/RTC.c **** 
 382:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 383:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetDateAndTime
 384:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 385:Generated_Source\PSoC4/RTC.c **** *
 386:Generated_Source\PSoC4/RTC.c **** * Reads the current time and date.
 387:Generated_Source\PSoC4/RTC.c **** *
 388:Generated_Source\PSoC4/RTC.c **** * \param dateTime
 389:Generated_Source\PSoC4/RTC.c **** * The pointer to the RTC_date_time structure to which time and date is returned.
 390:Generated_Source\PSoC4/RTC.c **** *
 391:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 392:Generated_Source\PSoC4/RTC.c **** void RTC_GetDateAndTime(RTC_DATE_TIME* dateTime)
 393:Generated_Source\PSoC4/RTC.c **** {
 1476              		.loc 2 393 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 8
 1479              		@ frame_needed = 1, uses_anonymous_args = 0
 1480 0000 90B5     		push	{r4, r7, lr}
 1481              		.cfi_def_cfa_offset 12
 1482              		.cfi_offset 4, -12
 1483              		.cfi_offset 7, -8
 1484              		.cfi_offset 14, -4
 1485 0002 85B0     		sub	sp, sp, #20
 1486              		.cfi_def_cfa_offset 32
 1487 0004 02AF     		add	r7, sp, #8
 1488              		.cfi_def_cfa 7, 24
 1489 0006 7860     		str	r0, [r7, #4]
 394:Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(dateTime, (RTC_unixTime  + RTC_dstTimeOffset),
 1490              		.loc 2 394 0
 1491 0008 0A4B     		ldr	r3, .L76
 1492 000a 1B68     		ldr	r3, [r3]
 1493 000c 1900     		movs	r1, r3
 1494 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 59


 1495 0010 1A00     		movs	r2, r3
 1496 0012 094B     		ldr	r3, .L76+4
 1497 0014 5C68     		ldr	r4, [r3, #4]
 1498 0016 1B68     		ldr	r3, [r3]
 1499 0018 5B18     		adds	r3, r3, r1
 1500 001a 5441     		adcs	r4, r4, r2
 1501 001c 7968     		ldr	r1, [r7, #4]
 1502 001e 0022     		movs	r2, #0
 1503 0020 0092     		str	r2, [sp]
 1504 0022 1A00     		movs	r2, r3
 1505 0024 2300     		movs	r3, r4
 1506 0026 0800     		movs	r0, r1
 1507 0028 FFF7FEFF 		bl	RTC_UnixToDateTime
 395:Generated_Source\PSoC4/RTC.c ****                                                                             RTC_INITIAL_TIME_FORMAT
 396:Generated_Source\PSoC4/RTC.c **** }
 1508              		.loc 2 396 0
 1509 002c C046     		nop
 1510 002e BD46     		mov	sp, r7
 1511 0030 03B0     		add	sp, sp, #12
 1512              		@ sp needed
 1513 0032 90BD     		pop	{r4, r7, pc}
 1514              	.L77:
 1515              		.align	2
 1516              	.L76:
 1517 0034 08000000 		.word	RTC_dstTimeOffset
 1518 0038 00000000 		.word	RTC_unixTime
 1519              		.cfi_endproc
 1520              	.LFE39:
 1521              		.size	RTC_GetDateAndTime, .-RTC_GetDateAndTime
 1522              		.section	.text.RTC_GetTime,"ax",%progbits
 1523              		.align	2
 1524              		.global	RTC_GetTime
 1525              		.code	16
 1526              		.thumb_func
 1527              		.type	RTC_GetTime, %function
 1528              	RTC_GetTime:
 1529              	.LFB40:
 397:Generated_Source\PSoC4/RTC.c **** 
 398:Generated_Source\PSoC4/RTC.c **** 
 399:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 400:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetTime
 401:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 402:Generated_Source\PSoC4/RTC.c **** *
 403:Generated_Source\PSoC4/RTC.c **** * Reads the current time.
 404:Generated_Source\PSoC4/RTC.c **** *
 405:Generated_Source\PSoC4/RTC.c **** * \return
 406:Generated_Source\PSoC4/RTC.c **** * time The time value in the format selected by the user (12/24 hr);
 407:Generated_Source\PSoC4/RTC.c **** * The time value is available in the BCD format.
 408:Generated_Source\PSoC4/RTC.c **** *
 409:Generated_Source\PSoC4/RTC.c **** * \warning
 410:Generated_Source\PSoC4/RTC.c **** * Using RTC_GetTime and RTC_GetDate API separately might result
 411:Generated_Source\PSoC4/RTC.c **** * in errors when the time wraps around the end of the day. To avoid this,
 412:Generated_Source\PSoC4/RTC.c **** * use RTC_GetDateAndTime API.
 413:Generated_Source\PSoC4/RTC.c **** *
 414:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 415:Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetTime(void)
 416:Generated_Source\PSoC4/RTC.c **** {
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 60


 1530              		.loc 2 416 0
 1531              		.cfi_startproc
 1532              		@ args = 0, pretend = 0, frame = 0
 1533              		@ frame_needed = 1, uses_anonymous_args = 0
 1534 0000 90B5     		push	{r4, r7, lr}
 1535              		.cfi_def_cfa_offset 12
 1536              		.cfi_offset 4, -12
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 83B0     		sub	sp, sp, #12
 1540              		.cfi_def_cfa_offset 24
 1541 0004 02AF     		add	r7, sp, #8
 1542              		.cfi_def_cfa 7, 16
 417:Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(&RTC_currentTimeDate,
 1543              		.loc 2 417 0
 1544 0006 0C4B     		ldr	r3, .L80
 1545 0008 1B68     		ldr	r3, [r3]
 1546 000a 1900     		movs	r1, r3
 1547 000c 0023     		movs	r3, #0
 1548 000e 1A00     		movs	r2, r3
 1549 0010 0A4B     		ldr	r3, .L80+4
 1550 0012 5C68     		ldr	r4, [r3, #4]
 1551 0014 1B68     		ldr	r3, [r3]
 1552 0016 5B18     		adds	r3, r3, r1
 1553 0018 5441     		adcs	r4, r4, r2
 1554 001a 0949     		ldr	r1, .L80+8
 1555 001c 0022     		movs	r2, #0
 1556 001e 0092     		str	r2, [sp]
 1557 0020 1A00     		movs	r2, r3
 1558 0022 2300     		movs	r3, r4
 1559 0024 0800     		movs	r0, r1
 1560 0026 FFF7FEFF 		bl	RTC_UnixToDateTime
 418:Generated_Source\PSoC4/RTC.c ****                                     (RTC_unixTime  + RTC_dstTimeOffset),
 419:Generated_Source\PSoC4/RTC.c ****                                      RTC_INITIAL_TIME_FORMAT);
 420:Generated_Source\PSoC4/RTC.c **** 
 421:Generated_Source\PSoC4/RTC.c ****     return(RTC_currentTimeDate.time);
 1561              		.loc 2 421 0
 1562 002a 054B     		ldr	r3, .L80+8
 1563 002c 1B68     		ldr	r3, [r3]
 422:Generated_Source\PSoC4/RTC.c **** }
 1564              		.loc 2 422 0
 1565 002e 1800     		movs	r0, r3
 1566 0030 BD46     		mov	sp, r7
 1567 0032 01B0     		add	sp, sp, #4
 1568              		@ sp needed
 1569 0034 90BD     		pop	{r4, r7, pc}
 1570              	.L81:
 1571 0036 C046     		.align	2
 1572              	.L80:
 1573 0038 08000000 		.word	RTC_dstTimeOffset
 1574 003c 00000000 		.word	RTC_unixTime
 1575 0040 00000000 		.word	RTC_currentTimeDate
 1576              		.cfi_endproc
 1577              	.LFE40:
 1578              		.size	RTC_GetTime, .-RTC_GetTime
 1579              		.section	.text.RTC_GetDate,"ax",%progbits
 1580              		.align	2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 61


 1581              		.global	RTC_GetDate
 1582              		.code	16
 1583              		.thumb_func
 1584              		.type	RTC_GetDate, %function
 1585              	RTC_GetDate:
 1586              	.LFB41:
 423:Generated_Source\PSoC4/RTC.c **** 
 424:Generated_Source\PSoC4/RTC.c **** 
 425:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 426:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_GetDate
 427:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 428:Generated_Source\PSoC4/RTC.c **** *
 429:Generated_Source\PSoC4/RTC.c **** * Reads the current date.
 430:Generated_Source\PSoC4/RTC.c **** *
 431:Generated_Source\PSoC4/RTC.c **** * \return
 432:Generated_Source\PSoC4/RTC.c **** * date The value of date in the user selected format. The date value is 
 433:Generated_Source\PSoC4/RTC.c **** * available in the BCD format.
 434:Generated_Source\PSoC4/RTC.c **** *
 435:Generated_Source\PSoC4/RTC.c **** * \note
 436:Generated_Source\PSoC4/RTC.c **** * Using RTC_GetTime and RTC_GetDate API separately
 437:Generated_Source\PSoC4/RTC.c **** * might result in errors when the time wraps around the end of the day. To
 438:Generated_Source\PSoC4/RTC.c **** * avoid this, use RTC_GetDateAndTime API.
 439:Generated_Source\PSoC4/RTC.c **** *
 440:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 441:Generated_Source\PSoC4/RTC.c **** uint32 RTC_GetDate(void)
 442:Generated_Source\PSoC4/RTC.c **** {
 1587              		.loc 2 442 0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 0
 1590              		@ frame_needed = 1, uses_anonymous_args = 0
 1591 0000 90B5     		push	{r4, r7, lr}
 1592              		.cfi_def_cfa_offset 12
 1593              		.cfi_offset 4, -12
 1594              		.cfi_offset 7, -8
 1595              		.cfi_offset 14, -4
 1596 0002 83B0     		sub	sp, sp, #12
 1597              		.cfi_def_cfa_offset 24
 1598 0004 02AF     		add	r7, sp, #8
 1599              		.cfi_def_cfa 7, 16
 443:Generated_Source\PSoC4/RTC.c ****     RTC_UnixToDateTime(&RTC_currentTimeDate,
 1600              		.loc 2 443 0
 1601 0006 0C4B     		ldr	r3, .L84
 1602 0008 1B68     		ldr	r3, [r3]
 1603 000a 1900     		movs	r1, r3
 1604 000c 0023     		movs	r3, #0
 1605 000e 1A00     		movs	r2, r3
 1606 0010 0A4B     		ldr	r3, .L84+4
 1607 0012 5C68     		ldr	r4, [r3, #4]
 1608 0014 1B68     		ldr	r3, [r3]
 1609 0016 5B18     		adds	r3, r3, r1
 1610 0018 5441     		adcs	r4, r4, r2
 1611 001a 0949     		ldr	r1, .L84+8
 1612 001c 0022     		movs	r2, #0
 1613 001e 0092     		str	r2, [sp]
 1614 0020 1A00     		movs	r2, r3
 1615 0022 2300     		movs	r3, r4
 1616 0024 0800     		movs	r0, r1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 62


 1617 0026 FFF7FEFF 		bl	RTC_UnixToDateTime
 444:Generated_Source\PSoC4/RTC.c ****                                     (RTC_unixTime  + RTC_dstTimeOffset),
 445:Generated_Source\PSoC4/RTC.c ****                                      RTC_INITIAL_TIME_FORMAT);
 446:Generated_Source\PSoC4/RTC.c **** 
 447:Generated_Source\PSoC4/RTC.c ****     return(RTC_currentTimeDate.date);
 1618              		.loc 2 447 0
 1619 002a 054B     		ldr	r3, .L84+8
 1620 002c 5B68     		ldr	r3, [r3, #4]
 448:Generated_Source\PSoC4/RTC.c **** }
 1621              		.loc 2 448 0
 1622 002e 1800     		movs	r0, r3
 1623 0030 BD46     		mov	sp, r7
 1624 0032 01B0     		add	sp, sp, #4
 1625              		@ sp needed
 1626 0034 90BD     		pop	{r4, r7, pc}
 1627              	.L85:
 1628 0036 C046     		.align	2
 1629              	.L84:
 1630 0038 08000000 		.word	RTC_dstTimeOffset
 1631 003c 00000000 		.word	RTC_unixTime
 1632 0040 00000000 		.word	RTC_currentTimeDate
 1633              		.cfi_endproc
 1634              	.LFE41:
 1635              		.size	RTC_GetDate, .-RTC_GetDate
 1636              		.section	.text.RTC_ReadStatus,"ax",%progbits
 1637              		.align	2
 1638              		.global	RTC_ReadStatus
 1639              		.code	16
 1640              		.thumb_func
 1641              		.type	RTC_ReadStatus, %function
 1642              	RTC_ReadStatus:
 1643              	.LFB42:
 449:Generated_Source\PSoC4/RTC.c **** 
 450:Generated_Source\PSoC4/RTC.c **** 
 451:Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_ALARM_STATUS)
 452:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 453:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetAlarmDateAndTime
 454:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 455:Generated_Source\PSoC4/RTC.c ****     *
 456:Generated_Source\PSoC4/RTC.c ****     * Writes the time and date values as the current alarm time and date.
 457:Generated_Source\PSoC4/RTC.c ****     *
 458:Generated_Source\PSoC4/RTC.c ****     * \param alarmTime
 459:Generated_Source\PSoC4/RTC.c ****     * The pointer to the RTC_date_time global structure 
 460:Generated_Source\PSoC4/RTC.c ****     * where new values of the alarm time and date are stored, 
 461:Generated_Source\PSoC4/RTC.c ****     * see \ref RTC_DATE_TIME.
 462:Generated_Source\PSoC4/RTC.c ****     *
 463:Generated_Source\PSoC4/RTC.c ****     * \note
 464:Generated_Source\PSoC4/RTC.c ****     * Invalid time entries are written with "00:00:00:00" for the 24-hour format 
 465:Generated_Source\PSoC4/RTC.c ****     * and "AM 12:00:00:00" for the 12-hour format. Invalid date entries are 
 466:Generated_Source\PSoC4/RTC.c ****     * written with a date equivalent to 01-JAN-2000.
 467:Generated_Source\PSoC4/RTC.c ****     *
 468:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 469:Generated_Source\PSoC4/RTC.c ****     void RTC_SetAlarmDateAndTime(const RTC_DATE_TIME* alarmTime)
 470:Generated_Source\PSoC4/RTC.c ****     {
 471:Generated_Source\PSoC4/RTC.c ****         RTC_alarmCfgTimeDate = *alarmTime;
 472:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeAlarm = 
 473:Generated_Source\PSoC4/RTC.c ****         RTC_ConstructUnixAlarmTime(alarmTime, (uint8)RTC_alarmCfgMask);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 63


 474:Generated_Source\PSoC4/RTC.c ****     }
 475:Generated_Source\PSoC4/RTC.c **** 
 476:Generated_Source\PSoC4/RTC.c **** 
 477:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 478:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetAlarmDateAndTime
 479:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 480:Generated_Source\PSoC4/RTC.c ****     *
 481:Generated_Source\PSoC4/RTC.c ****     * Reads the current alarm time and date.
 482:Generated_Source\PSoC4/RTC.c ****     *
 483:Generated_Source\PSoC4/RTC.c ****     * \param alarmTimeDate
 484:Generated_Source\PSoC4/RTC.c ****     * The pointer to the RTC_date_time structure to which the alarm 
 485:Generated_Source\PSoC4/RTC.c ****     * date and time are returned, see \ref RTC_DATE_TIME.
 486:Generated_Source\PSoC4/RTC.c ****     *
 487:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 488:Generated_Source\PSoC4/RTC.c ****     void RTC_GetAlarmDateAndTime(RTC_DATE_TIME* alarmTimeDate)
 489:Generated_Source\PSoC4/RTC.c ****     {
 490:Generated_Source\PSoC4/RTC.c ****         *alarmTimeDate = RTC_alarmCfgTimeDate;
 491:Generated_Source\PSoC4/RTC.c ****     }
 492:Generated_Source\PSoC4/RTC.c **** 
 493:Generated_Source\PSoC4/RTC.c **** 
 494:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetAlarmMask
 496:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 497:Generated_Source\PSoC4/RTC.c ****     *
 498:Generated_Source\PSoC4/RTC.c ****     * Writes the Alarm Mask software register with one bit per time/date entry.
 499:Generated_Source\PSoC4/RTC.c ****     * The alarm is true when all masked time/date values match the Alarm values.
 500:Generated_Source\PSoC4/RTC.c ****     * Generated only if the alarm functionality is enabled.
 501:Generated_Source\PSoC4/RTC.c ****     *
 502:Generated_Source\PSoC4/RTC.c ****     * \param mask
 503:Generated_Source\PSoC4/RTC.c ****     * The Alarm Mask software register value. The values shown below can be
 504:Generated_Source\PSoC4/RTC.c ****     * OR'ed and passed as an argument as well, see \ref group_rtc_alarm_mask.
 505:Generated_Source\PSoC4/RTC.c ****     *
 506:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 507:Generated_Source\PSoC4/RTC.c ****     void RTC_SetAlarmMask(uint32 mask)
 508:Generated_Source\PSoC4/RTC.c ****     {
 509:Generated_Source\PSoC4/RTC.c ****         RTC_alarmCfgMask = (uint8)mask;
 510:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeAlarm = 
 511:Generated_Source\PSoC4/RTC.c ****         RTC_ConstructUnixAlarmTime(&RTC_alarmCfgTimeDate, (uint8)mask);
 512:Generated_Source\PSoC4/RTC.c ****     }
 513:Generated_Source\PSoC4/RTC.c **** 
 514:Generated_Source\PSoC4/RTC.c **** 
 515:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 516:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetAlarmMask
 517:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 518:Generated_Source\PSoC4/RTC.c ****     *
 519:Generated_Source\PSoC4/RTC.c ****     * Reads the Alarm Mask software register. Generated only if the alarm 
 520:Generated_Source\PSoC4/RTC.c ****     * functionality is enabled, see \ref group_rtc_alarm_mask.
 521:Generated_Source\PSoC4/RTC.c ****     *
 522:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 523:Generated_Source\PSoC4/RTC.c ****     uint32 RTC_GetAlarmMask(void)
 524:Generated_Source\PSoC4/RTC.c ****     {
 525:Generated_Source\PSoC4/RTC.c ****         return((uint32)RTC_alarmCfgMask);
 526:Generated_Source\PSoC4/RTC.c ****     }
 527:Generated_Source\PSoC4/RTC.c **** 
 528:Generated_Source\PSoC4/RTC.c **** 
 529:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 530:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetAlarmStatus
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 64


 531:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 532:Generated_Source\PSoC4/RTC.c ****     *
 533:Generated_Source\PSoC4/RTC.c ****     *  Returns the alarm status of RTC.
 534:Generated_Source\PSoC4/RTC.c ****     *
 535:Generated_Source\PSoC4/RTC.c ****     * \return
 536:Generated_Source\PSoC4/RTC.c ****     * The Alarm active status. This bit is high when the current time and date 
 537:Generated_Source\PSoC4/RTC.c ****     * match the alarm time and date. <br>
 538:Generated_Source\PSoC4/RTC.c ****     * 0 - The Alarm status is not active <br>
 539:Generated_Source\PSoC4/RTC.c ****     * 1 - The Alarm status is active.
 540:Generated_Source\PSoC4/RTC.c ****     *
 541:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 542:Generated_Source\PSoC4/RTC.c ****     uint32 RTC_GetAlarmStatus(void)
 543:Generated_Source\PSoC4/RTC.c ****     {
 544:Generated_Source\PSoC4/RTC.c ****         return((0uL != (RTC_currentTimeDate.status & (1uL << RTC_STATUS_ALARM_OFFSET))) ?
 545:Generated_Source\PSoC4/RTC.c ****                 1uL : 
 546:Generated_Source\PSoC4/RTC.c ****                 0uL);
 547:Generated_Source\PSoC4/RTC.c ****     }
 548:Generated_Source\PSoC4/RTC.c **** 
 549:Generated_Source\PSoC4/RTC.c **** 
 550:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 551:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_ClearAlarmStatus
 552:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 553:Generated_Source\PSoC4/RTC.c ****     *
 554:Generated_Source\PSoC4/RTC.c ****     *  Clears the alarm status of RTC.
 555:Generated_Source\PSoC4/RTC.c ****     *
 556:Generated_Source\PSoC4/RTC.c ****     * \note
 557:Generated_Source\PSoC4/RTC.c ****     * The Alarm active (AA) flag clears after read. This bit will be set in the next
 558:Generated_Source\PSoC4/RTC.c ****     * alarm match event only. If Alarm is set on only minutes and the alarm
 559:Generated_Source\PSoC4/RTC.c ****     * minutes is 20 minutes - the alarm triggers once every 20th minute of
 560:Generated_Source\PSoC4/RTC.c ****     * every hour.
 561:Generated_Source\PSoC4/RTC.c ****     *
 562:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 563:Generated_Source\PSoC4/RTC.c ****     void RTC_ClearAlarmStatus(void)
 564:Generated_Source\PSoC4/RTC.c ****     {
 565:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status &= (~(1uL << RTC_STATUS_ALARM_OFFSET));
 566:Generated_Source\PSoC4/RTC.c ****         RTC_alarmCurStatus = 0u;
 567:Generated_Source\PSoC4/RTC.c ****     }
 568:Generated_Source\PSoC4/RTC.c **** 
 569:Generated_Source\PSoC4/RTC.c **** 
 570:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 571:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetAlarmHandler
 572:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 573:Generated_Source\PSoC4/RTC.c ****     *
 574:Generated_Source\PSoC4/RTC.c ****     *  This API sets the function to be called when the alarm goes off / triggers.
 575:Generated_Source\PSoC4/RTC.c ****     *  This API is generated only if the alarm functionality is enabled in the
 576:Generated_Source\PSoC4/RTC.c ****     *  customizer.
 577:Generated_Source\PSoC4/RTC.c ****     *
 578:Generated_Source\PSoC4/RTC.c ****     * \param CallbackFunction
 579:Generated_Source\PSoC4/RTC.c ****     * The callback function address.
 580:Generated_Source\PSoC4/RTC.c ****     *
 581:Generated_Source\PSoC4/RTC.c ****     * \return
 582:Generated_Source\PSoC4/RTC.c ****     * A previous callback function address.
 583:Generated_Source\PSoC4/RTC.c ****     *
 584:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 585:Generated_Source\PSoC4/RTC.c ****     void* RTC_SetAlarmHandler(void (*CallbackFunction)(void))
 586:Generated_Source\PSoC4/RTC.c ****     {
 587:Generated_Source\PSoC4/RTC.c ****         void (*tmpCallbackPtr)(void);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 65


 588:Generated_Source\PSoC4/RTC.c **** 
 589:Generated_Source\PSoC4/RTC.c ****         tmpCallbackPtr = RTC_alarmCallbackPtr;
 590:Generated_Source\PSoC4/RTC.c ****         RTC_alarmCallbackPtr = CallbackFunction;
 591:Generated_Source\PSoC4/RTC.c **** 
 592:Generated_Source\PSoC4/RTC.c ****         return((void*)tmpCallbackPtr);
 593:Generated_Source\PSoC4/RTC.c ****     }
 594:Generated_Source\PSoC4/RTC.c **** 
 595:Generated_Source\PSoC4/RTC.c **** 
 596:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 597:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetNexAlarmTime
 598:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 599:Generated_Source\PSoC4/RTC.c ****     *
 600:Generated_Source\PSoC4/RTC.c ****     *  This is an internal function that calculates the time of the next alarm
 601:Generated_Source\PSoC4/RTC.c ****     *  in the UNIX format taking into account the current "Alarm Config Mask".
 602:Generated_Source\PSoC4/RTC.c ****     *
 603:Generated_Source\PSoC4/RTC.c ****     * \param curUnixTime
 604:Generated_Source\PSoC4/RTC.c ****     * The current time value in the UNIX format.
 605:Generated_Source\PSoC4/RTC.c ****     *
 606:Generated_Source\PSoC4/RTC.c ****     * \param alarmCfgMask
 607:Generated_Source\PSoC4/RTC.c ****     * The current Alarm Config Mask.
 608:Generated_Source\PSoC4/RTC.c ****     *
 609:Generated_Source\PSoC4/RTC.c ****     * \return
 610:Generated_Source\PSoC4/RTC.c ****     * Returns time of the next alarm in the UNIX format.
 611:Generated_Source\PSoC4/RTC.c ****     *
 612:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 613:Generated_Source\PSoC4/RTC.c ****     uint64 RTC_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask)
 614:Generated_Source\PSoC4/RTC.c ****     {
 615:Generated_Source\PSoC4/RTC.c ****         uint32 prevVal;
 616:Generated_Source\PSoC4/RTC.c ****         uint32 nextVal;
 617:Generated_Source\PSoC4/RTC.c ****         uint32 carryFlag;
 618:Generated_Source\PSoC4/RTC.c ****         uint32 daysInMonth;
 619:Generated_Source\PSoC4/RTC.c ****         RTC_DATE_TIME curDateTime;
 620:Generated_Source\PSoC4/RTC.c **** 
 621:Generated_Source\PSoC4/RTC.c ****         carryFlag = 1u;
 622:Generated_Source\PSoC4/RTC.c ****         RTC_UnixToDateTime(&curDateTime, curUnixTime, (uint32)RTC_24_HOURS_FORMAT);
 623:Generated_Source\PSoC4/RTC.c **** 
 624:Generated_Source\PSoC4/RTC.c ****         /* Calculates Second value of next alarm time based on current time and Alarm Config Mask *
 625:Generated_Source\PSoC4/RTC.c ****         if(0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_SEC_MASK))
 626:Generated_Source\PSoC4/RTC.c ****         {
 627:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetSecond(curDateTime.time);
 628:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextMinSec(prevVal);
 629:Generated_Source\PSoC4/RTC.c ****             curDateTime.time = RTC_SetSecond(curDateTime.time, nextVal);
 630:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 631:Generated_Source\PSoC4/RTC.c ****         }
 632:Generated_Source\PSoC4/RTC.c **** 
 633:Generated_Source\PSoC4/RTC.c ****         /* Calculates Minute value of next alarm time based on current time and Alarm Config Mask *
 634:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MIN_MASK)))
 635:Generated_Source\PSoC4/RTC.c ****         {
 636:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetMinutes(curDateTime.time);
 637:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextMinSec(prevVal);
 638:Generated_Source\PSoC4/RTC.c ****             curDateTime.time = RTC_SetMinutes(curDateTime.time, nextVal);
 639:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 640:Generated_Source\PSoC4/RTC.c ****         }
 641:Generated_Source\PSoC4/RTC.c **** 
 642:Generated_Source\PSoC4/RTC.c ****         /* Calculates Hour value of next alarm time based on current time and Alarm Config Mask */
 643:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_HOUR_MASK)))
 644:Generated_Source\PSoC4/RTC.c ****         {
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 66


 645:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetHours(curDateTime.time);
 646:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextHour(prevVal);
 647:Generated_Source\PSoC4/RTC.c ****             curDateTime.time = RTC_SetHours(curDateTime.time, nextVal);
 648:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 649:Generated_Source\PSoC4/RTC.c ****         }
 650:Generated_Source\PSoC4/RTC.c **** 
 651:Generated_Source\PSoC4/RTC.c ****         /* Calculates Day value of next alarm time based on current time and Alarm Config Mask */
 652:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_DAYOFMONTH_MASK)))
 653:Generated_Source\PSoC4/RTC.c ****         {
 654:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetDay(curDateTime.date);
 655:Generated_Source\PSoC4/RTC.c ****             if(0u != (alarmCfgMask & RTC_ALARM_DAYOFWEEK_MASK))
 656:Generated_Source\PSoC4/RTC.c ****             {
 657:Generated_Source\PSoC4/RTC.c ****                 daysInMonth = RTC_DaysInMonth(RTC_GetMonth(curDateTime.date),
 658:Generated_Source\PSoC4/RTC.c ****                                                            RTC_GetYear(curDateTime.date));
 659:Generated_Source\PSoC4/RTC.c ****                 nextVal = prevVal + RTC_DAYS_PER_WEEK;
 660:Generated_Source\PSoC4/RTC.c ****                 nextVal = (nextVal > daysInMonth) ? (nextVal - daysInMonth) : nextVal;
 661:Generated_Source\PSoC4/RTC.c ****             }
 662:Generated_Source\PSoC4/RTC.c ****             else
 663:Generated_Source\PSoC4/RTC.c ****             {
 664:Generated_Source\PSoC4/RTC.c ****                 nextVal = RTC_GetNextDay(RTC_GetYear(curDateTime.date),
 665:Generated_Source\PSoC4/RTC.c ****                                                       RTC_GetMonth(curDateTime.date),
 666:Generated_Source\PSoC4/RTC.c ****                                                       RTC_GetDay(curDateTime.date),
 667:Generated_Source\PSoC4/RTC.c ****                                                       (~((uint32)alarmCfgMask)));
 668:Generated_Source\PSoC4/RTC.c ****             }
 669:Generated_Source\PSoC4/RTC.c ****             curDateTime.date = RTC_SetDay(curDateTime.date, nextVal);
 670:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 671:Generated_Source\PSoC4/RTC.c ****         }
 672:Generated_Source\PSoC4/RTC.c **** 
 673:Generated_Source\PSoC4/RTC.c ****         /* Calculates Month value of next alarm time based on current time and Alarm Config Mask */
 674:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MONTH_MASK)))
 675:Generated_Source\PSoC4/RTC.c ****         {
 676:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetMonth(curDateTime.date);
 677:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextMonth(prevVal);
 678:Generated_Source\PSoC4/RTC.c ****             curDateTime.date = RTC_SetMonth(curDateTime.date, nextVal);
 679:Generated_Source\PSoC4/RTC.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 680:Generated_Source\PSoC4/RTC.c ****         }
 681:Generated_Source\PSoC4/RTC.c **** 
 682:Generated_Source\PSoC4/RTC.c ****         /* Calculates Year value of next alarm time based on current time and Alarm Config Mask */
 683:Generated_Source\PSoC4/RTC.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_ALARM_YEAR_MASK)))
 684:Generated_Source\PSoC4/RTC.c ****         {
 685:Generated_Source\PSoC4/RTC.c ****             prevVal = RTC_GetYear(curDateTime.date);
 686:Generated_Source\PSoC4/RTC.c ****             nextVal = RTC_GetNextYear(prevVal);
 687:Generated_Source\PSoC4/RTC.c ****             curDateTime.date = RTC_SetYear(curDateTime.date, nextVal);
 688:Generated_Source\PSoC4/RTC.c ****         }
 689:Generated_Source\PSoC4/RTC.c **** 
 690:Generated_Source\PSoC4/RTC.c ****         return(RTC_DateTimeToUnix(curDateTime.date, curDateTime.time));
 691:Generated_Source\PSoC4/RTC.c ****     }
 692:Generated_Source\PSoC4/RTC.c **** 
 693:Generated_Source\PSoC4/RTC.c **** 
 694:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 695:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_ConstructUnixAlarmTime
 696:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 697:Generated_Source\PSoC4/RTC.c ****     *
 698:Generated_Source\PSoC4/RTC.c ****     * This is an internal function that calculates the time of the first alarm
 699:Generated_Source\PSoC4/RTC.c ****     * in the UNIX format taking into account the current "Alarm Config Mask".
 700:Generated_Source\PSoC4/RTC.c ****     *
 701:Generated_Source\PSoC4/RTC.c ****     * \param alarmTime
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 67


 702:Generated_Source\PSoC4/RTC.c ****     * Desired alarm time in the regular time format, 
 703:Generated_Source\PSoC4/RTC.c ****     * see \ref RTC_DATE_TIME
 704:Generated_Source\PSoC4/RTC.c ****     *
 705:Generated_Source\PSoC4/RTC.c ****     * \param alarmCfgMask
 706:Generated_Source\PSoC4/RTC.c ****     * The current Alarm Config Mask.
 707:Generated_Source\PSoC4/RTC.c ****     *
 708:Generated_Source\PSoC4/RTC.c ****     * \return
 709:Generated_Source\PSoC4/RTC.c ****     * time of the first alarm in the UNIX format.
 710:Generated_Source\PSoC4/RTC.c ****     *
 711:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 712:Generated_Source\PSoC4/RTC.c ****     uint64 RTC_ConstructUnixAlarmTime(const RTC_DATE_TIME* alarmTime, uint8 alarmCfgMask)
 713:Generated_Source\PSoC4/RTC.c ****     {
 714:Generated_Source\PSoC4/RTC.c ****         uint32 tmpCurVal;
 715:Generated_Source\PSoC4/RTC.c ****         uint32 tmpNextVal;
 716:Generated_Source\PSoC4/RTC.c ****         uint32 carryFlag;
 717:Generated_Source\PSoC4/RTC.c ****         uint32 tmpAlarmDate;
 718:Generated_Source\PSoC4/RTC.c ****         uint32 tmpAlarmTime;
 719:Generated_Source\PSoC4/RTC.c ****         uint32 daysInMonth;
 720:Generated_Source\PSoC4/RTC.c ****         RTC_DATE_TIME curDateTime;
 721:Generated_Source\PSoC4/RTC.c **** 
 722:Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate = 0u;
 723:Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime = 0u;
 724:Generated_Source\PSoC4/RTC.c ****         RTC_UnixToDateTime(&curDateTime, RTC_unixTime, 
 725:Generated_Source\PSoC4/RTC.c ****                                        (uint32)RTC_24_HOURS_FORMAT);
 726:Generated_Source\PSoC4/RTC.c **** 
 727:Generated_Source\PSoC4/RTC.c ****         /* Calculates Seconds value of first Alarm based on current time and Alarm Config Mask */
 728:Generated_Source\PSoC4/RTC.c ****         tmpCurVal =  RTC_GetSecond(curDateTime.time);
 729:Generated_Source\PSoC4/RTC.c ****         tmpNextVal = RTC_GetSecond(alarmTime->time);
 730:Generated_Source\PSoC4/RTC.c ****         carryFlag = (tmpCurVal > tmpNextVal) ? 1u : 0u;
 731:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_SEC_MASK))
 732:Generated_Source\PSoC4/RTC.c ****         {
 733:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? 0u : tmpCurVal;
 734:Generated_Source\PSoC4/RTC.c ****         }
 735:Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime = RTC_SetSecond(tmpAlarmTime, tmpNextVal);
 736:Generated_Source\PSoC4/RTC.c **** 
 737:Generated_Source\PSoC4/RTC.c ****         /* Calculates Minutes value of first Alarm based on current time and Alarm Config Mask */
 738:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetMinutes(curDateTime.time);
 739:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MIN_MASK))
 740:Generated_Source\PSoC4/RTC.c ****         {
 741:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextMinSec(tmpCurVal) : tmpCurVal;
 742:Generated_Source\PSoC4/RTC.c ****         }
 743:Generated_Source\PSoC4/RTC.c ****         else
 744:Generated_Source\PSoC4/RTC.c ****         {
 745:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetMinutes(alarmTime->time);
 746:Generated_Source\PSoC4/RTC.c ****         }
 747:Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 748:Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime =  RTC_SetMinutes(tmpAlarmTime, tmpNextVal);
 749:Generated_Source\PSoC4/RTC.c **** 
 750:Generated_Source\PSoC4/RTC.c ****         /* Calculates Hours value of first Alarm based on current time and Alarm Config Mask */
 751:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetHours(curDateTime.time);
 752:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_HOUR_MASK))
 753:Generated_Source\PSoC4/RTC.c ****         {
 754:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextHour(tmpCurVal) : tmpCurVal;
 755:Generated_Source\PSoC4/RTC.c ****         }
 756:Generated_Source\PSoC4/RTC.c ****         else
 757:Generated_Source\PSoC4/RTC.c ****         {
 758:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetHours(alarmTime->time);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 68


 759:Generated_Source\PSoC4/RTC.c ****             if((uint32)RTC_24_HOURS_FORMAT != RTC_GetTimeFormat(alarmTime->time))
 760:Generated_Source\PSoC4/RTC.c ****             {
 761:Generated_Source\PSoC4/RTC.c ****                 if((uint32)RTC_AM != RTC_GetAmPm(alarmTime->time))
 762:Generated_Source\PSoC4/RTC.c ****                 {
 763:Generated_Source\PSoC4/RTC.c ****                     tmpNextVal += RTC_HOURS_PER_HALF_DAY;
 764:Generated_Source\PSoC4/RTC.c ****                 }
 765:Generated_Source\PSoC4/RTC.c ****             }
 766:Generated_Source\PSoC4/RTC.c ****         }
 767:Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 768:Generated_Source\PSoC4/RTC.c ****         tmpAlarmTime =  RTC_SetHours(tmpAlarmTime, tmpNextVal);
 769:Generated_Source\PSoC4/RTC.c **** 
 770:Generated_Source\PSoC4/RTC.c ****         /* Calculates Day value of first Alarm based on current time and Alarm Config Mask */
 771:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetDay(curDateTime.date);
 772:Generated_Source\PSoC4/RTC.c ****         tmpNextVal = RTC_GetDay(alarmTime->date);
 773:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_DAYOFMONTH_MASK))
 774:Generated_Source\PSoC4/RTC.c ****         {
 775:Generated_Source\PSoC4/RTC.c ****             if(0u != (alarmCfgMask & RTC_ALARM_DAYOFWEEK_MASK))
 776:Generated_Source\PSoC4/RTC.c ****             {
 777:Generated_Source\PSoC4/RTC.c ****                 daysInMonth = RTC_DaysInMonth(RTC_GetMonth(curDateTime.date),
 778:Generated_Source\PSoC4/RTC.c ****                                                            RTC_GetYear(curDateTime.date));
 779:Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = 
 780:Generated_Source\PSoC4/RTC.c ****                 (curDateTime.dayOfWeek <= alarmTime->dayOfWeek) ? (alarmTime->dayOfWeek - curDateTi
 781:Generated_Source\PSoC4/RTC.c ****                                 ((RTC_DAYS_PER_WEEK - curDateTime.dayOfWeek) + alarmTime->dayOfWeek
 782:Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = tmpCurVal + tmpNextVal;
 783:Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = (tmpNextVal > daysInMonth) ? (tmpNextVal - daysInMonth) : tmpNextVal;
 784:Generated_Source\PSoC4/RTC.c ****             }
 785:Generated_Source\PSoC4/RTC.c ****             else
 786:Generated_Source\PSoC4/RTC.c ****             {
 787:Generated_Source\PSoC4/RTC.c ****                 tmpNextVal = 
 788:Generated_Source\PSoC4/RTC.c ****                 (0u == carryFlag) ? tmpCurVal : RTC_GetNextDay(RTC_GetYear(curDateTime.date),
 789:Generated_Source\PSoC4/RTC.c ****                                                 RTC_GetMonth(curDateTime.date),
 790:Generated_Source\PSoC4/RTC.c ****                                                 tmpCurVal,
 791:Generated_Source\PSoC4/RTC.c ****                                                 RTC_ALARM_DAYOFMONTH_MASK);
 792:Generated_Source\PSoC4/RTC.c ****             }
 793:Generated_Source\PSoC4/RTC.c ****         }
 794:Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 795:Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate =  RTC_SetDay(tmpAlarmDate, tmpNextVal);
 796:Generated_Source\PSoC4/RTC.c **** 
 797:Generated_Source\PSoC4/RTC.c ****         /* Calculates Month value of first Alarm based on current time and Alarm Config Mask */
 798:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetMonth(curDateTime.date);
 799:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MONTH_MASK))
 800:Generated_Source\PSoC4/RTC.c ****         {
 801:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextMonth(tmpCurVal) : tmpCurVal;
 802:Generated_Source\PSoC4/RTC.c ****         }
 803:Generated_Source\PSoC4/RTC.c ****         else
 804:Generated_Source\PSoC4/RTC.c ****         {
 805:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetMonth(alarmTime->date);
 806:Generated_Source\PSoC4/RTC.c ****         }
 807:Generated_Source\PSoC4/RTC.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 808:Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate =  RTC_SetMonth(tmpAlarmDate, tmpNextVal);
 809:Generated_Source\PSoC4/RTC.c **** 
 810:Generated_Source\PSoC4/RTC.c ****         /* Calculates Year value of first Alarm based on current time and Alarm Config Mask */
 811:Generated_Source\PSoC4/RTC.c ****         tmpCurVal  = RTC_GetYear(curDateTime.date);
 812:Generated_Source\PSoC4/RTC.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_ALARM_MONTH_MASK))
 813:Generated_Source\PSoC4/RTC.c ****         {
 814:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = (0u != carryFlag) ? RTC_GetNextYear(tmpCurVal) : tmpCurVal;
 815:Generated_Source\PSoC4/RTC.c ****         }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 69


 816:Generated_Source\PSoC4/RTC.c ****         else
 817:Generated_Source\PSoC4/RTC.c ****         {
 818:Generated_Source\PSoC4/RTC.c ****             tmpNextVal = RTC_GetYear(alarmTime->date);
 819:Generated_Source\PSoC4/RTC.c ****         }
 820:Generated_Source\PSoC4/RTC.c ****         tmpAlarmDate =  RTC_SetYear(tmpAlarmDate, tmpNextVal);
 821:Generated_Source\PSoC4/RTC.c **** 
 822:Generated_Source\PSoC4/RTC.c ****         return(RTC_DateTimeToUnix(tmpAlarmDate, tmpAlarmTime));
 823:Generated_Source\PSoC4/RTC.c ****     }
 824:Generated_Source\PSoC4/RTC.c **** #endif/* (0u != RTC_INITIAL_ALARM_STATUS) */
 825:Generated_Source\PSoC4/RTC.c **** 
 826:Generated_Source\PSoC4/RTC.c **** 
 827:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_ReadStatus
 829:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
 830:Generated_Source\PSoC4/RTC.c **** *
 831:Generated_Source\PSoC4/RTC.c **** * Reads the Status software register, which has flags for DST (DST),
 832:Generated_Source\PSoC4/RTC.c **** * Leap Year (LY), AM/PM (AM_PM).
 833:Generated_Source\PSoC4/RTC.c **** *
 834:Generated_Source\PSoC4/RTC.c **** * \return
 835:Generated_Source\PSoC4/RTC.c **** * The values shown below are OR'ed and returned if more than one status
 836:Generated_Source\PSoC4/RTC.c **** * bits are set, see \ref group_rtc_status.
 837:Generated_Source\PSoC4/RTC.c **** *
 838:Generated_Source\PSoC4/RTC.c **** * \note
 839:Generated_Source\PSoC4/RTC.c **** * Reading the status without sync with the date and time read may cause an
 840:Generated_Source\PSoC4/RTC.c **** * error due to a roll-over at AM/PM, the end of a year, the end of a day;
 841:Generated_Source\PSoC4/RTC.c **** * RTC_GetDateAndTime() API is used to obtain the status and
 842:Generated_Source\PSoC4/RTC.c **** * the status member of the returned structure can be checked with the masks.
 843:Generated_Source\PSoC4/RTC.c **** *
 844:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
 845:Generated_Source\PSoC4/RTC.c **** uint32 RTC_ReadStatus(void)
 846:Generated_Source\PSoC4/RTC.c **** {
 1644              		.loc 2 846 0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 24
 1647              		@ frame_needed = 1, uses_anonymous_args = 0
 1648 0000 80B5     		push	{r7, lr}
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 7, -8
 1651              		.cfi_offset 14, -4
 1652 0002 86B0     		sub	sp, sp, #24
 1653              		.cfi_def_cfa_offset 32
 1654 0004 00AF     		add	r7, sp, #0
 1655              		.cfi_def_cfa_register 7
 847:Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
 848:Generated_Source\PSoC4/RTC.c ****     RTC_DATE_TIME tmpTimeDate;
 849:Generated_Source\PSoC4/RTC.c **** 
 850:Generated_Source\PSoC4/RTC.c ****     RTC_GetDateAndTime(&tmpTimeDate);
 1656              		.loc 2 850 0
 1657 0006 3B1D     		adds	r3, r7, #4
 1658 0008 1800     		movs	r0, r3
 1659 000a FFF7FEFF 		bl	RTC_GetDateAndTime
 851:Generated_Source\PSoC4/RTC.c ****     tmpYear = RTC_GetYear(tmpTimeDate.date);
 1660              		.loc 2 851 0
 1661 000e 3B1D     		adds	r3, r7, #4
 1662 0010 5B68     		ldr	r3, [r3, #4]
 1663 0012 1800     		movs	r0, r3
 1664 0014 FFF7FEFF 		bl	RTC_GetYear
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 70


 1665 0018 0300     		movs	r3, r0
 1666 001a 7B61     		str	r3, [r7, #20]
 852:Generated_Source\PSoC4/RTC.c **** 
 853:Generated_Source\PSoC4/RTC.c ****     if(0uL != RTC_LeapYear(tmpYear))
 1667              		.loc 2 853 0
 1668 001c 7B69     		ldr	r3, [r7, #20]
 1669 001e 1800     		movs	r0, r3
 1670 0020 FFF7FEFF 		bl	RTC_LeapYear
 1671 0024 031E     		subs	r3, r0, #0
 1672 0026 06D0     		beq	.L87
 854:Generated_Source\PSoC4/RTC.c ****     {
 855:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status |= (1uL << RTC_STATUS_LY_OFFSET);
 1673              		.loc 2 855 0
 1674 0028 144B     		ldr	r3, .L92
 1675 002a DB68     		ldr	r3, [r3, #12]
 1676 002c 0822     		movs	r2, #8
 1677 002e 1A43     		orrs	r2, r3
 1678 0030 124B     		ldr	r3, .L92
 1679 0032 DA60     		str	r2, [r3, #12]
 1680 0034 06E0     		b	.L88
 1681              	.L87:
 856:Generated_Source\PSoC4/RTC.c ****     }
 857:Generated_Source\PSoC4/RTC.c ****     else
 858:Generated_Source\PSoC4/RTC.c ****     {
 859:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status &= ~(1uL << RTC_STATUS_LY_OFFSET);
 1682              		.loc 2 859 0
 1683 0036 114B     		ldr	r3, .L92
 1684 0038 DB68     		ldr	r3, [r3, #12]
 1685 003a 0822     		movs	r2, #8
 1686 003c 9343     		bics	r3, r2
 1687 003e 1A00     		movs	r2, r3
 1688 0040 0E4B     		ldr	r3, .L92
 1689 0042 DA60     		str	r2, [r3, #12]
 1690              	.L88:
 860:Generated_Source\PSoC4/RTC.c ****     }
 861:Generated_Source\PSoC4/RTC.c **** 
 862:Generated_Source\PSoC4/RTC.c **** 
 863:Generated_Source\PSoC4/RTC.c ****     if(0uL != RTC_GetAmPm(tmpTimeDate.time))
 1691              		.loc 2 863 0
 1692 0044 3B1D     		adds	r3, r7, #4
 1693 0046 1B68     		ldr	r3, [r3]
 1694 0048 1800     		movs	r0, r3
 1695 004a FFF7FEFF 		bl	RTC_GetAmPm
 1696 004e 031E     		subs	r3, r0, #0
 1697 0050 06D0     		beq	.L89
 864:Generated_Source\PSoC4/RTC.c ****     {
 865:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status |= (1uL << RTC_STATUS_AM_PM_OFFSET);
 1698              		.loc 2 865 0
 1699 0052 0A4B     		ldr	r3, .L92
 1700 0054 DB68     		ldr	r3, [r3, #12]
 1701 0056 1022     		movs	r2, #16
 1702 0058 1A43     		orrs	r2, r3
 1703 005a 084B     		ldr	r3, .L92
 1704 005c DA60     		str	r2, [r3, #12]
 1705 005e 06E0     		b	.L90
 1706              	.L89:
 866:Generated_Source\PSoC4/RTC.c ****     }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 71


 867:Generated_Source\PSoC4/RTC.c ****     else
 868:Generated_Source\PSoC4/RTC.c ****     {
 869:Generated_Source\PSoC4/RTC.c ****         RTC_currentTimeDate.status &= ~(1uL << RTC_STATUS_AM_PM_OFFSET);
 1707              		.loc 2 869 0
 1708 0060 064B     		ldr	r3, .L92
 1709 0062 DB68     		ldr	r3, [r3, #12]
 1710 0064 1022     		movs	r2, #16
 1711 0066 9343     		bics	r3, r2
 1712 0068 1A00     		movs	r2, r3
 1713 006a 044B     		ldr	r3, .L92
 1714 006c DA60     		str	r2, [r3, #12]
 1715              	.L90:
 870:Generated_Source\PSoC4/RTC.c ****     }
 871:Generated_Source\PSoC4/RTC.c **** 
 872:Generated_Source\PSoC4/RTC.c ****     return(RTC_currentTimeDate.status);
 1716              		.loc 2 872 0
 1717 006e 034B     		ldr	r3, .L92
 1718 0070 DB68     		ldr	r3, [r3, #12]
 873:Generated_Source\PSoC4/RTC.c **** }
 1719              		.loc 2 873 0
 1720 0072 1800     		movs	r0, r3
 1721 0074 BD46     		mov	sp, r7
 1722 0076 06B0     		add	sp, sp, #24
 1723              		@ sp needed
 1724 0078 80BD     		pop	{r7, pc}
 1725              	.L93:
 1726 007a C046     		.align	2
 1727              	.L92:
 1728 007c 00000000 		.word	RTC_currentTimeDate
 1729              		.cfi_endproc
 1730              	.LFE42:
 1731              		.size	RTC_ReadStatus, .-RTC_ReadStatus
 1732              		.section	.text.RTC_ConvertBCDToDec,"ax",%progbits
 1733              		.align	2
 1734              		.global	RTC_ConvertBCDToDec
 1735              		.code	16
 1736              		.thumb_func
 1737              		.type	RTC_ConvertBCDToDec, %function
 1738              	RTC_ConvertBCDToDec:
 1739              	.LFB43:
 874:Generated_Source\PSoC4/RTC.c **** 
 875:Generated_Source\PSoC4/RTC.c **** 
 876:Generated_Source\PSoC4/RTC.c **** #if(0u != RTC_INITIAL_DST_STATUS)
 877:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 878:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetDSTStartTime
 879:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 880:Generated_Source\PSoC4/RTC.c ****     *
 881:Generated_Source\PSoC4/RTC.c ****     * Stores the DST Start time.
 882:Generated_Source\PSoC4/RTC.c ****     *
 883:Generated_Source\PSoC4/RTC.c ****     * Only generated if DST is enabled. The date passed can be relative or fixed. 
 884:Generated_Source\PSoC4/RTC.c ****     * For a relative date, the user needs to provide a valid day of a week, a 
 885:Generated_Source\PSoC4/RTC.c ****     * week of a month and a month in the dstStartTime structure.
 886:Generated_Source\PSoC4/RTC.c ****     * For a fixed date, the user needs to enter a valid day of a month and a month 
 887:Generated_Source\PSoC4/RTC.c ****     * in the dstStartTime structure. The hour value is optional and if invalid
 888:Generated_Source\PSoC4/RTC.c ****     * taken as 00 hrs. Invalid entries are not stored and the DST start date
 889:Generated_Source\PSoC4/RTC.c ****     * retains a previous value or no value at all.
 890:Generated_Source\PSoC4/RTC.c ****     *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 72


 891:Generated_Source\PSoC4/RTC.c ****     * \param dstStartTime
 892:Generated_Source\PSoC4/RTC.c ****     * The DST Start time register value, see \ref RTC_DST_TIME
 893:Generated_Source\PSoC4/RTC.c ****     *
 894:Generated_Source\PSoC4/RTC.c ****     * \param type
 895:Generated_Source\PSoC4/RTC.c ****     * Defines the DST operation mode, see \ref RTC_DST_DATETYPE_ENUM.
 896:Generated_Source\PSoC4/RTC.c ****     *
 897:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 898:Generated_Source\PSoC4/RTC.c ****     void RTC_SetDSTStartTime(const RTC_DST_TIME* dstStartTime,
 899:Generated_Source\PSoC4/RTC.c ****                                                 RTC_DST_DATETYPE_ENUM type)
 900:Generated_Source\PSoC4/RTC.c ****     {
 901:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.timeFormat    = (uint8)type;
 902:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.hour          = dstStartTime->hour;
 903:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.dayOfWeek     = dstStartTime->dayOfWeek;
 904:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.weekOfMonth   = dstStartTime->weekOfMonth;
 905:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.dayOfMonth    = dstStartTime->dayOfMonth;
 906:Generated_Source\PSoC4/RTC.c ****         RTC_dstStartTime.month         = dstStartTime->month;
 907:Generated_Source\PSoC4/RTC.c **** 
 908:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
 909:Generated_Source\PSoC4/RTC.c **** 
 910:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 911:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 912:Generated_Source\PSoC4/RTC.c ****         {
 913:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 914:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 915:Generated_Source\PSoC4/RTC.c ****         }
 916:Generated_Source\PSoC4/RTC.c ****         else
 917:Generated_Source\PSoC4/RTC.c ****         {
 918:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
 919:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
 920:Generated_Source\PSoC4/RTC.c ****         }
 921:Generated_Source\PSoC4/RTC.c ****     }
 922:Generated_Source\PSoC4/RTC.c **** 
 923:Generated_Source\PSoC4/RTC.c **** 
 924:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 925:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_SetDSTStopTime
 926:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 927:Generated_Source\PSoC4/RTC.c ****     *
 928:Generated_Source\PSoC4/RTC.c ****     * Stores the DST Stop time.
 929:Generated_Source\PSoC4/RTC.c ****     * 
 930:Generated_Source\PSoC4/RTC.c ****     * Only generated if DST is enabled. The date passed can be relative or fixed. 
 931:Generated_Source\PSoC4/RTC.c ****     * For a relative date, the user needs to provide a valid day of a week, a week 
 932:Generated_Source\PSoC4/RTC.c ****     * of a month and a month in the dstStopTime structure.
 933:Generated_Source\PSoC4/RTC.c ****     * For a fixed date, the user needs to enter a valid day of a month and a month
 934:Generated_Source\PSoC4/RTC.c ****     * in the dstSoptTime structure. The hour value is optional and if invalid 
 935:Generated_Source\PSoC4/RTC.c ****     * taken as 00 hrs. Invalid entries are not stored and the DST start date 
 936:Generated_Source\PSoC4/RTC.c ****     * retains a previous value or no value at all.
 937:Generated_Source\PSoC4/RTC.c ****     *
 938:Generated_Source\PSoC4/RTC.c ****     * \param dstStopTime
 939:Generated_Source\PSoC4/RTC.c ****     * DST Stop time register values, see \ref RTC_DST_TIME
 940:Generated_Source\PSoC4/RTC.c ****     *
 941:Generated_Source\PSoC4/RTC.c ****     * \param type
 942:Generated_Source\PSoC4/RTC.c ****     * Defines the DST operation mode, see \ref RTC_DST_DATETYPE_ENUM.
 943:Generated_Source\PSoC4/RTC.c ****     *
 944:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 945:Generated_Source\PSoC4/RTC.c ****     void RTC_SetDSTStopTime(const RTC_DST_TIME* dstStopTime,
 946:Generated_Source\PSoC4/RTC.c ****                                                RTC_DST_DATETYPE_ENUM type)
 947:Generated_Source\PSoC4/RTC.c ****     {
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 73


 948:Generated_Source\PSoC4/RTC.c **** 
 949:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.timeFormat  = (uint8)type;
 950:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.hour           = dstStopTime->hour;
 951:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.dayOfWeek      = dstStopTime->dayOfWeek;
 952:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.weekOfMonth = dstStopTime->weekOfMonth;
 953:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.dayOfMonth     = dstStopTime->dayOfMonth;
 954:Generated_Source\PSoC4/RTC.c ****         RTC_dstStopTime.month         = dstStopTime->month;
 955:Generated_Source\PSoC4/RTC.c **** 
 956:Generated_Source\PSoC4/RTC.c ****         RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
 957:Generated_Source\PSoC4/RTC.c **** 
 958:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime >= RTC_unixTimeDstStart) &&
 959:Generated_Source\PSoC4/RTC.c ****            (RTC_unixTime <= RTC_unixTimeDstStop))
 960:Generated_Source\PSoC4/RTC.c ****         {
 961:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
 962:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
 963:Generated_Source\PSoC4/RTC.c ****         }
 964:Generated_Source\PSoC4/RTC.c ****         else
 965:Generated_Source\PSoC4/RTC.c ****         {
 966:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
 967:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0uL;
 968:Generated_Source\PSoC4/RTC.c ****         }
 969:Generated_Source\PSoC4/RTC.c ****     }
 970:Generated_Source\PSoC4/RTC.c **** 
 971:Generated_Source\PSoC4/RTC.c **** 
 972:Generated_Source\PSoC4/RTC.c ****     /*******************************************************************************
 973:Generated_Source\PSoC4/RTC.c ****     * Function Name: RTC_GetDstUnixTime
 974:Generated_Source\PSoC4/RTC.c ****     ****************************************************************************//**
 975:Generated_Source\PSoC4/RTC.c ****     *
 976:Generated_Source\PSoC4/RTC.c ****     * Calculates the DST Start/Stop time in the UNIX format.
 977:Generated_Source\PSoC4/RTC.c ****     *
 978:Generated_Source\PSoC4/RTC.c ****     * \param dstTime
 979:Generated_Source\PSoC4/RTC.c ****     * The DST Start/Stop time in the regular time format,
 980:Generated_Source\PSoC4/RTC.c ****     * see \ref RTC_DST_TIME
 981:Generated_Source\PSoC4/RTC.c ****     *
 982:Generated_Source\PSoC4/RTC.c ****     * \return
 983:Generated_Source\PSoC4/RTC.c ****     * The DST Start/Stop time in the UNIX format.
 984:Generated_Source\PSoC4/RTC.c ****     *
 985:Generated_Source\PSoC4/RTC.c ****     *******************************************************************************/
 986:Generated_Source\PSoC4/RTC.c ****     uint64 RTC_GetDstUnixTime(const RTC_DST_TIME* dstTime)
 987:Generated_Source\PSoC4/RTC.c ****     {
 988:Generated_Source\PSoC4/RTC.c ****         uint32 tmpYear;
 989:Generated_Source\PSoC4/RTC.c ****         uint32 tmpDate;
 990:Generated_Source\PSoC4/RTC.c ****         uint64 dstUnixTime;
 991:Generated_Source\PSoC4/RTC.c **** 
 992:Generated_Source\PSoC4/RTC.c ****         RTC_DATE_TIME tmpTimeDate;
 993:Generated_Source\PSoC4/RTC.c **** 
 994:Generated_Source\PSoC4/RTC.c ****         RTC_UnixToDateTime(&tmpTimeDate, RTC_unixTime, RTC_INITIAL_TIME_FORMAT);
 995:Generated_Source\PSoC4/RTC.c ****         tmpYear = RTC_GetYear(tmpTimeDate.date);
 996:Generated_Source\PSoC4/RTC.c **** 
 997:Generated_Source\PSoC4/RTC.c ****         if(dstTime->timeFormat == (uint8)RTC_DST_DATE_FIXED)
 998:Generated_Source\PSoC4/RTC.c ****         {
 999:Generated_Source\PSoC4/RTC.c ****             tmpDate =  RTC_ConstructDate(dstTime->month, dstTime->dayOfMonth, tmpYear);
1000:Generated_Source\PSoC4/RTC.c ****         }
1001:Generated_Source\PSoC4/RTC.c ****         else
1002:Generated_Source\PSoC4/RTC.c ****         {
1003:Generated_Source\PSoC4/RTC.c ****             tmpDate = 
1004:Generated_Source\PSoC4/RTC.c ****             RTC_RelativeToFixed(dstTime->dayOfWeek, dstTime->weekOfMonth, dstTime->month, tmpYear);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 74


1005:Generated_Source\PSoC4/RTC.c ****         }
1006:Generated_Source\PSoC4/RTC.c **** 
1007:Generated_Source\PSoC4/RTC.c ****         tmpTimeDate.time = 
1008:Generated_Source\PSoC4/RTC.c ****         RTC_ConstructTime((uint32)RTC_24_HOURS_FORMAT, 0u, dstTime->hour, 0u, 0u);
1009:Generated_Source\PSoC4/RTC.c ****         dstUnixTime = RTC_DateTimeToUnix(tmpDate, tmpTimeDate.time);
1010:Generated_Source\PSoC4/RTC.c **** 
1011:Generated_Source\PSoC4/RTC.c ****         return(dstUnixTime);
1012:Generated_Source\PSoC4/RTC.c ****     }
1013:Generated_Source\PSoC4/RTC.c **** 
1014:Generated_Source\PSoC4/RTC.c **** #endif /* (0u != RTC_INITIAL_DST_STATUS) */
1015:Generated_Source\PSoC4/RTC.c **** 
1016:Generated_Source\PSoC4/RTC.c **** 
1017:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1018:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_ConvertBCDToDec
1019:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1020:Generated_Source\PSoC4/RTC.c **** *
1021:Generated_Source\PSoC4/RTC.c **** * Converts a 4-byte BCD number into a 4-byte hexadecimal number. Each byte is
1022:Generated_Source\PSoC4/RTC.c **** * converted individually and returned as an individual byte in the 32-bit
1023:Generated_Source\PSoC4/RTC.c **** * variable.
1024:Generated_Source\PSoC4/RTC.c **** *
1025:Generated_Source\PSoC4/RTC.c **** * \param bcdNum
1026:Generated_Source\PSoC4/RTC.c **** * A 4-byte BCD number. Each byte represents BCD.
1027:Generated_Source\PSoC4/RTC.c **** * 0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 the in BCD format.
1028:Generated_Source\PSoC4/RTC.c **** *
1029:Generated_Source\PSoC4/RTC.c **** * \return
1030:Generated_Source\PSoC4/RTC.c **** * decNum A 4-byte hexadecimal equivalent number of the BCD number.
1031:Generated_Source\PSoC4/RTC.c **** * BCD number 0x11223344 -> returned hexadecimal number 0x0B16212C.
1032:Generated_Source\PSoC4/RTC.c **** *
1033:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1034:Generated_Source\PSoC4/RTC.c **** uint32 RTC_ConvertBCDToDec(uint32 bcdNum)
1035:Generated_Source\PSoC4/RTC.c **** {
 1740              		.loc 2 1035 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 24
 1743              		@ frame_needed = 1, uses_anonymous_args = 0
 1744 0000 80B5     		push	{r7, lr}
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 7, -8
 1747              		.cfi_offset 14, -4
 1748 0002 86B0     		sub	sp, sp, #24
 1749              		.cfi_def_cfa_offset 32
 1750 0004 00AF     		add	r7, sp, #0
 1751              		.cfi_def_cfa_register 7
 1752 0006 7860     		str	r0, [r7, #4]
1036:Generated_Source\PSoC4/RTC.c ****     uint32 i;
1037:Generated_Source\PSoC4/RTC.c ****     uint32 mult;
1038:Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1039:Generated_Source\PSoC4/RTC.c **** 
1040:Generated_Source\PSoC4/RTC.c ****     mult   = 1u;
 1753              		.loc 2 1040 0
 1754 0008 0123     		movs	r3, #1
 1755 000a 3B61     		str	r3, [r7, #16]
1041:Generated_Source\PSoC4/RTC.c ****     retVal = 0u;
 1756              		.loc 2 1041 0
 1757 000c 0023     		movs	r3, #0
 1758 000e FB60     		str	r3, [r7, #12]
1042:Generated_Source\PSoC4/RTC.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 75


1043:Generated_Source\PSoC4/RTC.c ****     for(i = 0u; i < 16u; i++)
 1759              		.loc 2 1043 0
 1760 0010 0023     		movs	r3, #0
 1761 0012 7B61     		str	r3, [r7, #20]
 1762 0014 13E0     		b	.L95
 1763              	.L96:
1044:Generated_Source\PSoC4/RTC.c ****     {
1045:Generated_Source\PSoC4/RTC.c ****         retVal += (bcdNum & RTC_BCD_ONE_DIGIT_MASK) * mult;
 1764              		.loc 2 1045 0 discriminator 3
 1765 0016 7B68     		ldr	r3, [r7, #4]
 1766 0018 0F22     		movs	r2, #15
 1767 001a 1340     		ands	r3, r2
 1768 001c 3A69     		ldr	r2, [r7, #16]
 1769 001e 5343     		muls	r3, r2
 1770 0020 FA68     		ldr	r2, [r7, #12]
 1771 0022 D318     		adds	r3, r2, r3
 1772 0024 FB60     		str	r3, [r7, #12]
1046:Generated_Source\PSoC4/RTC.c ****         bcdNum >>= RTC_BCD_NUMBER_SIZE;
 1773              		.loc 2 1046 0 discriminator 3
 1774 0026 7B68     		ldr	r3, [r7, #4]
 1775 0028 1B09     		lsrs	r3, r3, #4
 1776 002a 7B60     		str	r3, [r7, #4]
1047:Generated_Source\PSoC4/RTC.c ****         mult *= 10u;
 1777              		.loc 2 1047 0 discriminator 3
 1778 002c 3A69     		ldr	r2, [r7, #16]
 1779 002e 1300     		movs	r3, r2
 1780 0030 9B00     		lsls	r3, r3, #2
 1781 0032 9B18     		adds	r3, r3, r2
 1782 0034 5B00     		lsls	r3, r3, #1
 1783 0036 3B61     		str	r3, [r7, #16]
1043:Generated_Source\PSoC4/RTC.c ****     {
 1784              		.loc 2 1043 0 discriminator 3
 1785 0038 7B69     		ldr	r3, [r7, #20]
 1786 003a 0133     		adds	r3, r3, #1
 1787 003c 7B61     		str	r3, [r7, #20]
 1788              	.L95:
1043:Generated_Source\PSoC4/RTC.c ****     {
 1789              		.loc 2 1043 0 is_stmt 0 discriminator 1
 1790 003e 7B69     		ldr	r3, [r7, #20]
 1791 0040 0F2B     		cmp	r3, #15
 1792 0042 E8D9     		bls	.L96
1048:Generated_Source\PSoC4/RTC.c ****     }
1049:Generated_Source\PSoC4/RTC.c **** 
1050:Generated_Source\PSoC4/RTC.c ****     return(retVal);
 1793              		.loc 2 1050 0 is_stmt 1
 1794 0044 FB68     		ldr	r3, [r7, #12]
1051:Generated_Source\PSoC4/RTC.c **** }
 1795              		.loc 2 1051 0
 1796 0046 1800     		movs	r0, r3
 1797 0048 BD46     		mov	sp, r7
 1798 004a 06B0     		add	sp, sp, #24
 1799              		@ sp needed
 1800 004c 80BD     		pop	{r7, pc}
 1801              		.cfi_endproc
 1802              	.LFE43:
 1803              		.size	RTC_ConvertBCDToDec, .-RTC_ConvertBCDToDec
 1804 004e C046     		.section	.text.RTC_ConvertDecToBCD,"ax",%progbits
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 76


 1805              		.align	2
 1806              		.global	RTC_ConvertDecToBCD
 1807              		.code	16
 1808              		.thumb_func
 1809              		.type	RTC_ConvertDecToBCD, %function
 1810              	RTC_ConvertDecToBCD:
 1811              	.LFB44:
1052:Generated_Source\PSoC4/RTC.c **** 
1053:Generated_Source\PSoC4/RTC.c **** 
1054:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1055:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_ConvertDecToBCD
1056:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1057:Generated_Source\PSoC4/RTC.c **** *
1058:Generated_Source\PSoC4/RTC.c **** * Converts a 4-byte hexadecimal number into a 4-byte BCD number. Each byte
1059:Generated_Source\PSoC4/RTC.c **** * is converted individually and returned as an individual byte in the 32-bit
1060:Generated_Source\PSoC4/RTC.c **** * variable.
1061:Generated_Source\PSoC4/RTC.c **** *
1062:Generated_Source\PSoC4/RTC.c **** * \param decNum
1063:Generated_Source\PSoC4/RTC.c **** * A 4-byte hexadecimal number. Each byte is represented in hex.
1064:Generated_Source\PSoC4/RTC.c **** * 0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 in the hex format.
1065:Generated_Source\PSoC4/RTC.c **** *
1066:Generated_Source\PSoC4/RTC.c **** * \return
1067:Generated_Source\PSoC4/RTC.c **** * bcdNum - A 4-byte BCD equivalent of the passed hexadecimal number. 
1068:Generated_Source\PSoC4/RTC.c **** * Hexadecimal number 0x11223344 -> returned BCD number 0x17345168.
1069:Generated_Source\PSoC4/RTC.c **** *
1070:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1071:Generated_Source\PSoC4/RTC.c **** uint32 RTC_ConvertDecToBCD(uint32 decNum)
1072:Generated_Source\PSoC4/RTC.c **** {
 1812              		.loc 2 1072 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 24
 1815              		@ frame_needed = 1, uses_anonymous_args = 0
 1816 0000 80B5     		push	{r7, lr}
 1817              		.cfi_def_cfa_offset 8
 1818              		.cfi_offset 7, -8
 1819              		.cfi_offset 14, -4
 1820 0002 86B0     		sub	sp, sp, #24
 1821              		.cfi_def_cfa_offset 32
 1822 0004 00AF     		add	r7, sp, #0
 1823              		.cfi_def_cfa_register 7
 1824 0006 7860     		str	r0, [r7, #4]
1073:Generated_Source\PSoC4/RTC.c ****     uint32 shift;
1074:Generated_Source\PSoC4/RTC.c ****     uint32 tmpVal;
1075:Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1076:Generated_Source\PSoC4/RTC.c **** 
1077:Generated_Source\PSoC4/RTC.c ****     shift  = 0u;
 1825              		.loc 2 1077 0
 1826 0008 0023     		movs	r3, #0
 1827 000a 7B61     		str	r3, [r7, #20]
1078:Generated_Source\PSoC4/RTC.c ****     retVal = 0u;
 1828              		.loc 2 1078 0
 1829 000c 0023     		movs	r3, #0
 1830 000e FB60     		str	r3, [r7, #12]
1079:Generated_Source\PSoC4/RTC.c ****     tmpVal = decNum;
 1831              		.loc 2 1079 0
 1832 0010 7B68     		ldr	r3, [r7, #4]
 1833 0012 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 77


 1834              	.L99:
1080:Generated_Source\PSoC4/RTC.c **** 
1081:Generated_Source\PSoC4/RTC.c ****     do
1082:Generated_Source\PSoC4/RTC.c ****     {
1083:Generated_Source\PSoC4/RTC.c ****         retVal |= ((tmpVal % 10u) << shift);
 1835              		.loc 2 1083 0 discriminator 1
 1836 0014 3B69     		ldr	r3, [r7, #16]
 1837 0016 0A21     		movs	r1, #10
 1838 0018 1800     		movs	r0, r3
 1839 001a FFF7FEFF 		bl	__aeabi_uidivmod
 1840 001e 0B00     		movs	r3, r1
 1841 0020 1A00     		movs	r2, r3
 1842 0022 7B69     		ldr	r3, [r7, #20]
 1843 0024 9A40     		lsls	r2, r2, r3
 1844 0026 1300     		movs	r3, r2
 1845 0028 FA68     		ldr	r2, [r7, #12]
 1846 002a 1343     		orrs	r3, r2
 1847 002c FB60     		str	r3, [r7, #12]
1084:Generated_Source\PSoC4/RTC.c ****         tmpVal /= 10u;
 1848              		.loc 2 1084 0 discriminator 1
 1849 002e 3B69     		ldr	r3, [r7, #16]
 1850 0030 0A21     		movs	r1, #10
 1851 0032 1800     		movs	r0, r3
 1852 0034 FFF7FEFF 		bl	__aeabi_uidiv
 1853 0038 0300     		movs	r3, r0
 1854 003a 3B61     		str	r3, [r7, #16]
1085:Generated_Source\PSoC4/RTC.c ****         shift  += RTC_BCD_NUMBER_SIZE;
 1855              		.loc 2 1085 0 discriminator 1
 1856 003c 7B69     		ldr	r3, [r7, #20]
 1857 003e 0433     		adds	r3, r3, #4
 1858 0040 7B61     		str	r3, [r7, #20]
1086:Generated_Source\PSoC4/RTC.c ****     }
1087:Generated_Source\PSoC4/RTC.c ****     while(tmpVal >= 10u);
 1859              		.loc 2 1087 0 discriminator 1
 1860 0042 3B69     		ldr	r3, [r7, #16]
 1861 0044 092B     		cmp	r3, #9
 1862 0046 E5D8     		bhi	.L99
1088:Generated_Source\PSoC4/RTC.c **** 
1089:Generated_Source\PSoC4/RTC.c ****     retVal |= (tmpVal << shift);
 1863              		.loc 2 1089 0
 1864 0048 3A69     		ldr	r2, [r7, #16]
 1865 004a 7B69     		ldr	r3, [r7, #20]
 1866 004c 9A40     		lsls	r2, r2, r3
 1867 004e 1300     		movs	r3, r2
 1868 0050 FA68     		ldr	r2, [r7, #12]
 1869 0052 1343     		orrs	r3, r2
 1870 0054 FB60     		str	r3, [r7, #12]
1090:Generated_Source\PSoC4/RTC.c **** 
1091:Generated_Source\PSoC4/RTC.c ****     return(retVal);
 1871              		.loc 2 1091 0
 1872 0056 FB68     		ldr	r3, [r7, #12]
1092:Generated_Source\PSoC4/RTC.c **** }
 1873              		.loc 2 1092 0
 1874 0058 1800     		movs	r0, r3
 1875 005a BD46     		mov	sp, r7
 1876 005c 06B0     		add	sp, sp, #24
 1877              		@ sp needed
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 78


 1878 005e 80BD     		pop	{r7, pc}
 1879              		.cfi_endproc
 1880              	.LFE44:
 1881              		.size	RTC_ConvertDecToBCD, .-RTC_ConvertDecToBCD
 1882              		.section	.text.RTC_Update,"ax",%progbits
 1883              		.align	2
 1884              		.global	RTC_Update
 1885              		.code	16
 1886              		.thumb_func
 1887              		.type	RTC_Update, %function
 1888              	RTC_Update:
 1889              	.LFB45:
1093:Generated_Source\PSoC4/RTC.c **** 
1094:Generated_Source\PSoC4/RTC.c **** 
1095:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1096:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_Update
1097:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1098:Generated_Source\PSoC4/RTC.c **** *
1099:Generated_Source\PSoC4/RTC.c **** * This API updates the time registers and performs alarm/DST check.
1100:Generated_Source\PSoC4/RTC.c **** *
1101:Generated_Source\PSoC4/RTC.c **** * This function increments the time/date registers by an input clock period.
1102:Generated_Source\PSoC4/RTC.c **** * The period is set by RTC_SetPeriod() API or WDT period selected 
1103:Generated_Source\PSoC4/RTC.c **** * for RTC in the clocks configuration window (low frequency clocks tab) 
1104:Generated_Source\PSoC4/RTC.c **** * interface every time it is called.
1105:Generated_Source\PSoC4/RTC.c **** *
1106:Generated_Source\PSoC4/RTC.c **** * API is automatically mapped to the callback slot of WDT or DeepSleep Timer 
1107:Generated_Source\PSoC4/RTC.c **** * and period, if the configuration is as follows:
1108:Generated_Source\PSoC4/RTC.c **** * 1) Option "Implement RTC update manually" in the customizer is unchecked
1109:Generated_Source\PSoC4/RTC.c **** * 2) One of WDTs or DeeSleep Timers is selected in the "Use for RTC" panel of 
1110:Generated_Source\PSoC4/RTC.c **** * the low frequency clocks tab
1111:Generated_Source\PSoC4/RTC.c **** * 3) Option "Implementation by IDE" is selected in the "Timer (WDT) ISR" panel.
1112:Generated_Source\PSoC4/RTC.c **** *
1113:Generated_Source\PSoC4/RTC.c **** * If option "Implement RTC update manually" is checked in the customizer or
1114:Generated_Source\PSoC4/RTC.c **** * option "None" is selected in the "Use for RTC" panel, it is the user's
1115:Generated_Source\PSoC4/RTC.c **** * responsibility:
1116:Generated_Source\PSoC4/RTC.c **** * 1) to call this API from the clock ISR to be used as the RTC's input
1117:Generated_Source\PSoC4/RTC.c **** * 2) set the period of the RTC through RTC_SetPeriod() API.
1118:Generated_Source\PSoC4/RTC.c **** *
1119:Generated_Source\PSoC4/RTC.c **** * \note Updates the Unix time register, updates the alarm and DST status.
1120:Generated_Source\PSoC4/RTC.c **** *
1121:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/RTC.c **** void RTC_Update(void)
1123:Generated_Source\PSoC4/RTC.c **** {
 1890              		.loc 2 1123 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 1, uses_anonymous_args = 0
 1894 0000 90B5     		push	{r4, r7, lr}
 1895              		.cfi_def_cfa_offset 12
 1896              		.cfi_offset 4, -12
 1897              		.cfi_offset 7, -8
 1898              		.cfi_offset 14, -4
 1899 0002 00AF     		add	r7, sp, #0
 1900              		.cfi_def_cfa_register 7
1124:Generated_Source\PSoC4/RTC.c ****     static uint32 RTC_currentTickNumber = 0u;
1125:Generated_Source\PSoC4/RTC.c ****     RTC_currentTickNumber += RTC_updateTimePeriod;
 1901              		.loc 2 1125 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 79


 1902 0004 104B     		ldr	r3, .L104
 1903 0006 1A68     		ldr	r2, [r3]
 1904 0008 104B     		ldr	r3, .L104+4
 1905 000a 1B68     		ldr	r3, [r3]
 1906 000c D218     		adds	r2, r2, r3
 1907 000e 0E4B     		ldr	r3, .L104
 1908 0010 1A60     		str	r2, [r3]
1126:Generated_Source\PSoC4/RTC.c **** 
1127:Generated_Source\PSoC4/RTC.c ****     if(RTC_currentTickNumber >= RTC_tickRefOneSec)
 1909              		.loc 2 1127 0
 1910 0012 0D4B     		ldr	r3, .L104
 1911 0014 1A68     		ldr	r2, [r3]
 1912 0016 0E4B     		ldr	r3, .L104+8
 1913 0018 1B68     		ldr	r3, [r3]
 1914 001a 9A42     		cmp	r2, r3
 1915 001c 10D3     		bcc	.L103
1128:Generated_Source\PSoC4/RTC.c ****     {
1129:Generated_Source\PSoC4/RTC.c ****         RTC_unixTime++;
 1916              		.loc 2 1129 0
 1917 001e 0D4B     		ldr	r3, .L104+12
 1918 0020 5C68     		ldr	r4, [r3, #4]
 1919 0022 1B68     		ldr	r3, [r3]
 1920 0024 0121     		movs	r1, #1
 1921 0026 0022     		movs	r2, #0
 1922 0028 5B18     		adds	r3, r3, r1
 1923 002a 5441     		adcs	r4, r4, r2
 1924 002c 094A     		ldr	r2, .L104+12
 1925 002e 1360     		str	r3, [r2]
 1926 0030 5460     		str	r4, [r2, #4]
1130:Generated_Source\PSoC4/RTC.c ****         RTC_currentTickNumber = 
1131:Generated_Source\PSoC4/RTC.c ****         (uint32) RTC_currentTickNumber - RTC_tickRefOneSec;
 1927              		.loc 2 1131 0
 1928 0032 054B     		ldr	r3, .L104
 1929 0034 1A68     		ldr	r2, [r3]
 1930 0036 064B     		ldr	r3, .L104+8
 1931 0038 1B68     		ldr	r3, [r3]
 1932 003a D21A     		subs	r2, r2, r3
1130:Generated_Source\PSoC4/RTC.c ****         RTC_currentTickNumber = 
 1933              		.loc 2 1130 0
 1934 003c 024B     		ldr	r3, .L104
 1935 003e 1A60     		str	r2, [r3]
 1936              	.L103:
1132:Generated_Source\PSoC4/RTC.c **** 
1133:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_DST_STATUS)
1134:Generated_Source\PSoC4/RTC.c ****         if(RTC_unixTime == RTC_unixTimeDstStart)
1135:Generated_Source\PSoC4/RTC.c ****         {
1136:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 1u;
1137:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = RTC_SECONDS_PER_HOUR;
1138:Generated_Source\PSoC4/RTC.c ****         }
1139:Generated_Source\PSoC4/RTC.c **** 
1140:Generated_Source\PSoC4/RTC.c ****         if(RTC_unixTime == (RTC_unixTimeDstStop - RTC_dstTimeOffset))
1141:Generated_Source\PSoC4/RTC.c ****         {
1142:Generated_Source\PSoC4/RTC.c ****             RTC_dstStatus = 0u;
1143:Generated_Source\PSoC4/RTC.c ****             RTC_dstTimeOffset = 0u;
1144:Generated_Source\PSoC4/RTC.c ****             RTC_unixTimeDstStart = RTC_GetDstUnixTime(&RTC_dstStartTime);
1145:Generated_Source\PSoC4/RTC.c ****             RTC_unixTimeDstStop  = RTC_GetDstUnixTime(&RTC_dstStopTime);
1146:Generated_Source\PSoC4/RTC.c ****         }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 80


1147:Generated_Source\PSoC4/RTC.c ****     #endif /* (0u != RTC_INITIAL_DST_STATUS) */
1148:Generated_Source\PSoC4/RTC.c **** 
1149:Generated_Source\PSoC4/RTC.c ****     #if(0u != RTC_INITIAL_ALARM_STATUS)
1150:Generated_Source\PSoC4/RTC.c ****         if((RTC_unixTime + RTC_dstTimeOffset) == RTC_unixTimeAlarm)
1151:Generated_Source\PSoC4/RTC.c ****         {
1152:Generated_Source\PSoC4/RTC.c ****             RTC_currentTimeDate.status |= (1uL << RTC_STATUS_ALARM_OFFSET);
1153:Generated_Source\PSoC4/RTC.c ****             RTC_alarmCurStatus = RTC_alarmCfgMask;
1154:Generated_Source\PSoC4/RTC.c **** 
1155:Generated_Source\PSoC4/RTC.c ****             RTC_unixTimeAlarm = 
1156:Generated_Source\PSoC4/RTC.c ****             RTC_GetNexAlarmTime(RTC_unixTime + RTC_dstTimeOffset,
1157:Generated_Source\PSoC4/RTC.c ****                                                                    (uint8)RTC_alarmCfgMask);
1158:Generated_Source\PSoC4/RTC.c **** 
1159:Generated_Source\PSoC4/RTC.c ****             /* Call callback function only after new alarm time is obtained.
1160:Generated_Source\PSoC4/RTC.c ****             * Cypress ticket #264756
1161:Generated_Source\PSoC4/RTC.c ****             */
1162:Generated_Source\PSoC4/RTC.c ****             if (RTC_alarmCallbackPtr != NULL)
1163:Generated_Source\PSoC4/RTC.c ****             {
1164:Generated_Source\PSoC4/RTC.c ****                 RTC_alarmCallbackPtr();
1165:Generated_Source\PSoC4/RTC.c ****             }
1166:Generated_Source\PSoC4/RTC.c ****         }
1167:Generated_Source\PSoC4/RTC.c ****     #endif/* (0u != RTC_INITIAL_ALARM_STATUS) */
1168:Generated_Source\PSoC4/RTC.c ****     }
1169:Generated_Source\PSoC4/RTC.c **** }
 1937              		.loc 2 1169 0
 1938 0040 C046     		nop
 1939 0042 BD46     		mov	sp, r7
 1940              		@ sp needed
 1941 0044 90BD     		pop	{r4, r7, pc}
 1942              	.L105:
 1943 0046 C046     		.align	2
 1944              	.L104:
 1945 0048 0C000000 		.word	RTC_currentTickNumber.5293
 1946 004c 00000000 		.word	RTC_updateTimePeriod
 1947 0050 04000000 		.word	RTC_tickRefOneSec
 1948 0054 00000000 		.word	RTC_unixTime
 1949              		.cfi_endproc
 1950              	.LFE45:
 1951              		.size	RTC_Update, .-RTC_Update
 1952              		.global	__aeabi_lmul
 1953              		.section	.text.RTC_DateTimeToUnix,"ax",%progbits
 1954              		.align	2
 1955              		.global	RTC_DateTimeToUnix
 1956              		.code	16
 1957              		.thumb_func
 1958              		.type	RTC_DateTimeToUnix, %function
 1959              	RTC_DateTimeToUnix:
 1960              	.LFB46:
1170:Generated_Source\PSoC4/RTC.c **** 
1171:Generated_Source\PSoC4/RTC.c **** 
1172:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1173:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_DateTimeToUnix
1174:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1175:Generated_Source\PSoC4/RTC.c **** *
1176:Generated_Source\PSoC4/RTC.c **** * This is an internal function to convert the date and time from the regular 
1177:Generated_Source\PSoC4/RTC.c **** * time format into the UNIX time format.
1178:Generated_Source\PSoC4/RTC.c **** *
1179:Generated_Source\PSoC4/RTC.c **** * \param inputDate
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 81


1180:Generated_Source\PSoC4/RTC.c **** * The date in the selected in the customizer "date format"
1181:Generated_Source\PSoC4/RTC.c **** *
1182:Generated_Source\PSoC4/RTC.c **** * \param inputTime
1183:Generated_Source\PSoC4/RTC.c **** * The time in the defined "time format"
1184:Generated_Source\PSoC4/RTC.c **** *
1185:Generated_Source\PSoC4/RTC.c **** * \return
1186:Generated_Source\PSoC4/RTC.c **** * Returns the date and time in the UNIX format
1187:Generated_Source\PSoC4/RTC.c **** *
1188:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1189:Generated_Source\PSoC4/RTC.c **** uint64 RTC_DateTimeToUnix(uint32 inputDate, uint32 inputTime)
1190:Generated_Source\PSoC4/RTC.c **** {
 1961              		.loc 2 1190 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 72
 1964              		@ frame_needed = 1, uses_anonymous_args = 0
 1965 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1966              		.cfi_def_cfa_offset 20
 1967              		.cfi_offset 4, -20
 1968              		.cfi_offset 5, -16
 1969              		.cfi_offset 6, -12
 1970              		.cfi_offset 7, -8
 1971              		.cfi_offset 14, -4
 1972 0002 93B0     		sub	sp, sp, #76
 1973              		.cfi_def_cfa_offset 96
 1974 0004 00AF     		add	r7, sp, #0
 1975              		.cfi_def_cfa_register 7
 1976 0006 7862     		str	r0, [r7, #36]
 1977 0008 3962     		str	r1, [r7, #32]
1191:Generated_Source\PSoC4/RTC.c ****     uint32 i;
1192:Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
1193:Generated_Source\PSoC4/RTC.c ****     uint32 tmpMonth;
1194:Generated_Source\PSoC4/RTC.c ****     uint32 tmpVal;
1195:Generated_Source\PSoC4/RTC.c ****     uint64 unixTime;
1196:Generated_Source\PSoC4/RTC.c **** 
1197:Generated_Source\PSoC4/RTC.c ****     unixTime = 0u;
 1978              		.loc 2 1197 0
 1979 000a 0023     		movs	r3, #0
 1980 000c 0024     		movs	r4, #0
 1981 000e BB63     		str	r3, [r7, #56]
 1982 0010 FC63     		str	r4, [r7, #60]
1198:Generated_Source\PSoC4/RTC.c ****     tmpYear = RTC_GetYear(inputDate);
 1983              		.loc 2 1198 0
 1984 0012 7B6A     		ldr	r3, [r7, #36]
 1985 0014 1800     		movs	r0, r3
 1986 0016 FFF7FEFF 		bl	RTC_GetYear
 1987 001a 0300     		movs	r3, r0
 1988 001c 7B63     		str	r3, [r7, #52]
1199:Generated_Source\PSoC4/RTC.c **** 
1200:Generated_Source\PSoC4/RTC.c ****     /* Calculate seconds from epoch start up to (but not including) current year */
1201:Generated_Source\PSoC4/RTC.c ****     for(i = RTC_YEAR_0; i < tmpYear; i++)
 1989              		.loc 2 1201 0
 1990 001e 634B     		ldr	r3, .L114
 1991 0020 7B64     		str	r3, [r7, #68]
 1992 0022 19E0     		b	.L107
 1993              	.L110:
1202:Generated_Source\PSoC4/RTC.c ****     {
1203:Generated_Source\PSoC4/RTC.c ****         if(0u != RTC_LeapYear(i))
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 82


 1994              		.loc 2 1203 0
 1995 0024 7B6C     		ldr	r3, [r7, #68]
 1996 0026 1800     		movs	r0, r3
 1997 0028 FFF7FEFF 		bl	RTC_LeapYear
 1998 002c 031E     		subs	r3, r0, #0
 1999 002e 08D0     		beq	.L108
1204:Generated_Source\PSoC4/RTC.c ****         {
1205:Generated_Source\PSoC4/RTC.c ****             unixTime += RTC_SECONDS_PER_LEAP_YEAR;
 2000              		.loc 2 1205 0
 2001 0030 BB6B     		ldr	r3, [r7, #56]
 2002 0032 FC6B     		ldr	r4, [r7, #60]
 2003 0034 5E49     		ldr	r1, .L114+4
 2004 0036 0022     		movs	r2, #0
 2005 0038 5B18     		adds	r3, r3, r1
 2006 003a 5441     		adcs	r4, r4, r2
 2007 003c BB63     		str	r3, [r7, #56]
 2008 003e FC63     		str	r4, [r7, #60]
 2009 0040 07E0     		b	.L109
 2010              	.L108:
1206:Generated_Source\PSoC4/RTC.c ****         }
1207:Generated_Source\PSoC4/RTC.c ****         else
1208:Generated_Source\PSoC4/RTC.c ****         {
1209:Generated_Source\PSoC4/RTC.c ****             unixTime += RTC_SECONDS_PER_NONLEAP_YEAR;
 2011              		.loc 2 1209 0
 2012 0042 BB6B     		ldr	r3, [r7, #56]
 2013 0044 FC6B     		ldr	r4, [r7, #60]
 2014 0046 5B49     		ldr	r1, .L114+8
 2015 0048 0022     		movs	r2, #0
 2016 004a 5B18     		adds	r3, r3, r1
 2017 004c 5441     		adcs	r4, r4, r2
 2018 004e BB63     		str	r3, [r7, #56]
 2019 0050 FC63     		str	r4, [r7, #60]
 2020              	.L109:
1201:Generated_Source\PSoC4/RTC.c ****     {
 2021              		.loc 2 1201 0 discriminator 2
 2022 0052 7B6C     		ldr	r3, [r7, #68]
 2023 0054 0133     		adds	r3, r3, #1
 2024 0056 7B64     		str	r3, [r7, #68]
 2025              	.L107:
1201:Generated_Source\PSoC4/RTC.c ****     {
 2026              		.loc 2 1201 0 is_stmt 0 discriminator 1
 2027 0058 7A6C     		ldr	r2, [r7, #68]
 2028 005a 7B6B     		ldr	r3, [r7, #52]
 2029 005c 9A42     		cmp	r2, r3
 2030 005e E1D3     		bcc	.L110
1210:Generated_Source\PSoC4/RTC.c ****         }
1211:Generated_Source\PSoC4/RTC.c ****     }
1212:Generated_Source\PSoC4/RTC.c **** 
1213:Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds had elapsed in this year prior to the current month */
1214:Generated_Source\PSoC4/RTC.c ****     tmpMonth = RTC_GetMonth(inputDate);
 2031              		.loc 2 1214 0 is_stmt 1
 2032 0060 7B6A     		ldr	r3, [r7, #36]
 2033 0062 1800     		movs	r0, r3
 2034 0064 FFF7FEFF 		bl	RTC_GetMonth
 2035 0068 0300     		movs	r3, r0
 2036 006a 3B63     		str	r3, [r7, #48]
1215:Generated_Source\PSoC4/RTC.c ****     tmpVal = RTC_DaysBeforeMonth(tmpMonth, tmpYear);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 83


 2037              		.loc 2 1215 0
 2038 006c 7A6B     		ldr	r2, [r7, #52]
 2039 006e 3B6B     		ldr	r3, [r7, #48]
 2040 0070 1100     		movs	r1, r2
 2041 0072 1800     		movs	r0, r3
 2042 0074 FFF7FEFF 		bl	RTC_DaysBeforeMonth
 2043 0078 0300     		movs	r3, r0
 2044 007a 3B64     		str	r3, [r7, #64]
1216:Generated_Source\PSoC4/RTC.c **** 
1217:Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds are in current month days prior to today */
1218:Generated_Source\PSoC4/RTC.c ****     unixTime += (uint64) tmpVal * RTC_SECONDS_PER_DAY;
 2045              		.loc 2 1218 0
 2046 007c 3B6C     		ldr	r3, [r7, #64]
 2047 007e BB61     		str	r3, [r7, #24]
 2048 0080 0023     		movs	r3, #0
 2049 0082 FB61     		str	r3, [r7, #28]
 2050 0084 4C4A     		ldr	r2, .L114+12
 2051 0086 0023     		movs	r3, #0
 2052 0088 B869     		ldr	r0, [r7, #24]
 2053 008a F969     		ldr	r1, [r7, #28]
 2054 008c FFF7FEFF 		bl	__aeabi_lmul
 2055 0090 0300     		movs	r3, r0
 2056 0092 0C00     		movs	r4, r1
 2057 0094 1900     		movs	r1, r3
 2058 0096 2200     		movs	r2, r4
 2059 0098 BB6B     		ldr	r3, [r7, #56]
 2060 009a FC6B     		ldr	r4, [r7, #60]
 2061 009c 5B18     		adds	r3, r3, r1
 2062 009e 5441     		adcs	r4, r4, r2
 2063 00a0 BB63     		str	r3, [r7, #56]
 2064 00a2 FC63     		str	r4, [r7, #60]
1219:Generated_Source\PSoC4/RTC.c ****     unixTime += ((uint64) RTC_GetDay(inputDate) - 1u) * RTC_SECONDS_PER_DAY;
 2065              		.loc 2 1219 0
 2066 00a4 7B6A     		ldr	r3, [r7, #36]
 2067 00a6 1800     		movs	r0, r3
 2068 00a8 FFF7FEFF 		bl	RTC_GetDay
 2069 00ac 0300     		movs	r3, r0
 2070 00ae 3B61     		str	r3, [r7, #16]
 2071 00b0 0023     		movs	r3, #0
 2072 00b2 7B61     		str	r3, [r7, #20]
 2073 00b4 404A     		ldr	r2, .L114+12
 2074 00b6 0023     		movs	r3, #0
 2075 00b8 3869     		ldr	r0, [r7, #16]
 2076 00ba 7969     		ldr	r1, [r7, #20]
 2077 00bc FFF7FEFF 		bl	__aeabi_lmul
 2078 00c0 0300     		movs	r3, r0
 2079 00c2 0C00     		movs	r4, r1
 2080 00c4 1900     		movs	r1, r3
 2081 00c6 2200     		movs	r2, r4
 2082 00c8 3C4B     		ldr	r3, .L114+16
 2083 00ca 0124     		movs	r4, #1
 2084 00cc 6442     		rsbs	r4, r4, #0
 2085 00ce 5B18     		adds	r3, r3, r1
 2086 00d0 5441     		adcs	r4, r4, r2
 2087 00d2 B96B     		ldr	r1, [r7, #56]
 2088 00d4 FA6B     		ldr	r2, [r7, #60]
 2089 00d6 5B18     		adds	r3, r3, r1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 84


 2090 00d8 5441     		adcs	r4, r4, r2
 2091 00da BB63     		str	r3, [r7, #56]
 2092 00dc FC63     		str	r4, [r7, #60]
1220:Generated_Source\PSoC4/RTC.c **** 
1221:Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds have elapsed today up to the current hour */
1222:Generated_Source\PSoC4/RTC.c ****     tmpVal = RTC_GetHours(inputTime);
 2093              		.loc 2 1222 0
 2094 00de 3B6A     		ldr	r3, [r7, #32]
 2095 00e0 1800     		movs	r0, r3
 2096 00e2 FFF7FEFF 		bl	RTC_GetHours
 2097 00e6 0300     		movs	r3, r0
 2098 00e8 3B64     		str	r3, [r7, #64]
1223:Generated_Source\PSoC4/RTC.c ****     if ((uint32)RTC_24_HOURS_FORMAT != RTC_GetTimeFormat(inputTime))
 2099              		.loc 2 1223 0
 2100 00ea 3B6A     		ldr	r3, [r7, #32]
 2101 00ec 1800     		movs	r0, r3
 2102 00ee FFF7FEFF 		bl	RTC_GetTimeFormat
 2103 00f2 031E     		subs	r3, r0, #0
 2104 00f4 17D0     		beq	.L111
 2105              	.LBB2:
1224:Generated_Source\PSoC4/RTC.c ****     {
1225:Generated_Source\PSoC4/RTC.c ****         uint32 curAmpm;
1226:Generated_Source\PSoC4/RTC.c **** 
1227:Generated_Source\PSoC4/RTC.c ****         curAmpm = RTC_GetAmPm(inputTime);
 2106              		.loc 2 1227 0
 2107 00f6 3B6A     		ldr	r3, [r7, #32]
 2108 00f8 1800     		movs	r0, r3
 2109 00fa FFF7FEFF 		bl	RTC_GetAmPm
 2110 00fe 0300     		movs	r3, r0
 2111 0100 FB62     		str	r3, [r7, #44]
1228:Generated_Source\PSoC4/RTC.c **** 
1229:Generated_Source\PSoC4/RTC.c ****         /* Add 12 hours as it is past midday period */
1230:Generated_Source\PSoC4/RTC.c ****         if (((uint32)RTC_AM != curAmpm) && (tmpVal < 12u))
 2112              		.loc 2 1230 0
 2113 0102 FB6A     		ldr	r3, [r7, #44]
 2114 0104 002B     		cmp	r3, #0
 2115 0106 06D0     		beq	.L112
 2116              		.loc 2 1230 0 is_stmt 0 discriminator 1
 2117 0108 3B6C     		ldr	r3, [r7, #64]
 2118 010a 0B2B     		cmp	r3, #11
 2119 010c 03D8     		bhi	.L112
1231:Generated_Source\PSoC4/RTC.c ****         {
1232:Generated_Source\PSoC4/RTC.c ****             tmpVal += RTC_HOURS_PER_HALF_DAY;
 2120              		.loc 2 1232 0 is_stmt 1
 2121 010e 3B6C     		ldr	r3, [r7, #64]
 2122 0110 0C33     		adds	r3, r3, #12
 2123 0112 3B64     		str	r3, [r7, #64]
 2124 0114 07E0     		b	.L111
 2125              	.L112:
1233:Generated_Source\PSoC4/RTC.c ****         }
1234:Generated_Source\PSoC4/RTC.c ****         /* Set hours to zero as it is a midnight */
1235:Generated_Source\PSoC4/RTC.c ****         else if (((uint32)RTC_AM == curAmpm) && (tmpVal == 12u))
 2126              		.loc 2 1235 0
 2127 0116 FB6A     		ldr	r3, [r7, #44]
 2128 0118 002B     		cmp	r3, #0
 2129 011a 04D1     		bne	.L111
 2130              		.loc 2 1235 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 85


 2131 011c 3B6C     		ldr	r3, [r7, #64]
 2132 011e 0C2B     		cmp	r3, #12
 2133 0120 01D1     		bne	.L111
1236:Generated_Source\PSoC4/RTC.c ****         {
1237:Generated_Source\PSoC4/RTC.c ****             tmpVal = 0U;
 2134              		.loc 2 1237 0 is_stmt 1
 2135 0122 0023     		movs	r3, #0
 2136 0124 3B64     		str	r3, [r7, #64]
 2137              	.L111:
 2138              	.LBE2:
1238:Generated_Source\PSoC4/RTC.c ****         }
1239:Generated_Source\PSoC4/RTC.c ****         else
1240:Generated_Source\PSoC4/RTC.c ****         {
1241:Generated_Source\PSoC4/RTC.c ****             /* Do nothing */
1242:Generated_Source\PSoC4/RTC.c ****         }
1243:Generated_Source\PSoC4/RTC.c ****     }
1244:Generated_Source\PSoC4/RTC.c ****     unixTime += (uint64)tmpVal * RTC_SECONDS_PER_HOUR;
 2139              		.loc 2 1244 0
 2140 0126 3B6C     		ldr	r3, [r7, #64]
 2141 0128 BB60     		str	r3, [r7, #8]
 2142 012a 0023     		movs	r3, #0
 2143 012c FB60     		str	r3, [r7, #12]
 2144 012e E122     		movs	r2, #225
 2145 0130 1201     		lsls	r2, r2, #4
 2146 0132 0023     		movs	r3, #0
 2147 0134 B868     		ldr	r0, [r7, #8]
 2148 0136 F968     		ldr	r1, [r7, #12]
 2149 0138 FFF7FEFF 		bl	__aeabi_lmul
 2150 013c 0300     		movs	r3, r0
 2151 013e 0C00     		movs	r4, r1
 2152 0140 1900     		movs	r1, r3
 2153 0142 2200     		movs	r2, r4
 2154 0144 BB6B     		ldr	r3, [r7, #56]
 2155 0146 FC6B     		ldr	r4, [r7, #60]
 2156 0148 5B18     		adds	r3, r3, r1
 2157 014a 5441     		adcs	r4, r4, r2
 2158 014c BB63     		str	r3, [r7, #56]
 2159 014e FC63     		str	r4, [r7, #60]
1245:Generated_Source\PSoC4/RTC.c **** 
1246:Generated_Source\PSoC4/RTC.c ****     /* Calculates how many seconds have elapsed today up to the current minute */
1247:Generated_Source\PSoC4/RTC.c ****     unixTime += ((uint64) RTC_GetMinutes(inputTime)) * RTC_SECONDS_PER_MINUTE;
 2160              		.loc 2 1247 0
 2161 0150 3B6A     		ldr	r3, [r7, #32]
 2162 0152 1800     		movs	r0, r3
 2163 0154 FFF7FEFF 		bl	RTC_GetMinutes
 2164 0158 0300     		movs	r3, r0
 2165 015a 3B60     		str	r3, [r7]
 2166 015c 0023     		movs	r3, #0
 2167 015e 7B60     		str	r3, [r7, #4]
 2168 0160 3C22     		movs	r2, #60
 2169 0162 0023     		movs	r3, #0
 2170 0164 3868     		ldr	r0, [r7]
 2171 0166 7968     		ldr	r1, [r7, #4]
 2172 0168 FFF7FEFF 		bl	__aeabi_lmul
 2173 016c 0300     		movs	r3, r0
 2174 016e 0C00     		movs	r4, r1
 2175 0170 1900     		movs	r1, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 86


 2176 0172 2200     		movs	r2, r4
 2177 0174 BB6B     		ldr	r3, [r7, #56]
 2178 0176 FC6B     		ldr	r4, [r7, #60]
 2179 0178 5B18     		adds	r3, r3, r1
 2180 017a 5441     		adcs	r4, r4, r2
 2181 017c BB63     		str	r3, [r7, #56]
 2182 017e FC63     		str	r4, [r7, #60]
1248:Generated_Source\PSoC4/RTC.c **** 
1249:Generated_Source\PSoC4/RTC.c ****     /* Add remaining seconds of current minute */
1250:Generated_Source\PSoC4/RTC.c ****     unixTime += RTC_GetSecond(inputTime);
 2183              		.loc 2 1250 0
 2184 0180 3B6A     		ldr	r3, [r7, #32]
 2185 0182 1800     		movs	r0, r3
 2186 0184 FFF7FEFF 		bl	RTC_GetSecond
 2187 0188 0300     		movs	r3, r0
 2188 018a 1D00     		movs	r5, r3
 2189 018c 0023     		movs	r3, #0
 2190 018e 1E00     		movs	r6, r3
 2191 0190 BB6B     		ldr	r3, [r7, #56]
 2192 0192 FC6B     		ldr	r4, [r7, #60]
 2193 0194 5B19     		adds	r3, r3, r5
 2194 0196 7441     		adcs	r4, r4, r6
 2195 0198 BB63     		str	r3, [r7, #56]
 2196 019a FC63     		str	r4, [r7, #60]
1251:Generated_Source\PSoC4/RTC.c **** 
1252:Generated_Source\PSoC4/RTC.c ****     return(unixTime);
 2197              		.loc 2 1252 0
 2198 019c BB6B     		ldr	r3, [r7, #56]
 2199 019e FC6B     		ldr	r4, [r7, #60]
1253:Generated_Source\PSoC4/RTC.c **** }
 2200              		.loc 2 1253 0
 2201 01a0 1800     		movs	r0, r3
 2202 01a2 2100     		movs	r1, r4
 2203 01a4 BD46     		mov	sp, r7
 2204 01a6 13B0     		add	sp, sp, #76
 2205              		@ sp needed
 2206 01a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 2207              	.L115:
 2208 01aa C046     		.align	2
 2209              	.L114:
 2210 01ac B2070000 		.word	1970
 2211 01b0 0085E201 		.word	31622400
 2212 01b4 8033E101 		.word	31536000
 2213 01b8 80510100 		.word	86400
 2214 01bc 80AEFEFF 		.word	-86400
 2215              		.cfi_endproc
 2216              	.LFE46:
 2217              		.size	RTC_DateTimeToUnix, .-RTC_DateTimeToUnix
 2218              		.global	__aeabi_uldivmod
 2219              		.section	.text.RTC_UnixToDateTime,"ax",%progbits
 2220              		.align	2
 2221              		.global	RTC_UnixToDateTime
 2222              		.code	16
 2223              		.thumb_func
 2224              		.type	RTC_UnixToDateTime, %function
 2225              	RTC_UnixToDateTime:
 2226              	.LFB47:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 87


1254:Generated_Source\PSoC4/RTC.c **** 
1255:Generated_Source\PSoC4/RTC.c **** 
1256:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1257:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_UnixToDateTime
1258:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1259:Generated_Source\PSoC4/RTC.c **** *
1260:Generated_Source\PSoC4/RTC.c **** * This is an internal function to convert the date and time from the UNIX time 
1261:Generated_Source\PSoC4/RTC.c **** * format into the regular time format
1262:Generated_Source\PSoC4/RTC.c **** *
1263:Generated_Source\PSoC4/RTC.c **** * \param RTC_DATE_TIME* dateTime
1264:Generated_Source\PSoC4/RTC.c **** * The time and date structure which will be updated time from unixTime value
1265:Generated_Source\PSoC4/RTC.c **** *
1266:Generated_Source\PSoC4/RTC.c **** * \param unixTime
1267:Generated_Source\PSoC4/RTC.c **** * The time in unix format
1268:Generated_Source\PSoC4/RTC.c **** *
1269:Generated_Source\PSoC4/RTC.c **** * \param timeFormat
1270:Generated_Source\PSoC4/RTC.c **** * dst format of time, see \ref RTC_DST_DATETYPE_ENUM
1271:Generated_Source\PSoC4/RTC.c **** *
1272:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1273:Generated_Source\PSoC4/RTC.c **** void RTC_UnixToDateTime(RTC_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat)
1274:Generated_Source\PSoC4/RTC.c **** {
 2227              		.loc 2 1274 0
 2228              		.cfi_startproc
 2229              		@ args = 4, pretend = 0, frame = 120
 2230              		@ frame_needed = 1, uses_anonymous_args = 0
 2231 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2232              		.cfi_def_cfa_offset 20
 2233              		.cfi_offset 4, -20
 2234              		.cfi_offset 5, -16
 2235              		.cfi_offset 6, -12
 2236              		.cfi_offset 7, -8
 2237              		.cfi_offset 14, -4
 2238 0002 A1B0     		sub	sp, sp, #132
 2239              		.cfi_def_cfa_offset 152
 2240 0004 02AF     		add	r7, sp, #8
 2241              		.cfi_def_cfa 7, 144
 2242 0006 7865     		str	r0, [r7, #84]
 2243 0008 BA64     		str	r2, [r7, #72]
 2244 000a FB64     		str	r3, [r7, #76]
1275:Generated_Source\PSoC4/RTC.c ****     uint32 tmpMinute;
1276:Generated_Source\PSoC4/RTC.c ****     uint32 tmpHour;
1277:Generated_Source\PSoC4/RTC.c ****     uint32 tmpAmPmState;
1278:Generated_Source\PSoC4/RTC.c **** 
1279:Generated_Source\PSoC4/RTC.c ****     uint32 tmpDay;
1280:Generated_Source\PSoC4/RTC.c ****     uint32 tmpMonth;
1281:Generated_Source\PSoC4/RTC.c ****     uint32 tmpYear;
1282:Generated_Source\PSoC4/RTC.c **** 
1283:Generated_Source\PSoC4/RTC.c ****     uint32 tmpVar;
1284:Generated_Source\PSoC4/RTC.c **** 
1285:Generated_Source\PSoC4/RTC.c ****     tmpAmPmState = 0u;
 2245              		.loc 2 1285 0
 2246 000c 0023     		movs	r3, #0
 2247 000e 3B67     		str	r3, [r7, #112]
1286:Generated_Source\PSoC4/RTC.c ****     tmpYear = RTC_YEAR_0;
 2248              		.loc 2 1286 0
 2249 0010 9C4B     		ldr	r3, .L146
 2250 0012 BB66     		str	r3, [r7, #104]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 88


1287:Generated_Source\PSoC4/RTC.c ****     tmpVar = RTC_SECONDS_PER_NONLEAP_YEAR;
 2251              		.loc 2 1287 0
 2252 0014 9C4B     		ldr	r3, .L146+4
 2253 0016 7B66     		str	r3, [r7, #100]
1288:Generated_Source\PSoC4/RTC.c **** 
1289:Generated_Source\PSoC4/RTC.c ****     /* Calculates current year value. Variable tmpYear
1290:Generated_Source\PSoC4/RTC.c ****     *  increments while it contains value greater than number
1291:Generated_Source\PSoC4/RTC.c ****     *  of seconds in current year.
1292:Generated_Source\PSoC4/RTC.c ****     */
1293:Generated_Source\PSoC4/RTC.c ****     while(unixTime >= tmpVar)
 2254              		.loc 2 1293 0
 2255 0018 19E0     		b	.L117
 2256              	.L119:
1294:Generated_Source\PSoC4/RTC.c ****     {
1295:Generated_Source\PSoC4/RTC.c ****         unixTime -= tmpVar;
 2257              		.loc 2 1295 0
 2258 001a 7B6E     		ldr	r3, [r7, #100]
 2259 001c BB60     		str	r3, [r7, #8]
 2260 001e 0023     		movs	r3, #0
 2261 0020 FB60     		str	r3, [r7, #12]
 2262 0022 BB6C     		ldr	r3, [r7, #72]
 2263 0024 FC6C     		ldr	r4, [r7, #76]
 2264 0026 B968     		ldr	r1, [r7, #8]
 2265 0028 FA68     		ldr	r2, [r7, #12]
 2266 002a 5B1A     		subs	r3, r3, r1
 2267 002c 9441     		sbcs	r4, r4, r2
 2268 002e BB64     		str	r3, [r7, #72]
 2269 0030 FC64     		str	r4, [r7, #76]
1296:Generated_Source\PSoC4/RTC.c ****         tmpYear++;
 2270              		.loc 2 1296 0
 2271 0032 BB6E     		ldr	r3, [r7, #104]
 2272 0034 0133     		adds	r3, r3, #1
 2273 0036 BB66     		str	r3, [r7, #104]
1297:Generated_Source\PSoC4/RTC.c **** 
1298:Generated_Source\PSoC4/RTC.c ****         if(0u != RTC_LeapYear(tmpYear))
 2274              		.loc 2 1298 0
 2275 0038 BB6E     		ldr	r3, [r7, #104]
 2276 003a 1800     		movs	r0, r3
 2277 003c FFF7FEFF 		bl	RTC_LeapYear
 2278 0040 031E     		subs	r3, r0, #0
 2279 0042 02D0     		beq	.L118
1299:Generated_Source\PSoC4/RTC.c ****         {
1300:Generated_Source\PSoC4/RTC.c ****             tmpVar = RTC_SECONDS_PER_LEAP_YEAR;
 2280              		.loc 2 1300 0
 2281 0044 914B     		ldr	r3, .L146+8
 2282 0046 7B66     		str	r3, [r7, #100]
 2283 0048 01E0     		b	.L117
 2284              	.L118:
1301:Generated_Source\PSoC4/RTC.c ****         }
1302:Generated_Source\PSoC4/RTC.c ****         else
1303:Generated_Source\PSoC4/RTC.c ****         {
1304:Generated_Source\PSoC4/RTC.c ****             tmpVar = RTC_SECONDS_PER_NONLEAP_YEAR;
 2285              		.loc 2 1304 0
 2286 004a 8F4B     		ldr	r3, .L146+4
 2287 004c 7B66     		str	r3, [r7, #100]
 2288              	.L117:
1293:Generated_Source\PSoC4/RTC.c ****     {
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 89


 2289              		.loc 2 1293 0
 2290 004e 7B6E     		ldr	r3, [r7, #100]
 2291 0050 1D00     		movs	r5, r3
 2292 0052 0023     		movs	r3, #0
 2293 0054 1E00     		movs	r6, r3
 2294 0056 FB6C     		ldr	r3, [r7, #76]
 2295 0058 B342     		cmp	r3, r6
 2296 005a 05D3     		bcc	.L140
 2297 005c FB6C     		ldr	r3, [r7, #76]
 2298 005e B342     		cmp	r3, r6
 2299 0060 DBD1     		bne	.L119
 2300 0062 BB6C     		ldr	r3, [r7, #72]
 2301 0064 AB42     		cmp	r3, r5
 2302 0066 D8D2     		bcs	.L119
 2303              	.L140:
1305:Generated_Source\PSoC4/RTC.c ****         }
1306:Generated_Source\PSoC4/RTC.c ****     }
1307:Generated_Source\PSoC4/RTC.c **** 
1308:Generated_Source\PSoC4/RTC.c ****     /* Calculates current month value. The tmpMonth variable increments while 
1309:Generated_Source\PSoC4/RTC.c ****     *  unixTime variable value is greater than time interval from beginning 
1310:Generated_Source\PSoC4/RTC.c ****     *  of current year to beginning of current month
1311:Generated_Source\PSoC4/RTC.c ****     */
1312:Generated_Source\PSoC4/RTC.c ****     tmpMonth = (uint32)RTC_JANUARY;
 2304              		.loc 2 1312 0
 2305 0068 0123     		movs	r3, #1
 2306 006a FB66     		str	r3, [r7, #108]
1313:Generated_Source\PSoC4/RTC.c ****     tmpVar = RTC_DaysInMonth(tmpMonth, tmpYear) * RTC_SECONDS_PER_DAY;
 2307              		.loc 2 1313 0
 2308 006c BA6E     		ldr	r2, [r7, #104]
 2309 006e FB6E     		ldr	r3, [r7, #108]
 2310 0070 1100     		movs	r1, r2
 2311 0072 1800     		movs	r0, r3
 2312 0074 FFF7FEFF 		bl	RTC_DaysInMonth
 2313 0078 0200     		movs	r2, r0
 2314 007a 854B     		ldr	r3, .L146+12
 2315 007c 5343     		muls	r3, r2
 2316 007e 7B66     		str	r3, [r7, #100]
1314:Generated_Source\PSoC4/RTC.c **** 
1315:Generated_Source\PSoC4/RTC.c ****     while(unixTime >= tmpVar)
 2317              		.loc 2 1315 0
 2318 0080 18E0     		b	.L121
 2319              	.L122:
1316:Generated_Source\PSoC4/RTC.c ****     {
1317:Generated_Source\PSoC4/RTC.c ****         unixTime -= tmpVar;
 2320              		.loc 2 1317 0
 2321 0082 7B6E     		ldr	r3, [r7, #100]
 2322 0084 3B60     		str	r3, [r7]
 2323 0086 0023     		movs	r3, #0
 2324 0088 7B60     		str	r3, [r7, #4]
 2325 008a BB6C     		ldr	r3, [r7, #72]
 2326 008c FC6C     		ldr	r4, [r7, #76]
 2327 008e 3968     		ldr	r1, [r7]
 2328 0090 7A68     		ldr	r2, [r7, #4]
 2329 0092 5B1A     		subs	r3, r3, r1
 2330 0094 9441     		sbcs	r4, r4, r2
 2331 0096 BB64     		str	r3, [r7, #72]
 2332 0098 FC64     		str	r4, [r7, #76]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 90


1318:Generated_Source\PSoC4/RTC.c ****         tmpMonth++;
 2333              		.loc 2 1318 0
 2334 009a FB6E     		ldr	r3, [r7, #108]
 2335 009c 0133     		adds	r3, r3, #1
 2336 009e FB66     		str	r3, [r7, #108]
1319:Generated_Source\PSoC4/RTC.c ****         tmpVar = RTC_DaysInMonth(tmpMonth, tmpYear) * RTC_SECONDS_PER_DAY;
 2337              		.loc 2 1319 0
 2338 00a0 BA6E     		ldr	r2, [r7, #104]
 2339 00a2 FB6E     		ldr	r3, [r7, #108]
 2340 00a4 1100     		movs	r1, r2
 2341 00a6 1800     		movs	r0, r3
 2342 00a8 FFF7FEFF 		bl	RTC_DaysInMonth
 2343 00ac 0200     		movs	r2, r0
 2344 00ae 784B     		ldr	r3, .L146+12
 2345 00b0 5343     		muls	r3, r2
 2346 00b2 7B66     		str	r3, [r7, #100]
 2347              	.L121:
1315:Generated_Source\PSoC4/RTC.c ****     {
 2348              		.loc 2 1315 0
 2349 00b4 7B6E     		ldr	r3, [r7, #100]
 2350 00b6 3B64     		str	r3, [r7, #64]
 2351 00b8 0023     		movs	r3, #0
 2352 00ba 7B64     		str	r3, [r7, #68]
 2353 00bc FB6C     		ldr	r3, [r7, #76]
 2354 00be 7A6C     		ldr	r2, [r7, #68]
 2355 00c0 9342     		cmp	r3, r2
 2356 00c2 07D3     		bcc	.L141
 2357 00c4 FB6C     		ldr	r3, [r7, #76]
 2358 00c6 7A6C     		ldr	r2, [r7, #68]
 2359 00c8 9342     		cmp	r3, r2
 2360 00ca DAD1     		bne	.L122
 2361 00cc BB6C     		ldr	r3, [r7, #72]
 2362 00ce 3A6C     		ldr	r2, [r7, #64]
 2363 00d0 9342     		cmp	r3, r2
 2364 00d2 D6D2     		bcs	.L122
 2365              	.L141:
1320:Generated_Source\PSoC4/RTC.c ****     }
1321:Generated_Source\PSoC4/RTC.c **** 
1322:Generated_Source\PSoC4/RTC.c ****     /* Calculates current day value */
1323:Generated_Source\PSoC4/RTC.c ****     tmpDay = (uint32) (unixTime / RTC_SECONDS_PER_DAY);
 2366              		.loc 2 1323 0
 2367 00d4 B86C     		ldr	r0, [r7, #72]
 2368 00d6 F96C     		ldr	r1, [r7, #76]
 2369 00d8 6D4A     		ldr	r2, .L146+12
 2370 00da 0023     		movs	r3, #0
 2371 00dc FFF7FEFF 		bl	__aeabi_uldivmod
 2372 00e0 0300     		movs	r3, r0
 2373 00e2 0C00     		movs	r4, r1
 2374 00e4 3B66     		str	r3, [r7, #96]
1324:Generated_Source\PSoC4/RTC.c ****     tmpVar = tmpDay * RTC_SECONDS_PER_DAY;
 2375              		.loc 2 1324 0
 2376 00e6 3A6E     		ldr	r2, [r7, #96]
 2377 00e8 694B     		ldr	r3, .L146+12
 2378 00ea 5343     		muls	r3, r2
 2379 00ec 7B66     		str	r3, [r7, #100]
1325:Generated_Source\PSoC4/RTC.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2380              		.loc 2 1325 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 91


 2381 00ee 7B6E     		ldr	r3, [r7, #100]
 2382 00f0 BB63     		str	r3, [r7, #56]
 2383 00f2 0023     		movs	r3, #0
 2384 00f4 FB63     		str	r3, [r7, #60]
 2385 00f6 FB6C     		ldr	r3, [r7, #76]
 2386 00f8 FA6B     		ldr	r2, [r7, #60]
 2387 00fa 9342     		cmp	r3, r2
 2388 00fc 0CD3     		bcc	.L124
 2389 00fe FB6C     		ldr	r3, [r7, #76]
 2390 0100 FA6B     		ldr	r2, [r7, #60]
 2391 0102 9342     		cmp	r3, r2
 2392 0104 03D1     		bne	.L142
 2393 0106 BB6C     		ldr	r3, [r7, #72]
 2394 0108 BA6B     		ldr	r2, [r7, #56]
 2395 010a 9342     		cmp	r3, r2
 2396 010c 04D3     		bcc	.L124
 2397              	.L142:
 2398              		.loc 2 1325 0 is_stmt 0 discriminator 1
 2399 010e 7B6E     		ldr	r3, [r7, #100]
 2400 0110 3B62     		str	r3, [r7, #32]
 2401 0112 0023     		movs	r3, #0
 2402 0114 7B62     		str	r3, [r7, #36]
 2403 0116 03E0     		b	.L126
 2404              	.L124:
 2405              		.loc 2 1325 0 discriminator 2
 2406 0118 0023     		movs	r3, #0
 2407 011a 0024     		movs	r4, #0
 2408 011c 3B62     		str	r3, [r7, #32]
 2409 011e 7C62     		str	r4, [r7, #36]
 2410              	.L126:
 2411              		.loc 2 1325 0 discriminator 4
 2412 0120 BB6C     		ldr	r3, [r7, #72]
 2413 0122 FC6C     		ldr	r4, [r7, #76]
 2414 0124 396A     		ldr	r1, [r7, #32]
 2415 0126 7A6A     		ldr	r2, [r7, #36]
 2416 0128 5B1A     		subs	r3, r3, r1
 2417 012a 9441     		sbcs	r4, r4, r2
 2418 012c BB64     		str	r3, [r7, #72]
 2419 012e FC64     		str	r4, [r7, #76]
1326:Generated_Source\PSoC4/RTC.c ****     tmpDay += 1u;
 2420              		.loc 2 1326 0 is_stmt 1 discriminator 4
 2421 0130 3B6E     		ldr	r3, [r7, #96]
 2422 0132 0133     		adds	r3, r3, #1
 2423 0134 3B66     		str	r3, [r7, #96]
1327:Generated_Source\PSoC4/RTC.c **** 
1328:Generated_Source\PSoC4/RTC.c ****     /* Calculates current hour value. If function works in 12-Hour mode,
1329:Generated_Source\PSoC4/RTC.c ****      * it converts time to 12-Hours mode and calculates AmPm status */
1330:Generated_Source\PSoC4/RTC.c ****     tmpHour = (uint32) (unixTime / RTC_SECONDS_PER_HOUR);
 2424              		.loc 2 1330 0 discriminator 4
 2425 0136 B86C     		ldr	r0, [r7, #72]
 2426 0138 F96C     		ldr	r1, [r7, #76]
 2427 013a E122     		movs	r2, #225
 2428 013c 1201     		lsls	r2, r2, #4
 2429 013e 0023     		movs	r3, #0
 2430 0140 FFF7FEFF 		bl	__aeabi_uldivmod
 2431 0144 0300     		movs	r3, r0
 2432 0146 0C00     		movs	r4, r1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 92


 2433 0148 7B67     		str	r3, [r7, #116]
1331:Generated_Source\PSoC4/RTC.c ****     tmpVar  = tmpHour * RTC_SECONDS_PER_HOUR;
 2434              		.loc 2 1331 0 discriminator 4
 2435 014a 7B6F     		ldr	r3, [r7, #116]
 2436 014c E122     		movs	r2, #225
 2437 014e 1201     		lsls	r2, r2, #4
 2438 0150 5343     		muls	r3, r2
 2439 0152 7B66     		str	r3, [r7, #100]
1332:Generated_Source\PSoC4/RTC.c ****     if((uint32)RTC_24_HOURS_FORMAT != timeFormat)
 2440              		.loc 2 1332 0 discriminator 4
 2441 0154 9023     		movs	r3, #144
 2442 0156 FB18     		adds	r3, r7, r3
 2443 0158 1B68     		ldr	r3, [r3]
 2444 015a 002B     		cmp	r3, #0
 2445 015c 1DD0     		beq	.L127
1333:Generated_Source\PSoC4/RTC.c ****     {
1334:Generated_Source\PSoC4/RTC.c ****         if(unixTime > RTC_UNIX_TIME_PM)
 2446              		.loc 2 1334 0
 2447 015e FB6C     		ldr	r3, [r7, #76]
 2448 0160 002B     		cmp	r3, #0
 2449 0162 06D1     		bne	.L143
 2450 0164 FB6C     		ldr	r3, [r7, #76]
 2451 0166 002B     		cmp	r3, #0
 2452 0168 0ED1     		bne	.L128
 2453 016a BB6C     		ldr	r3, [r7, #72]
 2454 016c 494A     		ldr	r2, .L146+16
 2455 016e 9342     		cmp	r3, r2
 2456 0170 0AD9     		bls	.L128
 2457              	.L143:
1335:Generated_Source\PSoC4/RTC.c ****         {
1336:Generated_Source\PSoC4/RTC.c ****             tmpAmPmState = RTC_PM;
 2458              		.loc 2 1336 0
 2459 0172 0123     		movs	r3, #1
 2460 0174 3B67     		str	r3, [r7, #112]
1337:Generated_Source\PSoC4/RTC.c ****             tmpHour = (tmpHour > 12u) ? (tmpHour - 12u) : tmpHour;
 2461              		.loc 2 1337 0
 2462 0176 7B6F     		ldr	r3, [r7, #116]
 2463 0178 0C2B     		cmp	r3, #12
 2464 017a 02D9     		bls	.L130
 2465              		.loc 2 1337 0 is_stmt 0 discriminator 1
 2466 017c 7B6F     		ldr	r3, [r7, #116]
 2467 017e 0C3B     		subs	r3, r3, #12
 2468 0180 00E0     		b	.L131
 2469              	.L130:
 2470              		.loc 2 1337 0 discriminator 2
 2471 0182 7B6F     		ldr	r3, [r7, #116]
 2472              	.L131:
 2473              		.loc 2 1337 0 discriminator 4
 2474 0184 7B67     		str	r3, [r7, #116]
 2475 0186 08E0     		b	.L127
 2476              	.L128:
1338:Generated_Source\PSoC4/RTC.c ****         }
1339:Generated_Source\PSoC4/RTC.c ****         else
1340:Generated_Source\PSoC4/RTC.c ****         {
1341:Generated_Source\PSoC4/RTC.c ****             tmpAmPmState = RTC_AM;
 2477              		.loc 2 1341 0 is_stmt 1
 2478 0188 0023     		movs	r3, #0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 93


 2479 018a 3B67     		str	r3, [r7, #112]
1342:Generated_Source\PSoC4/RTC.c ****             tmpHour = (0u != tmpHour) ? tmpHour : 12u;
 2480              		.loc 2 1342 0
 2481 018c 7B6F     		ldr	r3, [r7, #116]
 2482 018e 002B     		cmp	r3, #0
 2483 0190 01D0     		beq	.L132
 2484              		.loc 2 1342 0 is_stmt 0 discriminator 1
 2485 0192 7B6F     		ldr	r3, [r7, #116]
 2486 0194 00E0     		b	.L133
 2487              	.L132:
 2488              		.loc 2 1342 0 discriminator 2
 2489 0196 0C23     		movs	r3, #12
 2490              	.L133:
 2491              		.loc 2 1342 0 discriminator 4
 2492 0198 7B67     		str	r3, [r7, #116]
 2493              	.L127:
1343:Generated_Source\PSoC4/RTC.c ****         }
1344:Generated_Source\PSoC4/RTC.c ****     }
1345:Generated_Source\PSoC4/RTC.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2494              		.loc 2 1345 0 is_stmt 1
 2495 019a 7B6E     		ldr	r3, [r7, #100]
 2496 019c 3B63     		str	r3, [r7, #48]
 2497 019e 0023     		movs	r3, #0
 2498 01a0 7B63     		str	r3, [r7, #52]
 2499 01a2 FB6C     		ldr	r3, [r7, #76]
 2500 01a4 7A6B     		ldr	r2, [r7, #52]
 2501 01a6 9342     		cmp	r3, r2
 2502 01a8 0CD3     		bcc	.L134
 2503 01aa FB6C     		ldr	r3, [r7, #76]
 2504 01ac 7A6B     		ldr	r2, [r7, #52]
 2505 01ae 9342     		cmp	r3, r2
 2506 01b0 03D1     		bne	.L144
 2507 01b2 BB6C     		ldr	r3, [r7, #72]
 2508 01b4 3A6B     		ldr	r2, [r7, #48]
 2509 01b6 9342     		cmp	r3, r2
 2510 01b8 04D3     		bcc	.L134
 2511              	.L144:
 2512              		.loc 2 1345 0 is_stmt 0 discriminator 1
 2513 01ba 7B6E     		ldr	r3, [r7, #100]
 2514 01bc BB61     		str	r3, [r7, #24]
 2515 01be 0023     		movs	r3, #0
 2516 01c0 FB61     		str	r3, [r7, #28]
 2517 01c2 03E0     		b	.L136
 2518              	.L134:
 2519              		.loc 2 1345 0 discriminator 2
 2520 01c4 0023     		movs	r3, #0
 2521 01c6 0024     		movs	r4, #0
 2522 01c8 BB61     		str	r3, [r7, #24]
 2523 01ca FC61     		str	r4, [r7, #28]
 2524              	.L136:
 2525              		.loc 2 1345 0 discriminator 4
 2526 01cc BB6C     		ldr	r3, [r7, #72]
 2527 01ce FC6C     		ldr	r4, [r7, #76]
 2528 01d0 B969     		ldr	r1, [r7, #24]
 2529 01d2 FA69     		ldr	r2, [r7, #28]
 2530 01d4 5B1A     		subs	r3, r3, r1
 2531 01d6 9441     		sbcs	r4, r4, r2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 94


 2532 01d8 BB64     		str	r3, [r7, #72]
 2533 01da FC64     		str	r4, [r7, #76]
1346:Generated_Source\PSoC4/RTC.c **** 
1347:Generated_Source\PSoC4/RTC.c ****     /* Calculates current minute */
1348:Generated_Source\PSoC4/RTC.c ****     tmpMinute = (uint32) (unixTime / RTC_SECONDS_PER_MINUTE);
 2534              		.loc 2 1348 0 is_stmt 1 discriminator 4
 2535 01dc B86C     		ldr	r0, [r7, #72]
 2536 01de F96C     		ldr	r1, [r7, #76]
 2537 01e0 3C22     		movs	r2, #60
 2538 01e2 0023     		movs	r3, #0
 2539 01e4 FFF7FEFF 		bl	__aeabi_uldivmod
 2540 01e8 0300     		movs	r3, r0
 2541 01ea 0C00     		movs	r4, r1
 2542 01ec FB65     		str	r3, [r7, #92]
1349:Generated_Source\PSoC4/RTC.c ****     tmpVar = tmpMinute * RTC_SECONDS_PER_MINUTE;
 2543              		.loc 2 1349 0 discriminator 4
 2544 01ee FA6D     		ldr	r2, [r7, #92]
 2545 01f0 1300     		movs	r3, r2
 2546 01f2 1B01     		lsls	r3, r3, #4
 2547 01f4 9B1A     		subs	r3, r3, r2
 2548 01f6 9B00     		lsls	r3, r3, #2
 2549 01f8 7B66     		str	r3, [r7, #100]
1350:Generated_Source\PSoC4/RTC.c **** 
1351:Generated_Source\PSoC4/RTC.c ****     /* Calculates current second */
1352:Generated_Source\PSoC4/RTC.c ****     unixTime -= (unixTime >= (uint64) tmpVar) ? (uint64) tmpVar : 0ul;
 2550              		.loc 2 1352 0 discriminator 4
 2551 01fa 7B6E     		ldr	r3, [r7, #100]
 2552 01fc BB62     		str	r3, [r7, #40]
 2553 01fe 0023     		movs	r3, #0
 2554 0200 FB62     		str	r3, [r7, #44]
 2555 0202 FB6C     		ldr	r3, [r7, #76]
 2556 0204 FA6A     		ldr	r2, [r7, #44]
 2557 0206 9342     		cmp	r3, r2
 2558 0208 0CD3     		bcc	.L137
 2559 020a FB6C     		ldr	r3, [r7, #76]
 2560 020c FA6A     		ldr	r2, [r7, #44]
 2561 020e 9342     		cmp	r3, r2
 2562 0210 03D1     		bne	.L145
 2563 0212 BB6C     		ldr	r3, [r7, #72]
 2564 0214 BA6A     		ldr	r2, [r7, #40]
 2565 0216 9342     		cmp	r3, r2
 2566 0218 04D3     		bcc	.L137
 2567              	.L145:
 2568              		.loc 2 1352 0 is_stmt 0 discriminator 1
 2569 021a 7B6E     		ldr	r3, [r7, #100]
 2570 021c 3B61     		str	r3, [r7, #16]
 2571 021e 0023     		movs	r3, #0
 2572 0220 7B61     		str	r3, [r7, #20]
 2573 0222 03E0     		b	.L139
 2574              	.L137:
 2575              		.loc 2 1352 0 discriminator 2
 2576 0224 0023     		movs	r3, #0
 2577 0226 0024     		movs	r4, #0
 2578 0228 3B61     		str	r3, [r7, #16]
 2579 022a 7C61     		str	r4, [r7, #20]
 2580              	.L139:
 2581              		.loc 2 1352 0 discriminator 4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 95


 2582 022c BB6C     		ldr	r3, [r7, #72]
 2583 022e FC6C     		ldr	r4, [r7, #76]
 2584 0230 3969     		ldr	r1, [r7, #16]
 2585 0232 7A69     		ldr	r2, [r7, #20]
 2586 0234 5B1A     		subs	r3, r3, r1
 2587 0236 9441     		sbcs	r4, r4, r2
 2588 0238 BB64     		str	r3, [r7, #72]
 2589 023a FC64     		str	r4, [r7, #76]
1353:Generated_Source\PSoC4/RTC.c **** 
1354:Generated_Source\PSoC4/RTC.c ****     dateTime->date = RTC_ConstructDate(tmpMonth, tmpDay, tmpYear);
 2590              		.loc 2 1354 0 is_stmt 1 discriminator 4
 2591 023c BA6E     		ldr	r2, [r7, #104]
 2592 023e 396E     		ldr	r1, [r7, #96]
 2593 0240 FB6E     		ldr	r3, [r7, #108]
 2594 0242 1800     		movs	r0, r3
 2595 0244 FFF7FEFF 		bl	RTC_ConstructDate
 2596 0248 0200     		movs	r2, r0
 2597 024a 7B6D     		ldr	r3, [r7, #84]
 2598 024c 5A60     		str	r2, [r3, #4]
1355:Generated_Source\PSoC4/RTC.c ****     dateTime->time = RTC_ConstructTime(timeFormat, tmpAmPmState, tmpHour, tmpMinute, (uint32) unixT
 2599              		.loc 2 1355 0 discriminator 4
 2600 024e BB6C     		ldr	r3, [r7, #72]
 2601 0250 FC6D     		ldr	r4, [r7, #92]
 2602 0252 7A6F     		ldr	r2, [r7, #116]
 2603 0254 396F     		ldr	r1, [r7, #112]
 2604 0256 9020     		movs	r0, #144
 2605 0258 3818     		adds	r0, r7, r0
 2606 025a 0068     		ldr	r0, [r0]
 2607 025c 0093     		str	r3, [sp]
 2608 025e 2300     		movs	r3, r4
 2609 0260 FFF7FEFF 		bl	RTC_ConstructTime
 2610 0264 0200     		movs	r2, r0
 2611 0266 7B6D     		ldr	r3, [r7, #84]
 2612 0268 1A60     		str	r2, [r3]
1356:Generated_Source\PSoC4/RTC.c ****     dateTime->dayOfWeek = RTC_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 2613              		.loc 2 1356 0 discriminator 4
 2614 026a BA6E     		ldr	r2, [r7, #104]
 2615 026c F96E     		ldr	r1, [r7, #108]
 2616 026e 3B6E     		ldr	r3, [r7, #96]
 2617 0270 1800     		movs	r0, r3
 2618 0272 FFF7FEFF 		bl	RTC_GetDayOfWeek
 2619 0276 0200     		movs	r2, r0
 2620 0278 7B6D     		ldr	r3, [r7, #84]
 2621 027a 9A60     		str	r2, [r3, #8]
1357:Generated_Source\PSoC4/RTC.c **** }
 2622              		.loc 2 1357 0 discriminator 4
 2623 027c C046     		nop
 2624 027e BD46     		mov	sp, r7
 2625 0280 1FB0     		add	sp, sp, #124
 2626              		@ sp needed
 2627 0282 F0BD     		pop	{r4, r5, r6, r7, pc}
 2628              	.L147:
 2629              		.align	2
 2630              	.L146:
 2631 0284 B2070000 		.word	1970
 2632 0288 8033E101 		.word	31536000
 2633 028c 0085E201 		.word	31622400
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 96


 2634 0290 80510100 		.word	86400
 2635 0294 C1A80000 		.word	43201
 2636              		.cfi_endproc
 2637              	.LFE47:
 2638              		.size	RTC_UnixToDateTime, .-RTC_UnixToDateTime
 2639              		.section	.text.RTC_RelativeToFixed,"ax",%progbits
 2640              		.align	2
 2641              		.global	RTC_RelativeToFixed
 2642              		.code	16
 2643              		.thumb_func
 2644              		.type	RTC_RelativeToFixed, %function
 2645              	RTC_RelativeToFixed:
 2646              	.LFB48:
1358:Generated_Source\PSoC4/RTC.c **** 
1359:Generated_Source\PSoC4/RTC.c **** 
1360:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1361:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_RelativeToFixed
1362:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1363:Generated_Source\PSoC4/RTC.c **** *
1364:Generated_Source\PSoC4/RTC.c **** * This is an internal function to convert a relative date into a fixed date.
1365:Generated_Source\PSoC4/RTC.c **** *
1366:Generated_Source\PSoC4/RTC.c **** * \param dayOfWeek
1367:Generated_Source\PSoC4/RTC.c **** * A day of a week, see \ref group_rtc_day_of_the_week
1368:Generated_Source\PSoC4/RTC.c **** *
1369:Generated_Source\PSoC4/RTC.c **** * \param weekOfMonth
1370:Generated_Source\PSoC4/RTC.c **** * A week of a month, see \ref group_rtc_dst_week_of_month
1371:Generated_Source\PSoC4/RTC.c **** *
1372:Generated_Source\PSoC4/RTC.c **** * \param month
1373:Generated_Source\PSoC4/RTC.c **** * A month of a year, see \ref group_rtc_month
1374:Generated_Source\PSoC4/RTC.c **** *
1375:Generated_Source\PSoC4/RTC.c **** * \param year
1376:Generated_Source\PSoC4/RTC.c **** * A year value
1377:Generated_Source\PSoC4/RTC.c **** *
1378:Generated_Source\PSoC4/RTC.c **** * \return A date in the "date format"
1379:Generated_Source\PSoC4/RTC.c **** *
1380:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1381:Generated_Source\PSoC4/RTC.c **** uint32 RTC_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year)
1382:Generated_Source\PSoC4/RTC.c **** {
 2647              		.loc 2 1382 0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 40
 2650              		@ frame_needed = 1, uses_anonymous_args = 0
 2651 0000 80B5     		push	{r7, lr}
 2652              		.cfi_def_cfa_offset 8
 2653              		.cfi_offset 7, -8
 2654              		.cfi_offset 14, -4
 2655 0002 8AB0     		sub	sp, sp, #40
 2656              		.cfi_def_cfa_offset 48
 2657 0004 00AF     		add	r7, sp, #0
 2658              		.cfi_def_cfa_register 7
 2659 0006 F860     		str	r0, [r7, #12]
 2660 0008 B960     		str	r1, [r7, #8]
 2661 000a 7A60     		str	r2, [r7, #4]
 2662 000c 3B60     		str	r3, [r7]
1383:Generated_Source\PSoC4/RTC.c ****     uint32 curDay;
1384:Generated_Source\PSoC4/RTC.c ****     uint32 curWeek;
1385:Generated_Source\PSoC4/RTC.c ****     uint32 daysInMonth;
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 97


1386:Generated_Source\PSoC4/RTC.c ****     uint32 dayOfMonthTmp;
1387:Generated_Source\PSoC4/RTC.c **** 
1388:Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1389:Generated_Source\PSoC4/RTC.c **** 
1390:Generated_Source\PSoC4/RTC.c ****     curDay      = 1u;
 2663              		.loc 2 1390 0
 2664 000e 0123     		movs	r3, #1
 2665 0010 7B62     		str	r3, [r7, #36]
1391:Generated_Source\PSoC4/RTC.c ****     curWeek     = (uint32)RTC_FIRST;
 2666              		.loc 2 1391 0
 2667 0012 0123     		movs	r3, #1
 2668 0014 3B62     		str	r3, [r7, #32]
1392:Generated_Source\PSoC4/RTC.c ****     daysInMonth = RTC_DaysInMonth(month, year);
 2669              		.loc 2 1392 0
 2670 0016 3A68     		ldr	r2, [r7]
 2671 0018 7B68     		ldr	r3, [r7, #4]
 2672 001a 1100     		movs	r1, r2
 2673 001c 1800     		movs	r0, r3
 2674 001e FFF7FEFF 		bl	RTC_DaysInMonth
 2675 0022 0300     		movs	r3, r0
 2676 0024 BB61     		str	r3, [r7, #24]
1393:Generated_Source\PSoC4/RTC.c ****     dayOfMonthTmp = curDay;
 2677              		.loc 2 1393 0
 2678 0026 7B6A     		ldr	r3, [r7, #36]
 2679 0028 FB61     		str	r3, [r7, #28]
1394:Generated_Source\PSoC4/RTC.c **** 
1395:Generated_Source\PSoC4/RTC.c ****     while((curWeek <= weekOfMonth) && (curDay <= daysInMonth))
 2680              		.loc 2 1395 0
 2681 002a 11E0     		b	.L149
 2682              	.L152:
1396:Generated_Source\PSoC4/RTC.c ****     {
1397:Generated_Source\PSoC4/RTC.c ****         if(dayOfWeek == RTC_GetDayOfWeek(curDay, month, year))
 2683              		.loc 2 1397 0
 2684 002c 3A68     		ldr	r2, [r7]
 2685 002e 7968     		ldr	r1, [r7, #4]
 2686 0030 7B6A     		ldr	r3, [r7, #36]
 2687 0032 1800     		movs	r0, r3
 2688 0034 FFF7FEFF 		bl	RTC_GetDayOfWeek
 2689 0038 0200     		movs	r2, r0
 2690 003a FB68     		ldr	r3, [r7, #12]
 2691 003c 9A42     		cmp	r2, r3
 2692 003e 04D1     		bne	.L150
1398:Generated_Source\PSoC4/RTC.c ****         {
1399:Generated_Source\PSoC4/RTC.c ****             dayOfMonthTmp = curDay;
 2693              		.loc 2 1399 0
 2694 0040 7B6A     		ldr	r3, [r7, #36]
 2695 0042 FB61     		str	r3, [r7, #28]
1400:Generated_Source\PSoC4/RTC.c ****             curWeek++;
 2696              		.loc 2 1400 0
 2697 0044 3B6A     		ldr	r3, [r7, #32]
 2698 0046 0133     		adds	r3, r3, #1
 2699 0048 3B62     		str	r3, [r7, #32]
 2700              	.L150:
1401:Generated_Source\PSoC4/RTC.c ****         }
1402:Generated_Source\PSoC4/RTC.c ****         curDay++;
 2701              		.loc 2 1402 0
 2702 004a 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 98


 2703 004c 0133     		adds	r3, r3, #1
 2704 004e 7B62     		str	r3, [r7, #36]
 2705              	.L149:
1395:Generated_Source\PSoC4/RTC.c ****     {
 2706              		.loc 2 1395 0
 2707 0050 3A6A     		ldr	r2, [r7, #32]
 2708 0052 BB68     		ldr	r3, [r7, #8]
 2709 0054 9A42     		cmp	r2, r3
 2710 0056 03D8     		bhi	.L151
1395:Generated_Source\PSoC4/RTC.c ****     {
 2711              		.loc 2 1395 0 is_stmt 0 discriminator 1
 2712 0058 7A6A     		ldr	r2, [r7, #36]
 2713 005a BB69     		ldr	r3, [r7, #24]
 2714 005c 9A42     		cmp	r2, r3
 2715 005e E5D9     		bls	.L152
 2716              	.L151:
1403:Generated_Source\PSoC4/RTC.c ****     }
1404:Generated_Source\PSoC4/RTC.c **** 
1405:Generated_Source\PSoC4/RTC.c ****     retVal = RTC_ConstructDate(month, dayOfMonthTmp, year);
 2717              		.loc 2 1405 0 is_stmt 1
 2718 0060 3A68     		ldr	r2, [r7]
 2719 0062 F969     		ldr	r1, [r7, #28]
 2720 0064 7B68     		ldr	r3, [r7, #4]
 2721 0066 1800     		movs	r0, r3
 2722 0068 FFF7FEFF 		bl	RTC_ConstructDate
 2723 006c 0300     		movs	r3, r0
 2724 006e 7B61     		str	r3, [r7, #20]
1406:Generated_Source\PSoC4/RTC.c **** 
1407:Generated_Source\PSoC4/RTC.c ****     return(retVal);
 2725              		.loc 2 1407 0
 2726 0070 7B69     		ldr	r3, [r7, #20]
1408:Generated_Source\PSoC4/RTC.c **** }
 2727              		.loc 2 1408 0
 2728 0072 1800     		movs	r0, r3
 2729 0074 BD46     		mov	sp, r7
 2730 0076 0AB0     		add	sp, sp, #40
 2731              		@ sp needed
 2732 0078 80BD     		pop	{r7, pc}
 2733              		.cfi_endproc
 2734              	.LFE48:
 2735              		.size	RTC_RelativeToFixed, .-RTC_RelativeToFixed
 2736 007a C046     		.section	.text.RTC_DaysInMonth,"ax",%progbits
 2737              		.align	2
 2738              		.global	RTC_DaysInMonth
 2739              		.code	16
 2740              		.thumb_func
 2741              		.type	RTC_DaysInMonth, %function
 2742              	RTC_DaysInMonth:
 2743              	.LFB49:
1409:Generated_Source\PSoC4/RTC.c **** 
1410:Generated_Source\PSoC4/RTC.c **** 
1411:Generated_Source\PSoC4/RTC.c **** /*******************************************************************************
1412:Generated_Source\PSoC4/RTC.c **** * Function Name: RTC_DaysInMonth
1413:Generated_Source\PSoC4/RTC.c **** ****************************************************************************//**
1414:Generated_Source\PSoC4/RTC.c **** *
1415:Generated_Source\PSoC4/RTC.c **** * Returns a number of days in a month passed through the parameters.
1416:Generated_Source\PSoC4/RTC.c **** *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 99


1417:Generated_Source\PSoC4/RTC.c **** * \param month
1418:Generated_Source\PSoC4/RTC.c **** * A month of a year, see \ref group_rtc_month.
1419:Generated_Source\PSoC4/RTC.c **** *
1420:Generated_Source\PSoC4/RTC.c **** * \param year
1421:Generated_Source\PSoC4/RTC.c **** * A year value.
1422:Generated_Source\PSoC4/RTC.c **** *
1423:Generated_Source\PSoC4/RTC.c **** * \return
1424:Generated_Source\PSoC4/RTC.c **** * A number of days in a month in the year passed through the parameters
1425:Generated_Source\PSoC4/RTC.c **** *
1426:Generated_Source\PSoC4/RTC.c **** *******************************************************************************/
1427:Generated_Source\PSoC4/RTC.c **** uint32 RTC_DaysInMonth(uint32 month, uint32 year)
1428:Generated_Source\PSoC4/RTC.c **** {
 2744              		.loc 2 1428 0
 2745              		.cfi_startproc
 2746              		@ args = 0, pretend = 0, frame = 16
 2747              		@ frame_needed = 1, uses_anonymous_args = 0
 2748 0000 80B5     		push	{r7, lr}
 2749              		.cfi_def_cfa_offset 8
 2750              		.cfi_offset 7, -8
 2751              		.cfi_offset 14, -4
 2752 0002 84B0     		sub	sp, sp, #16
 2753              		.cfi_def_cfa_offset 24
 2754 0004 00AF     		add	r7, sp, #0
 2755              		.cfi_def_cfa_register 7
 2756 0006 7860     		str	r0, [r7, #4]
 2757 0008 3960     		str	r1, [r7]
1429:Generated_Source\PSoC4/RTC.c ****     uint32 retVal;
1430:Generated_Source\PSoC4/RTC.c **** 
1431:Generated_Source\PSoC4/RTC.c ****     retVal = RTC_daysInMonthTbl[month - 1u];
 2758              		.loc 2 1431 0
 2759 000a 7B68     		ldr	r3, [r7, #4]
 2760 000c 013B     		subs	r3, r3, #1
 2761 000e 0A4A     		ldr	r2, .L157
 2762 0010 D35C     		ldrb	r3, [r2, r3]
 2763 0012 FB60     		str	r3, [r7, #12]
1432:Generated_Source\PSoC4/RTC.c ****     if((uint32)RTC_FEBRUARY == month)
 2764              		.loc 2 1432 0
 2765 0014 7B68     		ldr	r3, [r7, #4]
 2766 0016 022B     		cmp	r3, #2
 2767 0018 08D1     		bne	.L155
1433:Generated_Source\PSoC4/RTC.c ****     {
1434:Generated_Source\PSoC4/RTC.c ****         if(0u != RTC_LeapYear(year))
 2768              		.loc 2 1434 0
 2769 001a 3B68     		ldr	r3, [r7]
 2770 001c 1800     		movs	r0, r3
 2771 001e FFF7FEFF 		bl	RTC_LeapYear
 2772 0022 031E     		subs	r3, r0, #0
 2773 0024 02D0     		beq	.L155
1435:Generated_Source\PSoC4/RTC.c ****         {
1436:Generated_Source\PSoC4/RTC.c ****             retVal++;
 2774              		.loc 2 1436 0
 2775 0026 FB68     		ldr	r3, [r7, #12]
 2776 0028 0133     		adds	r3, r3, #1
 2777 002a FB60     		str	r3, [r7, #12]
 2778              	.L155:
1437:Generated_Source\PSoC4/RTC.c ****         }
1438:Generated_Source\PSoC4/RTC.c ****     }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 100


1439:Generated_Source\PSoC4/RTC.c **** 
1440:Generated_Source\PSoC4/RTC.c ****     return(retVal);
 2779              		.loc 2 1440 0
 2780 002c FB68     		ldr	r3, [r7, #12]
1441:Generated_Source\PSoC4/RTC.c **** }
 2781              		.loc 2 1441 0
 2782 002e 1800     		movs	r0, r3
 2783 0030 BD46     		mov	sp, r7
 2784 0032 04B0     		add	sp, sp, #16
 2785              		@ sp needed
 2786 0034 80BD     		pop	{r7, pc}
 2787              	.L158:
 2788 0036 C046     		.align	2
 2789              	.L157:
 2790 0038 00000000 		.word	RTC_daysInMonthTbl
 2791              		.cfi_endproc
 2792              	.LFE49:
 2793              		.size	RTC_DaysInMonth, .-RTC_DaysInMonth
 2794              		.bss
 2795              		.align	2
 2796              	RTC_currentTickNumber.5293:
 2797 000c 00000000 		.space	4
 2798              		.text
 2799              	.Letext0:
 2800              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 2801              		.section	.debug_info,"",%progbits
 2802              	.Ldebug_info0:
 2803 0000 B90A0000 		.4byte	0xab9
 2804 0004 0400     		.2byte	0x4
 2805 0006 00000000 		.4byte	.Ldebug_abbrev0
 2806 000a 04       		.byte	0x4
 2807 000b 01       		.uleb128 0x1
 2808 000c 1E030000 		.4byte	.LASF106
 2809 0010 0C       		.byte	0xc
 2810 0011 E0030000 		.4byte	.LASF107
 2811 0015 4C000000 		.4byte	.LASF108
 2812 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2813 001d 00000000 		.4byte	0
 2814 0021 00000000 		.4byte	.Ldebug_line0
 2815 0025 02       		.uleb128 0x2
 2816 0026 01       		.byte	0x1
 2817 0027 06       		.byte	0x6
 2818 0028 96010000 		.4byte	.LASF0
 2819 002c 02       		.uleb128 0x2
 2820 002d 01       		.byte	0x1
 2821 002e 08       		.byte	0x8
 2822 002f AF040000 		.4byte	.LASF1
 2823 0033 02       		.uleb128 0x2
 2824 0034 02       		.byte	0x2
 2825 0035 05       		.byte	0x5
 2826 0036 F4040000 		.4byte	.LASF2
 2827 003a 02       		.uleb128 0x2
 2828 003b 02       		.byte	0x2
 2829 003c 07       		.byte	0x7
 2830 003d 00030000 		.4byte	.LASF3
 2831 0041 02       		.uleb128 0x2
 2832 0042 04       		.byte	0x4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 101


 2833 0043 05       		.byte	0x5
 2834 0044 EF010000 		.4byte	.LASF4
 2835 0048 02       		.uleb128 0x2
 2836 0049 04       		.byte	0x4
 2837 004a 07       		.byte	0x7
 2838 004b D3020000 		.4byte	.LASF5
 2839 004f 02       		.uleb128 0x2
 2840 0050 08       		.byte	0x8
 2841 0051 05       		.byte	0x5
 2842 0052 88010000 		.4byte	.LASF6
 2843 0056 02       		.uleb128 0x2
 2844 0057 08       		.byte	0x8
 2845 0058 07       		.byte	0x7
 2846 0059 07010000 		.4byte	.LASF7
 2847 005d 03       		.uleb128 0x3
 2848 005e 04       		.byte	0x4
 2849 005f 05       		.byte	0x5
 2850 0060 696E7400 		.ascii	"int\000"
 2851 0064 02       		.uleb128 0x2
 2852 0065 04       		.byte	0x4
 2853 0066 07       		.byte	0x7
 2854 0067 9F020000 		.4byte	.LASF8
 2855 006b 04       		.uleb128 0x4
 2856 006c 1B020000 		.4byte	.LASF9
 2857 0070 03       		.byte	0x3
 2858 0071 E401     		.2byte	0x1e4
 2859 0073 2C000000 		.4byte	0x2c
 2860 0077 04       		.uleb128 0x4
 2861 0078 1D000000 		.4byte	.LASF10
 2862 007c 03       		.byte	0x3
 2863 007d E501     		.2byte	0x1e5
 2864 007f 3A000000 		.4byte	0x3a
 2865 0083 04       		.uleb128 0x4
 2866 0084 50020000 		.4byte	.LASF11
 2867 0088 03       		.byte	0x3
 2868 0089 E601     		.2byte	0x1e6
 2869 008b 48000000 		.4byte	0x48
 2870 008f 02       		.uleb128 0x2
 2871 0090 04       		.byte	0x4
 2872 0091 04       		.byte	0x4
 2873 0092 64040000 		.4byte	.LASF12
 2874 0096 02       		.uleb128 0x2
 2875 0097 08       		.byte	0x8
 2876 0098 04       		.byte	0x4
 2877 0099 37020000 		.4byte	.LASF13
 2878 009d 04       		.uleb128 0x4
 2879 009e ED040000 		.4byte	.LASF14
 2880 00a2 03       		.byte	0x3
 2881 00a3 F001     		.2byte	0x1f0
 2882 00a5 56000000 		.4byte	0x56
 2883 00a9 02       		.uleb128 0x2
 2884 00aa 01       		.byte	0x1
 2885 00ab 08       		.byte	0x8
 2886 00ac 48050000 		.4byte	.LASF15
 2887 00b0 02       		.uleb128 0x2
 2888 00b1 08       		.byte	0x8
 2889 00b2 04       		.byte	0x4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 102


 2890 00b3 FD030000 		.4byte	.LASF16
 2891 00b7 02       		.uleb128 0x2
 2892 00b8 04       		.byte	0x4
 2893 00b9 07       		.byte	0x7
 2894 00ba D7030000 		.4byte	.LASF17
 2895 00be 05       		.uleb128 0x5
 2896 00bf 10       		.byte	0x10
 2897 00c0 01       		.byte	0x1
 2898 00c1 2E       		.byte	0x2e
 2899 00c2 F7000000 		.4byte	0xf7
 2900 00c6 06       		.uleb128 0x6
 2901 00c7 42040000 		.4byte	.LASF18
 2902 00cb 01       		.byte	0x1
 2903 00cc 30       		.byte	0x30
 2904 00cd 83000000 		.4byte	0x83
 2905 00d1 00       		.byte	0
 2906 00d2 06       		.uleb128 0x6
 2907 00d3 13030000 		.4byte	.LASF19
 2908 00d7 01       		.byte	0x1
 2909 00d8 31       		.byte	0x31
 2910 00d9 83000000 		.4byte	0x83
 2911 00dd 04       		.byte	0x4
 2912 00de 06       		.uleb128 0x6
 2913 00df BF030000 		.4byte	.LASF20
 2914 00e3 01       		.byte	0x1
 2915 00e4 32       		.byte	0x32
 2916 00e5 83000000 		.4byte	0x83
 2917 00e9 08       		.byte	0x8
 2918 00ea 06       		.uleb128 0x6
 2919 00eb C5050000 		.4byte	.LASF21
 2920 00ef 01       		.byte	0x1
 2921 00f0 33       		.byte	0x33
 2922 00f1 83000000 		.4byte	0x83
 2923 00f5 0C       		.byte	0xc
 2924 00f6 00       		.byte	0
 2925 00f7 07       		.uleb128 0x7
 2926 00f8 2E050000 		.4byte	.LASF22
 2927 00fc 01       		.byte	0x1
 2928 00fd 34       		.byte	0x34
 2929 00fe BE000000 		.4byte	0xbe
 2930 0102 08       		.uleb128 0x8
 2931 0103 06060000 		.4byte	.LASF24
 2932 0107 01       		.byte	0x1
 2933 0108 5702     		.2byte	0x257
 2934 010a 83000000 		.4byte	0x83
 2935 010e 00000000 		.4byte	.LFB1
 2936 0112 24000000 		.4byte	.LFE1-.LFB1
 2937 0116 01       		.uleb128 0x1
 2938 0117 9C       		.byte	0x9c
 2939 0118 3B010000 		.4byte	0x13b
 2940 011c 09       		.uleb128 0x9
 2941 011d 76617200 		.ascii	"var\000"
 2942 0121 01       		.byte	0x1
 2943 0122 5702     		.2byte	0x257
 2944 0124 83000000 		.4byte	0x83
 2945 0128 02       		.uleb128 0x2
 2946 0129 91       		.byte	0x91
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 103


 2947 012a 74       		.sleb128 -12
 2948 012b 0A       		.uleb128 0xa
 2949 012c 81020000 		.4byte	.LASF23
 2950 0130 01       		.byte	0x1
 2951 0131 5702     		.2byte	0x257
 2952 0133 83000000 		.4byte	0x83
 2953 0137 02       		.uleb128 0x2
 2954 0138 91       		.byte	0x91
 2955 0139 70       		.sleb128 -16
 2956 013a 00       		.byte	0
 2957 013b 0B       		.uleb128 0xb
 2958 013c C0000000 		.4byte	.LASF25
 2959 0140 01       		.byte	0x1
 2960 0141 6A02     		.2byte	0x26a
 2961 0143 83000000 		.4byte	0x83
 2962 0147 00000000 		.4byte	.LFB2
 2963 014b 42000000 		.4byte	.LFE2-.LFB2
 2964 014f 01       		.uleb128 0x1
 2965 0150 9C       		.byte	0x9c
 2966 0151 74010000 		.4byte	0x174
 2967 0155 0A       		.uleb128 0xa
 2968 0156 CE010000 		.4byte	.LASF26
 2969 015a 01       		.byte	0x1
 2970 015b 6A02     		.2byte	0x26a
 2971 015d 83000000 		.4byte	0x83
 2972 0161 02       		.uleb128 0x2
 2973 0162 91       		.byte	0x91
 2974 0163 6C       		.sleb128 -20
 2975 0164 0C       		.uleb128 0xc
 2976 0165 24000000 		.4byte	.LASF29
 2977 0169 01       		.byte	0x1
 2978 016a 6C02     		.2byte	0x26c
 2979 016c 83000000 		.4byte	0x83
 2980 0170 02       		.uleb128 0x2
 2981 0171 91       		.byte	0x91
 2982 0172 74       		.sleb128 -12
 2983 0173 00       		.byte	0
 2984 0174 08       		.uleb128 0x8
 2985 0175 2B000000 		.4byte	.LASF27
 2986 0179 01       		.byte	0x1
 2987 017a 8902     		.2byte	0x289
 2988 017c 83000000 		.4byte	0x83
 2989 0180 00000000 		.4byte	.LFB3
 2990 0184 30000000 		.4byte	.LFE3-.LFB3
 2991 0188 01       		.uleb128 0x1
 2992 0189 9C       		.byte	0x9c
 2993 018a AD010000 		.4byte	0x1ad
 2994 018e 0A       		.uleb128 0xa
 2995 018f E3040000 		.4byte	.LASF28
 2996 0193 01       		.byte	0x1
 2997 0194 8902     		.2byte	0x289
 2998 0196 83000000 		.4byte	0x83
 2999 019a 02       		.uleb128 0x2
 3000 019b 91       		.byte	0x91
 3001 019c 6C       		.sleb128 -20
 3002 019d 0C       		.uleb128 0xc
 3003 019e 24000000 		.4byte	.LASF29
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 104


 3004 01a2 01       		.byte	0x1
 3005 01a3 8B02     		.2byte	0x28b
 3006 01a5 83000000 		.4byte	0x83
 3007 01a9 02       		.uleb128 0x2
 3008 01aa 91       		.byte	0x91
 3009 01ab 74       		.sleb128 -12
 3010 01ac 00       		.byte	0
 3011 01ad 08       		.uleb128 0x8
 3012 01ae 0C020000 		.4byte	.LASF30
 3013 01b2 01       		.byte	0x1
 3014 01b3 A202     		.2byte	0x2a2
 3015 01b5 83000000 		.4byte	0x83
 3016 01b9 00000000 		.4byte	.LFB4
 3017 01bd 32000000 		.4byte	.LFE4-.LFB4
 3018 01c1 01       		.uleb128 0x1
 3019 01c2 9C       		.byte	0x9c
 3020 01c3 E6010000 		.4byte	0x1e6
 3021 01c7 0A       		.uleb128 0xa
 3022 01c8 E3040000 		.4byte	.LASF28
 3023 01cc 01       		.byte	0x1
 3024 01cd A202     		.2byte	0x2a2
 3025 01cf 83000000 		.4byte	0x83
 3026 01d3 02       		.uleb128 0x2
 3027 01d4 91       		.byte	0x91
 3028 01d5 6C       		.sleb128 -20
 3029 01d6 0C       		.uleb128 0xc
 3030 01d7 24000000 		.4byte	.LASF29
 3031 01db 01       		.byte	0x1
 3032 01dc A402     		.2byte	0x2a4
 3033 01de 83000000 		.4byte	0x83
 3034 01e2 02       		.uleb128 0x2
 3035 01e3 91       		.byte	0x91
 3036 01e4 74       		.sleb128 -12
 3037 01e5 00       		.byte	0
 3038 01e6 08       		.uleb128 0x8
 3039 01e7 E5020000 		.4byte	.LASF31
 3040 01eb 01       		.byte	0x1
 3041 01ec BA02     		.2byte	0x2ba
 3042 01ee 83000000 		.4byte	0x83
 3043 01f2 00000000 		.4byte	.LFB5
 3044 01f6 32000000 		.4byte	.LFE5-.LFB5
 3045 01fa 01       		.uleb128 0x1
 3046 01fb 9C       		.byte	0x9c
 3047 01fc 1F020000 		.4byte	0x21f
 3048 0200 0A       		.uleb128 0xa
 3049 0201 E3040000 		.4byte	.LASF28
 3050 0205 01       		.byte	0x1
 3051 0206 BA02     		.2byte	0x2ba
 3052 0208 83000000 		.4byte	0x83
 3053 020c 02       		.uleb128 0x2
 3054 020d 91       		.byte	0x91
 3055 020e 6C       		.sleb128 -20
 3056 020f 0C       		.uleb128 0xc
 3057 0210 24000000 		.4byte	.LASF29
 3058 0214 01       		.byte	0x1
 3059 0215 BC02     		.2byte	0x2bc
 3060 0217 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 105


 3061 021b 02       		.uleb128 0x2
 3062 021c 91       		.byte	0x91
 3063 021d 74       		.sleb128 -12
 3064 021e 00       		.byte	0
 3065 021f 0B       		.uleb128 0xb
 3066 0220 AB050000 		.4byte	.LASF32
 3067 0224 01       		.byte	0x1
 3068 0225 D202     		.2byte	0x2d2
 3069 0227 83000000 		.4byte	0x83
 3070 022b 00000000 		.4byte	.LFB6
 3071 022f 20000000 		.4byte	.LFE6-.LFB6
 3072 0233 01       		.uleb128 0x1
 3073 0234 9C       		.byte	0x9c
 3074 0235 49020000 		.4byte	0x249
 3075 0239 0A       		.uleb128 0xa
 3076 023a E3040000 		.4byte	.LASF28
 3077 023e 01       		.byte	0x1
 3078 023f D202     		.2byte	0x2d2
 3079 0241 83000000 		.4byte	0x83
 3080 0245 02       		.uleb128 0x2
 3081 0246 91       		.byte	0x91
 3082 0247 74       		.sleb128 -12
 3083 0248 00       		.byte	0
 3084 0249 08       		.uleb128 0x8
 3085 024a 97050000 		.4byte	.LASF33
 3086 024e 01       		.byte	0x1
 3087 024f E502     		.2byte	0x2e5
 3088 0251 83000000 		.4byte	0x83
 3089 0255 00000000 		.4byte	.LFB7
 3090 0259 32000000 		.4byte	.LFE7-.LFB7
 3091 025d 01       		.uleb128 0x1
 3092 025e 9C       		.byte	0x9c
 3093 025f 82020000 		.4byte	0x282
 3094 0263 0A       		.uleb128 0xa
 3095 0264 13030000 		.4byte	.LASF19
 3096 0268 01       		.byte	0x1
 3097 0269 E502     		.2byte	0x2e5
 3098 026b 83000000 		.4byte	0x83
 3099 026f 02       		.uleb128 0x2
 3100 0270 91       		.byte	0x91
 3101 0271 6C       		.sleb128 -20
 3102 0272 0C       		.uleb128 0xc
 3103 0273 24000000 		.4byte	.LASF29
 3104 0277 01       		.byte	0x1
 3105 0278 E702     		.2byte	0x2e7
 3106 027a 83000000 		.4byte	0x83
 3107 027e 02       		.uleb128 0x2
 3108 027f 91       		.byte	0x91
 3109 0280 74       		.sleb128 -12
 3110 0281 00       		.byte	0
 3111 0282 08       		.uleb128 0x8
 3112 0283 10000000 		.4byte	.LASF34
 3113 0287 01       		.byte	0x1
 3114 0288 FD02     		.2byte	0x2fd
 3115 028a 83000000 		.4byte	0x83
 3116 028e 00000000 		.4byte	.LFB8
 3117 0292 32000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 106


 3118 0296 01       		.uleb128 0x1
 3119 0297 9C       		.byte	0x9c
 3120 0298 BB020000 		.4byte	0x2bb
 3121 029c 0A       		.uleb128 0xa
 3122 029d 13030000 		.4byte	.LASF19
 3123 02a1 01       		.byte	0x1
 3124 02a2 FD02     		.2byte	0x2fd
 3125 02a4 83000000 		.4byte	0x83
 3126 02a8 02       		.uleb128 0x2
 3127 02a9 91       		.byte	0x91
 3128 02aa 6C       		.sleb128 -20
 3129 02ab 0C       		.uleb128 0xc
 3130 02ac 24000000 		.4byte	.LASF29
 3131 02b0 01       		.byte	0x1
 3132 02b1 FF02     		.2byte	0x2ff
 3133 02b3 83000000 		.4byte	0x83
 3134 02b7 02       		.uleb128 0x2
 3135 02b8 91       		.byte	0x91
 3136 02b9 74       		.sleb128 -12
 3137 02ba 00       		.byte	0
 3138 02bb 08       		.uleb128 0x8
 3139 02bc 3E020000 		.4byte	.LASF35
 3140 02c0 01       		.byte	0x1
 3141 02c1 1503     		.2byte	0x315
 3142 02c3 83000000 		.4byte	0x83
 3143 02c7 00000000 		.4byte	.LFB9
 3144 02cb 58000000 		.4byte	.LFE9-.LFB9
 3145 02cf 01       		.uleb128 0x1
 3146 02d0 9C       		.byte	0x9c
 3147 02d1 F4020000 		.4byte	0x2f4
 3148 02d5 0A       		.uleb128 0xa
 3149 02d6 13030000 		.4byte	.LASF19
 3150 02da 01       		.byte	0x1
 3151 02db 1503     		.2byte	0x315
 3152 02dd 83000000 		.4byte	0x83
 3153 02e1 02       		.uleb128 0x2
 3154 02e2 91       		.byte	0x91
 3155 02e3 6C       		.sleb128 -20
 3156 02e4 0C       		.uleb128 0xc
 3157 02e5 24000000 		.4byte	.LASF29
 3158 02e9 01       		.byte	0x1
 3159 02ea 1703     		.2byte	0x317
 3160 02ec 83000000 		.4byte	0x83
 3161 02f0 02       		.uleb128 0x2
 3162 02f1 91       		.byte	0x91
 3163 02f2 74       		.sleb128 -12
 3164 02f3 00       		.byte	0
 3165 02f4 08       		.uleb128 0x8
 3166 02f5 91000000 		.4byte	.LASF36
 3167 02f9 01       		.byte	0x1
 3168 02fa 9304     		.2byte	0x493
 3169 02fc 83000000 		.4byte	0x83
 3170 0300 00000000 		.4byte	.LFB23
 3171 0304 20000000 		.4byte	.LFE23-.LFB23
 3172 0308 01       		.uleb128 0x1
 3173 0309 9C       		.byte	0x9c
 3174 030a 1E030000 		.4byte	0x31e
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 107


 3175 030e 0A       		.uleb128 0xa
 3176 030f E3040000 		.4byte	.LASF28
 3177 0313 01       		.byte	0x1
 3178 0314 9304     		.2byte	0x493
 3179 0316 83000000 		.4byte	0x83
 3180 031a 02       		.uleb128 0x2
 3181 031b 91       		.byte	0x91
 3182 031c 74       		.sleb128 -12
 3183 031d 00       		.byte	0
 3184 031e 0B       		.uleb128 0xb
 3185 031f D1040000 		.4byte	.LASF37
 3186 0323 01       		.byte	0x1
 3187 0324 B504     		.2byte	0x4b5
 3188 0326 83000000 		.4byte	0x83
 3189 032a 00000000 		.4byte	.LFB24
 3190 032e A0000000 		.4byte	.LFE24-.LFB24
 3191 0332 01       		.uleb128 0x1
 3192 0333 9C       		.byte	0x9c
 3193 0334 93030000 		.4byte	0x393
 3194 0338 0A       		.uleb128 0xa
 3195 0339 AC020000 		.4byte	.LASF38
 3196 033d 01       		.byte	0x1
 3197 033e B504     		.2byte	0x4b5
 3198 0340 83000000 		.4byte	0x83
 3199 0344 02       		.uleb128 0x2
 3200 0345 91       		.byte	0x91
 3201 0346 6C       		.sleb128 -20
 3202 0347 0A       		.uleb128 0xa
 3203 0348 8B040000 		.4byte	.LASF39
 3204 034c 01       		.byte	0x1
 3205 034d B504     		.2byte	0x4b5
 3206 034f 83000000 		.4byte	0x83
 3207 0353 02       		.uleb128 0x2
 3208 0354 91       		.byte	0x91
 3209 0355 68       		.sleb128 -24
 3210 0356 0A       		.uleb128 0xa
 3211 0357 47040000 		.4byte	.LASF40
 3212 035b 01       		.byte	0x1
 3213 035c B604     		.2byte	0x4b6
 3214 035e 83000000 		.4byte	0x83
 3215 0362 02       		.uleb128 0x2
 3216 0363 91       		.byte	0x91
 3217 0364 64       		.sleb128 -28
 3218 0365 09       		.uleb128 0x9
 3219 0366 6D696E00 		.ascii	"min\000"
 3220 036a 01       		.byte	0x1
 3221 036b B604     		.2byte	0x4b6
 3222 036d 83000000 		.4byte	0x83
 3223 0371 02       		.uleb128 0x2
 3224 0372 91       		.byte	0x91
 3225 0373 60       		.sleb128 -32
 3226 0374 09       		.uleb128 0x9
 3227 0375 73656300 		.ascii	"sec\000"
 3228 0379 01       		.byte	0x1
 3229 037a B604     		.2byte	0x4b6
 3230 037c 83000000 		.4byte	0x83
 3231 0380 02       		.uleb128 0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 108


 3232 0381 91       		.byte	0x91
 3233 0382 00       		.sleb128 0
 3234 0383 0C       		.uleb128 0xc
 3235 0384 24000000 		.4byte	.LASF29
 3236 0388 01       		.byte	0x1
 3237 0389 B804     		.2byte	0x4b8
 3238 038b 83000000 		.4byte	0x83
 3239 038f 02       		.uleb128 0x2
 3240 0390 91       		.byte	0x91
 3241 0391 74       		.sleb128 -12
 3242 0392 00       		.byte	0
 3243 0393 0B       		.uleb128 0xb
 3244 0394 68050000 		.4byte	.LASF41
 3245 0398 01       		.byte	0x1
 3246 0399 DE04     		.2byte	0x4de
 3247 039b 83000000 		.4byte	0x83
 3248 039f 00000000 		.4byte	.LFB25
 3249 03a3 D6000000 		.4byte	.LFE25-.LFB25
 3250 03a7 01       		.uleb128 0x1
 3251 03a8 9C       		.byte	0x9c
 3252 03a9 F9030000 		.4byte	0x3f9
 3253 03ad 0A       		.uleb128 0xa
 3254 03ae 99020000 		.4byte	.LASF42
 3255 03b2 01       		.byte	0x1
 3256 03b3 DE04     		.2byte	0x4de
 3257 03b5 83000000 		.4byte	0x83
 3258 03b9 02       		.uleb128 0x2
 3259 03ba 91       		.byte	0x91
 3260 03bb 6C       		.sleb128 -20
 3261 03bc 09       		.uleb128 0x9
 3262 03bd 64617900 		.ascii	"day\000"
 3263 03c1 01       		.byte	0x1
 3264 03c2 DE04     		.2byte	0x4de
 3265 03c4 83000000 		.4byte	0x83
 3266 03c8 02       		.uleb128 0x2
 3267 03c9 91       		.byte	0x91
 3268 03ca 68       		.sleb128 -24
 3269 03cb 0A       		.uleb128 0xa
 3270 03cc CE010000 		.4byte	.LASF26
 3271 03d0 01       		.byte	0x1
 3272 03d1 DE04     		.2byte	0x4de
 3273 03d3 83000000 		.4byte	0x83
 3274 03d7 02       		.uleb128 0x2
 3275 03d8 91       		.byte	0x91
 3276 03d9 64       		.sleb128 -28
 3277 03da 0C       		.uleb128 0xc
 3278 03db 24000000 		.4byte	.LASF29
 3279 03df 01       		.byte	0x1
 3280 03e0 E004     		.2byte	0x4e0
 3281 03e2 83000000 		.4byte	0x83
 3282 03e6 02       		.uleb128 0x2
 3283 03e7 91       		.byte	0x91
 3284 03e8 70       		.sleb128 -16
 3285 03e9 0C       		.uleb128 0xc
 3286 03ea 07050000 		.4byte	.LASF43
 3287 03ee 01       		.byte	0x1
 3288 03ef E104     		.2byte	0x4e1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 109


 3289 03f1 83000000 		.4byte	0x83
 3290 03f5 02       		.uleb128 0x2
 3291 03f6 91       		.byte	0x91
 3292 03f7 74       		.sleb128 -12
 3293 03f8 00       		.byte	0
 3294 03f9 0B       		.uleb128 0xb
 3295 03fa 1E010000 		.4byte	.LASF44
 3296 03fe 01       		.byte	0x1
 3297 03ff 1E05     		.2byte	0x51e
 3298 0401 83000000 		.4byte	0x83
 3299 0405 00000000 		.4byte	.LFB26
 3300 0409 88000000 		.4byte	.LFE26-.LFB26
 3301 040d 01       		.uleb128 0x1
 3302 040e 9C       		.byte	0x9c
 3303 040f 50040000 		.4byte	0x450
 3304 0413 09       		.uleb128 0x9
 3305 0414 64617900 		.ascii	"day\000"
 3306 0418 01       		.byte	0x1
 3307 0419 1E05     		.2byte	0x51e
 3308 041b 83000000 		.4byte	0x83
 3309 041f 02       		.uleb128 0x2
 3310 0420 91       		.byte	0x91
 3311 0421 64       		.sleb128 -28
 3312 0422 0A       		.uleb128 0xa
 3313 0423 99020000 		.4byte	.LASF42
 3314 0427 01       		.byte	0x1
 3315 0428 1E05     		.2byte	0x51e
 3316 042a 83000000 		.4byte	0x83
 3317 042e 02       		.uleb128 0x2
 3318 042f 91       		.byte	0x91
 3319 0430 60       		.sleb128 -32
 3320 0431 0A       		.uleb128 0xa
 3321 0432 CE010000 		.4byte	.LASF26
 3322 0436 01       		.byte	0x1
 3323 0437 1E05     		.2byte	0x51e
 3324 0439 83000000 		.4byte	0x83
 3325 043d 02       		.uleb128 0x2
 3326 043e 91       		.byte	0x91
 3327 043f 5C       		.sleb128 -36
 3328 0440 0C       		.uleb128 0xc
 3329 0441 24000000 		.4byte	.LASF29
 3330 0445 01       		.byte	0x1
 3331 0446 2005     		.2byte	0x520
 3332 0448 83000000 		.4byte	0x83
 3333 044c 02       		.uleb128 0x2
 3334 044d 91       		.byte	0x91
 3335 044e 6C       		.sleb128 -20
 3336 044f 00       		.byte	0
 3337 0450 0B       		.uleb128 0xb
 3338 0451 61010000 		.4byte	.LASF45
 3339 0455 01       		.byte	0x1
 3340 0456 4C05     		.2byte	0x54c
 3341 0458 83000000 		.4byte	0x83
 3342 045c 00000000 		.4byte	.LFB27
 3343 0460 3C000000 		.4byte	.LFE27-.LFB27
 3344 0464 01       		.uleb128 0x1
 3345 0465 9C       		.byte	0x9c
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 110


 3346 0466 98040000 		.4byte	0x498
 3347 046a 0A       		.uleb128 0xa
 3348 046b 99020000 		.4byte	.LASF42
 3349 046f 01       		.byte	0x1
 3350 0470 4C05     		.2byte	0x54c
 3351 0472 83000000 		.4byte	0x83
 3352 0476 02       		.uleb128 0x2
 3353 0477 91       		.byte	0x91
 3354 0478 6C       		.sleb128 -20
 3355 0479 0A       		.uleb128 0xa
 3356 047a CE010000 		.4byte	.LASF26
 3357 047e 01       		.byte	0x1
 3358 047f 4C05     		.2byte	0x54c
 3359 0481 83000000 		.4byte	0x83
 3360 0485 02       		.uleb128 0x2
 3361 0486 91       		.byte	0x91
 3362 0487 68       		.sleb128 -24
 3363 0488 0C       		.uleb128 0xc
 3364 0489 24000000 		.4byte	.LASF29
 3365 048d 01       		.byte	0x1
 3366 048e 4E05     		.2byte	0x54e
 3367 0490 83000000 		.4byte	0x83
 3368 0494 02       		.uleb128 0x2
 3369 0495 91       		.byte	0x91
 3370 0496 74       		.sleb128 -12
 3371 0497 00       		.byte	0
 3372 0498 0D       		.uleb128 0xd
 3373 0499 4C040000 		.4byte	.LASF47
 3374 049d 01       		.byte	0x1
 3375 049e 6B05     		.2byte	0x56b
 3376 04a0 00000000 		.4byte	.LFB28
 3377 04a4 20000000 		.4byte	.LFE28-.LFB28
 3378 04a8 01       		.uleb128 0x1
 3379 04a9 9C       		.byte	0x9c
 3380 04aa BE040000 		.4byte	0x4be
 3381 04ae 0A       		.uleb128 0xa
 3382 04af 57020000 		.4byte	.LASF46
 3383 04b3 01       		.byte	0x1
 3384 04b4 6B05     		.2byte	0x56b
 3385 04b6 83000000 		.4byte	0x83
 3386 04ba 02       		.uleb128 0x2
 3387 04bb 91       		.byte	0x91
 3388 04bc 74       		.sleb128 -12
 3389 04bd 00       		.byte	0
 3390 04be 0D       		.uleb128 0xd
 3391 04bf 95040000 		.4byte	.LASF48
 3392 04c3 01       		.byte	0x1
 3393 04c4 8205     		.2byte	0x582
 3394 04c6 00000000 		.4byte	.LFB29
 3395 04ca 1A000000 		.4byte	.LFE29-.LFB29
 3396 04ce 01       		.uleb128 0x1
 3397 04cf 9C       		.byte	0x9c
 3398 04d0 E4040000 		.4byte	0x4e4
 3399 04d4 0A       		.uleb128 0xa
 3400 04d5 57020000 		.4byte	.LASF46
 3401 04d9 01       		.byte	0x1
 3402 04da 8205     		.2byte	0x582
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 111


 3403 04dc 83000000 		.4byte	0x83
 3404 04e0 02       		.uleb128 0x2
 3405 04e1 91       		.byte	0x91
 3406 04e2 74       		.sleb128 -12
 3407 04e3 00       		.byte	0
 3408 04e4 0E       		.uleb128 0xe
 3409 04e5 B8010000 		.4byte	.LASF49
 3410 04e9 02       		.byte	0x2
 3411 04ea 58       		.byte	0x58
 3412 04eb 00000000 		.4byte	.LFB30
 3413 04ef 20000000 		.4byte	.LFE30-.LFB30
 3414 04f3 01       		.uleb128 0x1
 3415 04f4 9C       		.byte	0x9c
 3416 04f5 0E       		.uleb128 0xe
 3417 04f6 FE040000 		.4byte	.LASF50
 3418 04fa 02       		.byte	0x2
 3419 04fb 6E       		.byte	0x6e
 3420 04fc 00000000 		.4byte	.LFB31
 3421 0500 10000000 		.4byte	.LFE31-.LFB31
 3422 0504 01       		.uleb128 0x1
 3423 0505 9C       		.byte	0x9c
 3424 0506 0F       		.uleb128 0xf
 3425 0507 E0000000 		.4byte	.LASF53
 3426 050b 02       		.byte	0x2
 3427 050c 87       		.byte	0x87
 3428 050d 00000000 		.4byte	.LFB32
 3429 0511 74000000 		.4byte	.LFE32-.LFB32
 3430 0515 01       		.uleb128 0x1
 3431 0516 9C       		.byte	0x9c
 3432 0517 38050000 		.4byte	0x538
 3433 051b 10       		.uleb128 0x10
 3434 051c B8000000 		.4byte	.LASF51
 3435 0520 02       		.byte	0x2
 3436 0521 89       		.byte	0x89
 3437 0522 83000000 		.4byte	0x83
 3438 0526 02       		.uleb128 0x2
 3439 0527 91       		.byte	0x91
 3440 0528 74       		.sleb128 -12
 3441 0529 10       		.uleb128 0x10
 3442 052a E7050000 		.4byte	.LASF52
 3443 052e 02       		.byte	0x2
 3444 052f 8A       		.byte	0x8a
 3445 0530 83000000 		.4byte	0x83
 3446 0534 02       		.uleb128 0x2
 3447 0535 91       		.byte	0x91
 3448 0536 70       		.sleb128 -16
 3449 0537 00       		.byte	0
 3450 0538 0F       		.uleb128 0xf
 3451 0539 6E020000 		.4byte	.LASF54
 3452 053d 02       		.byte	0x2
 3453 053e E3       		.byte	0xe3
 3454 053f 00000000 		.4byte	.LFB33
 3455 0543 74000000 		.4byte	.LFE33-.LFB33
 3456 0547 01       		.uleb128 0x1
 3457 0548 9C       		.byte	0x9c
 3458 0549 94050000 		.4byte	0x594
 3459 054d 11       		.uleb128 0x11
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 112


 3460 054e E3040000 		.4byte	.LASF28
 3461 0552 02       		.byte	0x2
 3462 0553 E3       		.byte	0xe3
 3463 0554 83000000 		.4byte	0x83
 3464 0558 02       		.uleb128 0x2
 3465 0559 91       		.byte	0x91
 3466 055a 5C       		.sleb128 -36
 3467 055b 11       		.uleb128 0x11
 3468 055c 7A050000 		.4byte	.LASF55
 3469 0560 02       		.byte	0x2
 3470 0561 E3       		.byte	0xe3
 3471 0562 83000000 		.4byte	0x83
 3472 0566 02       		.uleb128 0x2
 3473 0567 91       		.byte	0x91
 3474 0568 58       		.sleb128 -40
 3475 0569 10       		.uleb128 0x10
 3476 056a 09000000 		.4byte	.LASF56
 3477 056e 02       		.byte	0x2
 3478 056f E5       		.byte	0xe5
 3479 0570 83000000 		.4byte	0x83
 3480 0574 02       		.uleb128 0x2
 3481 0575 91       		.byte	0x91
 3482 0576 6C       		.sleb128 -20
 3483 0577 10       		.uleb128 0x10
 3484 0578 3F010000 		.4byte	.LASF57
 3485 057c 02       		.byte	0x2
 3486 057d E6       		.byte	0xe6
 3487 057e 83000000 		.4byte	0x83
 3488 0582 02       		.uleb128 0x2
 3489 0583 91       		.byte	0x91
 3490 0584 68       		.sleb128 -24
 3491 0585 10       		.uleb128 0x10
 3492 0586 09040000 		.4byte	.LASF58
 3493 058a 02       		.byte	0x2
 3494 058b E7       		.byte	0xe7
 3495 058c 83000000 		.4byte	0x83
 3496 0590 02       		.uleb128 0x2
 3497 0591 91       		.byte	0x91
 3498 0592 64       		.sleb128 -28
 3499 0593 00       		.byte	0
 3500 0594 12       		.uleb128 0x12
 3501 0595 D3010000 		.4byte	.LASF59
 3502 0599 02       		.byte	0x2
 3503 059a 1601     		.2byte	0x116
 3504 059c 00000000 		.4byte	.LFB34
 3505 05a0 38000000 		.4byte	.LFE34-.LFB34
 3506 05a4 01       		.uleb128 0x1
 3507 05a5 9C       		.byte	0x9c
 3508 05a6 C9050000 		.4byte	0x5c9
 3509 05aa 0A       		.uleb128 0xa
 3510 05ab A2050000 		.4byte	.LASF60
 3511 05af 02       		.byte	0x2
 3512 05b0 1601     		.2byte	0x116
 3513 05b2 9D000000 		.4byte	0x9d
 3514 05b6 02       		.uleb128 0x2
 3515 05b7 91       		.byte	0x91
 3516 05b8 58       		.sleb128 -40
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 113


 3517 05b9 0C       		.uleb128 0xc
 3518 05ba FA050000 		.4byte	.LASF61
 3519 05be 02       		.byte	0x2
 3520 05bf 1801     		.2byte	0x118
 3521 05c1 F7000000 		.4byte	0xf7
 3522 05c5 02       		.uleb128 0x2
 3523 05c6 91       		.byte	0x91
 3524 05c7 60       		.sleb128 -32
 3525 05c8 00       		.byte	0
 3526 05c9 13       		.uleb128 0x13
 3527 05ca 6A040000 		.4byte	.LASF65
 3528 05ce 02       		.byte	0x2
 3529 05cf 3B01     		.2byte	0x13b
 3530 05d1 9D000000 		.4byte	0x9d
 3531 05d5 00000000 		.4byte	.LFB35
 3532 05d9 18000000 		.4byte	.LFE35-.LFB35
 3533 05dd 01       		.uleb128 0x1
 3534 05de 9C       		.byte	0x9c
 3535 05df 14       		.uleb128 0x14
 3536 05e0 A2010000 		.4byte	.LASF62
 3537 05e4 02       		.byte	0x2
 3538 05e5 5601     		.2byte	0x156
 3539 05e7 00000000 		.4byte	.LFB36
 3540 05eb 28000000 		.4byte	.LFE36-.LFB36
 3541 05ef 01       		.uleb128 0x1
 3542 05f0 9C       		.byte	0x9c
 3543 05f1 14060000 		.4byte	0x614
 3544 05f5 0A       		.uleb128 0xa
 3545 05f6 18030000 		.4byte	.LASF63
 3546 05fa 02       		.byte	0x2
 3547 05fb 5601     		.2byte	0x156
 3548 05fd 83000000 		.4byte	0x83
 3549 0601 02       		.uleb128 0x2
 3550 0602 91       		.byte	0x91
 3551 0603 74       		.sleb128 -12
 3552 0604 0A       		.uleb128 0xa
 3553 0605 21020000 		.4byte	.LASF64
 3554 0609 02       		.byte	0x2
 3555 060a 5601     		.2byte	0x156
 3556 060c 83000000 		.4byte	0x83
 3557 0610 02       		.uleb128 0x2
 3558 0611 91       		.byte	0x91
 3559 0612 70       		.sleb128 -16
 3560 0613 00       		.byte	0
 3561 0614 13       		.uleb128 0x13
 3562 0615 F2020000 		.4byte	.LASF66
 3563 0619 02       		.byte	0x2
 3564 061a 6701     		.2byte	0x167
 3565 061c 83000000 		.4byte	0x83
 3566 0620 00000000 		.4byte	.LFB37
 3567 0624 14000000 		.4byte	.LFE37-.LFB37
 3568 0628 01       		.uleb128 0x1
 3569 0629 9C       		.byte	0x9c
 3570 062a 13       		.uleb128 0x13
 3571 062b 7A040000 		.4byte	.LASF67
 3572 062f 02       		.byte	0x2
 3573 0630 7801     		.2byte	0x178
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 114


 3574 0632 83000000 		.4byte	0x83
 3575 0636 00000000 		.4byte	.LFB38
 3576 063a 14000000 		.4byte	.LFE38-.LFB38
 3577 063e 01       		.uleb128 0x1
 3578 063f 9C       		.byte	0x9c
 3579 0640 12       		.uleb128 0x12
 3580 0641 39000000 		.4byte	.LASF68
 3581 0645 02       		.byte	0x2
 3582 0646 8801     		.2byte	0x188
 3583 0648 00000000 		.4byte	.LFB39
 3584 064c 3C000000 		.4byte	.LFE39-.LFB39
 3585 0650 01       		.uleb128 0x1
 3586 0651 9C       		.byte	0x9c
 3587 0652 66060000 		.4byte	0x666
 3588 0656 0A       		.uleb128 0xa
 3589 0657 00000000 		.4byte	.LASF69
 3590 065b 02       		.byte	0x2
 3591 065c 8801     		.2byte	0x188
 3592 065e 66060000 		.4byte	0x666
 3593 0662 02       		.uleb128 0x2
 3594 0663 91       		.byte	0x91
 3595 0664 6C       		.sleb128 -20
 3596 0665 00       		.byte	0
 3597 0666 15       		.uleb128 0x15
 3598 0667 04       		.byte	0x4
 3599 0668 F7000000 		.4byte	0xf7
 3600 066c 16       		.uleb128 0x16
 3601 066d DB050000 		.4byte	.LASF70
 3602 0671 02       		.byte	0x2
 3603 0672 9F01     		.2byte	0x19f
 3604 0674 83000000 		.4byte	0x83
 3605 0678 00000000 		.4byte	.LFB40
 3606 067c 44000000 		.4byte	.LFE40-.LFB40
 3607 0680 01       		.uleb128 0x1
 3608 0681 9C       		.byte	0x9c
 3609 0682 16       		.uleb128 0x16
 3610 0683 3C050000 		.4byte	.LASF71
 3611 0687 02       		.byte	0x2
 3612 0688 B901     		.2byte	0x1b9
 3613 068a 83000000 		.4byte	0x83
 3614 068e 00000000 		.4byte	.LFB41
 3615 0692 44000000 		.4byte	.LFE41-.LFB41
 3616 0696 01       		.uleb128 0x1
 3617 0697 9C       		.byte	0x9c
 3618 0698 17       		.uleb128 0x17
 3619 0699 CC050000 		.4byte	.LASF73
 3620 069d 02       		.byte	0x2
 3621 069e 4D03     		.2byte	0x34d
 3622 06a0 83000000 		.4byte	0x83
 3623 06a4 00000000 		.4byte	.LFB42
 3624 06a8 80000000 		.4byte	.LFE42-.LFB42
 3625 06ac 01       		.uleb128 0x1
 3626 06ad 9C       		.byte	0x9c
 3627 06ae D1060000 		.4byte	0x6d1
 3628 06b2 0C       		.uleb128 0xc
 3629 06b3 09040000 		.4byte	.LASF58
 3630 06b7 02       		.byte	0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 115


 3631 06b8 4F03     		.2byte	0x34f
 3632 06ba 83000000 		.4byte	0x83
 3633 06be 02       		.uleb128 0x2
 3634 06bf 91       		.byte	0x91
 3635 06c0 74       		.sleb128 -12
 3636 06c1 0C       		.uleb128 0xc
 3637 06c2 E3010000 		.4byte	.LASF72
 3638 06c6 02       		.byte	0x2
 3639 06c7 5003     		.2byte	0x350
 3640 06c9 F7000000 		.4byte	0xf7
 3641 06cd 02       		.uleb128 0x2
 3642 06ce 91       		.byte	0x91
 3643 06cf 64       		.sleb128 -28
 3644 06d0 00       		.byte	0
 3645 06d1 18       		.uleb128 0x18
 3646 06d2 F8010000 		.4byte	.LASF74
 3647 06d6 02       		.byte	0x2
 3648 06d7 0A04     		.2byte	0x40a
 3649 06d9 83000000 		.4byte	0x83
 3650 06dd 00000000 		.4byte	.LFB43
 3651 06e1 4E000000 		.4byte	.LFE43-.LFB43
 3652 06e5 01       		.uleb128 0x1
 3653 06e6 9C       		.byte	0x9c
 3654 06e7 26070000 		.4byte	0x726
 3655 06eb 0A       		.uleb128 0xa
 3656 06ec 75010000 		.4byte	.LASF75
 3657 06f0 02       		.byte	0x2
 3658 06f1 0A04     		.2byte	0x40a
 3659 06f3 83000000 		.4byte	0x83
 3660 06f7 02       		.uleb128 0x2
 3661 06f8 91       		.byte	0x91
 3662 06f9 64       		.sleb128 -28
 3663 06fa 19       		.uleb128 0x19
 3664 06fb 6900     		.ascii	"i\000"
 3665 06fd 02       		.byte	0x2
 3666 06fe 0C04     		.2byte	0x40c
 3667 0700 83000000 		.4byte	0x83
 3668 0704 02       		.uleb128 0x2
 3669 0705 91       		.byte	0x91
 3670 0706 74       		.sleb128 -12
 3671 0707 0C       		.uleb128 0xc
 3672 0708 4D050000 		.4byte	.LASF76
 3673 070c 02       		.byte	0x2
 3674 070d 0D04     		.2byte	0x40d
 3675 070f 83000000 		.4byte	0x83
 3676 0713 02       		.uleb128 0x2
 3677 0714 91       		.byte	0x91
 3678 0715 70       		.sleb128 -16
 3679 0716 0C       		.uleb128 0xc
 3680 0717 24000000 		.4byte	.LASF29
 3681 071b 02       		.byte	0x2
 3682 071c 0E04     		.2byte	0x40e
 3683 071e 83000000 		.4byte	0x83
 3684 0722 02       		.uleb128 0x2
 3685 0723 91       		.byte	0x91
 3686 0724 6C       		.sleb128 -20
 3687 0725 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 116


 3688 0726 17       		.uleb128 0x17
 3689 0727 B7020000 		.4byte	.LASF77
 3690 072b 02       		.byte	0x2
 3691 072c 2F04     		.2byte	0x42f
 3692 072e 83000000 		.4byte	0x83
 3693 0732 00000000 		.4byte	.LFB44
 3694 0736 60000000 		.4byte	.LFE44-.LFB44
 3695 073a 01       		.uleb128 0x1
 3696 073b 9C       		.byte	0x9c
 3697 073c 7D070000 		.4byte	0x77d
 3698 0740 0A       		.uleb128 0xa
 3699 0741 27050000 		.4byte	.LASF78
 3700 0745 02       		.byte	0x2
 3701 0746 2F04     		.2byte	0x42f
 3702 0748 83000000 		.4byte	0x83
 3703 074c 02       		.uleb128 0x2
 3704 074d 91       		.byte	0x91
 3705 074e 64       		.sleb128 -28
 3706 074f 0C       		.uleb128 0xc
 3707 0750 4A020000 		.4byte	.LASF79
 3708 0754 02       		.byte	0x2
 3709 0755 3104     		.2byte	0x431
 3710 0757 83000000 		.4byte	0x83
 3711 075b 02       		.uleb128 0x2
 3712 075c 91       		.byte	0x91
 3713 075d 74       		.sleb128 -12
 3714 075e 0C       		.uleb128 0xc
 3715 075f 07050000 		.4byte	.LASF43
 3716 0763 02       		.byte	0x2
 3717 0764 3204     		.2byte	0x432
 3718 0766 83000000 		.4byte	0x83
 3719 076a 02       		.uleb128 0x2
 3720 076b 91       		.byte	0x91
 3721 076c 70       		.sleb128 -16
 3722 076d 0C       		.uleb128 0xc
 3723 076e 24000000 		.4byte	.LASF29
 3724 0772 02       		.byte	0x2
 3725 0773 3304     		.2byte	0x433
 3726 0775 83000000 		.4byte	0x83
 3727 0779 02       		.uleb128 0x2
 3728 077a 91       		.byte	0x91
 3729 077b 6C       		.sleb128 -20
 3730 077c 00       		.byte	0
 3731 077d 14       		.uleb128 0x14
 3732 077e EF050000 		.4byte	.LASF80
 3733 0782 02       		.byte	0x2
 3734 0783 6204     		.2byte	0x462
 3735 0785 00000000 		.4byte	.LFB45
 3736 0789 58000000 		.4byte	.LFE45-.LFB45
 3737 078d 01       		.uleb128 0x1
 3738 078e 9C       		.byte	0x9c
 3739 078f A6070000 		.4byte	0x7a6
 3740 0793 0C       		.uleb128 0xc
 3741 0794 52050000 		.4byte	.LASF81
 3742 0798 02       		.byte	0x2
 3743 0799 6404     		.2byte	0x464
 3744 079b 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 117


 3745 079f 05       		.uleb128 0x5
 3746 07a0 03       		.byte	0x3
 3747 07a1 0C000000 		.4byte	RTC_currentTickNumber.5293
 3748 07a5 00       		.byte	0
 3749 07a6 17       		.uleb128 0x17
 3750 07a7 AC030000 		.4byte	.LASF82
 3751 07ab 02       		.byte	0x2
 3752 07ac A504     		.2byte	0x4a5
 3753 07ae 9D000000 		.4byte	0x9d
 3754 07b2 00000000 		.4byte	.LFB46
 3755 07b6 C0010000 		.4byte	.LFE46-.LFB46
 3756 07ba 01       		.uleb128 0x1
 3757 07bb 9C       		.byte	0x9c
 3758 07bc 41080000 		.4byte	0x841
 3759 07c0 0A       		.uleb128 0xa
 3760 07c1 7A050000 		.4byte	.LASF55
 3761 07c5 02       		.byte	0x2
 3762 07c6 A504     		.2byte	0x4a5
 3763 07c8 83000000 		.4byte	0x83
 3764 07cc 02       		.uleb128 0x2
 3765 07cd 91       		.byte	0x91
 3766 07ce 44       		.sleb128 -60
 3767 07cf 0A       		.uleb128 0xa
 3768 07d0 E3040000 		.4byte	.LASF28
 3769 07d4 02       		.byte	0x2
 3770 07d5 A504     		.2byte	0x4a5
 3771 07d7 83000000 		.4byte	0x83
 3772 07db 02       		.uleb128 0x2
 3773 07dc 91       		.byte	0x91
 3774 07dd 40       		.sleb128 -64
 3775 07de 19       		.uleb128 0x19
 3776 07df 6900     		.ascii	"i\000"
 3777 07e1 02       		.byte	0x2
 3778 07e2 A704     		.2byte	0x4a7
 3779 07e4 83000000 		.4byte	0x83
 3780 07e8 02       		.uleb128 0x2
 3781 07e9 91       		.byte	0x91
 3782 07ea 64       		.sleb128 -28
 3783 07eb 0C       		.uleb128 0xc
 3784 07ec 09040000 		.4byte	.LASF58
 3785 07f0 02       		.byte	0x2
 3786 07f1 A804     		.2byte	0x4a8
 3787 07f3 83000000 		.4byte	0x83
 3788 07f7 02       		.uleb128 0x2
 3789 07f8 91       		.byte	0x91
 3790 07f9 54       		.sleb128 -44
 3791 07fa 0C       		.uleb128 0xc
 3792 07fb 3F010000 		.4byte	.LASF57
 3793 07ff 02       		.byte	0x2
 3794 0800 A904     		.2byte	0x4a9
 3795 0802 83000000 		.4byte	0x83
 3796 0806 02       		.uleb128 0x2
 3797 0807 91       		.byte	0x91
 3798 0808 50       		.sleb128 -48
 3799 0809 0C       		.uleb128 0xc
 3800 080a 07050000 		.4byte	.LASF43
 3801 080e 02       		.byte	0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 118


 3802 080f AA04     		.2byte	0x4aa
 3803 0811 83000000 		.4byte	0x83
 3804 0815 02       		.uleb128 0x2
 3805 0816 91       		.byte	0x91
 3806 0817 60       		.sleb128 -32
 3807 0818 0C       		.uleb128 0xc
 3808 0819 A2050000 		.4byte	.LASF60
 3809 081d 02       		.byte	0x2
 3810 081e AB04     		.2byte	0x4ab
 3811 0820 9D000000 		.4byte	0x9d
 3812 0824 02       		.uleb128 0x2
 3813 0825 91       		.byte	0x91
 3814 0826 58       		.sleb128 -40
 3815 0827 1A       		.uleb128 0x1a
 3816 0828 F6000000 		.4byte	.LBB2
 3817 082c 30000000 		.4byte	.LBE2-.LBB2
 3818 0830 0C       		.uleb128 0xc
 3819 0831 B0010000 		.4byte	.LASF83
 3820 0835 02       		.byte	0x2
 3821 0836 C904     		.2byte	0x4c9
 3822 0838 83000000 		.4byte	0x83
 3823 083c 02       		.uleb128 0x2
 3824 083d 91       		.byte	0x91
 3825 083e 4C       		.sleb128 -52
 3826 083f 00       		.byte	0
 3827 0840 00       		.byte	0
 3828 0841 12       		.uleb128 0x12
 3829 0842 84050000 		.4byte	.LASF84
 3830 0846 02       		.byte	0x2
 3831 0847 F904     		.2byte	0x4f9
 3832 0849 00000000 		.4byte	.LFB47
 3833 084d 98020000 		.4byte	.LFE47-.LFB47
 3834 0851 01       		.uleb128 0x1
 3835 0852 9C       		.byte	0x9c
 3836 0853 EF080000 		.4byte	0x8ef
 3837 0857 0A       		.uleb128 0xa
 3838 0858 00000000 		.4byte	.LASF69
 3839 085c 02       		.byte	0x2
 3840 085d F904     		.2byte	0x4f9
 3841 085f 66060000 		.4byte	0x666
 3842 0863 02       		.uleb128 0x2
 3843 0864 91       		.byte	0x91
 3844 0865 44       		.sleb128 -60
 3845 0866 0A       		.uleb128 0xa
 3846 0867 A2050000 		.4byte	.LASF60
 3847 086b 02       		.byte	0x2
 3848 086c F904     		.2byte	0x4f9
 3849 086e 9D000000 		.4byte	0x9d
 3850 0872 03       		.uleb128 0x3
 3851 0873 91       		.byte	0x91
 3852 0874 B87F     		.sleb128 -72
 3853 0876 0A       		.uleb128 0xa
 3854 0877 AC020000 		.4byte	.LASF38
 3855 087b 02       		.byte	0x2
 3856 087c F904     		.2byte	0x4f9
 3857 087e 83000000 		.4byte	0x83
 3858 0882 02       		.uleb128 0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 119


 3859 0883 91       		.byte	0x91
 3860 0884 00       		.sleb128 0
 3861 0885 0C       		.uleb128 0xc
 3862 0886 E9000000 		.4byte	.LASF85
 3863 088a 02       		.byte	0x2
 3864 088b FB04     		.2byte	0x4fb
 3865 088d 83000000 		.4byte	0x83
 3866 0891 02       		.uleb128 0x2
 3867 0892 91       		.byte	0x91
 3868 0893 4C       		.sleb128 -52
 3869 0894 0C       		.uleb128 0xc
 3870 0895 28040000 		.4byte	.LASF86
 3871 0899 02       		.byte	0x2
 3872 089a FC04     		.2byte	0x4fc
 3873 089c 83000000 		.4byte	0x83
 3874 08a0 02       		.uleb128 0x2
 3875 08a1 91       		.byte	0x91
 3876 08a2 64       		.sleb128 -28
 3877 08a3 0C       		.uleb128 0xc
 3878 08a4 54010000 		.4byte	.LASF87
 3879 08a8 02       		.byte	0x2
 3880 08a9 FD04     		.2byte	0x4fd
 3881 08ab 83000000 		.4byte	0x83
 3882 08af 02       		.uleb128 0x2
 3883 08b0 91       		.byte	0x91
 3884 08b1 60       		.sleb128 -32
 3885 08b2 0C       		.uleb128 0xc
 3886 08b3 09000000 		.4byte	.LASF56
 3887 08b7 02       		.byte	0x2
 3888 08b8 FF04     		.2byte	0x4ff
 3889 08ba 83000000 		.4byte	0x83
 3890 08be 02       		.uleb128 0x2
 3891 08bf 91       		.byte	0x91
 3892 08c0 50       		.sleb128 -48
 3893 08c1 0C       		.uleb128 0xc
 3894 08c2 3F010000 		.4byte	.LASF57
 3895 08c6 02       		.byte	0x2
 3896 08c7 0005     		.2byte	0x500
 3897 08c9 83000000 		.4byte	0x83
 3898 08cd 02       		.uleb128 0x2
 3899 08ce 91       		.byte	0x91
 3900 08cf 5C       		.sleb128 -36
 3901 08d0 0C       		.uleb128 0xc
 3902 08d1 09040000 		.4byte	.LASF58
 3903 08d5 02       		.byte	0x2
 3904 08d6 0105     		.2byte	0x501
 3905 08d8 83000000 		.4byte	0x83
 3906 08dc 02       		.uleb128 0x2
 3907 08dd 91       		.byte	0x91
 3908 08de 58       		.sleb128 -40
 3909 08df 0C       		.uleb128 0xc
 3910 08e0 20050000 		.4byte	.LASF88
 3911 08e4 02       		.byte	0x2
 3912 08e5 0305     		.2byte	0x503
 3913 08e7 83000000 		.4byte	0x83
 3914 08eb 02       		.uleb128 0x2
 3915 08ec 91       		.byte	0x91
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 120


 3916 08ed 54       		.sleb128 -44
 3917 08ee 00       		.byte	0
 3918 08ef 17       		.uleb128 0x17
 3919 08f0 F3000000 		.4byte	.LASF89
 3920 08f4 02       		.byte	0x2
 3921 08f5 6505     		.2byte	0x565
 3922 08f7 83000000 		.4byte	0x83
 3923 08fb 00000000 		.4byte	.LFB48
 3924 08ff 7A000000 		.4byte	.LFE48-.LFB48
 3925 0903 01       		.uleb128 0x1
 3926 0904 9C       		.byte	0x9c
 3927 0905 91090000 		.4byte	0x991
 3928 0909 0A       		.uleb128 0xa
 3929 090a BF030000 		.4byte	.LASF20
 3930 090e 02       		.byte	0x2
 3931 090f 6505     		.2byte	0x565
 3932 0911 83000000 		.4byte	0x83
 3933 0915 02       		.uleb128 0x2
 3934 0916 91       		.byte	0x91
 3935 0917 5C       		.sleb128 -36
 3936 0918 0A       		.uleb128 0xa
 3937 0919 48010000 		.4byte	.LASF90
 3938 091d 02       		.byte	0x2
 3939 091e 6505     		.2byte	0x565
 3940 0920 83000000 		.4byte	0x83
 3941 0924 02       		.uleb128 0x2
 3942 0925 91       		.byte	0x91
 3943 0926 58       		.sleb128 -40
 3944 0927 0A       		.uleb128 0xa
 3945 0928 99020000 		.4byte	.LASF42
 3946 092c 02       		.byte	0x2
 3947 092d 6505     		.2byte	0x565
 3948 092f 83000000 		.4byte	0x83
 3949 0933 02       		.uleb128 0x2
 3950 0934 91       		.byte	0x91
 3951 0935 54       		.sleb128 -44
 3952 0936 0A       		.uleb128 0xa
 3953 0937 CE010000 		.4byte	.LASF26
 3954 093b 02       		.byte	0x2
 3955 093c 6505     		.2byte	0x565
 3956 093e 83000000 		.4byte	0x83
 3957 0942 02       		.uleb128 0x2
 3958 0943 91       		.byte	0x91
 3959 0944 50       		.sleb128 -48
 3960 0945 0C       		.uleb128 0xc
 3961 0946 30020000 		.4byte	.LASF91
 3962 094a 02       		.byte	0x2
 3963 094b 6705     		.2byte	0x567
 3964 094d 83000000 		.4byte	0x83
 3965 0951 02       		.uleb128 0x2
 3966 0952 91       		.byte	0x91
 3967 0953 74       		.sleb128 -12
 3968 0954 0C       		.uleb128 0xc
 3969 0955 CB020000 		.4byte	.LASF92
 3970 0959 02       		.byte	0x2
 3971 095a 6805     		.2byte	0x568
 3972 095c 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 121


 3973 0960 02       		.uleb128 0x2
 3974 0961 91       		.byte	0x91
 3975 0962 70       		.sleb128 -16
 3976 0963 0C       		.uleb128 0xc
 3977 0964 7C010000 		.4byte	.LASF93
 3978 0968 02       		.byte	0x2
 3979 0969 6905     		.2byte	0x569
 3980 096b 83000000 		.4byte	0x83
 3981 096f 02       		.uleb128 0x2
 3982 0970 91       		.byte	0x91
 3983 0971 68       		.sleb128 -24
 3984 0972 0C       		.uleb128 0xc
 3985 0973 C9030000 		.4byte	.LASF94
 3986 0977 02       		.byte	0x2
 3987 0978 6A05     		.2byte	0x56a
 3988 097a 83000000 		.4byte	0x83
 3989 097e 02       		.uleb128 0x2
 3990 097f 91       		.byte	0x91
 3991 0980 6C       		.sleb128 -20
 3992 0981 0C       		.uleb128 0xc
 3993 0982 24000000 		.4byte	.LASF29
 3994 0986 02       		.byte	0x2
 3995 0987 6C05     		.2byte	0x56c
 3996 0989 83000000 		.4byte	0x83
 3997 098d 02       		.uleb128 0x2
 3998 098e 91       		.byte	0x91
 3999 098f 64       		.sleb128 -28
 4000 0990 00       		.byte	0
 4001 0991 17       		.uleb128 0x17
 4002 0992 2F010000 		.4byte	.LASF95
 4003 0996 02       		.byte	0x2
 4004 0997 9305     		.2byte	0x593
 4005 0999 83000000 		.4byte	0x83
 4006 099d 00000000 		.4byte	.LFB49
 4007 09a1 3C000000 		.4byte	.LFE49-.LFB49
 4008 09a5 01       		.uleb128 0x1
 4009 09a6 9C       		.byte	0x9c
 4010 09a7 D9090000 		.4byte	0x9d9
 4011 09ab 0A       		.uleb128 0xa
 4012 09ac 99020000 		.4byte	.LASF42
 4013 09b0 02       		.byte	0x2
 4014 09b1 9305     		.2byte	0x593
 4015 09b3 83000000 		.4byte	0x83
 4016 09b7 02       		.uleb128 0x2
 4017 09b8 91       		.byte	0x91
 4018 09b9 6C       		.sleb128 -20
 4019 09ba 0A       		.uleb128 0xa
 4020 09bb CE010000 		.4byte	.LASF26
 4021 09bf 02       		.byte	0x2
 4022 09c0 9305     		.2byte	0x593
 4023 09c2 83000000 		.4byte	0x83
 4024 09c6 02       		.uleb128 0x2
 4025 09c7 91       		.byte	0x91
 4026 09c8 68       		.sleb128 -24
 4027 09c9 0C       		.uleb128 0xc
 4028 09ca 24000000 		.4byte	.LASF29
 4029 09ce 02       		.byte	0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 122


 4030 09cf 9505     		.2byte	0x595
 4031 09d1 83000000 		.4byte	0x83
 4032 09d5 02       		.uleb128 0x2
 4033 09d6 91       		.byte	0x91
 4034 09d7 74       		.sleb128 -12
 4035 09d8 00       		.byte	0
 4036 09d9 10       		.uleb128 0x10
 4037 09da A3000000 		.4byte	.LASF96
 4038 09de 02       		.byte	0x2
 4039 09df 16       		.byte	0x16
 4040 09e0 83000000 		.4byte	0x83
 4041 09e4 05       		.uleb128 0x5
 4042 09e5 03       		.byte	0x3
 4043 09e6 00000000 		.4byte	RTC_updateTimePeriod
 4044 09ea 10       		.uleb128 0x10
 4045 09eb 0E050000 		.4byte	.LASF97
 4046 09ef 02       		.byte	0x2
 4047 09f0 17       		.byte	0x17
 4048 09f1 83000000 		.4byte	0x83
 4049 09f5 05       		.uleb128 0x5
 4050 09f6 03       		.byte	0x3
 4051 09f7 04000000 		.4byte	RTC_tickRefOneSec
 4052 09fb 10       		.uleb128 0x10
 4053 09fc 30040000 		.4byte	.LASF98
 4054 0a00 02       		.byte	0x2
 4055 0a01 1A       		.byte	0x1a
 4056 0a02 83000000 		.4byte	0x83
 4057 0a06 05       		.uleb128 0x5
 4058 0a07 03       		.byte	0x3
 4059 0a08 08000000 		.4byte	RTC_dstTimeOffset
 4060 0a0c 1B       		.uleb128 0x1b
 4061 0a0d C2010000 		.4byte	.LASF99
 4062 0a11 02       		.byte	0x2
 4063 0a12 11       		.byte	0x11
 4064 0a13 6B000000 		.4byte	0x6b
 4065 0a17 05       		.uleb128 0x5
 4066 0a18 03       		.byte	0x3
 4067 0a19 00000000 		.4byte	RTC_initVar
 4068 0a1d 1B       		.uleb128 0x1b
 4069 0a1e B7050000 		.4byte	.LASF100
 4070 0a22 02       		.byte	0x2
 4071 0a23 19       		.byte	0x19
 4072 0a24 6B000000 		.4byte	0x6b
 4073 0a28 05       		.uleb128 0x5
 4074 0a29 03       		.byte	0x3
 4075 0a2a 00000000 		.4byte	RTC_dstStatus
 4076 0a2e 1B       		.uleb128 0x1b
 4077 0a2f 61020000 		.4byte	.LASF101
 4078 0a33 02       		.byte	0x2
 4079 0a34 13       		.byte	0x13
 4080 0a35 3F0A0000 		.4byte	0xa3f
 4081 0a39 05       		.uleb128 0x5
 4082 0a3a 03       		.byte	0x3
 4083 0a3b 00000000 		.4byte	RTC_unixTime
 4084 0a3f 1C       		.uleb128 0x1c
 4085 0a40 9D000000 		.4byte	0x9d
 4086 0a44 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 123


 4087 0a45 BD040000 		.4byte	.LASF102
 4088 0a49 02       		.byte	0x2
 4089 0a4a 14       		.byte	0x14
 4090 0a4b F7000000 		.4byte	0xf7
 4091 0a4f 05       		.uleb128 0x5
 4092 0a50 03       		.byte	0x3
 4093 0a51 00000000 		.4byte	RTC_currentTimeDate
 4094 0a55 1B       		.uleb128 0x1b
 4095 0a56 86020000 		.4byte	.LASF103
 4096 0a5a 02       		.byte	0x2
 4097 0a5b 22       		.byte	0x22
 4098 0a5c 83000000 		.4byte	0x83
 4099 0a60 05       		.uleb128 0x5
 4100 0a61 03       		.byte	0x3
 4101 0a62 00000000 		.4byte	RTC_alarmCurStatus
 4102 0a66 1D       		.uleb128 0x1d
 4103 0a67 760A0000 		.4byte	0xa76
 4104 0a6b 760A0000 		.4byte	0xa76
 4105 0a6f 1E       		.uleb128 0x1e
 4106 0a70 B7000000 		.4byte	0xb7
 4107 0a74 0B       		.byte	0xb
 4108 0a75 00       		.byte	0
 4109 0a76 1F       		.uleb128 0x1f
 4110 0a77 77000000 		.4byte	0x77
 4111 0a7b 1B       		.uleb128 0x1b
 4112 0a7c 11040000 		.4byte	.LASF104
 4113 0a80 02       		.byte	0x2
 4114 0a81 2A       		.byte	0x2a
 4115 0a82 8C0A0000 		.4byte	0xa8c
 4116 0a86 05       		.uleb128 0x5
 4117 0a87 03       		.byte	0x3
 4118 0a88 00000000 		.4byte	RTC_daysBeforeMonthTbl
 4119 0a8c 1F       		.uleb128 0x1f
 4120 0a8d 660A0000 		.4byte	0xa66
 4121 0a91 1D       		.uleb128 0x1d
 4122 0a92 A10A0000 		.4byte	0xaa1
 4123 0a96 A10A0000 		.4byte	0xaa1
 4124 0a9a 1E       		.uleb128 0x1e
 4125 0a9b B7000000 		.4byte	0xb7
 4126 0a9f 0B       		.byte	0xb
 4127 0aa0 00       		.byte	0
 4128 0aa1 1F       		.uleb128 0x1f
 4129 0aa2 6B000000 		.4byte	0x6b
 4130 0aa6 1B       		.uleb128 0x1b
 4131 0aa7 CD000000 		.4byte	.LASF105
 4132 0aab 02       		.byte	0x2
 4133 0aac 38       		.byte	0x38
 4134 0aad B70A0000 		.4byte	0xab7
 4135 0ab1 05       		.uleb128 0x5
 4136 0ab2 03       		.byte	0x3
 4137 0ab3 00000000 		.4byte	RTC_daysInMonthTbl
 4138 0ab7 1F       		.uleb128 0x1f
 4139 0ab8 910A0000 		.4byte	0xa91
 4140 0abc 00       		.byte	0
 4141              		.section	.debug_abbrev,"",%progbits
 4142              	.Ldebug_abbrev0:
 4143 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 124


 4144 0001 11       		.uleb128 0x11
 4145 0002 01       		.byte	0x1
 4146 0003 25       		.uleb128 0x25
 4147 0004 0E       		.uleb128 0xe
 4148 0005 13       		.uleb128 0x13
 4149 0006 0B       		.uleb128 0xb
 4150 0007 03       		.uleb128 0x3
 4151 0008 0E       		.uleb128 0xe
 4152 0009 1B       		.uleb128 0x1b
 4153 000a 0E       		.uleb128 0xe
 4154 000b 55       		.uleb128 0x55
 4155 000c 17       		.uleb128 0x17
 4156 000d 11       		.uleb128 0x11
 4157 000e 01       		.uleb128 0x1
 4158 000f 10       		.uleb128 0x10
 4159 0010 17       		.uleb128 0x17
 4160 0011 00       		.byte	0
 4161 0012 00       		.byte	0
 4162 0013 02       		.uleb128 0x2
 4163 0014 24       		.uleb128 0x24
 4164 0015 00       		.byte	0
 4165 0016 0B       		.uleb128 0xb
 4166 0017 0B       		.uleb128 0xb
 4167 0018 3E       		.uleb128 0x3e
 4168 0019 0B       		.uleb128 0xb
 4169 001a 03       		.uleb128 0x3
 4170 001b 0E       		.uleb128 0xe
 4171 001c 00       		.byte	0
 4172 001d 00       		.byte	0
 4173 001e 03       		.uleb128 0x3
 4174 001f 24       		.uleb128 0x24
 4175 0020 00       		.byte	0
 4176 0021 0B       		.uleb128 0xb
 4177 0022 0B       		.uleb128 0xb
 4178 0023 3E       		.uleb128 0x3e
 4179 0024 0B       		.uleb128 0xb
 4180 0025 03       		.uleb128 0x3
 4181 0026 08       		.uleb128 0x8
 4182 0027 00       		.byte	0
 4183 0028 00       		.byte	0
 4184 0029 04       		.uleb128 0x4
 4185 002a 16       		.uleb128 0x16
 4186 002b 00       		.byte	0
 4187 002c 03       		.uleb128 0x3
 4188 002d 0E       		.uleb128 0xe
 4189 002e 3A       		.uleb128 0x3a
 4190 002f 0B       		.uleb128 0xb
 4191 0030 3B       		.uleb128 0x3b
 4192 0031 05       		.uleb128 0x5
 4193 0032 49       		.uleb128 0x49
 4194 0033 13       		.uleb128 0x13
 4195 0034 00       		.byte	0
 4196 0035 00       		.byte	0
 4197 0036 05       		.uleb128 0x5
 4198 0037 13       		.uleb128 0x13
 4199 0038 01       		.byte	0x1
 4200 0039 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 125


 4201 003a 0B       		.uleb128 0xb
 4202 003b 3A       		.uleb128 0x3a
 4203 003c 0B       		.uleb128 0xb
 4204 003d 3B       		.uleb128 0x3b
 4205 003e 0B       		.uleb128 0xb
 4206 003f 01       		.uleb128 0x1
 4207 0040 13       		.uleb128 0x13
 4208 0041 00       		.byte	0
 4209 0042 00       		.byte	0
 4210 0043 06       		.uleb128 0x6
 4211 0044 0D       		.uleb128 0xd
 4212 0045 00       		.byte	0
 4213 0046 03       		.uleb128 0x3
 4214 0047 0E       		.uleb128 0xe
 4215 0048 3A       		.uleb128 0x3a
 4216 0049 0B       		.uleb128 0xb
 4217 004a 3B       		.uleb128 0x3b
 4218 004b 0B       		.uleb128 0xb
 4219 004c 49       		.uleb128 0x49
 4220 004d 13       		.uleb128 0x13
 4221 004e 38       		.uleb128 0x38
 4222 004f 0B       		.uleb128 0xb
 4223 0050 00       		.byte	0
 4224 0051 00       		.byte	0
 4225 0052 07       		.uleb128 0x7
 4226 0053 16       		.uleb128 0x16
 4227 0054 00       		.byte	0
 4228 0055 03       		.uleb128 0x3
 4229 0056 0E       		.uleb128 0xe
 4230 0057 3A       		.uleb128 0x3a
 4231 0058 0B       		.uleb128 0xb
 4232 0059 3B       		.uleb128 0x3b
 4233 005a 0B       		.uleb128 0xb
 4234 005b 49       		.uleb128 0x49
 4235 005c 13       		.uleb128 0x13
 4236 005d 00       		.byte	0
 4237 005e 00       		.byte	0
 4238 005f 08       		.uleb128 0x8
 4239 0060 2E       		.uleb128 0x2e
 4240 0061 01       		.byte	0x1
 4241 0062 03       		.uleb128 0x3
 4242 0063 0E       		.uleb128 0xe
 4243 0064 3A       		.uleb128 0x3a
 4244 0065 0B       		.uleb128 0xb
 4245 0066 3B       		.uleb128 0x3b
 4246 0067 05       		.uleb128 0x5
 4247 0068 27       		.uleb128 0x27
 4248 0069 19       		.uleb128 0x19
 4249 006a 49       		.uleb128 0x49
 4250 006b 13       		.uleb128 0x13
 4251 006c 11       		.uleb128 0x11
 4252 006d 01       		.uleb128 0x1
 4253 006e 12       		.uleb128 0x12
 4254 006f 06       		.uleb128 0x6
 4255 0070 40       		.uleb128 0x40
 4256 0071 18       		.uleb128 0x18
 4257 0072 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 126


 4258 0074 19       		.uleb128 0x19
 4259 0075 01       		.uleb128 0x1
 4260 0076 13       		.uleb128 0x13
 4261 0077 00       		.byte	0
 4262 0078 00       		.byte	0
 4263 0079 09       		.uleb128 0x9
 4264 007a 05       		.uleb128 0x5
 4265 007b 00       		.byte	0
 4266 007c 03       		.uleb128 0x3
 4267 007d 08       		.uleb128 0x8
 4268 007e 3A       		.uleb128 0x3a
 4269 007f 0B       		.uleb128 0xb
 4270 0080 3B       		.uleb128 0x3b
 4271 0081 05       		.uleb128 0x5
 4272 0082 49       		.uleb128 0x49
 4273 0083 13       		.uleb128 0x13
 4274 0084 02       		.uleb128 0x2
 4275 0085 18       		.uleb128 0x18
 4276 0086 00       		.byte	0
 4277 0087 00       		.byte	0
 4278 0088 0A       		.uleb128 0xa
 4279 0089 05       		.uleb128 0x5
 4280 008a 00       		.byte	0
 4281 008b 03       		.uleb128 0x3
 4282 008c 0E       		.uleb128 0xe
 4283 008d 3A       		.uleb128 0x3a
 4284 008e 0B       		.uleb128 0xb
 4285 008f 3B       		.uleb128 0x3b
 4286 0090 05       		.uleb128 0x5
 4287 0091 49       		.uleb128 0x49
 4288 0092 13       		.uleb128 0x13
 4289 0093 02       		.uleb128 0x2
 4290 0094 18       		.uleb128 0x18
 4291 0095 00       		.byte	0
 4292 0096 00       		.byte	0
 4293 0097 0B       		.uleb128 0xb
 4294 0098 2E       		.uleb128 0x2e
 4295 0099 01       		.byte	0x1
 4296 009a 03       		.uleb128 0x3
 4297 009b 0E       		.uleb128 0xe
 4298 009c 3A       		.uleb128 0x3a
 4299 009d 0B       		.uleb128 0xb
 4300 009e 3B       		.uleb128 0x3b
 4301 009f 05       		.uleb128 0x5
 4302 00a0 27       		.uleb128 0x27
 4303 00a1 19       		.uleb128 0x19
 4304 00a2 49       		.uleb128 0x49
 4305 00a3 13       		.uleb128 0x13
 4306 00a4 11       		.uleb128 0x11
 4307 00a5 01       		.uleb128 0x1
 4308 00a6 12       		.uleb128 0x12
 4309 00a7 06       		.uleb128 0x6
 4310 00a8 40       		.uleb128 0x40
 4311 00a9 18       		.uleb128 0x18
 4312 00aa 9642     		.uleb128 0x2116
 4313 00ac 19       		.uleb128 0x19
 4314 00ad 01       		.uleb128 0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 127


 4315 00ae 13       		.uleb128 0x13
 4316 00af 00       		.byte	0
 4317 00b0 00       		.byte	0
 4318 00b1 0C       		.uleb128 0xc
 4319 00b2 34       		.uleb128 0x34
 4320 00b3 00       		.byte	0
 4321 00b4 03       		.uleb128 0x3
 4322 00b5 0E       		.uleb128 0xe
 4323 00b6 3A       		.uleb128 0x3a
 4324 00b7 0B       		.uleb128 0xb
 4325 00b8 3B       		.uleb128 0x3b
 4326 00b9 05       		.uleb128 0x5
 4327 00ba 49       		.uleb128 0x49
 4328 00bb 13       		.uleb128 0x13
 4329 00bc 02       		.uleb128 0x2
 4330 00bd 18       		.uleb128 0x18
 4331 00be 00       		.byte	0
 4332 00bf 00       		.byte	0
 4333 00c0 0D       		.uleb128 0xd
 4334 00c1 2E       		.uleb128 0x2e
 4335 00c2 01       		.byte	0x1
 4336 00c3 03       		.uleb128 0x3
 4337 00c4 0E       		.uleb128 0xe
 4338 00c5 3A       		.uleb128 0x3a
 4339 00c6 0B       		.uleb128 0xb
 4340 00c7 3B       		.uleb128 0x3b
 4341 00c8 05       		.uleb128 0x5
 4342 00c9 27       		.uleb128 0x27
 4343 00ca 19       		.uleb128 0x19
 4344 00cb 11       		.uleb128 0x11
 4345 00cc 01       		.uleb128 0x1
 4346 00cd 12       		.uleb128 0x12
 4347 00ce 06       		.uleb128 0x6
 4348 00cf 40       		.uleb128 0x40
 4349 00d0 18       		.uleb128 0x18
 4350 00d1 9642     		.uleb128 0x2116
 4351 00d3 19       		.uleb128 0x19
 4352 00d4 01       		.uleb128 0x1
 4353 00d5 13       		.uleb128 0x13
 4354 00d6 00       		.byte	0
 4355 00d7 00       		.byte	0
 4356 00d8 0E       		.uleb128 0xe
 4357 00d9 2E       		.uleb128 0x2e
 4358 00da 00       		.byte	0
 4359 00db 3F       		.uleb128 0x3f
 4360 00dc 19       		.uleb128 0x19
 4361 00dd 03       		.uleb128 0x3
 4362 00de 0E       		.uleb128 0xe
 4363 00df 3A       		.uleb128 0x3a
 4364 00e0 0B       		.uleb128 0xb
 4365 00e1 3B       		.uleb128 0x3b
 4366 00e2 0B       		.uleb128 0xb
 4367 00e3 27       		.uleb128 0x27
 4368 00e4 19       		.uleb128 0x19
 4369 00e5 11       		.uleb128 0x11
 4370 00e6 01       		.uleb128 0x1
 4371 00e7 12       		.uleb128 0x12
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 128


 4372 00e8 06       		.uleb128 0x6
 4373 00e9 40       		.uleb128 0x40
 4374 00ea 18       		.uleb128 0x18
 4375 00eb 9642     		.uleb128 0x2116
 4376 00ed 19       		.uleb128 0x19
 4377 00ee 00       		.byte	0
 4378 00ef 00       		.byte	0
 4379 00f0 0F       		.uleb128 0xf
 4380 00f1 2E       		.uleb128 0x2e
 4381 00f2 01       		.byte	0x1
 4382 00f3 3F       		.uleb128 0x3f
 4383 00f4 19       		.uleb128 0x19
 4384 00f5 03       		.uleb128 0x3
 4385 00f6 0E       		.uleb128 0xe
 4386 00f7 3A       		.uleb128 0x3a
 4387 00f8 0B       		.uleb128 0xb
 4388 00f9 3B       		.uleb128 0x3b
 4389 00fa 0B       		.uleb128 0xb
 4390 00fb 27       		.uleb128 0x27
 4391 00fc 19       		.uleb128 0x19
 4392 00fd 11       		.uleb128 0x11
 4393 00fe 01       		.uleb128 0x1
 4394 00ff 12       		.uleb128 0x12
 4395 0100 06       		.uleb128 0x6
 4396 0101 40       		.uleb128 0x40
 4397 0102 18       		.uleb128 0x18
 4398 0103 9642     		.uleb128 0x2116
 4399 0105 19       		.uleb128 0x19
 4400 0106 01       		.uleb128 0x1
 4401 0107 13       		.uleb128 0x13
 4402 0108 00       		.byte	0
 4403 0109 00       		.byte	0
 4404 010a 10       		.uleb128 0x10
 4405 010b 34       		.uleb128 0x34
 4406 010c 00       		.byte	0
 4407 010d 03       		.uleb128 0x3
 4408 010e 0E       		.uleb128 0xe
 4409 010f 3A       		.uleb128 0x3a
 4410 0110 0B       		.uleb128 0xb
 4411 0111 3B       		.uleb128 0x3b
 4412 0112 0B       		.uleb128 0xb
 4413 0113 49       		.uleb128 0x49
 4414 0114 13       		.uleb128 0x13
 4415 0115 02       		.uleb128 0x2
 4416 0116 18       		.uleb128 0x18
 4417 0117 00       		.byte	0
 4418 0118 00       		.byte	0
 4419 0119 11       		.uleb128 0x11
 4420 011a 05       		.uleb128 0x5
 4421 011b 00       		.byte	0
 4422 011c 03       		.uleb128 0x3
 4423 011d 0E       		.uleb128 0xe
 4424 011e 3A       		.uleb128 0x3a
 4425 011f 0B       		.uleb128 0xb
 4426 0120 3B       		.uleb128 0x3b
 4427 0121 0B       		.uleb128 0xb
 4428 0122 49       		.uleb128 0x49
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 129


 4429 0123 13       		.uleb128 0x13
 4430 0124 02       		.uleb128 0x2
 4431 0125 18       		.uleb128 0x18
 4432 0126 00       		.byte	0
 4433 0127 00       		.byte	0
 4434 0128 12       		.uleb128 0x12
 4435 0129 2E       		.uleb128 0x2e
 4436 012a 01       		.byte	0x1
 4437 012b 3F       		.uleb128 0x3f
 4438 012c 19       		.uleb128 0x19
 4439 012d 03       		.uleb128 0x3
 4440 012e 0E       		.uleb128 0xe
 4441 012f 3A       		.uleb128 0x3a
 4442 0130 0B       		.uleb128 0xb
 4443 0131 3B       		.uleb128 0x3b
 4444 0132 05       		.uleb128 0x5
 4445 0133 27       		.uleb128 0x27
 4446 0134 19       		.uleb128 0x19
 4447 0135 11       		.uleb128 0x11
 4448 0136 01       		.uleb128 0x1
 4449 0137 12       		.uleb128 0x12
 4450 0138 06       		.uleb128 0x6
 4451 0139 40       		.uleb128 0x40
 4452 013a 18       		.uleb128 0x18
 4453 013b 9642     		.uleb128 0x2116
 4454 013d 19       		.uleb128 0x19
 4455 013e 01       		.uleb128 0x1
 4456 013f 13       		.uleb128 0x13
 4457 0140 00       		.byte	0
 4458 0141 00       		.byte	0
 4459 0142 13       		.uleb128 0x13
 4460 0143 2E       		.uleb128 0x2e
 4461 0144 00       		.byte	0
 4462 0145 3F       		.uleb128 0x3f
 4463 0146 19       		.uleb128 0x19
 4464 0147 03       		.uleb128 0x3
 4465 0148 0E       		.uleb128 0xe
 4466 0149 3A       		.uleb128 0x3a
 4467 014a 0B       		.uleb128 0xb
 4468 014b 3B       		.uleb128 0x3b
 4469 014c 05       		.uleb128 0x5
 4470 014d 27       		.uleb128 0x27
 4471 014e 19       		.uleb128 0x19
 4472 014f 49       		.uleb128 0x49
 4473 0150 13       		.uleb128 0x13
 4474 0151 11       		.uleb128 0x11
 4475 0152 01       		.uleb128 0x1
 4476 0153 12       		.uleb128 0x12
 4477 0154 06       		.uleb128 0x6
 4478 0155 40       		.uleb128 0x40
 4479 0156 18       		.uleb128 0x18
 4480 0157 9742     		.uleb128 0x2117
 4481 0159 19       		.uleb128 0x19
 4482 015a 00       		.byte	0
 4483 015b 00       		.byte	0
 4484 015c 14       		.uleb128 0x14
 4485 015d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 130


 4486 015e 01       		.byte	0x1
 4487 015f 3F       		.uleb128 0x3f
 4488 0160 19       		.uleb128 0x19
 4489 0161 03       		.uleb128 0x3
 4490 0162 0E       		.uleb128 0xe
 4491 0163 3A       		.uleb128 0x3a
 4492 0164 0B       		.uleb128 0xb
 4493 0165 3B       		.uleb128 0x3b
 4494 0166 05       		.uleb128 0x5
 4495 0167 27       		.uleb128 0x27
 4496 0168 19       		.uleb128 0x19
 4497 0169 11       		.uleb128 0x11
 4498 016a 01       		.uleb128 0x1
 4499 016b 12       		.uleb128 0x12
 4500 016c 06       		.uleb128 0x6
 4501 016d 40       		.uleb128 0x40
 4502 016e 18       		.uleb128 0x18
 4503 016f 9742     		.uleb128 0x2117
 4504 0171 19       		.uleb128 0x19
 4505 0172 01       		.uleb128 0x1
 4506 0173 13       		.uleb128 0x13
 4507 0174 00       		.byte	0
 4508 0175 00       		.byte	0
 4509 0176 15       		.uleb128 0x15
 4510 0177 0F       		.uleb128 0xf
 4511 0178 00       		.byte	0
 4512 0179 0B       		.uleb128 0xb
 4513 017a 0B       		.uleb128 0xb
 4514 017b 49       		.uleb128 0x49
 4515 017c 13       		.uleb128 0x13
 4516 017d 00       		.byte	0
 4517 017e 00       		.byte	0
 4518 017f 16       		.uleb128 0x16
 4519 0180 2E       		.uleb128 0x2e
 4520 0181 00       		.byte	0
 4521 0182 3F       		.uleb128 0x3f
 4522 0183 19       		.uleb128 0x19
 4523 0184 03       		.uleb128 0x3
 4524 0185 0E       		.uleb128 0xe
 4525 0186 3A       		.uleb128 0x3a
 4526 0187 0B       		.uleb128 0xb
 4527 0188 3B       		.uleb128 0x3b
 4528 0189 05       		.uleb128 0x5
 4529 018a 27       		.uleb128 0x27
 4530 018b 19       		.uleb128 0x19
 4531 018c 49       		.uleb128 0x49
 4532 018d 13       		.uleb128 0x13
 4533 018e 11       		.uleb128 0x11
 4534 018f 01       		.uleb128 0x1
 4535 0190 12       		.uleb128 0x12
 4536 0191 06       		.uleb128 0x6
 4537 0192 40       		.uleb128 0x40
 4538 0193 18       		.uleb128 0x18
 4539 0194 9642     		.uleb128 0x2116
 4540 0196 19       		.uleb128 0x19
 4541 0197 00       		.byte	0
 4542 0198 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 131


 4543 0199 17       		.uleb128 0x17
 4544 019a 2E       		.uleb128 0x2e
 4545 019b 01       		.byte	0x1
 4546 019c 3F       		.uleb128 0x3f
 4547 019d 19       		.uleb128 0x19
 4548 019e 03       		.uleb128 0x3
 4549 019f 0E       		.uleb128 0xe
 4550 01a0 3A       		.uleb128 0x3a
 4551 01a1 0B       		.uleb128 0xb
 4552 01a2 3B       		.uleb128 0x3b
 4553 01a3 05       		.uleb128 0x5
 4554 01a4 27       		.uleb128 0x27
 4555 01a5 19       		.uleb128 0x19
 4556 01a6 49       		.uleb128 0x49
 4557 01a7 13       		.uleb128 0x13
 4558 01a8 11       		.uleb128 0x11
 4559 01a9 01       		.uleb128 0x1
 4560 01aa 12       		.uleb128 0x12
 4561 01ab 06       		.uleb128 0x6
 4562 01ac 40       		.uleb128 0x40
 4563 01ad 18       		.uleb128 0x18
 4564 01ae 9642     		.uleb128 0x2116
 4565 01b0 19       		.uleb128 0x19
 4566 01b1 01       		.uleb128 0x1
 4567 01b2 13       		.uleb128 0x13
 4568 01b3 00       		.byte	0
 4569 01b4 00       		.byte	0
 4570 01b5 18       		.uleb128 0x18
 4571 01b6 2E       		.uleb128 0x2e
 4572 01b7 01       		.byte	0x1
 4573 01b8 3F       		.uleb128 0x3f
 4574 01b9 19       		.uleb128 0x19
 4575 01ba 03       		.uleb128 0x3
 4576 01bb 0E       		.uleb128 0xe
 4577 01bc 3A       		.uleb128 0x3a
 4578 01bd 0B       		.uleb128 0xb
 4579 01be 3B       		.uleb128 0x3b
 4580 01bf 05       		.uleb128 0x5
 4581 01c0 27       		.uleb128 0x27
 4582 01c1 19       		.uleb128 0x19
 4583 01c2 49       		.uleb128 0x49
 4584 01c3 13       		.uleb128 0x13
 4585 01c4 11       		.uleb128 0x11
 4586 01c5 01       		.uleb128 0x1
 4587 01c6 12       		.uleb128 0x12
 4588 01c7 06       		.uleb128 0x6
 4589 01c8 40       		.uleb128 0x40
 4590 01c9 18       		.uleb128 0x18
 4591 01ca 9742     		.uleb128 0x2117
 4592 01cc 19       		.uleb128 0x19
 4593 01cd 01       		.uleb128 0x1
 4594 01ce 13       		.uleb128 0x13
 4595 01cf 00       		.byte	0
 4596 01d0 00       		.byte	0
 4597 01d1 19       		.uleb128 0x19
 4598 01d2 34       		.uleb128 0x34
 4599 01d3 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 132


 4600 01d4 03       		.uleb128 0x3
 4601 01d5 08       		.uleb128 0x8
 4602 01d6 3A       		.uleb128 0x3a
 4603 01d7 0B       		.uleb128 0xb
 4604 01d8 3B       		.uleb128 0x3b
 4605 01d9 05       		.uleb128 0x5
 4606 01da 49       		.uleb128 0x49
 4607 01db 13       		.uleb128 0x13
 4608 01dc 02       		.uleb128 0x2
 4609 01dd 18       		.uleb128 0x18
 4610 01de 00       		.byte	0
 4611 01df 00       		.byte	0
 4612 01e0 1A       		.uleb128 0x1a
 4613 01e1 0B       		.uleb128 0xb
 4614 01e2 01       		.byte	0x1
 4615 01e3 11       		.uleb128 0x11
 4616 01e4 01       		.uleb128 0x1
 4617 01e5 12       		.uleb128 0x12
 4618 01e6 06       		.uleb128 0x6
 4619 01e7 00       		.byte	0
 4620 01e8 00       		.byte	0
 4621 01e9 1B       		.uleb128 0x1b
 4622 01ea 34       		.uleb128 0x34
 4623 01eb 00       		.byte	0
 4624 01ec 03       		.uleb128 0x3
 4625 01ed 0E       		.uleb128 0xe
 4626 01ee 3A       		.uleb128 0x3a
 4627 01ef 0B       		.uleb128 0xb
 4628 01f0 3B       		.uleb128 0x3b
 4629 01f1 0B       		.uleb128 0xb
 4630 01f2 49       		.uleb128 0x49
 4631 01f3 13       		.uleb128 0x13
 4632 01f4 3F       		.uleb128 0x3f
 4633 01f5 19       		.uleb128 0x19
 4634 01f6 02       		.uleb128 0x2
 4635 01f7 18       		.uleb128 0x18
 4636 01f8 00       		.byte	0
 4637 01f9 00       		.byte	0
 4638 01fa 1C       		.uleb128 0x1c
 4639 01fb 35       		.uleb128 0x35
 4640 01fc 00       		.byte	0
 4641 01fd 49       		.uleb128 0x49
 4642 01fe 13       		.uleb128 0x13
 4643 01ff 00       		.byte	0
 4644 0200 00       		.byte	0
 4645 0201 1D       		.uleb128 0x1d
 4646 0202 01       		.uleb128 0x1
 4647 0203 01       		.byte	0x1
 4648 0204 49       		.uleb128 0x49
 4649 0205 13       		.uleb128 0x13
 4650 0206 01       		.uleb128 0x1
 4651 0207 13       		.uleb128 0x13
 4652 0208 00       		.byte	0
 4653 0209 00       		.byte	0
 4654 020a 1E       		.uleb128 0x1e
 4655 020b 21       		.uleb128 0x21
 4656 020c 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 133


 4657 020d 49       		.uleb128 0x49
 4658 020e 13       		.uleb128 0x13
 4659 020f 2F       		.uleb128 0x2f
 4660 0210 0B       		.uleb128 0xb
 4661 0211 00       		.byte	0
 4662 0212 00       		.byte	0
 4663 0213 1F       		.uleb128 0x1f
 4664 0214 26       		.uleb128 0x26
 4665 0215 00       		.byte	0
 4666 0216 49       		.uleb128 0x49
 4667 0217 13       		.uleb128 0x13
 4668 0218 00       		.byte	0
 4669 0219 00       		.byte	0
 4670 021a 00       		.byte	0
 4671              		.section	.debug_aranges,"",%progbits
 4672 0000 34010000 		.4byte	0x134
 4673 0004 0200     		.2byte	0x2
 4674 0006 00000000 		.4byte	.Ldebug_info0
 4675 000a 04       		.byte	0x4
 4676 000b 00       		.byte	0
 4677 000c 0000     		.2byte	0
 4678 000e 0000     		.2byte	0
 4679 0010 00000000 		.4byte	.LFB1
 4680 0014 24000000 		.4byte	.LFE1-.LFB1
 4681 0018 00000000 		.4byte	.LFB2
 4682 001c 42000000 		.4byte	.LFE2-.LFB2
 4683 0020 00000000 		.4byte	.LFB3
 4684 0024 30000000 		.4byte	.LFE3-.LFB3
 4685 0028 00000000 		.4byte	.LFB4
 4686 002c 32000000 		.4byte	.LFE4-.LFB4
 4687 0030 00000000 		.4byte	.LFB5
 4688 0034 32000000 		.4byte	.LFE5-.LFB5
 4689 0038 00000000 		.4byte	.LFB6
 4690 003c 20000000 		.4byte	.LFE6-.LFB6
 4691 0040 00000000 		.4byte	.LFB7
 4692 0044 32000000 		.4byte	.LFE7-.LFB7
 4693 0048 00000000 		.4byte	.LFB8
 4694 004c 32000000 		.4byte	.LFE8-.LFB8
 4695 0050 00000000 		.4byte	.LFB9
 4696 0054 58000000 		.4byte	.LFE9-.LFB9
 4697 0058 00000000 		.4byte	.LFB23
 4698 005c 20000000 		.4byte	.LFE23-.LFB23
 4699 0060 00000000 		.4byte	.LFB24
 4700 0064 A0000000 		.4byte	.LFE24-.LFB24
 4701 0068 00000000 		.4byte	.LFB25
 4702 006c D6000000 		.4byte	.LFE25-.LFB25
 4703 0070 00000000 		.4byte	.LFB26
 4704 0074 88000000 		.4byte	.LFE26-.LFB26
 4705 0078 00000000 		.4byte	.LFB27
 4706 007c 3C000000 		.4byte	.LFE27-.LFB27
 4707 0080 00000000 		.4byte	.LFB28
 4708 0084 20000000 		.4byte	.LFE28-.LFB28
 4709 0088 00000000 		.4byte	.LFB29
 4710 008c 1A000000 		.4byte	.LFE29-.LFB29
 4711 0090 00000000 		.4byte	.LFB30
 4712 0094 20000000 		.4byte	.LFE30-.LFB30
 4713 0098 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 134


 4714 009c 10000000 		.4byte	.LFE31-.LFB31
 4715 00a0 00000000 		.4byte	.LFB32
 4716 00a4 74000000 		.4byte	.LFE32-.LFB32
 4717 00a8 00000000 		.4byte	.LFB33
 4718 00ac 74000000 		.4byte	.LFE33-.LFB33
 4719 00b0 00000000 		.4byte	.LFB34
 4720 00b4 38000000 		.4byte	.LFE34-.LFB34
 4721 00b8 00000000 		.4byte	.LFB35
 4722 00bc 18000000 		.4byte	.LFE35-.LFB35
 4723 00c0 00000000 		.4byte	.LFB36
 4724 00c4 28000000 		.4byte	.LFE36-.LFB36
 4725 00c8 00000000 		.4byte	.LFB37
 4726 00cc 14000000 		.4byte	.LFE37-.LFB37
 4727 00d0 00000000 		.4byte	.LFB38
 4728 00d4 14000000 		.4byte	.LFE38-.LFB38
 4729 00d8 00000000 		.4byte	.LFB39
 4730 00dc 3C000000 		.4byte	.LFE39-.LFB39
 4731 00e0 00000000 		.4byte	.LFB40
 4732 00e4 44000000 		.4byte	.LFE40-.LFB40
 4733 00e8 00000000 		.4byte	.LFB41
 4734 00ec 44000000 		.4byte	.LFE41-.LFB41
 4735 00f0 00000000 		.4byte	.LFB42
 4736 00f4 80000000 		.4byte	.LFE42-.LFB42
 4737 00f8 00000000 		.4byte	.LFB43
 4738 00fc 4E000000 		.4byte	.LFE43-.LFB43
 4739 0100 00000000 		.4byte	.LFB44
 4740 0104 60000000 		.4byte	.LFE44-.LFB44
 4741 0108 00000000 		.4byte	.LFB45
 4742 010c 58000000 		.4byte	.LFE45-.LFB45
 4743 0110 00000000 		.4byte	.LFB46
 4744 0114 C0010000 		.4byte	.LFE46-.LFB46
 4745 0118 00000000 		.4byte	.LFB47
 4746 011c 98020000 		.4byte	.LFE47-.LFB47
 4747 0120 00000000 		.4byte	.LFB48
 4748 0124 7A000000 		.4byte	.LFE48-.LFB48
 4749 0128 00000000 		.4byte	.LFB49
 4750 012c 3C000000 		.4byte	.LFE49-.LFB49
 4751 0130 00000000 		.4byte	0
 4752 0134 00000000 		.4byte	0
 4753              		.section	.debug_ranges,"",%progbits
 4754              	.Ldebug_ranges0:
 4755 0000 00000000 		.4byte	.LFB1
 4756 0004 24000000 		.4byte	.LFE1
 4757 0008 00000000 		.4byte	.LFB2
 4758 000c 42000000 		.4byte	.LFE2
 4759 0010 00000000 		.4byte	.LFB3
 4760 0014 30000000 		.4byte	.LFE3
 4761 0018 00000000 		.4byte	.LFB4
 4762 001c 32000000 		.4byte	.LFE4
 4763 0020 00000000 		.4byte	.LFB5
 4764 0024 32000000 		.4byte	.LFE5
 4765 0028 00000000 		.4byte	.LFB6
 4766 002c 20000000 		.4byte	.LFE6
 4767 0030 00000000 		.4byte	.LFB7
 4768 0034 32000000 		.4byte	.LFE7
 4769 0038 00000000 		.4byte	.LFB8
 4770 003c 32000000 		.4byte	.LFE8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 135


 4771 0040 00000000 		.4byte	.LFB9
 4772 0044 58000000 		.4byte	.LFE9
 4773 0048 00000000 		.4byte	.LFB23
 4774 004c 20000000 		.4byte	.LFE23
 4775 0050 00000000 		.4byte	.LFB24
 4776 0054 A0000000 		.4byte	.LFE24
 4777 0058 00000000 		.4byte	.LFB25
 4778 005c D6000000 		.4byte	.LFE25
 4779 0060 00000000 		.4byte	.LFB26
 4780 0064 88000000 		.4byte	.LFE26
 4781 0068 00000000 		.4byte	.LFB27
 4782 006c 3C000000 		.4byte	.LFE27
 4783 0070 00000000 		.4byte	.LFB28
 4784 0074 20000000 		.4byte	.LFE28
 4785 0078 00000000 		.4byte	.LFB29
 4786 007c 1A000000 		.4byte	.LFE29
 4787 0080 00000000 		.4byte	.LFB30
 4788 0084 20000000 		.4byte	.LFE30
 4789 0088 00000000 		.4byte	.LFB31
 4790 008c 10000000 		.4byte	.LFE31
 4791 0090 00000000 		.4byte	.LFB32
 4792 0094 74000000 		.4byte	.LFE32
 4793 0098 00000000 		.4byte	.LFB33
 4794 009c 74000000 		.4byte	.LFE33
 4795 00a0 00000000 		.4byte	.LFB34
 4796 00a4 38000000 		.4byte	.LFE34
 4797 00a8 00000000 		.4byte	.LFB35
 4798 00ac 18000000 		.4byte	.LFE35
 4799 00b0 00000000 		.4byte	.LFB36
 4800 00b4 28000000 		.4byte	.LFE36
 4801 00b8 00000000 		.4byte	.LFB37
 4802 00bc 14000000 		.4byte	.LFE37
 4803 00c0 00000000 		.4byte	.LFB38
 4804 00c4 14000000 		.4byte	.LFE38
 4805 00c8 00000000 		.4byte	.LFB39
 4806 00cc 3C000000 		.4byte	.LFE39
 4807 00d0 00000000 		.4byte	.LFB40
 4808 00d4 44000000 		.4byte	.LFE40
 4809 00d8 00000000 		.4byte	.LFB41
 4810 00dc 44000000 		.4byte	.LFE41
 4811 00e0 00000000 		.4byte	.LFB42
 4812 00e4 80000000 		.4byte	.LFE42
 4813 00e8 00000000 		.4byte	.LFB43
 4814 00ec 4E000000 		.4byte	.LFE43
 4815 00f0 00000000 		.4byte	.LFB44
 4816 00f4 60000000 		.4byte	.LFE44
 4817 00f8 00000000 		.4byte	.LFB45
 4818 00fc 58000000 		.4byte	.LFE45
 4819 0100 00000000 		.4byte	.LFB46
 4820 0104 C0010000 		.4byte	.LFE46
 4821 0108 00000000 		.4byte	.LFB47
 4822 010c 98020000 		.4byte	.LFE47
 4823 0110 00000000 		.4byte	.LFB48
 4824 0114 7A000000 		.4byte	.LFE48
 4825 0118 00000000 		.4byte	.LFB49
 4826 011c 3C000000 		.4byte	.LFE49
 4827 0120 00000000 		.4byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 136


 4828 0124 00000000 		.4byte	0
 4829              		.section	.debug_line,"",%progbits
 4830              	.Ldebug_line0:
 4831 0000 C1040000 		.section	.debug_str,"MS",%progbits,1
 4831      02004900 
 4831      00000201 
 4831      FB0E0D00 
 4831      01010101 
 4832              	.LASF69:
 4833 0000 64617465 		.ascii	"dateTime\000"
 4833      54696D65 
 4833      00
 4834              	.LASF56:
 4835 0009 746D7044 		.ascii	"tmpDay\000"
 4835      617900
 4836              	.LASF34:
 4837 0010 5254435F 		.ascii	"RTC_GetMonth\000"
 4837      4765744D 
 4837      6F6E7468 
 4837      00
 4838              	.LASF10:
 4839 001d 75696E74 		.ascii	"uint16\000"
 4839      313600
 4840              	.LASF29:
 4841 0024 72657456 		.ascii	"retVal\000"
 4841      616C00
 4842              	.LASF27:
 4843 002b 5254435F 		.ascii	"RTC_GetSecond\000"
 4843      47657453 
 4843      65636F6E 
 4843      6400
 4844              	.LASF68:
 4845 0039 5254435F 		.ascii	"RTC_GetDateAndTime\000"
 4845      47657444 
 4845      61746541 
 4845      6E645469 
 4845      6D6500
 4846              	.LASF108:
 4847 004c 433A5C55 		.ascii	"C:\\Users\\Jason\\Desktop\\github\\nixie-psoc-proje"
 4847      73657273 
 4847      5C4A6173 
 4847      6F6E5C44 
 4847      65736B74 
 4848 007a 63745C6E 		.ascii	"ct\\nixie_control.cydsn\000"
 4848      69786965 
 4848      5F636F6E 
 4848      74726F6C 
 4848      2E637964 
 4849              	.LASF36:
 4850 0091 5254435F 		.ascii	"RTC_GetTimeFormat\000"
 4850      47657454 
 4850      696D6546 
 4850      6F726D61 
 4850      7400
 4851              	.LASF96:
 4852 00a3 5254435F 		.ascii	"RTC_updateTimePeriod\000"
 4852      75706461 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 137


 4852      74655469 
 4852      6D655065 
 4852      72696F64 
 4853              	.LASF51:
 4854 00b8 746D7044 		.ascii	"tmpDate\000"
 4854      61746500 
 4855              	.LASF25:
 4856 00c0 5254435F 		.ascii	"RTC_LeapYear\000"
 4856      4C656170 
 4856      59656172 
 4856      00
 4857              	.LASF105:
 4858 00cd 5254435F 		.ascii	"RTC_daysInMonthTbl\000"
 4858      64617973 
 4858      496E4D6F 
 4858      6E746854 
 4858      626C00
 4859              	.LASF53:
 4860 00e0 5254435F 		.ascii	"RTC_Init\000"
 4860      496E6974 
 4860      00
 4861              	.LASF85:
 4862 00e9 746D704D 		.ascii	"tmpMinute\000"
 4862      696E7574 
 4862      6500
 4863              	.LASF89:
 4864 00f3 5254435F 		.ascii	"RTC_RelativeToFixed\000"
 4864      52656C61 
 4864      74697665 
 4864      546F4669 
 4864      78656400 
 4865              	.LASF7:
 4866 0107 6C6F6E67 		.ascii	"long long unsigned int\000"
 4866      206C6F6E 
 4866      6720756E 
 4866      7369676E 
 4866      65642069 
 4867              	.LASF44:
 4868 011e 5254435F 		.ascii	"RTC_GetDayOfWeek\000"
 4868      47657444 
 4868      61794F66 
 4868      5765656B 
 4868      00
 4869              	.LASF95:
 4870 012f 5254435F 		.ascii	"RTC_DaysInMonth\000"
 4870      44617973 
 4870      496E4D6F 
 4870      6E746800 
 4871              	.LASF57:
 4872 013f 746D704D 		.ascii	"tmpMonth\000"
 4872      6F6E7468 
 4872      00
 4873              	.LASF90:
 4874 0148 7765656B 		.ascii	"weekOfMonth\000"
 4874      4F664D6F 
 4874      6E746800 
 4875              	.LASF87:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 138


 4876 0154 746D7041 		.ascii	"tmpAmPmState\000"
 4876      6D506D53 
 4876      74617465 
 4876      00
 4877              	.LASF45:
 4878 0161 5254435F 		.ascii	"RTC_DaysBeforeMonth\000"
 4878      44617973 
 4878      4265666F 
 4878      72654D6F 
 4878      6E746800 
 4879              	.LASF75:
 4880 0175 6263644E 		.ascii	"bcdNum\000"
 4880      756D00
 4881              	.LASF93:
 4882 017c 64617973 		.ascii	"daysInMonth\000"
 4882      496E4D6F 
 4882      6E746800 
 4883              	.LASF6:
 4884 0188 6C6F6E67 		.ascii	"long long int\000"
 4884      206C6F6E 
 4884      6720696E 
 4884      7400
 4885              	.LASF0:
 4886 0196 7369676E 		.ascii	"signed char\000"
 4886      65642063 
 4886      68617200 
 4887              	.LASF62:
 4888 01a2 5254435F 		.ascii	"RTC_SetPeriod\000"
 4888      53657450 
 4888      6572696F 
 4888      6400
 4889              	.LASF83:
 4890 01b0 63757241 		.ascii	"curAmpm\000"
 4890      6D706D00 
 4891              	.LASF49:
 4892 01b8 5254435F 		.ascii	"RTC_Start\000"
 4892      53746172 
 4892      7400
 4893              	.LASF99:
 4894 01c2 5254435F 		.ascii	"RTC_initVar\000"
 4894      696E6974 
 4894      56617200 
 4895              	.LASF26:
 4896 01ce 79656172 		.ascii	"year\000"
 4896      00
 4897              	.LASF59:
 4898 01d3 5254435F 		.ascii	"RTC_SetUnixTime\000"
 4898      53657455 
 4898      6E697854 
 4898      696D6500 
 4899              	.LASF72:
 4900 01e3 746D7054 		.ascii	"tmpTimeDate\000"
 4900      696D6544 
 4900      61746500 
 4901              	.LASF4:
 4902 01ef 6C6F6E67 		.ascii	"long int\000"
 4902      20696E74 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 139


 4902      00
 4903              	.LASF74:
 4904 01f8 5254435F 		.ascii	"RTC_ConvertBCDToDec\000"
 4904      436F6E76 
 4904      65727442 
 4904      4344546F 
 4904      44656300 
 4905              	.LASF30:
 4906 020c 5254435F 		.ascii	"RTC_GetMinutes\000"
 4906      4765744D 
 4906      696E7574 
 4906      657300
 4907              	.LASF9:
 4908 021b 75696E74 		.ascii	"uint8\000"
 4908      3800
 4909              	.LASF64:
 4910 0221 7265664F 		.ascii	"refOneSecTicks\000"
 4910      6E655365 
 4910      63546963 
 4910      6B7300
 4911              	.LASF91:
 4912 0230 63757244 		.ascii	"curDay\000"
 4912      617900
 4913              	.LASF13:
 4914 0237 646F7562 		.ascii	"double\000"
 4914      6C6500
 4915              	.LASF35:
 4916 023e 5254435F 		.ascii	"RTC_GetYear\000"
 4916      47657459 
 4916      65617200 
 4917              	.LASF79:
 4918 024a 73686966 		.ascii	"shift\000"
 4918      7400
 4919              	.LASF11:
 4920 0250 75696E74 		.ascii	"uint32\000"
 4920      333200
 4921              	.LASF46:
 4922 0257 7764744E 		.ascii	"wdtNumber\000"
 4922      756D6265 
 4922      7200
 4923              	.LASF101:
 4924 0261 5254435F 		.ascii	"RTC_unixTime\000"
 4924      756E6978 
 4924      54696D65 
 4924      00
 4925              	.LASF54:
 4926 026e 5254435F 		.ascii	"RTC_SetDateAndTime\000"
 4926      53657444 
 4926      61746541 
 4926      6E645469 
 4926      6D6500
 4927              	.LASF23:
 4928 0281 6D61736B 		.ascii	"mask\000"
 4928      00
 4929              	.LASF103:
 4930 0286 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 4930      616C6172 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 140


 4930      6D437572 
 4930      53746174 
 4930      757300
 4931              	.LASF42:
 4932 0299 6D6F6E74 		.ascii	"month\000"
 4932      6800
 4933              	.LASF8:
 4934 029f 756E7369 		.ascii	"unsigned int\000"
 4934      676E6564 
 4934      20696E74 
 4934      00
 4935              	.LASF38:
 4936 02ac 74696D65 		.ascii	"timeFormat\000"
 4936      466F726D 
 4936      617400
 4937              	.LASF77:
 4938 02b7 5254435F 		.ascii	"RTC_ConvertDecToBCD\000"
 4938      436F6E76 
 4938      65727444 
 4938      6563546F 
 4938      42434400 
 4939              	.LASF92:
 4940 02cb 63757257 		.ascii	"curWeek\000"
 4940      65656B00 
 4941              	.LASF5:
 4942 02d3 6C6F6E67 		.ascii	"long unsigned int\000"
 4942      20756E73 
 4942      69676E65 
 4942      6420696E 
 4942      7400
 4943              	.LASF31:
 4944 02e5 5254435F 		.ascii	"RTC_GetHours\000"
 4944      47657448 
 4944      6F757273 
 4944      00
 4945              	.LASF66:
 4946 02f2 5254435F 		.ascii	"RTC_GetPeriod\000"
 4946      47657450 
 4946      6572696F 
 4946      6400
 4947              	.LASF3:
 4948 0300 73686F72 		.ascii	"short unsigned int\000"
 4948      7420756E 
 4948      7369676E 
 4948      65642069 
 4948      6E7400
 4949              	.LASF19:
 4950 0313 64617465 		.ascii	"date\000"
 4950      00
 4951              	.LASF63:
 4952 0318 7469636B 		.ascii	"ticks\000"
 4952      7300
 4953              	.LASF106:
 4954 031e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4954      43313120 
 4954      352E342E 
 4954      31203230 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 141


 4954      31363036 
 4955 0351 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4955      20726576 
 4955      6973696F 
 4955      6E203233 
 4955      37373135 
 4956 0384 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4956      66756E63 
 4956      74696F6E 
 4956      2D736563 
 4956      74696F6E 
 4957              	.LASF82:
 4958 03ac 5254435F 		.ascii	"RTC_DateTimeToUnix\000"
 4958      44617465 
 4958      54696D65 
 4958      546F556E 
 4958      697800
 4959              	.LASF20:
 4960 03bf 6461794F 		.ascii	"dayOfWeek\000"
 4960      66576565 
 4960      6B00
 4961              	.LASF94:
 4962 03c9 6461794F 		.ascii	"dayOfMonthTmp\000"
 4962      664D6F6E 
 4962      7468546D 
 4962      7000
 4963              	.LASF17:
 4964 03d7 73697A65 		.ascii	"sizetype\000"
 4964      74797065 
 4964      00
 4965              	.LASF107:
 4966 03e0 47656E65 		.ascii	"Generated_Source\\PSoC4\\RTC.c\000"
 4966      72617465 
 4966      645F536F 
 4966      75726365 
 4966      5C50536F 
 4967              	.LASF16:
 4968 03fd 6C6F6E67 		.ascii	"long double\000"
 4968      20646F75 
 4968      626C6500 
 4969              	.LASF58:
 4970 0409 746D7059 		.ascii	"tmpYear\000"
 4970      65617200 
 4971              	.LASF104:
 4972 0411 5254435F 		.ascii	"RTC_daysBeforeMonthTbl\000"
 4972      64617973 
 4972      4265666F 
 4972      72654D6F 
 4972      6E746854 
 4973              	.LASF86:
 4974 0428 746D7048 		.ascii	"tmpHour\000"
 4974      6F757200 
 4975              	.LASF98:
 4976 0430 5254435F 		.ascii	"RTC_dstTimeOffset\000"
 4976      64737454 
 4976      696D654F 
 4976      66667365 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 142


 4976      7400
 4977              	.LASF18:
 4978 0442 74696D65 		.ascii	"time\000"
 4978      00
 4979              	.LASF40:
 4980 0447 686F7572 		.ascii	"hour\000"
 4980      00
 4981              	.LASF47:
 4982 044c 5254435F 		.ascii	"RTC_CySysRtcSetCallback\000"
 4982      43795379 
 4982      73527463 
 4982      53657443 
 4982      616C6C62 
 4983              	.LASF12:
 4984 0464 666C6F61 		.ascii	"float\000"
 4984      7400
 4985              	.LASF65:
 4986 046a 5254435F 		.ascii	"RTC_GetUnixTime\000"
 4986      47657455 
 4986      6E697854 
 4986      696D6500 
 4987              	.LASF67:
 4988 047a 5254435F 		.ascii	"RTC_GetRefOneSec\000"
 4988      47657452 
 4988      65664F6E 
 4988      65536563 
 4988      00
 4989              	.LASF39:
 4990 048b 73746174 		.ascii	"stateAmPm\000"
 4990      65416D50 
 4990      6D00
 4991              	.LASF48:
 4992 0495 5254435F 		.ascii	"RTC_CySysRtcResetCallback\000"
 4992      43795379 
 4992      73527463 
 4992      52657365 
 4992      7443616C 
 4993              	.LASF1:
 4994 04af 756E7369 		.ascii	"unsigned char\000"
 4994      676E6564 
 4994      20636861 
 4994      7200
 4995              	.LASF102:
 4996 04bd 5254435F 		.ascii	"RTC_currentTimeDate\000"
 4996      63757272 
 4996      656E7454 
 4996      696D6544 
 4996      61746500 
 4997              	.LASF37:
 4998 04d1 5254435F 		.ascii	"RTC_ConstructTime\000"
 4998      436F6E73 
 4998      74727563 
 4998      7454696D 
 4998      6500
 4999              	.LASF28:
 5000 04e3 696E7075 		.ascii	"inputTime\000"
 5000      7454696D 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 143


 5000      6500
 5001              	.LASF14:
 5002 04ed 75696E74 		.ascii	"uint64\000"
 5002      363400
 5003              	.LASF2:
 5004 04f4 73686F72 		.ascii	"short int\000"
 5004      7420696E 
 5004      7400
 5005              	.LASF50:
 5006 04fe 5254435F 		.ascii	"RTC_Stop\000"
 5006      53746F70 
 5006      00
 5007              	.LASF43:
 5008 0507 746D7056 		.ascii	"tmpVal\000"
 5008      616C00
 5009              	.LASF97:
 5010 050e 5254435F 		.ascii	"RTC_tickRefOneSec\000"
 5010      7469636B 
 5010      5265664F 
 5010      6E655365 
 5010      6300
 5011              	.LASF88:
 5012 0520 746D7056 		.ascii	"tmpVar\000"
 5012      617200
 5013              	.LASF78:
 5014 0527 6465634E 		.ascii	"decNum\000"
 5014      756D00
 5015              	.LASF22:
 5016 052e 5254435F 		.ascii	"RTC_DATE_TIME\000"
 5016      44415445 
 5016      5F54494D 
 5016      4500
 5017              	.LASF71:
 5018 053c 5254435F 		.ascii	"RTC_GetDate\000"
 5018      47657444 
 5018      61746500 
 5019              	.LASF15:
 5020 0548 63686172 		.ascii	"char\000"
 5020      00
 5021              	.LASF76:
 5022 054d 6D756C74 		.ascii	"mult\000"
 5022      00
 5023              	.LASF81:
 5024 0552 5254435F 		.ascii	"RTC_currentTickNumber\000"
 5024      63757272 
 5024      656E7454 
 5024      69636B4E 
 5024      756D6265 
 5025              	.LASF41:
 5026 0568 5254435F 		.ascii	"RTC_ConstructDate\000"
 5026      436F6E73 
 5026      74727563 
 5026      74446174 
 5026      6500
 5027              	.LASF55:
 5028 057a 696E7075 		.ascii	"inputDate\000"
 5028      74446174 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cczNUaNM.s 			page 144


 5028      6500
 5029              	.LASF84:
 5030 0584 5254435F 		.ascii	"RTC_UnixToDateTime\000"
 5030      556E6978 
 5030      546F4461 
 5030      74655469 
 5030      6D6500
 5031              	.LASF33:
 5032 0597 5254435F 		.ascii	"RTC_GetDay\000"
 5032      47657444 
 5032      617900
 5033              	.LASF60:
 5034 05a2 756E6978 		.ascii	"unixTime\000"
 5034      54696D65 
 5034      00
 5035              	.LASF32:
 5036 05ab 5254435F 		.ascii	"RTC_GetAmPm\000"
 5036      47657441 
 5036      6D506D00 
 5037              	.LASF100:
 5038 05b7 5254435F 		.ascii	"RTC_dstStatus\000"
 5038      64737453 
 5038      74617475 
 5038      7300
 5039              	.LASF21:
 5040 05c5 73746174 		.ascii	"status\000"
 5040      757300
 5041              	.LASF73:
 5042 05cc 5254435F 		.ascii	"RTC_ReadStatus\000"
 5042      52656164 
 5042      53746174 
 5042      757300
 5043              	.LASF70:
 5044 05db 5254435F 		.ascii	"RTC_GetTime\000"
 5044      47657454 
 5044      696D6500 
 5045              	.LASF52:
 5046 05e7 746D7054 		.ascii	"tmpTime\000"
 5046      696D6500 
 5047              	.LASF80:
 5048 05ef 5254435F 		.ascii	"RTC_Update\000"
 5048      55706461 
 5048      746500
 5049              	.LASF61:
 5050 05fa 746D7044 		.ascii	"tmpDateTime\000"
 5050      61746554 
 5050      696D6500 
 5051              	.LASF24:
 5052 0606 5254435F 		.ascii	"RTC_IsBitSet\000"
 5052      49734269 
 5052      74536574 
 5052      00
 5053              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
