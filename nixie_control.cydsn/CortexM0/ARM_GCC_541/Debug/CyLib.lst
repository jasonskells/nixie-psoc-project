ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 00366E01 		.word	24000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 C05D0000 		.word	24000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 18       		.byte	24
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000E02E 		.word	786432000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	cyImoFreqMhz2DpllOffset
 106 002e 0000     		.align	2
 107              		.type	cyImoFreqMhz2DpllOffset, %object
 108              		.size	cyImoFreqMhz2DpllOffset, 23
 109              	cyImoFreqMhz2DpllOffset:
 110 0030 EE       		.byte	-18
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 3


 111 0031 DB       		.byte	-37
 112 0032 C9       		.byte	-55
 113 0033 B9       		.byte	-71
 114 0034 AA       		.byte	-86
 115 0035 9B       		.byte	-101
 116 0036 8E       		.byte	-114
 117 0037 82       		.byte	-126
 118 0038 76       		.byte	118
 119 0039 6B       		.byte	107
 120 003a 60       		.byte	96
 121 003b 56       		.byte	86
 122 003c 4D       		.byte	77
 123 003d 44       		.byte	68
 124 003e 3B       		.byte	59
 125 003f 33       		.byte	51
 126 0040 2C       		.byte	44
 127 0041 24       		.byte	36
 128 0042 1D       		.byte	29
 129 0043 17       		.byte	23
 130 0044 10       		.byte	16
 131 0045 0A       		.byte	10
 132 0046 04       		.byte	4
 133              		.global	CySysClkImoTrim4
 134              		.bss
 135              		.align	2
 136              		.type	CySysClkImoTrim4, %object
 137              		.size	CySysClkImoTrim4, 4
 138              	CySysClkImoTrim4:
 139 0018 00000000 		.space	4
 140              		.global	CySysClkImoTrim5
 141              		.align	2
 142              		.type	CySysClkImoTrim5, %object
 143              		.size	CySysClkImoTrim5, 4
 144              	CySysClkImoTrim5:
 145 001c 00000000 		.space	4
 146              		.global	CySysClkPumpConfig
 147              		.data
 148              		.align	2
 149              		.type	CySysClkPumpConfig, %object
 150              		.size	CySysClkPumpConfig, 4
 151              	CySysClkPumpConfig:
 152 0010 01000000 		.word	1
 153              		.section	.text.CySysClkImoStart,"ax",%progbits
 154              		.align	2
 155              		.global	CySysClkImoStart
 156              		.code	16
 157              		.thumb_func
 158              		.type	CySysClkImoStart, %function
 159              	CySysClkImoStart:
 160              	.LFB1:
 161              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.70
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 4


   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 5


  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  89:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  92:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  93:Generated_Source\PSoC4/CyLib.c **** 
  94:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  95:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  96:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
 101:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
 102:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 105:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 109:Generated_Source\PSoC4/CyLib.c **** {
 162              		.loc 1 109 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 80B5     		push	{r7, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0002 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 6


 172              		.loc 1 110 0
 173 0004 044B     		ldr	r3, .L2
 174 0006 044A     		ldr	r2, .L2
 175 0008 1268     		ldr	r2, [r2]
 176 000a 8021     		movs	r1, #128
 177 000c 0906     		lsls	r1, r1, #24
 178 000e 0A43     		orrs	r2, r1
 179 0010 1A60     		str	r2, [r3]
 111:Generated_Source\PSoC4/CyLib.c **** 
 112:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 113:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 114:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 115:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 116:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** 
 119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 120:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 121:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 122:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 123:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** }
 180              		.loc 1 125 0
 181 0012 C046     		nop
 182 0014 BD46     		mov	sp, r7
 183              		@ sp needed
 184 0016 80BD     		pop	{r7, pc}
 185              	.L3:
 186              		.align	2
 187              	.L2:
 188 0018 08010B40 		.word	1074462984
 189              		.cfi_endproc
 190              	.LFE1:
 191              		.size	CySysClkImoStart, .-CySysClkImoStart
 192              		.section	.text.CySysClkImoStop,"ax",%progbits
 193              		.align	2
 194              		.global	CySysClkImoStop
 195              		.code	16
 196              		.thumb_func
 197              		.type	CySysClkImoStop, %function
 198              	CySysClkImoStop:
 199              	.LFB2:
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 129:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 130:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 131:Generated_Source\PSoC4/CyLib.c **** *
 132:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 133:Generated_Source\PSoC4/CyLib.c **** *
 134:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 135:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 138:Generated_Source\PSoC4/CyLib.c **** *
 139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 7


 140:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 141:Generated_Source\PSoC4/CyLib.c **** {
 200              		.loc 1 141 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 210              		.loc 1 143 0
 211 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 147:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 212              		.loc 1 147 0
 213 0008 FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 148:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 149:Generated_Source\PSoC4/CyLib.c **** 
 150:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 214              		.loc 1 150 0
 215 000c 044B     		ldr	r3, .L5
 216 000e 044A     		ldr	r2, .L5
 217 0010 1268     		ldr	r2, [r2]
 218 0012 5200     		lsls	r2, r2, #1
 219 0014 5208     		lsrs	r2, r2, #1
 220 0016 1A60     		str	r2, [r3]
 151:Generated_Source\PSoC4/CyLib.c **** }
 221              		.loc 1 151 0
 222 0018 C046     		nop
 223 001a BD46     		mov	sp, r7
 224              		@ sp needed
 225 001c 80BD     		pop	{r7, pc}
 226              	.L6:
 227 001e C046     		.align	2
 228              	.L5:
 229 0020 08010B40 		.word	1074462984
 230              		.cfi_endproc
 231              	.LFE2:
 232              		.size	CySysClkImoStop, .-CySysClkImoStop
 233              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 234              		.align	2
 235              		.global	CySysClkImoEnableWcoLock
 236              		.code	16
 237              		.thumb_func
 238              		.type	CySysClkImoEnableWcoLock, %function
 239              	CySysClkImoEnableWcoLock:
 240              	.LFB3:
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 8


 156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 160:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 161:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 164:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 165:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 166:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 167:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 168:Generated_Source\PSoC4/CyLib.c ****     *
 169:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 170:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 171:Generated_Source\PSoC4/CyLib.c ****     *
 172:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 173:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 174:Generated_Source\PSoC4/CyLib.c ****     *
 175:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 176:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 177:Generated_Source\PSoC4/CyLib.c ****     {
 241              		.loc 1 177 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 24
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 90B5     		push	{r4, r7, lr}
 246              		.cfi_def_cfa_offset 12
 247              		.cfi_offset 4, -12
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 87B0     		sub	sp, sp, #28
 251              		.cfi_def_cfa_offset 40
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 178:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 179:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 180:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 183:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 185:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 254              		.loc 1 185 0
 255 0006 0023     		movs	r3, #0
 256 0008 BB60     		str	r3, [r7, #8]
 186:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 257              		.loc 1 188 0
 258 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 259 000e 031E     		subs	r3, r0, #0
 260 0010 00D1     		bne	.LCB82
 261 0012 84E0     		b	.L17	@long jump
 262              	.LCB82:
 189:Generated_Source\PSoC4/CyLib.c ****         {
 190:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 9


 263              		.loc 1 190 0
 264 0014 FC1D     		adds	r4, r7, #7
 265 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 266 001a 0300     		movs	r3, r0
 267 001c 2370     		strb	r3, [r4]
 191:Generated_Source\PSoC4/CyLib.c **** 
 192:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 193:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 194:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 268              		.loc 1 194 0
 269 001e 424B     		ldr	r3, .L18
 195:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 270              		.loc 1 195 0
 271 0020 414A     		ldr	r2, .L18
 272 0022 1268     		ldr	r2, [r2]
 273 0024 0121     		movs	r1, #1
 274 0026 0A43     		orrs	r2, r1
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 275              		.loc 1 194 0
 276 0028 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 197:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 198:Generated_Source\PSoC4/CyLib.c **** 
 199:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 200:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 201:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 277              		.loc 1 201 0
 278 002a 0323     		movs	r3, #3
 279 002c 3B61     		str	r3, [r7, #16]
 202:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 280              		.loc 1 202 0
 281 002e 0023     		movs	r3, #0
 282 0030 7B61     		str	r3, [r7, #20]
 283 0032 11E0     		b	.L9
 284              	.L12:
 203:Generated_Source\PSoC4/CyLib.c ****                 {
 204:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 285              		.loc 1 204 0
 286 0034 3D4B     		ldr	r3, .L18+4
 287 0036 1B68     		ldr	r3, [r3]
 288 0038 1A00     		movs	r2, r3
 289 003a 3F23     		movs	r3, #63
 290 003c 1340     		ands	r3, r2
 291 003e 3C49     		ldr	r1, .L18+8
 292 0040 7A69     		ldr	r2, [r7, #20]
 293 0042 8A18     		adds	r2, r1, r2
 294 0044 1278     		ldrb	r2, [r2]
 295 0046 9342     		cmp	r3, r2
 296 0048 03D1     		bne	.L10
 205:Generated_Source\PSoC4/CyLib.c ****                     {
 206:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 297              		.loc 1 206 0
 298 004a 7B69     		ldr	r3, [r7, #20]
 299 004c 0333     		adds	r3, r3, #3
 300 004e 3B61     		str	r3, [r7, #16]
 207:Generated_Source\PSoC4/CyLib.c ****                         break;
 301              		.loc 1 207 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 10


 302 0050 05E0     		b	.L11
 303              	.L10:
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 304              		.loc 1 202 0 discriminator 2
 305 0052 7B69     		ldr	r3, [r7, #20]
 306 0054 0133     		adds	r3, r3, #1
 307 0056 7B61     		str	r3, [r7, #20]
 308              	.L9:
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 309              		.loc 1 202 0 is_stmt 0 discriminator 1
 310 0058 7B69     		ldr	r3, [r7, #20]
 311 005a 2D2B     		cmp	r3, #45
 312 005c EAD9     		bls	.L12
 313              	.L11:
 208:Generated_Source\PSoC4/CyLib.c ****                     }
 209:Generated_Source\PSoC4/CyLib.c ****                 }
 210:Generated_Source\PSoC4/CyLib.c ****             #else
 211:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 212:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 213:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 214:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 215:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 216:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 217:Generated_Source\PSoC4/CyLib.c ****                 #else
 218:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 219:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 220:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 314              		.loc 1 226 0 is_stmt 1
 315 005e 354B     		ldr	r3, .L18+12
 316 0060 1B68     		ldr	r3, [r3]
 317 0062 1F22     		movs	r2, #31
 318 0064 1340     		ands	r3, r2
 319 0066 07D1     		bne	.L13
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 320              		.loc 1 228 0
 321 0068 324B     		ldr	r3, .L18+12
 322 006a 324A     		ldr	r2, .L18+12
 323 006c 1268     		ldr	r2, [r2]
 324 006e 1F21     		movs	r1, #31
 325 0070 8A43     		bics	r2, r1
 326 0072 0C21     		movs	r1, #12
 327 0074 0A43     		orrs	r2, r1
 328 0076 1A60     		str	r2, [r3]
 329              	.L13:
 229:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 330              		.loc 1 233 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 11


 331 0078 2F4B     		ldr	r3, .L18+16
 332 007a 1B68     		ldr	r3, [r3]
 333 007c 2F4A     		ldr	r2, .L18+20
 334 007e 1340     		ands	r3, r2
 335 0080 FB60     		str	r3, [r7, #12]
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 336              		.loc 1 239 0
 337 0082 3B69     		ldr	r3, [r7, #16]
 338 0084 2E4A     		ldr	r2, .L18+24
 339 0086 5343     		muls	r3, r2
 340 0088 8022     		movs	r2, #128
 341 008a D201     		lsls	r2, r2, #7
 342 008c 9446     		mov	ip, r2
 343 008e 6344     		add	r3, r3, ip
 344 0090 DB0B     		lsrs	r3, r3, #15
 345 0092 013B     		subs	r3, r3, #1
 346 0094 5B05     		lsls	r3, r3, #21
 347 0096 5B0D     		lsrs	r3, r3, #21
 348 0098 FA68     		ldr	r2, [r7, #12]
 349 009a 1343     		orrs	r3, r2
 350 009c FB60     		str	r3, [r7, #12]
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 351              		.loc 1 242 0
 352 009e FB68     		ldr	r3, [r7, #12]
 353 00a0 A022     		movs	r2, #160
 354 00a2 5203     		lsls	r2, r2, #13
 355 00a4 1343     		orrs	r3, r2
 356 00a6 FB60     		str	r3, [r7, #12]
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 245:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 357              		.loc 1 245 0
 358 00a8 3B69     		ldr	r3, [r7, #16]
 359 00aa 192B     		cmp	r3, #25
 360 00ac 05D8     		bhi	.L14
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 361              		.loc 1 247 0
 362 00ae FB68     		ldr	r3, [r7, #12]
 363 00b0 FF22     		movs	r2, #255
 364 00b2 9205     		lsls	r2, r2, #22
 365 00b4 1343     		orrs	r3, r2
 366 00b6 FB60     		str	r3, [r7, #12]
 367 00b8 16E0     		b	.L15
 368              	.L14:
 248:Generated_Source\PSoC4/CyLib.c ****             }
 249:Generated_Source\PSoC4/CyLib.c ****             else
 250:Generated_Source\PSoC4/CyLib.c ****             {
 251:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 369              		.loc 1 251 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 12


 370 00ba 3B69     		ldr	r3, [r7, #16]
 371 00bc 214A     		ldr	r2, .L18+28
 372 00be 9446     		mov	ip, r2
 373 00c0 6344     		add	r3, r3, ip
 374 00c2 1B78     		ldrb	r3, [r3]
 375 00c4 DBB2     		uxtb	r3, r3
 376 00c6 1900     		movs	r1, r3
 252:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 377              		.loc 1 252 0
 378 00c8 3B69     		ldr	r3, [r7, #16]
 379 00ca 1A3B     		subs	r3, r3, #26
 380 00cc 1E4A     		ldr	r2, .L18+32
 381 00ce D35C     		ldrb	r3, [r2, r3]
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 382              		.loc 1 251 0
 383 00d0 CB18     		adds	r3, r1, r3
 384 00d2 BB60     		str	r3, [r7, #8]
 253:Generated_Source\PSoC4/CyLib.c **** 
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 385              		.loc 1 254 0
 386 00d4 BB68     		ldr	r3, [r7, #8]
 387 00d6 FF2B     		cmp	r3, #255
 388 00d8 00D9     		bls	.L16
 389 00da FF23     		movs	r3, #255
 390              	.L16:
 391 00dc BB60     		str	r3, [r7, #8]
 255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 392              		.loc 1 257 0
 393 00de BB68     		ldr	r3, [r7, #8]
 394 00e0 9B05     		lsls	r3, r3, #22
 395 00e2 FA68     		ldr	r2, [r7, #12]
 396 00e4 1343     		orrs	r3, r2
 397 00e6 FB60     		str	r3, [r7, #12]
 398              	.L15:
 258:Generated_Source\PSoC4/CyLib.c ****             }
 259:Generated_Source\PSoC4/CyLib.c **** 
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 399              		.loc 1 260 0
 400 00e8 134B     		ldr	r3, .L18+16
 401 00ea FA68     		ldr	r2, [r7, #12]
 402 00ec 1A60     		str	r2, [r3]
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 403              		.loc 1 262 0
 404 00ee 174B     		ldr	r3, .L18+36
 405 00f0 1B68     		ldr	r3, [r3]
 406 00f2 3B60     		str	r3, [r7]
 263:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 407              		.loc 1 263 0
 408 00f4 3020     		movs	r0, #48
 409 00f6 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 264:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 410              		.loc 1 264 0
 411 00fa 154B     		ldr	r3, .L18+40
 412 00fc 144A     		ldr	r2, .L18+40
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 13


 413 00fe 1268     		ldr	r2, [r2]
 414 0100 8021     		movs	r1, #128
 415 0102 C905     		lsls	r1, r1, #23
 416 0104 0A43     		orrs	r2, r1
 417 0106 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 418              		.loc 1 265 0
 419 0108 1420     		movs	r0, #20
 420 010a FFF7FEFF 		bl	CyDelay
 266:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 421              		.loc 1 266 0
 422 010e 0F4B     		ldr	r3, .L18+36
 423 0110 3A68     		ldr	r2, [r7]
 424 0112 1A60     		str	r2, [r3]
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 425              		.loc 1 268 0
 426 0114 FB1D     		adds	r3, r7, #7
 427 0116 1B78     		ldrb	r3, [r3]
 428 0118 1800     		movs	r0, r3
 429 011a FFF7FEFF 		bl	CyExitCriticalSection
 430              	.L17:
 269:Generated_Source\PSoC4/CyLib.c ****         }
 270:Generated_Source\PSoC4/CyLib.c ****     }
 431              		.loc 1 270 0
 432 011e C046     		nop
 433 0120 BD46     		mov	sp, r7
 434 0122 07B0     		add	sp, sp, #28
 435              		@ sp needed
 436 0124 90BD     		pop	{r4, r7, pc}
 437              	.L19:
 438 0126 C046     		.align	2
 439              	.L18:
 440 0128 50000C40 		.word	1074528336
 441 012c 2CFF0B40 		.word	1074528044
 442 0130 00000000 		.word	cyImoFreqMhz2Reg
 443 0134 34FF0B40 		.word	1074528052
 444 0138 08002240 		.word	1075970056
 445 013c 00F800C0 		.word	-1073678336
 446 0140 40420F00 		.word	1000000
 447 0144 4DF3FF0F 		.word	268432205
 448 0148 00000000 		.word	cyImoFreqMhz2DpllOffset
 449 014c 30001040 		.word	1074790448
 450 0150 00002240 		.word	1075970048
 451              		.cfi_endproc
 452              	.LFE3:
 453              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 454              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 455              		.align	2
 456              		.global	CySysClkImoDisableWcoLock
 457              		.code	16
 458              		.thumb_func
 459              		.type	CySysClkImoDisableWcoLock, %function
 460              	CySysClkImoDisableWcoLock:
 461              	.LFB4:
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 14


 273:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 274:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 275:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 280:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 283:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 284:Generated_Source\PSoC4/CyLib.c ****     *
 285:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 286:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 287:Generated_Source\PSoC4/CyLib.c ****     {
 462              		.loc 1 287 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466 0000 80B5     		push	{r7, lr}
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 7, -8
 469              		.cfi_offset 14, -4
 470 0002 00AF     		add	r7, sp, #0
 471              		.cfi_def_cfa_register 7
 288:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 472              		.loc 1 288 0
 473 0004 044B     		ldr	r3, .L21
 474 0006 044A     		ldr	r2, .L21
 475 0008 1268     		ldr	r2, [r2]
 476 000a 0449     		ldr	r1, .L21+4
 477 000c 0A40     		ands	r2, r1
 478 000e 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/CyLib.c ****     }
 479              		.loc 1 289 0
 480 0010 C046     		nop
 481 0012 BD46     		mov	sp, r7
 482              		@ sp needed
 483 0014 80BD     		pop	{r7, pc}
 484              	.L22:
 485 0016 C046     		.align	2
 486              	.L21:
 487 0018 00002240 		.word	1075970048
 488 001c FFFFFFBF 		.word	-1073741825
 489              		.cfi_endproc
 490              	.LFE4:
 491              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 492              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 493              		.align	2
 494              		.global	CySysClkImoGetWcoLock
 495              		.code	16
 496              		.thumb_func
 497              		.type	CySysClkImoGetWcoLock, %function
 498              	CySysClkImoGetWcoLock:
 499              	.LFB5:
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 15


 292:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 294:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 295:Generated_Source\PSoC4/CyLib.c ****     *
 296:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 297:Generated_Source\PSoC4/CyLib.c ****     *
 298:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 299:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 300:Generated_Source\PSoC4/CyLib.c ****     *
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 302:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 303:Generated_Source\PSoC4/CyLib.c ****     *
 304:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 305:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 306:Generated_Source\PSoC4/CyLib.c ****     {
 500              		.loc 1 306 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 1, uses_anonymous_args = 0
 504 0000 80B5     		push	{r7, lr}
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 00AF     		add	r7, sp, #0
 509              		.cfi_def_cfa_register 7
 307:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 510              		.loc 1 307 0
 511 0004 054B     		ldr	r3, .L27
 512 0006 1A68     		ldr	r2, [r3]
 513 0008 8023     		movs	r3, #128
 514 000a DB05     		lsls	r3, r3, #23
 515 000c 1340     		ands	r3, r2
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 516              		.loc 1 308 0
 517 000e 01D0     		beq	.L24
 518              		.loc 1 308 0 is_stmt 0 discriminator 1
 519 0010 0123     		movs	r3, #1
 307:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 520              		.loc 1 307 0 is_stmt 1 discriminator 1
 521 0012 00E0     		b	.L26
 522              	.L24:
 523              		.loc 1 308 0 discriminator 2
 524 0014 0023     		movs	r3, #0
 525              	.L26:
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 310:Generated_Source\PSoC4/CyLib.c ****     }
 526              		.loc 1 310 0 discriminator 1
 527 0016 1800     		movs	r0, r3
 528 0018 BD46     		mov	sp, r7
 529              		@ sp needed
 530 001a 80BD     		pop	{r7, pc}
 531              	.L28:
 532              		.align	2
 533              	.L27:
 534 001c 00002240 		.word	1075970048
 535              		.cfi_endproc
 536              	.LFE5:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 16


 537              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 538              		.section	.text.CySysClkImoEnableUsbLock,"ax",%progbits
 539              		.align	2
 540              		.global	CySysClkImoEnableUsbLock
 541              		.code	16
 542              		.thumb_func
 543              		.type	CySysClkImoEnableUsbLock, %function
 544              	CySysClkImoEnableUsbLock:
 545              	.LFB6:
 311:Generated_Source\PSoC4/CyLib.c **** 
 312:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** 
 315:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 318:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 319:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 326:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 329:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 546              		.loc 1 333 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 16
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550 0000 80B5     		push	{r7, lr}
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 7, -8
 553              		.cfi_offset 14, -4
 554 0002 84B0     		sub	sp, sp, #16
 555              		.cfi_def_cfa_offset 24
 556 0004 00AF     		add	r7, sp, #0
 557              		.cfi_def_cfa_register 7
 334:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 335:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 336:Generated_Source\PSoC4/CyLib.c ****             
 337:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 338:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 558              		.loc 1 338 0
 559 0006 3C4B     		ldr	r3, .L44
 560 0008 1B78     		ldrb	r3, [r3]
 561 000a DBB2     		uxtb	r3, r3
 562 000c 1A00     		movs	r2, r3
 563 000e 3F23     		movs	r3, #63
 564 0010 1340     		ands	r3, r2
 565 0012 042B     		cmp	r3, #4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 17


 566 0014 01D9     		bls	.L30
 567              		.loc 1 338 0 is_stmt 0 discriminator 1
 568 0016 0123     		movs	r3, #1
 569 0018 00E0     		b	.L31
 570              	.L30:
 571              		.loc 1 338 0 discriminator 2
 572 001a 0023     		movs	r3, #0
 573              	.L31:
 574              		.loc 1 338 0 discriminator 4
 575 001c 7B60     		str	r3, [r7, #4]
 339:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 342:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 576              		.loc 1 342 0 is_stmt 1 discriminator 4
 577 001e 0323     		movs	r3, #3
 578 0020 BB60     		str	r3, [r7, #8]
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 579              		.loc 1 344 0 discriminator 4
 580 0022 0023     		movs	r3, #0
 581 0024 FB60     		str	r3, [r7, #12]
 582 0026 11E0     		b	.L32
 583              	.L35:
 345:Generated_Source\PSoC4/CyLib.c ****             {
 346:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 584              		.loc 1 346 0
 585 0028 344B     		ldr	r3, .L44+4
 586 002a 1B68     		ldr	r3, [r3]
 587 002c 1A00     		movs	r2, r3
 588 002e 3F23     		movs	r3, #63
 589 0030 1340     		ands	r3, r2
 590 0032 3349     		ldr	r1, .L44+8
 591 0034 FA68     		ldr	r2, [r7, #12]
 592 0036 8A18     		adds	r2, r1, r2
 593 0038 1278     		ldrb	r2, [r2]
 594 003a 9342     		cmp	r3, r2
 595 003c 03D1     		bne	.L33
 347:Generated_Source\PSoC4/CyLib.c ****                 {
 348:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 596              		.loc 1 348 0
 597 003e FB68     		ldr	r3, [r7, #12]
 598 0040 0333     		adds	r3, r3, #3
 599 0042 BB60     		str	r3, [r7, #8]
 349:Generated_Source\PSoC4/CyLib.c ****                     break;
 600              		.loc 1 349 0
 601 0044 05E0     		b	.L34
 602              	.L33:
 344:Generated_Source\PSoC4/CyLib.c ****             {
 603              		.loc 1 344 0 discriminator 2
 604 0046 FB68     		ldr	r3, [r7, #12]
 605 0048 0133     		adds	r3, r3, #1
 606 004a FB60     		str	r3, [r7, #12]
 607              	.L32:
 344:Generated_Source\PSoC4/CyLib.c ****             {
 608              		.loc 1 344 0 is_stmt 0 discriminator 1
 609 004c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 18


 610 004e 2D2B     		cmp	r3, #45
 611 0050 EAD9     		bls	.L35
 612              	.L34:
 350:Generated_Source\PSoC4/CyLib.c ****                 }
 351:Generated_Source\PSoC4/CyLib.c ****             }
 352:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 353:Generated_Source\PSoC4/CyLib.c ****         
 354:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 355:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 356:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 613              		.loc 1 356 0 is_stmt 1
 614 0052 2C4B     		ldr	r3, .L44+12
 615 0054 2B4A     		ldr	r2, .L44+12
 616 0056 1268     		ldr	r2, [r2]
 617 0058 0121     		movs	r1, #1
 618 005a 8A43     		bics	r2, r1
 619 005c 1A60     		str	r2, [r3]
 357:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 359:Generated_Source\PSoC4/CyLib.c **** 
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****            
 362:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 363:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 620              		.loc 1 363 0
 621 005e 2A4B     		ldr	r3, .L44+16
 622 0060 1A68     		ldr	r2, [r3]
 623 0062 2A4B     		ldr	r3, .L44+20
 624 0064 1A60     		str	r2, [r3]
 364:Generated_Source\PSoC4/CyLib.c ****             
 365:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 625              		.loc 1 365 0
 626 0066 7B68     		ldr	r3, [r7, #4]
 627 0068 002B     		cmp	r3, #0
 628 006a 13D0     		beq	.L36
 366:Generated_Source\PSoC4/CyLib.c ****             {
 367:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 629              		.loc 1 367 0
 630 006c 284B     		ldr	r3, .L44+24
 631 006e 1A68     		ldr	r2, [r3]
 632 0070 284B     		ldr	r3, .L44+28
 633 0072 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/CyLib.c ****                 
 369:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 634              		.loc 1 369 0
 635 0074 244A     		ldr	r2, .L44+16
 636 0076 254B     		ldr	r3, .L44+20
 637 0078 1B68     		ldr	r3, [r3]
 638 007a 1F21     		movs	r1, #31
 639 007c 8B43     		bics	r3, r1
 370:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 640              		.loc 1 370 0
 641 007e 2649     		ldr	r1, .L44+32
 642 0080 0978     		ldrb	r1, [r1]
 643 0082 C9B2     		uxtb	r1, r1
 369:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 644              		.loc 1 369 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 19


 645 0084 0B43     		orrs	r3, r1
 646 0086 1360     		str	r3, [r2]
 371:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 647              		.loc 1 371 0
 648 0088 214B     		ldr	r3, .L44+24
 649 008a 244A     		ldr	r2, .L44+36
 650 008c 1278     		ldrb	r2, [r2]
 651 008e D2B2     		uxtb	r2, r2
 652 0090 1A60     		str	r2, [r3]
 653 0092 07E0     		b	.L37
 654              	.L36:
 372:Generated_Source\PSoC4/CyLib.c ****                 
 373:Generated_Source\PSoC4/CyLib.c ****             }
 374:Generated_Source\PSoC4/CyLib.c ****             else
 375:Generated_Source\PSoC4/CyLib.c ****             {
 376:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 655              		.loc 1 376 0
 656 0094 1C4A     		ldr	r2, .L44+16
 657 0096 1D4B     		ldr	r3, .L44+20
 658 0098 1B68     		ldr	r3, [r3]
 659 009a 1F21     		movs	r1, #31
 660 009c 8B43     		bics	r3, r1
 661 009e 0821     		movs	r1, #8
 662 00a0 0B43     		orrs	r3, r1
 663 00a2 1360     		str	r3, [r2]
 664              	.L37:
 377:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 378:Generated_Source\PSoC4/CyLib.c **** 
 379:Generated_Source\PSoC4/CyLib.c ****             }
 380:Generated_Source\PSoC4/CyLib.c **** 
 381:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 665              		.loc 1 381 0
 666 00a4 BB68     		ldr	r3, [r7, #8]
 667 00a6 302B     		cmp	r3, #48
 668 00a8 0CD1     		bne	.L38
 382:Generated_Source\PSoC4/CyLib.c ****             {
 383:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 669              		.loc 1 383 0
 670 00aa 1D4B     		ldr	r3, .L44+40
 384:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 671              		.loc 1 384 0
 672 00ac 7A68     		ldr	r2, [r7, #4]
 673 00ae 002A     		cmp	r2, #0
 674 00b0 03D0     		beq	.L39
 675              		.loc 1 384 0 is_stmt 0 discriminator 1
 676 00b2 1C4A     		ldr	r2, .L44+44
 677 00b4 1278     		ldrb	r2, [r2]
 678 00b6 D2B2     		uxtb	r2, r2
 679 00b8 02E0     		b	.L40
 680              	.L39:
 385:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 681              		.loc 1 385 0 is_stmt 1 discriminator 2
 682 00ba 1B4A     		ldr	r2, .L44+48
 683 00bc 1278     		ldrb	r2, [r2]
 684 00be D2B2     		uxtb	r2, r2
 685              	.L40:
 383:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 20


 686              		.loc 1 383 0
 687 00c0 1A60     		str	r2, [r3]
 688 00c2 0EE0     		b	.L41
 689              	.L38:
 386:Generated_Source\PSoC4/CyLib.c ****             }
 387:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 690              		.loc 1 387 0
 691 00c4 BB68     		ldr	r3, [r7, #8]
 692 00c6 182B     		cmp	r3, #24
 693 00c8 0BD1     		bne	.L41
 388:Generated_Source\PSoC4/CyLib.c ****             {
 389:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 694              		.loc 1 389 0
 695 00ca 154B     		ldr	r3, .L44+40
 390:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 696              		.loc 1 390 0
 697 00cc 7A68     		ldr	r2, [r7, #4]
 698 00ce 002A     		cmp	r2, #0
 699 00d0 03D0     		beq	.L42
 700              		.loc 1 390 0 is_stmt 0 discriminator 1
 701 00d2 164A     		ldr	r2, .L44+52
 702 00d4 1278     		ldrb	r2, [r2]
 703 00d6 D2B2     		uxtb	r2, r2
 704 00d8 02E0     		b	.L43
 705              	.L42:
 391:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 706              		.loc 1 391 0 is_stmt 1 discriminator 2
 707 00da 154A     		ldr	r2, .L44+56
 708 00dc 1278     		ldrb	r2, [r2]
 709 00de D2B2     		uxtb	r2, r2
 710              	.L43:
 389:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 711              		.loc 1 389 0
 712 00e0 1A60     		str	r2, [r3]
 713              	.L41:
 392:Generated_Source\PSoC4/CyLib.c ****             }
 393:Generated_Source\PSoC4/CyLib.c ****             else
 394:Generated_Source\PSoC4/CyLib.c ****             {
 395:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 396:Generated_Source\PSoC4/CyLib.c ****             }
 397:Generated_Source\PSoC4/CyLib.c ****             
 398:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 399:Generated_Source\PSoC4/CyLib.c **** 
 400:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 714              		.loc 1 400 0
 715 00e2 144B     		ldr	r3, .L44+60
 716 00e4 134A     		ldr	r2, .L44+60
 717 00e6 1268     		ldr	r2, [r2]
 718 00e8 0221     		movs	r1, #2
 719 00ea 0A43     		orrs	r2, r1
 720 00ec 1A60     		str	r2, [r3]
 401:Generated_Source\PSoC4/CyLib.c ****     }
 721              		.loc 1 401 0
 722 00ee C046     		nop
 723 00f0 BD46     		mov	sp, r7
 724 00f2 04B0     		add	sp, sp, #16
 725              		@ sp needed
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 21


 726 00f4 80BD     		pop	{r7, pc}
 727              	.L45:
 728 00f6 C046     		.align	2
 729              	.L44:
 730 00f8 00F3FF0F 		.word	268432128
 731 00fc 2CFF0B40 		.word	1074528044
 732 0100 00000000 		.word	cyImoFreqMhz2Reg
 733 0104 50000C40 		.word	1074528336
 734 0108 34FF0B40 		.word	1074528052
 735 010c 00000000 		.word	CySysClkImoTrim4
 736 0110 20FF0B40 		.word	1074528032
 737 0114 00000000 		.word	CySysClkImoTrim5
 738 0118 C0F1FF0F 		.word	268431808
 739 011c C1F1FF0F 		.word	268431809
 740 0120 28FF0B40 		.word	1074528040
 741 0124 C3F1FF0F 		.word	268431811
 742 0128 3FF3FF0F 		.word	268432191
 743 012c C2F1FF0F 		.word	268431810
 744 0130 3EF3FF0F 		.word	268432190
 745 0134 24002C40 		.word	1076625444
 746              		.cfi_endproc
 747              	.LFE6:
 748              		.size	CySysClkImoEnableUsbLock, .-CySysClkImoEnableUsbLock
 749              		.section	.text.CySysClkImoDisableUsbLock,"ax",%progbits
 750              		.align	2
 751              		.global	CySysClkImoDisableUsbLock
 752              		.code	16
 753              		.thumb_func
 754              		.type	CySysClkImoDisableUsbLock, %function
 755              	CySysClkImoDisableUsbLock:
 756              	.LFB7:
 402:Generated_Source\PSoC4/CyLib.c **** 
 403:Generated_Source\PSoC4/CyLib.c **** 
 404:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 406:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/CyLib.c ****     *
 408:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 409:Generated_Source\PSoC4/CyLib.c ****     *
 410:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 411:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 412:Generated_Source\PSoC4/CyLib.c ****     *
 413:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 414:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 415:Generated_Source\PSoC4/CyLib.c ****     *
 416:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 418:Generated_Source\PSoC4/CyLib.c ****     {
 757              		.loc 1 418 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 16
 760              		@ frame_needed = 1, uses_anonymous_args = 0
 761 0000 80B5     		push	{r7, lr}
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
 765 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 22


 766              		.cfi_def_cfa_offset 24
 767 0004 00AF     		add	r7, sp, #0
 768              		.cfi_def_cfa_register 7
 419:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 420:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 421:Generated_Source\PSoC4/CyLib.c ****             
 422:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 423:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 769              		.loc 1 423 0
 770 0006 254B     		ldr	r3, .L54
 771 0008 1B78     		ldrb	r3, [r3]
 772 000a DBB2     		uxtb	r3, r3
 773 000c 1A00     		movs	r2, r3
 774 000e 3F23     		movs	r3, #63
 775 0010 1340     		ands	r3, r2
 776 0012 042B     		cmp	r3, #4
 777 0014 01D9     		bls	.L47
 778              		.loc 1 423 0 is_stmt 0 discriminator 1
 779 0016 0123     		movs	r3, #1
 780 0018 00E0     		b	.L48
 781              	.L47:
 782              		.loc 1 423 0 discriminator 2
 783 001a 0023     		movs	r3, #0
 784              	.L48:
 785              		.loc 1 423 0 discriminator 4
 786 001c 7B60     		str	r3, [r7, #4]
 424:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 427:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 787              		.loc 1 427 0 is_stmt 1 discriminator 4
 788 001e 0323     		movs	r3, #3
 789 0020 BB60     		str	r3, [r7, #8]
 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 790              		.loc 1 429 0 discriminator 4
 791 0022 0023     		movs	r3, #0
 792 0024 FB60     		str	r3, [r7, #12]
 793 0026 11E0     		b	.L49
 794              	.L52:
 430:Generated_Source\PSoC4/CyLib.c ****             {
 431:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 795              		.loc 1 431 0
 796 0028 1D4B     		ldr	r3, .L54+4
 797 002a 1B68     		ldr	r3, [r3]
 798 002c 1A00     		movs	r2, r3
 799 002e 3F23     		movs	r3, #63
 800 0030 1340     		ands	r3, r2
 801 0032 1C49     		ldr	r1, .L54+8
 802 0034 FA68     		ldr	r2, [r7, #12]
 803 0036 8A18     		adds	r2, r1, r2
 804 0038 1278     		ldrb	r2, [r2]
 805 003a 9342     		cmp	r3, r2
 806 003c 03D1     		bne	.L50
 432:Generated_Source\PSoC4/CyLib.c ****                 {
 433:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 807              		.loc 1 433 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 23


 808 003e FB68     		ldr	r3, [r7, #12]
 809 0040 0333     		adds	r3, r3, #3
 810 0042 BB60     		str	r3, [r7, #8]
 434:Generated_Source\PSoC4/CyLib.c ****                     break;
 811              		.loc 1 434 0
 812 0044 05E0     		b	.L51
 813              	.L50:
 429:Generated_Source\PSoC4/CyLib.c ****             {
 814              		.loc 1 429 0 discriminator 2
 815 0046 FB68     		ldr	r3, [r7, #12]
 816 0048 0133     		adds	r3, r3, #1
 817 004a FB60     		str	r3, [r7, #12]
 818              	.L49:
 429:Generated_Source\PSoC4/CyLib.c ****             {
 819              		.loc 1 429 0 is_stmt 0 discriminator 1
 820 004c FB68     		ldr	r3, [r7, #12]
 821 004e 2D2B     		cmp	r3, #45
 822 0050 EAD9     		bls	.L52
 823              	.L51:
 435:Generated_Source\PSoC4/CyLib.c ****                 }
 436:Generated_Source\PSoC4/CyLib.c ****             }           
 437:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 438:Generated_Source\PSoC4/CyLib.c ****         
 439:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 824              		.loc 1 439 0 is_stmt 1
 825 0052 154B     		ldr	r3, .L54+12
 826 0054 144A     		ldr	r2, .L54+12
 827 0056 1268     		ldr	r2, [r2]
 828 0058 0221     		movs	r1, #2
 829 005a 8A43     		bics	r2, r1
 830 005c 1A60     		str	r2, [r3]
 440:Generated_Source\PSoC4/CyLib.c **** 
 441:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 442:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 443:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 831              		.loc 1 443 0
 832 005e 134A     		ldr	r2, .L54+16
 833 0060 124B     		ldr	r3, .L54+16
 834 0062 1B68     		ldr	r3, [r3]
 835 0064 1F21     		movs	r1, #31
 836 0066 8B43     		bics	r3, r1
 837 0068 1900     		movs	r1, r3
 444:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 838              		.loc 1 444 0
 839 006a 114B     		ldr	r3, .L54+20
 840 006c 1B68     		ldr	r3, [r3]
 841 006e 1F20     		movs	r0, #31
 842 0070 0340     		ands	r3, r0
 443:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 843              		.loc 1 443 0
 844 0072 0B43     		orrs	r3, r1
 845 0074 1360     		str	r3, [r2]
 445:Generated_Source\PSoC4/CyLib.c **** 
 446:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 846              		.loc 1 446 0
 847 0076 7B68     		ldr	r3, [r7, #4]
 848 0078 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 24


 849 007a 03D0     		beq	.L53
 447:Generated_Source\PSoC4/CyLib.c ****             {
 448:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 850              		.loc 1 448 0
 851 007c 0D4A     		ldr	r2, .L54+24
 852 007e 0E4B     		ldr	r3, .L54+28
 853 0080 1B68     		ldr	r3, [r3]
 854 0082 1360     		str	r3, [r2]
 855              	.L53:
 449:Generated_Source\PSoC4/CyLib.c ****             }
 450:Generated_Source\PSoC4/CyLib.c ****             
 451:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 856              		.loc 1 451 0
 857 0084 0D4B     		ldr	r3, .L54+32
 858 0086 BA68     		ldr	r2, [r7, #8]
 859 0088 0D49     		ldr	r1, .L54+36
 860 008a 8C46     		mov	ip, r1
 861 008c 6244     		add	r2, r2, ip
 862 008e 1278     		ldrb	r2, [r2]
 863 0090 D2B2     		uxtb	r2, r2
 864 0092 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c ****             
 453:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 454:Generated_Source\PSoC4/CyLib.c ****     }
 865              		.loc 1 454 0
 866 0094 C046     		nop
 867 0096 BD46     		mov	sp, r7
 868 0098 04B0     		add	sp, sp, #16
 869              		@ sp needed
 870 009a 80BD     		pop	{r7, pc}
 871              	.L55:
 872              		.align	2
 873              	.L54:
 874 009c 00F3FF0F 		.word	268432128
 875 00a0 2CFF0B40 		.word	1074528044
 876 00a4 00000000 		.word	cyImoFreqMhz2Reg
 877 00a8 24002C40 		.word	1076625444
 878 00ac 34FF0B40 		.word	1074528052
 879 00b0 00000000 		.word	CySysClkImoTrim4
 880 00b4 20FF0B40 		.word	1074528032
 881 00b8 00000000 		.word	CySysClkImoTrim5
 882 00bc 28FF0B40 		.word	1074528040
 883 00c0 4DF3FF0F 		.word	268432205
 884              		.cfi_endproc
 885              	.LFE7:
 886              		.size	CySysClkImoDisableUsbLock, .-CySysClkImoDisableUsbLock
 887              		.section	.text.CySysClkImoGetUsbLock,"ax",%progbits
 888              		.align	2
 889              		.global	CySysClkImoGetUsbLock
 890              		.code	16
 891              		.thumb_func
 892              		.type	CySysClkImoGetUsbLock, %function
 893              	CySysClkImoGetUsbLock:
 894              	.LFB8:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 25


 458:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 459:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c ****     *
 461:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 462:Generated_Source\PSoC4/CyLib.c ****     *
 463:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 464:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 465:Generated_Source\PSoC4/CyLib.c ****     *
 466:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 467:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 468:Generated_Source\PSoC4/CyLib.c ****     *
 469:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 470:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 471:Generated_Source\PSoC4/CyLib.c ****     {
 895              		.loc 1 471 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899 0000 80B5     		push	{r7, lr}
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 00AF     		add	r7, sp, #0
 904              		.cfi_def_cfa_register 7
 472:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 905              		.loc 1 472 0
 906 0004 054B     		ldr	r3, .L60
 907 0006 1B68     		ldr	r3, [r3]
 908 0008 0222     		movs	r2, #2
 909 000a 1340     		ands	r3, r2
 473:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 910              		.loc 1 473 0
 911 000c 01D0     		beq	.L57
 912              		.loc 1 473 0 is_stmt 0 discriminator 1
 913 000e 0123     		movs	r3, #1
 472:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 914              		.loc 1 472 0 is_stmt 1 discriminator 1
 915 0010 00E0     		b	.L59
 916              	.L57:
 917              		.loc 1 473 0 discriminator 2
 918 0012 0023     		movs	r3, #0
 919              	.L59:
 474:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 475:Generated_Source\PSoC4/CyLib.c ****     }
 920              		.loc 1 475 0 discriminator 1
 921 0014 1800     		movs	r0, r3
 922 0016 BD46     		mov	sp, r7
 923              		@ sp needed
 924 0018 80BD     		pop	{r7, pc}
 925              	.L61:
 926 001a C046     		.align	2
 927              	.L60:
 928 001c 24002C40 		.word	1076625444
 929              		.cfi_endproc
 930              	.LFE8:
 931              		.size	CySysClkImoGetUsbLock, .-CySysClkImoGetUsbLock
 932              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 26


 933              		.align	2
 934              		.global	CySysClkWriteHfclkDirect
 935              		.code	16
 936              		.thumb_func
 937              		.type	CySysClkWriteHfclkDirect, %function
 938              	CySysClkWriteHfclkDirect:
 939              	.LFB9:
 476:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 477:Generated_Source\PSoC4/CyLib.c **** 
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c **** 
 480:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 482:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 483:Generated_Source\PSoC4/CyLib.c **** *
 484:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 485:Generated_Source\PSoC4/CyLib.c **** *
 486:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 487:Generated_Source\PSoC4/CyLib.c **** *
 488:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 489:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 490:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 491:Generated_Source\PSoC4/CyLib.c **** *
 492:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 493:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 494:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 495:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 496:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 497:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 498:Generated_Source\PSoC4/CyLib.c **** *
 499:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 500:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 501:Generated_Source\PSoC4/CyLib.c **** *
 502:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 503:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 504:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 505:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 506:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 507:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 508:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 509:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 510:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 513:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 514:Generated_Source\PSoC4/CyLib.c **** {
 940              		.loc 1 514 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 16
 943              		@ frame_needed = 1, uses_anonymous_args = 0
 944 0000 90B5     		push	{r4, r7, lr}
 945              		.cfi_def_cfa_offset 12
 946              		.cfi_offset 4, -12
 947              		.cfi_offset 7, -8
 948              		.cfi_offset 14, -4
 949 0002 85B0     		sub	sp, sp, #20
 950              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 27


 951 0004 00AF     		add	r7, sp, #0
 952              		.cfi_def_cfa_register 7
 953 0006 7860     		str	r0, [r7, #4]
 515:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 516:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 517:Generated_Source\PSoC4/CyLib.c ****     
 518:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 519:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 520:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 954              		.loc 1 522 0
 955 0008 0B23     		movs	r3, #11
 956 000a FC18     		adds	r4, r7, r3
 957 000c FFF7FEFF 		bl	CyEnterCriticalSection
 958 0010 0300     		movs	r3, r0
 959 0012 2370     		strb	r3, [r4]
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 525:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 526:Generated_Source\PSoC4/CyLib.c ****     {
 527:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 528:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 529:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 530:Generated_Source\PSoC4/CyLib.c ****         
 531:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 532:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 533:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 534:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 535:Generated_Source\PSoC4/CyLib.c ****         
 536:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 537:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 538:Generated_Source\PSoC4/CyLib.c ****         
 539:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 540:Generated_Source\PSoC4/CyLib.c ****         {
 541:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 543:Generated_Source\PSoC4/CyLib.c ****         }
 544:Generated_Source\PSoC4/CyLib.c ****         
 545:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 546:Generated_Source\PSoC4/CyLib.c ****     }
 547:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 960              		.loc 1 549 0
 961 0014 144B     		ldr	r3, .L66
 962 0016 1B68     		ldr	r3, [r3]
 963 0018 144A     		ldr	r2, .L66+4
 964 001a 1340     		ands	r3, r2
 965 001c FB60     		str	r3, [r7, #12]
 550:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 551:Generated_Source\PSoC4/CyLib.c **** 
 552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 553:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 966              		.loc 1 553 0
 967 001e 7A68     		ldr	r2, [r7, #4]
 968 0020 8023     		movs	r3, #128
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 28


 969 0022 9B02     		lsls	r3, r3, #10
 970 0024 9A42     		cmp	r2, r3
 971 0026 04D0     		beq	.L63
 972              		.loc 1 553 0 is_stmt 0 discriminator 1
 973 0028 7A68     		ldr	r2, [r7, #4]
 974 002a 8023     		movs	r3, #128
 975 002c 5B02     		lsls	r3, r3, #9
 976 002e 9A42     		cmp	r2, r3
 977 0030 07D1     		bne	.L64
 978              	.L63:
 554:Generated_Source\PSoC4/CyLib.c ****     {
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 979              		.loc 1 555 0 is_stmt 1
 980 0032 7A68     		ldr	r2, [r7, #4]
 981 0034 C023     		movs	r3, #192
 982 0036 9B02     		lsls	r3, r3, #10
 983 0038 1340     		ands	r3, r2
 984 003a FA68     		ldr	r2, [r7, #12]
 985 003c 1343     		orrs	r3, r2
 986 003e FB60     		str	r3, [r7, #12]
 987 0040 05E0     		b	.L65
 988              	.L64:
 556:Generated_Source\PSoC4/CyLib.c ****     }
 557:Generated_Source\PSoC4/CyLib.c ****     else
 558:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 559:Generated_Source\PSoC4/CyLib.c ****     {
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 989              		.loc 1 560 0
 990 0042 7B68     		ldr	r3, [r7, #4]
 991 0044 0722     		movs	r2, #7
 992 0046 1340     		ands	r3, r2
 993 0048 FA68     		ldr	r2, [r7, #12]
 994 004a 1343     		orrs	r3, r2
 995 004c FB60     		str	r3, [r7, #12]
 996              	.L65:
 561:Generated_Source\PSoC4/CyLib.c ****     }   
 562:Generated_Source\PSoC4/CyLib.c ****     
 563:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 997              		.loc 1 563 0
 998 004e 064B     		ldr	r3, .L66
 999 0050 FA68     		ldr	r2, [r7, #12]
 1000 0052 1A60     		str	r2, [r3]
 564:Generated_Source\PSoC4/CyLib.c ****     
 565:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1001              		.loc 1 565 0
 1002 0054 0B23     		movs	r3, #11
 1003 0056 FB18     		adds	r3, r7, r3
 1004 0058 1B78     		ldrb	r3, [r3]
 1005 005a 1800     		movs	r0, r3
 1006 005c FFF7FEFF 		bl	CyExitCriticalSection
 566:Generated_Source\PSoC4/CyLib.c **** }
 1007              		.loc 1 566 0
 1008 0060 C046     		nop
 1009 0062 BD46     		mov	sp, r7
 1010 0064 05B0     		add	sp, sp, #20
 1011              		@ sp needed
 1012 0066 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 29


 1013              	.L67:
 1014              		.align	2
 1015              	.L66:
 1016 0068 00010B40 		.word	1074462976
 1017 006c F8FFFCFF 		.word	-196616
 1018              		.cfi_endproc
 1019              	.LFE9:
 1020              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 1021              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 1022              		.align	2
 1023              		.global	CySysEnablePumpClock
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CySysEnablePumpClock, %function
 1027              	CySysEnablePumpClock:
 1028              	.LFB10:
 567:Generated_Source\PSoC4/CyLib.c **** 
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 571:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 574:Generated_Source\PSoC4/CyLib.c **** *
 575:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 577:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 578:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 579:Generated_Source\PSoC4/CyLib.c **** *
 580:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 581:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 582:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 586:Generated_Source\PSoC4/CyLib.c **** {
 1029              		.loc 1 586 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 8
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
 1033 0000 80B5     		push	{r7, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 82B0     		sub	sp, sp, #8
 1038              		.cfi_def_cfa_offset 16
 1039 0004 00AF     		add	r7, sp, #0
 1040              		.cfi_def_cfa_register 7
 1041 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 588:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 1042              		.loc 1 588 0
 1043 0008 7B68     		ldr	r3, [r7, #4]
 1044 000a 0122     		movs	r2, #1
 1045 000c 1340     		ands	r3, r2
 1046 000e 08D0     		beq	.L69
 589:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 30


 590:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 1047              		.loc 1 590 0
 1048 0010 0C4A     		ldr	r2, .L72
 1049 0012 0C4B     		ldr	r3, .L72
 1050 0014 1968     		ldr	r1, [r3]
 1051 0016 0C4B     		ldr	r3, .L72+4
 1052 0018 1B68     		ldr	r3, [r3]
 1053 001a 5B06     		lsls	r3, r3, #25
 1054 001c 0B43     		orrs	r3, r1
 1055 001e 1360     		str	r3, [r2]
 591:Generated_Source\PSoC4/CyLib.c ****         }
 592:Generated_Source\PSoC4/CyLib.c ****         else
 593:Generated_Source\PSoC4/CyLib.c ****         {
 594:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 595:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 596:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 597:Generated_Source\PSoC4/CyLib.c ****         }
 598:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 599:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 600:Generated_Source\PSoC4/CyLib.c ****         {
 601:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 602:Generated_Source\PSoC4/CyLib.c ****         }
 603:Generated_Source\PSoC4/CyLib.c ****         else
 604:Generated_Source\PSoC4/CyLib.c ****         {
 605:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 606:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 607:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 608:Generated_Source\PSoC4/CyLib.c ****         }
 609:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 610:Generated_Source\PSoC4/CyLib.c **** }
 1056              		.loc 1 610 0
 1057 0020 0CE0     		b	.L71
 1058              	.L69:
 594:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 1059              		.loc 1 594 0
 1060 0022 084B     		ldr	r3, .L72
 1061 0024 1B68     		ldr	r3, [r3]
 1062 0026 5B0E     		lsrs	r3, r3, #25
 1063 0028 0722     		movs	r2, #7
 1064 002a 1A40     		ands	r2, r3
 1065 002c 064B     		ldr	r3, .L72+4
 1066 002e 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/CyLib.c ****         }
 1067              		.loc 1 596 0
 1068 0030 044B     		ldr	r3, .L72
 1069 0032 044A     		ldr	r2, .L72
 1070 0034 1268     		ldr	r2, [r2]
 1071 0036 0549     		ldr	r1, .L72+8
 1072 0038 0A40     		ands	r2, r1
 1073 003a 1A60     		str	r2, [r3]
 1074              	.L71:
 1075              		.loc 1 610 0
 1076 003c C046     		nop
 1077 003e BD46     		mov	sp, r7
 1078 0040 02B0     		add	sp, sp, #8
 1079              		@ sp needed
 1080 0042 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 31


 1081              	.L73:
 1082              		.align	2
 1083              	.L72:
 1084 0044 08010B40 		.word	1074462984
 1085 0048 00000000 		.word	CySysClkPumpConfig
 1086 004c FFFFFFF1 		.word	-234881025
 1087              		.cfi_endproc
 1088              	.LFE10:
 1089              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 1090              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 1091              		.align	2
 1092              		.global	CySysClkGetSysclkSource
 1093              		.code	16
 1094              		.thumb_func
 1095              		.type	CySysClkGetSysclkSource, %function
 1096              	CySysClkGetSysclkSource:
 1097              	.LFB11:
 611:Generated_Source\PSoC4/CyLib.c **** 
 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 616:Generated_Source\PSoC4/CyLib.c **** *
 617:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 618:Generated_Source\PSoC4/CyLib.c **** *
 619:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 623:Generated_Source\PSoC4/CyLib.c **** {
 1098              		.loc 1 623 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 8
 1101              		@ frame_needed = 1, uses_anonymous_args = 0
 1102 0000 90B5     		push	{r4, r7, lr}
 1103              		.cfi_def_cfa_offset 12
 1104              		.cfi_offset 4, -12
 1105              		.cfi_offset 7, -8
 1106              		.cfi_offset 14, -4
 1107 0002 83B0     		sub	sp, sp, #12
 1108              		.cfi_def_cfa_offset 24
 1109 0004 00AF     		add	r7, sp, #0
 1110              		.cfi_def_cfa_register 7
 624:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 625:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 626:Generated_Source\PSoC4/CyLib.c **** 
 627:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1111              		.loc 1 627 0
 1112 0006 FC1C     		adds	r4, r7, #3
 1113 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1114 000c 0300     		movs	r3, r0
 1115 000e 2370     		strb	r3, [r4]
 628:Generated_Source\PSoC4/CyLib.c **** 
 629:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 630:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 1116              		.loc 1 630 0
 1117 0010 0D4B     		ldr	r3, .L78
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 32


 1118 0012 1A68     		ldr	r2, [r3]
 1119 0014 C023     		movs	r3, #192
 1120 0016 9B02     		lsls	r3, r3, #10
 1121 0018 1340     		ands	r3, r2
 1122 001a 06D0     		beq	.L75
 631:Generated_Source\PSoC4/CyLib.c ****     {
 632:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 1123              		.loc 1 632 0
 1124 001c 0A4B     		ldr	r3, .L78
 1125 001e 1A68     		ldr	r2, [r3]
 1126 0020 C023     		movs	r3, #192
 1127 0022 9B02     		lsls	r3, r3, #10
 1128 0024 1340     		ands	r3, r2
 1129 0026 7B60     		str	r3, [r7, #4]
 1130 0028 04E0     		b	.L76
 1131              	.L75:
 633:Generated_Source\PSoC4/CyLib.c ****     }
 634:Generated_Source\PSoC4/CyLib.c ****     else
 635:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 636:Generated_Source\PSoC4/CyLib.c ****     {
 637:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 1132              		.loc 1 637 0
 1133 002a 074B     		ldr	r3, .L78
 1134 002c 1B68     		ldr	r3, [r3]
 1135 002e 0722     		movs	r2, #7
 1136 0030 1340     		ands	r3, r2
 1137 0032 7B60     		str	r3, [r7, #4]
 1138              	.L76:
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 640:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 641:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 642:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 643:Generated_Source\PSoC4/CyLib.c ****         
 644:Generated_Source\PSoC4/CyLib.c ****     }
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1139              		.loc 1 646 0
 1140 0034 FB1C     		adds	r3, r7, #3
 1141 0036 1B78     		ldrb	r3, [r3]
 1142 0038 1800     		movs	r0, r3
 1143 003a FFF7FEFF 		bl	CyExitCriticalSection
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 1144              		.loc 1 648 0
 1145 003e 7B68     		ldr	r3, [r7, #4]
 649:Generated_Source\PSoC4/CyLib.c **** }
 1146              		.loc 1 649 0
 1147 0040 1800     		movs	r0, r3
 1148 0042 BD46     		mov	sp, r7
 1149 0044 03B0     		add	sp, sp, #12
 1150              		@ sp needed
 1151 0046 90BD     		pop	{r4, r7, pc}
 1152              	.L79:
 1153              		.align	2
 1154              	.L78:
 1155 0048 00010B40 		.word	1074462976
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 33


 1156              		.cfi_endproc
 1157              	.LFE11:
 1158              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 1159              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 1160              		.align	2
 1161              		.global	CySysClkWriteSysclkDiv
 1162              		.code	16
 1163              		.thumb_func
 1164              		.type	CySysClkWriteSysclkDiv, %function
 1165              	CySysClkWriteSysclkDiv:
 1166              	.LFB12:
 650:Generated_Source\PSoC4/CyLib.c **** 
 651:Generated_Source\PSoC4/CyLib.c **** 
 652:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 653:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 654:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 657:Generated_Source\PSoC4/CyLib.c **** *
 658:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 659:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 660:Generated_Source\PSoC4/CyLib.c **** *
 661:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 662:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 663:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 664:Generated_Source\PSoC4/CyLib.c **** *
 665:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 666:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 667:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 668:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 669:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 670:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 671:Generated_Source\PSoC4/CyLib.c **** *
 672:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 673:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 674:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 675:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 676:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 677:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 678:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 679:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 680:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 683:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 684:Generated_Source\PSoC4/CyLib.c **** {
 1167              		.loc 1 684 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 16
 1170              		@ frame_needed = 1, uses_anonymous_args = 0
 1171 0000 90B5     		push	{r4, r7, lr}
 1172              		.cfi_def_cfa_offset 12
 1173              		.cfi_offset 4, -12
 1174              		.cfi_offset 7, -8
 1175              		.cfi_offset 14, -4
 1176 0002 85B0     		sub	sp, sp, #20
 1177              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 34


 1178 0004 00AF     		add	r7, sp, #0
 1179              		.cfi_def_cfa_register 7
 1180 0006 7860     		str	r0, [r7, #4]
 685:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 686:Generated_Source\PSoC4/CyLib.c **** 
 687:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1181              		.loc 1 687 0
 1182 0008 0F23     		movs	r3, #15
 1183 000a FC18     		adds	r4, r7, r3
 1184 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1185 0010 0300     		movs	r3, r0
 1186 0012 2370     		strb	r3, [r4]
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 1187              		.loc 1 689 0
 1188 0014 0A4B     		ldr	r3, .L81
 1189 0016 7A68     		ldr	r2, [r7, #4]
 1190 0018 D104     		lsls	r1, r2, #19
 1191 001a E022     		movs	r2, #224
 1192 001c 9203     		lsls	r2, r2, #14
 1193 001e 1140     		ands	r1, r2
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 691:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 1194              		.loc 1 691 0
 1195 0020 074A     		ldr	r2, .L81
 1196 0022 1268     		ldr	r2, [r2]
 1197 0024 0748     		ldr	r0, .L81+4
 1198 0026 0240     		ands	r2, r0
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 1199              		.loc 1 690 0
 1200 0028 0A43     		orrs	r2, r1
 689:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 1201              		.loc 1 689 0
 1202 002a 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 693:Generated_Source\PSoC4/CyLib.c **** 
 694:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1203              		.loc 1 694 0
 1204 002c 0F23     		movs	r3, #15
 1205 002e FB18     		adds	r3, r7, r3
 1206 0030 1B78     		ldrb	r3, [r3]
 1207 0032 1800     		movs	r0, r3
 1208 0034 FFF7FEFF 		bl	CyExitCriticalSection
 695:Generated_Source\PSoC4/CyLib.c **** }
 1209              		.loc 1 695 0
 1210 0038 C046     		nop
 1211 003a BD46     		mov	sp, r7
 1212 003c 05B0     		add	sp, sp, #20
 1213              		@ sp needed
 1214 003e 90BD     		pop	{r4, r7, pc}
 1215              	.L82:
 1216              		.align	2
 1217              	.L81:
 1218 0040 00010B40 		.word	1074462976
 1219 0044 FFFFC7FF 		.word	-3670017
 1220              		.cfi_endproc
 1221              	.LFE12:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 35


 1222              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 1223              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1224              		.align	2
 1225              		.global	CySysClkWriteImoFreq
 1226              		.code	16
 1227              		.thumb_func
 1228              		.type	CySysClkWriteImoFreq, %function
 1229              	CySysClkWriteImoFreq:
 1230              	.LFB13:
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c **** 
 698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 701:Generated_Source\PSoC4/CyLib.c **** *
 702:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 703:Generated_Source\PSoC4/CyLib.c **** *
 704:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 705:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 706:Generated_Source\PSoC4/CyLib.c **** *
 707:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 708:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 709:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 710:Generated_Source\PSoC4/CyLib.c **** *
 711:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 712:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 713:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 714:Generated_Source\PSoC4/CyLib.c **** *
 715:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 716:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 717:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 718:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 719:Generated_Source\PSoC4/CyLib.c **** *
 720:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 721:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 722:Generated_Source\PSoC4/CyLib.c **** *
 723:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 724:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 725:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 726:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 727:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 728:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 731:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 732:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 735:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 736:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 737:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 738:Generated_Source\PSoC4/CyLib.c **** *
 739:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 740:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 741:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 742:Generated_Source\PSoC4/CyLib.c ****     {
 1231              		.loc 1 742 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 36


 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 24
 1234              		@ frame_needed = 1, uses_anonymous_args = 0
 1235 0000 90B5     		push	{r4, r7, lr}
 1236              		.cfi_def_cfa_offset 12
 1237              		.cfi_offset 4, -12
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 87B0     		sub	sp, sp, #28
 1241              		.cfi_def_cfa_offset 40
 1242 0004 00AF     		add	r7, sp, #0
 1243              		.cfi_def_cfa_register 7
 1244 0006 7860     		str	r0, [r7, #4]
 743:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 744:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 745:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 746:Generated_Source\PSoC4/CyLib.c ****         #else
 747:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 748:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 749:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 750:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 751:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 754:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 1245              		.loc 1 754 0
 1246 0008 0023     		movs	r3, #0
 1247 000a 3B61     		str	r3, [r7, #16]
 755:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 756:Generated_Source\PSoC4/CyLib.c **** 
 757:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 758:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 1248              		.loc 1 758 0
 1249 000c 0023     		movs	r3, #0
 1250 000e FB60     		str	r3, [r7, #12]
 759:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 760:Generated_Source\PSoC4/CyLib.c **** 
 761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c **** 
 764:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 1251              		.loc 1 764 0
 1252 0010 0B23     		movs	r3, #11
 1253 0012 FC18     		adds	r4, r7, r3
 1254 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1255 0018 0300     		movs	r3, r0
 1256 001a 2370     		strb	r3, [r4]
 765:Generated_Source\PSoC4/CyLib.c **** 
 766:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 767:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 1257              		.loc 1 767 0
 1258 001c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1259 0020 031E     		subs	r3, r0, #0
 1260 0022 03D0     		beq	.L84
 768:Generated_Source\PSoC4/CyLib.c ****             {
 769:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 1261              		.loc 1 769 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 37


 1262 0024 0123     		movs	r3, #1
 1263 0026 3B61     		str	r3, [r7, #16]
 770:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1264              		.loc 1 770 0
 1265 0028 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1266              	.L84:
 771:Generated_Source\PSoC4/CyLib.c ****             }
 772:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** 
 775:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 776:Generated_Source\PSoC4/CyLib.c **** 
 777:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 778:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 1267              		.loc 1 778 0
 1268 002c FFF7FEFF 		bl	CySysClkImoGetUsbLock
 1269 0030 031E     		subs	r3, r0, #0
 1270 0032 09D0     		beq	.L85
 779:Generated_Source\PSoC4/CyLib.c ****                 {
 780:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 781:Generated_Source\PSoC4/CyLib.c **** 
 782:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 1271              		.loc 1 782 0
 1272 0034 7B68     		ldr	r3, [r7, #4]
 1273 0036 182B     		cmp	r3, #24
 1274 0038 02D0     		beq	.L86
 1275              		.loc 1 782 0 is_stmt 0 discriminator 1
 1276 003a 7B68     		ldr	r3, [r7, #4]
 1277 003c 302B     		cmp	r3, #48
 1278 003e 03D1     		bne	.L85
 1279              	.L86:
 783:Generated_Source\PSoC4/CyLib.c ****                 {
 784:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 1280              		.loc 1 784 0 is_stmt 1
 1281 0040 0123     		movs	r3, #1
 1282 0042 FB60     		str	r3, [r7, #12]
 785:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 1283              		.loc 1 785 0
 1284 0044 FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 1285              	.L85:
 786:Generated_Source\PSoC4/CyLib.c ****                 }
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 789:Generated_Source\PSoC4/CyLib.c ****                 }
 790:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c **** 
 795:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 796:Generated_Source\PSoC4/CyLib.c **** 
 797:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 798:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 799:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 800:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 801:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 802:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 38


 803:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 804:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 805:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 806:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 809:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 810:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 1286              		.loc 1 814 0
 1287 0048 7B68     		ldr	r3, [r7, #4]
 1288 004a 022B     		cmp	r3, #2
 1289 004c 00D8     		bhi	.LCB1004
 1290 004e AFE0     		b	.L87	@long jump
 1291              	.LCB1004:
 1292              		.loc 1 814 0 is_stmt 0 discriminator 1
 1293 0050 7B68     		ldr	r3, [r7, #4]
 1294 0052 302B     		cmp	r3, #48
 1295 0054 00D9     		bls	.LCB1007
 1296 0056 ABE0     		b	.L87	@long jump
 1297              	.LCB1007:
 815:Generated_Source\PSoC4/CyLib.c ****         {
 816:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 1298              		.loc 1 816 0 is_stmt 1
 1299 0058 614B     		ldr	r3, .L100
 1300 005a 1B78     		ldrb	r3, [r3]
 1301 005c DBB2     		uxtb	r3, r3
 1302 005e 1A00     		movs	r2, r3
 1303 0060 7B68     		ldr	r3, [r7, #4]
 1304 0062 9A42     		cmp	r2, r3
 1305 0064 0AD3     		bcc	.L88
 817:Generated_Source\PSoC4/CyLib.c ****             {
 818:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 1306              		.loc 1 818 0
 1307 0066 5F4A     		ldr	r2, .L100+4
 1308 0068 1723     		movs	r3, #23
 1309 006a FB18     		adds	r3, r7, r3
 1310 006c 1278     		ldrb	r2, [r2]
 1311 006e 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1312              		.loc 1 819 0
 1313 0070 5D4A     		ldr	r2, .L100+8
 1314 0072 1623     		movs	r3, #22
 1315 0074 FB18     		adds	r3, r7, r3
 1316 0076 1278     		ldrb	r2, [r2]
 1317 0078 1A70     		strb	r2, [r3]
 1318 007a 3FE0     		b	.L89
 1319              	.L88:
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 1320              		.loc 1 821 0
 1321 007c 5B4B     		ldr	r3, .L100+12
 1322 007e 1B78     		ldrb	r3, [r3]
 1323 0080 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 39


 1324 0082 1A00     		movs	r2, r3
 1325 0084 7B68     		ldr	r3, [r7, #4]
 1326 0086 9A42     		cmp	r2, r3
 1327 0088 0AD3     		bcc	.L90
 822:Generated_Source\PSoC4/CyLib.c ****             {
 823:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 1328              		.loc 1 823 0
 1329 008a 594A     		ldr	r2, .L100+16
 1330 008c 1723     		movs	r3, #23
 1331 008e FB18     		adds	r3, r7, r3
 1332 0090 1278     		ldrb	r2, [r2]
 1333 0092 1A70     		strb	r2, [r3]
 824:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1334              		.loc 1 824 0
 1335 0094 574A     		ldr	r2, .L100+20
 1336 0096 1623     		movs	r3, #22
 1337 0098 FB18     		adds	r3, r7, r3
 1338 009a 1278     		ldrb	r2, [r2]
 1339 009c 1A70     		strb	r2, [r3]
 1340 009e 2DE0     		b	.L89
 1341              	.L90:
 825:Generated_Source\PSoC4/CyLib.c ****             }
 826:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 1342              		.loc 1 826 0
 1343 00a0 554B     		ldr	r3, .L100+24
 1344 00a2 1B78     		ldrb	r3, [r3]
 1345 00a4 DBB2     		uxtb	r3, r3
 1346 00a6 1A00     		movs	r2, r3
 1347 00a8 7B68     		ldr	r3, [r7, #4]
 1348 00aa 9A42     		cmp	r2, r3
 1349 00ac 0AD3     		bcc	.L91
 827:Generated_Source\PSoC4/CyLib.c ****             {
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 1350              		.loc 1 828 0
 1351 00ae 534A     		ldr	r2, .L100+28
 1352 00b0 1723     		movs	r3, #23
 1353 00b2 FB18     		adds	r3, r7, r3
 1354 00b4 1278     		ldrb	r2, [r2]
 1355 00b6 1A70     		strb	r2, [r3]
 829:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1356              		.loc 1 829 0
 1357 00b8 514A     		ldr	r2, .L100+32
 1358 00ba 1623     		movs	r3, #22
 1359 00bc FB18     		adds	r3, r7, r3
 1360 00be 1278     		ldrb	r2, [r2]
 1361 00c0 1A70     		strb	r2, [r3]
 1362 00c2 1BE0     		b	.L89
 1363              	.L91:
 830:Generated_Source\PSoC4/CyLib.c ****             }
 831:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 1364              		.loc 1 831 0
 1365 00c4 4F4B     		ldr	r3, .L100+36
 1366 00c6 1B78     		ldrb	r3, [r3]
 1367 00c8 DBB2     		uxtb	r3, r3
 1368 00ca 1A00     		movs	r2, r3
 1369 00cc 7B68     		ldr	r3, [r7, #4]
 1370 00ce 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 40


 1371 00d0 0AD3     		bcc	.L92
 832:Generated_Source\PSoC4/CyLib.c ****             {
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 1372              		.loc 1 833 0
 1373 00d2 4D4A     		ldr	r2, .L100+40
 1374 00d4 1723     		movs	r3, #23
 1375 00d6 FB18     		adds	r3, r7, r3
 1376 00d8 1278     		ldrb	r2, [r2]
 1377 00da 1A70     		strb	r2, [r3]
 834:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1378              		.loc 1 834 0
 1379 00dc 4B4A     		ldr	r2, .L100+44
 1380 00de 1623     		movs	r3, #22
 1381 00e0 FB18     		adds	r3, r7, r3
 1382 00e2 1278     		ldrb	r2, [r2]
 1383 00e4 1A70     		strb	r2, [r3]
 1384 00e6 09E0     		b	.L89
 1385              	.L92:
 835:Generated_Source\PSoC4/CyLib.c ****             }
 836:Generated_Source\PSoC4/CyLib.c ****             else
 837:Generated_Source\PSoC4/CyLib.c ****             {
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 1386              		.loc 1 838 0
 1387 00e8 494A     		ldr	r2, .L100+48
 1388 00ea 1723     		movs	r3, #23
 1389 00ec FB18     		adds	r3, r7, r3
 1390 00ee 1278     		ldrb	r2, [r2]
 1391 00f0 1A70     		strb	r2, [r3]
 839:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1392              		.loc 1 839 0
 1393 00f2 484A     		ldr	r2, .L100+52
 1394 00f4 1623     		movs	r3, #22
 1395 00f6 FB18     		adds	r3, r7, r3
 1396 00f8 1278     		ldrb	r2, [r2]
 1397 00fa 1A70     		strb	r2, [r3]
 1398              	.L89:
 840:Generated_Source\PSoC4/CyLib.c ****             }
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 843:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1399              		.loc 1 843 0
 1400 00fc 7B68     		ldr	r3, [r7, #4]
 1401 00fe DA1E     		subs	r2, r3, #3
 1402 0100 0A23     		movs	r3, #10
 1403 0102 FB18     		adds	r3, r7, r3
 1404 0104 4449     		ldr	r1, .L100+56
 1405 0106 8A5C     		ldrb	r2, [r1, r2]
 1406 0108 1A70     		strb	r2, [r3]
 844:Generated_Source\PSoC4/CyLib.c **** 
 845:Generated_Source\PSoC4/CyLib.c **** 
 846:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 847:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 848:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 849:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 850:Generated_Source\PSoC4/CyLib.c ****             *
 851:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 852:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 41


 853:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 854:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 855:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 1407              		.loc 1 855 0
 1408 010a 0A23     		movs	r3, #10
 1409 010c FB18     		adds	r3, r7, r3
 1410 010e 1B78     		ldrb	r3, [r3]
 1411 0110 2F2B     		cmp	r3, #47
 1412 0112 0DD9     		bls	.L93
 1413              		.loc 1 855 0 is_stmt 0 discriminator 1
 1414 0114 7B68     		ldr	r3, [r7, #4]
 1415 0116 2A2B     		cmp	r3, #42
 1416 0118 0AD9     		bls	.L93
 856:Generated_Source\PSoC4/CyLib.c ****             {
 857:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 858:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 1417              		.loc 1 858 0 is_stmt 1
 1418 011a 404B     		ldr	r3, .L100+60
 1419 011c 1922     		movs	r2, #25
 1420 011e 1A60     		str	r2, [r3]
 859:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1421              		.loc 1 861 0
 1422 0120 0520     		movs	r0, #5
 1423 0122 FFF7FEFF 		bl	CyDelayCycles
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 1424              		.loc 1 863 0
 1425 0126 1523     		movs	r3, #21
 1426 0128 FB18     		adds	r3, r7, r3
 1427 012a 1922     		movs	r2, #25
 1428 012c 1A70     		strb	r2, [r3]
 1429 012e 07E0     		b	.L94
 1430              	.L93:
 864:Generated_Source\PSoC4/CyLib.c ****             }
 865:Generated_Source\PSoC4/CyLib.c ****             else
 866:Generated_Source\PSoC4/CyLib.c ****             {
 867:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 1431              		.loc 1 867 0
 1432 0130 3A4B     		ldr	r3, .L100+60
 1433 0132 1B68     		ldr	r3, [r3]
 1434 0134 DAB2     		uxtb	r2, r3
 1435 0136 1523     		movs	r3, #21
 1436 0138 FB18     		adds	r3, r7, r3
 1437 013a 3F21     		movs	r1, #63
 1438 013c 0A40     		ands	r2, r1
 1439 013e 1A70     		strb	r2, [r3]
 1440              	.L94:
 868:Generated_Source\PSoC4/CyLib.c ****             }
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 872:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 873:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 874:Generated_Source\PSoC4/CyLib.c ****             *
 875:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 42


 876:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 877:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 878:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 879:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 1441              		.loc 1 879 0
 1442 0140 0A23     		movs	r3, #10
 1443 0142 FA18     		adds	r2, r7, r3
 1444 0144 1523     		movs	r3, #21
 1445 0146 FB18     		adds	r3, r7, r3
 1446 0148 1278     		ldrb	r2, [r2]
 1447 014a 1B78     		ldrb	r3, [r3]
 1448 014c 9A42     		cmp	r2, r3
 1449 014e 08D2     		bcs	.L95
 880:Generated_Source\PSoC4/CyLib.c ****             {
 881:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 882:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1450              		.loc 1 882 0
 1451 0150 324B     		ldr	r3, .L100+60
 1452 0152 7A68     		ldr	r2, [r7, #4]
 1453 0154 033A     		subs	r2, r2, #3
 1454 0156 3049     		ldr	r1, .L100+56
 1455 0158 8A5C     		ldrb	r2, [r1, r2]
 1456 015a 1A60     		str	r2, [r3]
 883:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1457              		.loc 1 883 0
 1458 015c 0520     		movs	r0, #5
 1459 015e FFF7FEFF 		bl	CyDelayCycles
 1460              	.L95:
 884:Generated_Source\PSoC4/CyLib.c ****             }
 885:Generated_Source\PSoC4/CyLib.c **** 
 886:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 887:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 1461              		.loc 1 887 0
 1462 0162 2F4B     		ldr	r3, .L100+64
 1463 0164 7A68     		ldr	r2, [r7, #4]
 1464 0166 2B49     		ldr	r1, .L100+52
 1465 0168 8C46     		mov	ip, r1
 1466 016a 6244     		add	r2, r2, ip
 1467 016c 1278     		ldrb	r2, [r2]
 1468 016e D2B2     		uxtb	r2, r2
 1469 0170 1A60     		str	r2, [r3]
 888:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1470              		.loc 1 888 0
 1471 0172 2C4B     		ldr	r3, .L100+68
 1472 0174 1722     		movs	r2, #23
 1473 0176 BA18     		adds	r2, r7, r2
 1474 0178 1278     		ldrb	r2, [r2]
 1475 017a 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1476              		.loc 1 889 0
 1477 017c 2A4B     		ldr	r3, .L100+72
 1478 017e 1622     		movs	r2, #22
 1479 0180 BA18     		adds	r2, r7, r2
 1480 0182 1278     		ldrb	r2, [r2]
 1481 0184 1A60     		str	r2, [r3]
 890:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1482              		.loc 1 890 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 43


 1483 0186 0520     		movs	r0, #5
 1484 0188 FFF7FEFF 		bl	CyDelayUs
 891:Generated_Source\PSoC4/CyLib.c **** 
 892:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 1485              		.loc 1 892 0
 1486 018c 0A23     		movs	r3, #10
 1487 018e FA18     		adds	r2, r7, r3
 1488 0190 1523     		movs	r3, #21
 1489 0192 FB18     		adds	r3, r7, r3
 1490 0194 1278     		ldrb	r2, [r2]
 1491 0196 1B78     		ldrb	r3, [r3]
 1492 0198 9A42     		cmp	r2, r3
 1493 019a 0CD9     		bls	.L97
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 895:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1494              		.loc 1 895 0
 1495 019c 1F4B     		ldr	r3, .L100+60
 1496 019e 7A68     		ldr	r2, [r7, #4]
 1497 01a0 033A     		subs	r2, r2, #3
 1498 01a2 1D49     		ldr	r1, .L100+56
 1499 01a4 8A5C     		ldrb	r2, [r1, r2]
 1500 01a6 1A60     		str	r2, [r3]
 896:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1501              		.loc 1 896 0
 1502 01a8 0520     		movs	r0, #5
 1503 01aa FFF7FEFF 		bl	CyDelayCycles
 892:Generated_Source\PSoC4/CyLib.c ****             {
 1504              		.loc 1 892 0
 1505 01ae 02E0     		b	.L97
 1506              	.L87:
 897:Generated_Source\PSoC4/CyLib.c ****             }
 898:Generated_Source\PSoC4/CyLib.c ****         }
 899:Generated_Source\PSoC4/CyLib.c ****         else
 900:Generated_Source\PSoC4/CyLib.c ****         {
 901:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 902:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 1507              		.loc 1 902 0 discriminator 1
 1508 01b0 0020     		movs	r0, #0
 1509 01b2 FFF7FEFF 		bl	CyHalt
 1510              	.L97:
 903:Generated_Source\PSoC4/CyLib.c ****         }
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 908:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 1511              		.loc 1 908 0
 1512 01b6 3B69     		ldr	r3, [r7, #16]
 1513 01b8 012B     		cmp	r3, #1
 1514 01ba 01D1     		bne	.L98
 909:Generated_Source\PSoC4/CyLib.c ****             {
 910:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 1515              		.loc 1 910 0
 1516 01bc FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1517              	.L98:
 911:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 44


 912:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 913:Generated_Source\PSoC4/CyLib.c **** 
 914:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 915:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 1518              		.loc 1 915 0
 1519 01c0 FB68     		ldr	r3, [r7, #12]
 1520 01c2 012B     		cmp	r3, #1
 1521 01c4 01D1     		bne	.L99
 916:Generated_Source\PSoC4/CyLib.c ****             {
 917:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 1522              		.loc 1 917 0
 1523 01c6 FFF7FEFF 		bl	CySysClkImoEnableUsbLock
 1524              	.L99:
 918:Generated_Source\PSoC4/CyLib.c ****             }
 919:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1525              		.loc 1 921 0
 1526 01ca 0B23     		movs	r3, #11
 1527 01cc FB18     		adds	r3, r7, r3
 1528 01ce 1B78     		ldrb	r3, [r3]
 1529 01d0 1800     		movs	r0, r3
 1530 01d2 FFF7FEFF 		bl	CyExitCriticalSection
 922:Generated_Source\PSoC4/CyLib.c ****     }
 1531              		.loc 1 922 0
 1532 01d6 C046     		nop
 1533 01d8 BD46     		mov	sp, r7
 1534 01da 07B0     		add	sp, sp, #28
 1535              		@ sp needed
 1536 01dc 90BD     		pop	{r4, r7, pc}
 1537              	.L101:
 1538 01de C046     		.align	2
 1539              	.L100:
 1540 01e0 40F3FF0F 		.word	268432192
 1541 01e4 41F3FF0F 		.word	268432193
 1542 01e8 42F3FF0F 		.word	268432194
 1543 01ec 43F3FF0F 		.word	268432195
 1544 01f0 44F3FF0F 		.word	268432196
 1545 01f4 45F3FF0F 		.word	268432197
 1546 01f8 46F3FF0F 		.word	268432198
 1547 01fc 47F3FF0F 		.word	268432199
 1548 0200 48F3FF0F 		.word	268432200
 1549 0204 49F3FF0F 		.word	268432201
 1550 0208 4AF3FF0F 		.word	268432202
 1551 020c 4BF3FF0F 		.word	268432203
 1552 0210 4CF3FF0F 		.word	268432204
 1553 0214 4DF3FF0F 		.word	268432205
 1554 0218 00000000 		.word	cyImoFreqMhz2Reg
 1555 021c 2CFF0B40 		.word	1074528044
 1556 0220 28FF0B40 		.word	1074528040
 1557 0224 1CFF0B40 		.word	1074528028
 1558 0228 20FF0B40 		.word	1074528032
 1559              		.cfi_endproc
 1560              	.LFE13:
 1561              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1562              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1563              		.align	2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 45


 1564              		.global	CySysClkEcoStart
 1565              		.code	16
 1566              		.thumb_func
 1567              		.type	CySysClkEcoStart, %function
 1568              	CySysClkEcoStart:
 1569              	.LFB14:
 923:Generated_Source\PSoC4/CyLib.c **** 
 924:Generated_Source\PSoC4/CyLib.c **** #else
 925:Generated_Source\PSoC4/CyLib.c **** 
 926:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 927:Generated_Source\PSoC4/CyLib.c ****     {
 928:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 929:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 932:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 933:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 937:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 940:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 941:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 942:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 943:Generated_Source\PSoC4/CyLib.c ****         #else
 944:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 945:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 946:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 947:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 948:Generated_Source\PSoC4/CyLib.c ****         {
 949:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 952:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 953:Generated_Source\PSoC4/CyLib.c ****                 {
 954:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 955:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 956:Generated_Source\PSoC4/CyLib.c ****                 }
 957:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 958:Generated_Source\PSoC4/CyLib.c **** 
 959:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 960:Generated_Source\PSoC4/CyLib.c **** 
 961:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 962:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 963:Generated_Source\PSoC4/CyLib.c ****                     {
 964:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 967:Generated_Source\PSoC4/CyLib.c ****                     {
 968:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 969:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 970:Generated_Source\PSoC4/CyLib.c ****                     }
 971:Generated_Source\PSoC4/CyLib.c **** 
 972:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 973:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 46


 974:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 975:Generated_Source\PSoC4/CyLib.c **** 
 976:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c **** 
 979:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 980:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 984:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 985:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 986:Generated_Source\PSoC4/CyLib.c ****                 {
 987:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 988:Generated_Source\PSoC4/CyLib.c ****                 }
 989:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 990:Generated_Source\PSoC4/CyLib.c ****                 {
 991:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 992:Generated_Source\PSoC4/CyLib.c ****                 }
 993:Generated_Source\PSoC4/CyLib.c ****                 else
 994:Generated_Source\PSoC4/CyLib.c ****                 {
 995:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 996:Generated_Source\PSoC4/CyLib.c ****                 }
 997:Generated_Source\PSoC4/CyLib.c ****             #else
 998:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 999:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1000:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1003:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1007:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1012:Generated_Source\PSoC4/CyLib.c ****             {
1013:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1014:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1015:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1018:Generated_Source\PSoC4/CyLib.c **** 
1019:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1020:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1021:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1022:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1023:Generated_Source\PSoC4/CyLib.c ****             }
1024:Generated_Source\PSoC4/CyLib.c **** 
1025:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1026:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1027:Generated_Source\PSoC4/CyLib.c ****                 {
1028:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1029:Generated_Source\PSoC4/CyLib.c ****                 }
1030:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 47


1031:Generated_Source\PSoC4/CyLib.c ****         
1032:Generated_Source\PSoC4/CyLib.c ****         
1033:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1034:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1035:Generated_Source\PSoC4/CyLib.c ****                 {
1036:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1037:Generated_Source\PSoC4/CyLib.c ****                 }
1038:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1039:Generated_Source\PSoC4/CyLib.c **** 
1040:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1041:Generated_Source\PSoC4/CyLib.c ****         }
1042:Generated_Source\PSoC4/CyLib.c ****         else
1043:Generated_Source\PSoC4/CyLib.c ****         {
1044:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1045:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1046:Generated_Source\PSoC4/CyLib.c ****         }
1047:Generated_Source\PSoC4/CyLib.c ****     }
1048:Generated_Source\PSoC4/CyLib.c **** 
1049:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1053:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1054:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1055:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1056:Generated_Source\PSoC4/CyLib.c ****     *
1057:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1058:Generated_Source\PSoC4/CyLib.c ****     *
1059:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1060:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1061:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1062:Generated_Source\PSoC4/CyLib.c ****     *
1063:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1064:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1065:Generated_Source\PSoC4/CyLib.c ****     *
1066:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1067:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1068:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1069:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1070:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1071:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1072:Generated_Source\PSoC4/CyLib.c ****     *
1073:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1074:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1075:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1076:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1077:Generated_Source\PSoC4/CyLib.c ****     *
1078:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1079:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1080:Generated_Source\PSoC4/CyLib.c ****     {
1081:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1082:Generated_Source\PSoC4/CyLib.c **** 
1083:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1086:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1087:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 48


1088:Generated_Source\PSoC4/CyLib.c **** 
1089:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1090:Generated_Source\PSoC4/CyLib.c ****     }
1091:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c **** 
1094:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1095:Generated_Source\PSoC4/CyLib.c **** 
1096:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1097:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1098:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1101:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1102:Generated_Source\PSoC4/CyLib.c ****     *
1103:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1104:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1105:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1106:Generated_Source\PSoC4/CyLib.c ****     * called.
1107:Generated_Source\PSoC4/CyLib.c ****     *
1108:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1109:Generated_Source\PSoC4/CyLib.c ****     *
1110:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1111:Generated_Source\PSoC4/CyLib.c ****     *
1112:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1113:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1114:Generated_Source\PSoC4/CyLib.c ****     *
1115:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1116:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1117:Generated_Source\PSoC4/CyLib.c ****     *
1118:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1119:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1120:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1121:Generated_Source\PSoC4/CyLib.c ****     *
1122:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1123:Generated_Source\PSoC4/CyLib.c ****     *
1124:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1125:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1126:Generated_Source\PSoC4/CyLib.c ****     {
 1570              		.loc 1 1126 0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 16
 1573              		@ frame_needed = 1, uses_anonymous_args = 0
 1574 0000 80B5     		push	{r7, lr}
 1575              		.cfi_def_cfa_offset 8
 1576              		.cfi_offset 7, -8
 1577              		.cfi_offset 14, -4
 1578 0002 84B0     		sub	sp, sp, #16
 1579              		.cfi_def_cfa_offset 24
 1580 0004 00AF     		add	r7, sp, #0
 1581              		.cfi_def_cfa_register 7
 1582 0006 7860     		str	r0, [r7, #4]
1127:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1583              		.loc 1 1127 0
 1584 0008 0023     		movs	r3, #0
 1585 000a FB60     		str	r3, [r7, #12]
1128:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 49


1129:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1130:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1132:Generated_Source\PSoC4/CyLib.c **** 
1133:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1135:Generated_Source\PSoC4/CyLib.c **** 
1136:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1137:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1138:Generated_Source\PSoC4/CyLib.c ****         
1139:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1140:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1141:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1142:Generated_Source\PSoC4/CyLib.c ****             
1143:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1144:Generated_Source\PSoC4/CyLib.c ****             {
1145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1146:Generated_Source\PSoC4/CyLib.c ****             }
1147:Generated_Source\PSoC4/CyLib.c ****             else
1148:Generated_Source\PSoC4/CyLib.c ****             {
1149:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1150:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1151:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1152:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1153:Generated_Source\PSoC4/CyLib.c ****             
1154:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1155:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1156:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1157:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1158:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1159:Generated_Source\PSoC4/CyLib.c ****                 
1160:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1161:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1162:Generated_Source\PSoC4/CyLib.c ****                 {
1163:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1164:Generated_Source\PSoC4/CyLib.c ****                 }
1165:Generated_Source\PSoC4/CyLib.c ****                 
1166:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1167:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1168:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1169:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1170:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1173:Generated_Source\PSoC4/CyLib.c ****                 {
1174:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1175:Generated_Source\PSoC4/CyLib.c ****                 }
1176:Generated_Source\PSoC4/CyLib.c **** 
1177:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1178:Generated_Source\PSoC4/CyLib.c ****                 {
1179:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1180:Generated_Source\PSoC4/CyLib.c ****                 }
1181:Generated_Source\PSoC4/CyLib.c ****                 
1182:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1183:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1185:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 50


1186:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1188:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1189:Generated_Source\PSoC4/CyLib.c ****                 #else
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1191:Generated_Source\PSoC4/CyLib.c ****                 #endif
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1195:Generated_Source\PSoC4/CyLib.c ****                 {
1196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1197:Generated_Source\PSoC4/CyLib.c ****                 }
1198:Generated_Source\PSoC4/CyLib.c ****                 
1199:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1200:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1201:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1202:Generated_Source\PSoC4/CyLib.c ****                                             
1203:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c **** 
1208:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1209:Generated_Source\PSoC4/CyLib.c ****                 
1210:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1213:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1214:Generated_Source\PSoC4/CyLib.c ****                 
1215:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1216:Generated_Source\PSoC4/CyLib.c ****                 {
1217:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1218:Generated_Source\PSoC4/CyLib.c ****                 }
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1222:Generated_Source\PSoC4/CyLib.c ****                 
1223:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1224:Generated_Source\PSoC4/CyLib.c ****                 {
1225:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1226:Generated_Source\PSoC4/CyLib.c ****                 }
1227:Generated_Source\PSoC4/CyLib.c ****                 
1228:Generated_Source\PSoC4/CyLib.c ****             }
1229:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1230:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 1586              		.loc 1 1230 0
 1587 000c 154B     		ldr	r3, .L108
 1588 000e 154A     		ldr	r2, .L108
 1589 0010 1268     		ldr	r2, [r2]
 1590 0012 8021     		movs	r1, #128
 1591 0014 0906     		lsls	r1, r1, #24
 1592 0016 0A43     		orrs	r2, r1
 1593 0018 1A60     		str	r2, [r3]
1231:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 1594              		.loc 1 1231 0
 1595 001a 0A20     		movs	r0, #10
 1596 001c FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 51


1232:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 1597              		.loc 1 1232 0
 1598 0020 104B     		ldr	r3, .L108
 1599 0022 104A     		ldr	r2, .L108
 1600 0024 1268     		ldr	r2, [r2]
 1601 0026 0121     		movs	r1, #1
 1602 0028 0A43     		orrs	r2, r1
 1603 002a 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 1604              		.loc 1 1235 0
 1605 002c 7B68     		ldr	r3, [r7, #4]
 1606 002e 002B     		cmp	r3, #0
 1607 0030 12D0     		beq	.L103
1236:Generated_Source\PSoC4/CyLib.c ****         {
1237:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 1608              		.loc 1 1237 0
 1609 0032 1023     		movs	r3, #16
 1610 0034 FB60     		str	r3, [r7, #12]
1238:Generated_Source\PSoC4/CyLib.c **** 
1239:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 1611              		.loc 1 1239 0
 1612 0036 0CE0     		b	.L104
 1613              	.L106:
1240:Generated_Source\PSoC4/CyLib.c ****             {
1241:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 1614              		.loc 1 1241 0
 1615 0038 0120     		movs	r0, #1
 1616 003a FFF7FEFF 		bl	CyDelayUs
1242:Generated_Source\PSoC4/CyLib.c **** 
1243:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 1617              		.loc 1 1243 0
 1618 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1619 0042 031E     		subs	r3, r0, #0
 1620 0044 02D0     		beq	.L105
1244:Generated_Source\PSoC4/CyLib.c ****                 {
1245:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 1621              		.loc 1 1245 0
 1622 0046 0023     		movs	r3, #0
 1623 0048 FB60     		str	r3, [r7, #12]
1246:Generated_Source\PSoC4/CyLib.c ****                     break;
 1624              		.loc 1 1246 0
 1625 004a 05E0     		b	.L103
 1626              	.L105:
1239:Generated_Source\PSoC4/CyLib.c ****             {
 1627              		.loc 1 1239 0
 1628 004c 7B68     		ldr	r3, [r7, #4]
 1629 004e 013B     		subs	r3, r3, #1
 1630 0050 7B60     		str	r3, [r7, #4]
 1631              	.L104:
1239:Generated_Source\PSoC4/CyLib.c ****             {
 1632              		.loc 1 1239 0 is_stmt 0 discriminator 1
 1633 0052 7B68     		ldr	r3, [r7, #4]
 1634 0054 002B     		cmp	r3, #0
 1635 0056 EFD1     		bne	.L106
 1636              	.L103:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 52


1247:Generated_Source\PSoC4/CyLib.c ****                 }
1248:Generated_Source\PSoC4/CyLib.c ****             }
1249:Generated_Source\PSoC4/CyLib.c **** 
1250:Generated_Source\PSoC4/CyLib.c ****         }
1251:Generated_Source\PSoC4/CyLib.c **** 
1252:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 1637              		.loc 1 1252 0 is_stmt 1
 1638 0058 FB68     		ldr	r3, [r7, #12]
1253:Generated_Source\PSoC4/CyLib.c ****     }
 1639              		.loc 1 1253 0
 1640 005a 1800     		movs	r0, r3
 1641 005c BD46     		mov	sp, r7
 1642 005e 04B0     		add	sp, sp, #16
 1643              		@ sp needed
 1644 0060 80BD     		pop	{r7, pc}
 1645              	.L109:
 1646 0062 C046     		.align	2
 1647              	.L108:
 1648 0064 08000C40 		.word	1074528264
 1649              		.cfi_endproc
 1650              	.LFE14:
 1651              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1652              		.section	.text.CySysClkEcoStop,"ax",%progbits
 1653              		.align	2
 1654              		.global	CySysClkEcoStop
 1655              		.code	16
 1656              		.thumb_func
 1657              		.type	CySysClkEcoStop, %function
 1658              	CySysClkEcoStop:
 1659              	.LFB15:
1254:Generated_Source\PSoC4/CyLib.c **** 
1255:Generated_Source\PSoC4/CyLib.c **** 
1256:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1257:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1258:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1259:Generated_Source\PSoC4/CyLib.c ****     *
1260:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1261:Generated_Source\PSoC4/CyLib.c ****     *
1262:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1263:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1264:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1265:Generated_Source\PSoC4/CyLib.c ****     *
1266:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1267:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1268:Generated_Source\PSoC4/CyLib.c ****     {
 1660              		.loc 1 1268 0
 1661              		.cfi_startproc
 1662              		@ args = 0, pretend = 0, frame = 0
 1663              		@ frame_needed = 1, uses_anonymous_args = 0
 1664 0000 80B5     		push	{r7, lr}
 1665              		.cfi_def_cfa_offset 8
 1666              		.cfi_offset 7, -8
 1667              		.cfi_offset 14, -4
 1668 0002 00AF     		add	r7, sp, #0
 1669              		.cfi_def_cfa_register 7
1269:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1270:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 53


1271:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1274:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1275:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1276:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1277:Generated_Source\PSoC4/CyLib.c ****         #else
1278:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
 1670              		.loc 1 1278 0
 1671 0004 044B     		ldr	r3, .L111
 1672 0006 044A     		ldr	r2, .L111
 1673 0008 1268     		ldr	r2, [r2]
 1674 000a 0449     		ldr	r1, .L111+4
 1675 000c 0A40     		ands	r2, r1
 1676 000e 1A60     		str	r2, [r3]
1279:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1280:Generated_Source\PSoC4/CyLib.c ****     }
 1677              		.loc 1 1280 0
 1678 0010 C046     		nop
 1679 0012 BD46     		mov	sp, r7
 1680              		@ sp needed
 1681 0014 80BD     		pop	{r7, pc}
 1682              	.L112:
 1683 0016 C046     		.align	2
 1684              	.L111:
 1685 0018 08000C40 		.word	1074528264
 1686 001c FEFFFF7F 		.word	2147483646
 1687              		.cfi_endproc
 1688              	.LFE15:
 1689              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 1690              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 1691              		.align	2
 1692              		.global	CySysClkEcoReadStatus
 1693              		.code	16
 1694              		.thumb_func
 1695              		.type	CySysClkEcoReadStatus, %function
 1696              	CySysClkEcoReadStatus:
 1697              	.LFB16:
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c **** 
1283:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1284:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1285:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1286:Generated_Source\PSoC4/CyLib.c ****     *
1287:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1288:Generated_Source\PSoC4/CyLib.c ****     *
1289:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1290:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1293:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1294:Generated_Source\PSoC4/CyLib.c ****     *
1295:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1296:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1297:Generated_Source\PSoC4/CyLib.c ****     *
1298:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1299:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 54


1300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1302:Generated_Source\PSoC4/CyLib.c ****     {
 1698              		.loc 1 1302 0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 8
 1701              		@ frame_needed = 1, uses_anonymous_args = 0
 1702 0000 80B5     		push	{r7, lr}
 1703              		.cfi_def_cfa_offset 8
 1704              		.cfi_offset 7, -8
 1705              		.cfi_offset 14, -4
 1706 0002 82B0     		sub	sp, sp, #8
 1707              		.cfi_def_cfa_offset 16
 1708 0004 00AF     		add	r7, sp, #0
 1709              		.cfi_def_cfa_register 7
1303:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1304:Generated_Source\PSoC4/CyLib.c **** 
1305:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1306:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1307:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1308:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1309:Generated_Source\PSoC4/CyLib.c **** 
1310:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1311:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1312:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1313:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1314:Generated_Source\PSoC4/CyLib.c ****         #else
1315:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
 1710              		.loc 1 1315 0
 1711 0006 064B     		ldr	r3, .L115
 1712 0008 1B68     		ldr	r3, [r3]
 1713 000a 0122     		movs	r2, #1
 1714 000c 1340     		ands	r3, r2
 1715 000e 5A42     		rsbs	r2, r3, #0
 1716 0010 5341     		adcs	r3, r3, r2
 1717 0012 DBB2     		uxtb	r3, r3
 1718 0014 7B60     		str	r3, [r7, #4]
1316:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 1719              		.loc 1 1318 0
 1720 0016 7B68     		ldr	r3, [r7, #4]
1319:Generated_Source\PSoC4/CyLib.c ****     }
 1721              		.loc 1 1319 0
 1722 0018 1800     		movs	r0, r3
 1723 001a BD46     		mov	sp, r7
 1724 001c 02B0     		add	sp, sp, #8
 1725              		@ sp needed
 1726 001e 80BD     		pop	{r7, pc}
 1727              	.L116:
 1728              		.align	2
 1729              	.L115:
 1730 0020 0C000C40 		.word	1074528268
 1731              		.cfi_endproc
 1732              	.LFE16:
 1733              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 1734              		.section	.text.CySysClkConfigureEcoTrim,"ax",%progbits
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 55


 1735              		.align	2
 1736              		.global	CySysClkConfigureEcoTrim
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	CySysClkConfigureEcoTrim, %function
 1740              	CySysClkConfigureEcoTrim:
 1741              	.LFB17:
1320:Generated_Source\PSoC4/CyLib.c **** 
1321:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1322:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1323:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1324:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLib.c ****         *
1326:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1327:Generated_Source\PSoC4/CyLib.c ****         *
1328:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1329:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1330:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1331:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1332:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1333:Generated_Source\PSoC4/CyLib.c ****         *
1334:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1335:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1336:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1337:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1338:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1339:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1340:Generated_Source\PSoC4/CyLib.c ****         *
1341:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1342:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1343:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1344:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1345:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1346:Generated_Source\PSoC4/CyLib.c ****         *
1347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1349:Generated_Source\PSoC4/CyLib.c ****         {
1350:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1353:Generated_Source\PSoC4/CyLib.c ****             {
1354:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1355:Generated_Source\PSoC4/CyLib.c **** 
1356:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1357:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1360:Generated_Source\PSoC4/CyLib.c ****             }
1361:Generated_Source\PSoC4/CyLib.c ****             else
1362:Generated_Source\PSoC4/CyLib.c ****             {
1363:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1364:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1365:Generated_Source\PSoC4/CyLib.c ****             }
1366:Generated_Source\PSoC4/CyLib.c ****         }
1367:Generated_Source\PSoC4/CyLib.c **** 
1368:Generated_Source\PSoC4/CyLib.c ****     #else
1369:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 56


1370:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1371:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1372:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1375:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1376:Generated_Source\PSoC4/CyLib.c ****         *
1377:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1378:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1381:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1382:Generated_Source\PSoC4/CyLib.c ****         *
1383:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1384:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1385:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1386:Generated_Source\PSoC4/CyLib.c ****         *
1387:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1388:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1389:Generated_Source\PSoC4/CyLib.c ****         *
1390:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1391:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1392:Generated_Source\PSoC4/CyLib.c ****         *
1393:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1394:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1395:Generated_Source\PSoC4/CyLib.c ****         *
1396:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1397:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1398:Generated_Source\PSoC4/CyLib.c ****         *
1399:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1400:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1401:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1402:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1403:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1406:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1407:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1408:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1409:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1410:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1411:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1412:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1413:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1414:Generated_Source\PSoC4/CyLib.c ****         *
1415:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1416:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1417:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1418:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1419:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1426:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 57


1427:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1428:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1429:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1430:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1437:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1438:Generated_Source\PSoC4/CyLib.c ****         {
 1742              		.loc 1 1438 0
 1743              		.cfi_startproc
 1744              		@ args = 4, pretend = 0, frame = 24
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746 0000 90B5     		push	{r4, r7, lr}
 1747              		.cfi_def_cfa_offset 12
 1748              		.cfi_offset 4, -12
 1749              		.cfi_offset 7, -8
 1750              		.cfi_offset 14, -4
 1751 0002 87B0     		sub	sp, sp, #28
 1752              		.cfi_def_cfa_offset 40
 1753 0004 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
 1755 0006 F860     		str	r0, [r7, #12]
 1756 0008 B960     		str	r1, [r7, #8]
 1757 000a 7A60     		str	r2, [r7, #4]
 1758 000c 3B60     		str	r3, [r7]
1439:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1440:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1441:Generated_Source\PSoC4/CyLib.c **** 
1442:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 1759              		.loc 1 1442 0
 1760 000e 1723     		movs	r3, #23
 1761 0010 FC18     		adds	r4, r7, r3
 1762 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 1763 0016 0300     		movs	r3, r0
 1764 0018 2370     		strb	r3, [r4]
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
 1765              		.loc 1 1444 0
 1766 001a 1D4B     		ldr	r3, .L118
 1767 001c 1B68     		ldr	r3, [r3]
 1768 001e 1F22     		movs	r2, #31
 1769 0020 9343     		bics	r3, r2
 1770 0022 3B61     		str	r3, [r7, #16]
1445:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
 1771              		.loc 1 1445 0
 1772 0024 FB68     		ldr	r3, [r7, #12]
 1773 0026 0322     		movs	r2, #3
 1774 0028 1340     		ands	r3, r2
 1775 002a 3A69     		ldr	r2, [r7, #16]
 1776 002c 1343     		orrs	r3, r2
 1777 002e 3B61     		str	r3, [r7, #16]
1446:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
 1778              		.loc 1 1446 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 58


 1779 0030 BB68     		ldr	r3, [r7, #8]
 1780 0032 9B00     		lsls	r3, r3, #2
 1781 0034 1C22     		movs	r2, #28
 1782 0036 1340     		ands	r3, r2
 1783 0038 3A69     		ldr	r2, [r7, #16]
 1784 003a 1343     		orrs	r3, r2
 1785 003c 3B61     		str	r3, [r7, #16]
1447:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
 1786              		.loc 1 1447 0
 1787 003e 144B     		ldr	r3, .L118
 1788 0040 3A69     		ldr	r2, [r7, #16]
 1789 0042 1A60     		str	r2, [r3]
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
 1790              		.loc 1 1449 0
 1791 0044 134B     		ldr	r3, .L118+4
 1792 0046 1B68     		ldr	r3, [r3]
 1793 0048 3F22     		movs	r2, #63
 1794 004a 9343     		bics	r3, r2
 1795 004c 3B61     		str	r3, [r7, #16]
1450:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1451:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1452:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1796              		.loc 1 1452 0
 1797 004e 7B68     		ldr	r3, [r7, #4]
 1798 0050 0322     		movs	r2, #3
 1799 0052 1340     		ands	r3, r2
 1800 0054 3A69     		ldr	r2, [r7, #16]
 1801 0056 1343     		orrs	r3, r2
 1802 0058 3B61     		str	r3, [r7, #16]
1453:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1803              		.loc 1 1453 0
 1804 005a 3B68     		ldr	r3, [r7]
 1805 005c 9B00     		lsls	r3, r3, #2
 1806 005e 0C22     		movs	r2, #12
 1807 0060 1340     		ands	r3, r2
 1808 0062 3A69     		ldr	r2, [r7, #16]
 1809 0064 1343     		orrs	r3, r2
 1810 0066 3B61     		str	r3, [r7, #16]
1454:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1811              		.loc 1 1454 0
 1812 0068 BB6A     		ldr	r3, [r7, #40]
 1813 006a 1B01     		lsls	r3, r3, #4
 1814 006c 3022     		movs	r2, #48
 1815 006e 1340     		ands	r3, r2
 1816 0070 3A69     		ldr	r2, [r7, #16]
 1817 0072 1343     		orrs	r3, r2
 1818 0074 3B61     		str	r3, [r7, #16]
1455:Generated_Source\PSoC4/CyLib.c **** 
1456:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
 1819              		.loc 1 1456 0
 1820 0076 074B     		ldr	r3, .L118+4
 1821 0078 3A69     		ldr	r2, [r7, #16]
 1822 007a 1A60     		str	r2, [r3]
1457:Generated_Source\PSoC4/CyLib.c **** 
1458:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 1823              		.loc 1 1458 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 59


 1824 007c 1723     		movs	r3, #23
 1825 007e FB18     		adds	r3, r7, r3
 1826 0080 1B78     		ldrb	r3, [r3]
 1827 0082 1800     		movs	r0, r3
 1828 0084 FFF7FEFF 		bl	CyExitCriticalSection
1459:Generated_Source\PSoC4/CyLib.c ****         }
 1829              		.loc 1 1459 0
 1830 0088 C046     		nop
 1831 008a BD46     		mov	sp, r7
 1832 008c 07B0     		add	sp, sp, #28
 1833              		@ sp needed
 1834 008e 90BD     		pop	{r4, r7, pc}
 1835              	.L119:
 1836              		.align	2
 1837              	.L118:
 1838 0090 0CFF0C40 		.word	1074593548
 1839 0094 10FF0C40 		.word	1074593552
 1840              		.cfi_endproc
 1841              	.LFE17:
 1842              		.size	CySysClkConfigureEcoTrim, .-CySysClkConfigureEcoTrim
 1843              		.global	__aeabi_uidiv
 1844              		.section	.text.CySysClkConfigureEcoDrive,"ax",%progbits
 1845              		.align	2
 1846              		.global	CySysClkConfigureEcoDrive
 1847              		.code	16
 1848              		.thumb_func
 1849              		.type	CySysClkConfigureEcoDrive, %function
 1850              	CySysClkConfigureEcoDrive:
 1851              	.LFB18:
1460:Generated_Source\PSoC4/CyLib.c **** 
1461:Generated_Source\PSoC4/CyLib.c **** 
1462:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1463:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1464:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1465:Generated_Source\PSoC4/CyLib.c ****         *
1466:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1467:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1468:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1471:Generated_Source\PSoC4/CyLib.c ****         *
1472:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1473:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1474:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1475:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1476:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1477:Generated_Source\PSoC4/CyLib.c ****         *
1478:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1479:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1480:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1481:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1482:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1483:Generated_Source\PSoC4/CyLib.c ****         *
1484:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1485:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1486:Generated_Source\PSoC4/CyLib.c ****         *
1487:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 60


1488:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1489:Generated_Source\PSoC4/CyLib.c ****         {
 1852              		.loc 1 1489 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 48
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856 0000 90B5     		push	{r4, r7, lr}
 1857              		.cfi_def_cfa_offset 12
 1858              		.cfi_offset 4, -12
 1859              		.cfi_offset 7, -8
 1860              		.cfi_offset 14, -4
 1861 0002 8FB0     		sub	sp, sp, #60
 1862              		.cfi_def_cfa_offset 72
 1863 0004 02AF     		add	r7, sp, #8
 1864              		.cfi_def_cfa 7, 64
 1865 0006 F860     		str	r0, [r7, #12]
 1866 0008 B960     		str	r1, [r7, #8]
 1867 000a 7A60     		str	r2, [r7, #4]
 1868 000c 3B60     		str	r3, [r7]
1490:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
 1869              		.loc 1 1490 0
 1870 000e 0023     		movs	r3, #0
 1871 0010 FB62     		str	r3, [r7, #44]
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1493:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1494:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1495:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1496:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1497:Generated_Source\PSoC4/CyLib.c **** 
1498:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c **** 
1501:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
 1872              		.loc 1 1501 0
 1873 0012 3A68     		ldr	r2, [r7]
 1874 0014 F423     		movs	r3, #244
 1875 0016 FF33     		adds	r3, r3, #255
 1876 0018 9A42     		cmp	r2, r3
 1877 001a 07D9     		bls	.L121
 1878              		.loc 1 1501 0 is_stmt 0 discriminator 1
 1879 001c FB68     		ldr	r3, [r7, #12]
 1880 001e 634A     		ldr	r2, .L145
 1881 0020 9342     		cmp	r3, r2
 1882 0022 03D9     		bls	.L121
1502:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
 1883              		.loc 1 1502 0 is_stmt 1
 1884 0024 FB68     		ldr	r3, [r7, #12]
 1885 0026 624A     		ldr	r2, .L145+4
 1886 0028 9342     		cmp	r3, r2
 1887 002a 02D9     		bls	.L122
 1888              	.L121:
1503:Generated_Source\PSoC4/CyLib.c ****             {
1504:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
 1889              		.loc 1 1504 0
 1890 002c 0123     		movs	r3, #1
 1891 002e FB62     		str	r3, [r7, #44]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 61


 1892 0030 B6E0     		b	.L123
 1893              	.L122:
1505:Generated_Source\PSoC4/CyLib.c ****             }
1506:Generated_Source\PSoC4/CyLib.c ****             else
1507:Generated_Source\PSoC4/CyLib.c ****             {
1508:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1509:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
 1894              		.loc 1 1509 0
 1895 0032 3B68     		ldr	r3, [r7]
 1896 0034 5F4A     		ldr	r2, .L145+8
 1897 0036 9342     		cmp	r3, r2
 1898 0038 07D8     		bhi	.L124
 1899              		.loc 1 1509 0 is_stmt 0 discriminator 1
 1900 003a 3B68     		ldr	r3, [r7]
 1901 003c 6421     		movs	r1, #100
 1902 003e 1800     		movs	r0, r3
 1903 0040 FFF7FEFF 		bl	__aeabi_uidiv
 1904 0044 0300     		movs	r3, r0
 1905 0046 043B     		subs	r3, r3, #4
 1906 0048 00E0     		b	.L125
 1907              	.L124:
 1908              		.loc 1 1509 0 discriminator 2
 1909 004a 0723     		movs	r3, #7
 1910              	.L125:
 1911              		.loc 1 1509 0 discriminator 4
 1912 004c BB62     		str	r3, [r7, #40]
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
 1913              		.loc 1 1511 0 is_stmt 1 discriminator 4
 1914 004e 3B68     		ldr	r3, [r7]
 1915 0050 594A     		ldr	r2, .L145+12
 1916 0052 9342     		cmp	r3, r2
 1917 0054 02D8     		bhi	.L126
1512:Generated_Source\PSoC4/CyLib.c ****                 {
1513:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
 1918              		.loc 1 1513 0
 1919 0056 0023     		movs	r3, #0
 1920 0058 BB62     		str	r3, [r7, #40]
 1921 005a 2CE0     		b	.L127
 1922              	.L126:
1514:Generated_Source\PSoC4/CyLib.c ****                 }
1515:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
 1923              		.loc 1 1515 0
 1924 005c 3B68     		ldr	r3, [r7]
 1925 005e 574A     		ldr	r2, .L145+16
 1926 0060 9342     		cmp	r3, r2
 1927 0062 02D8     		bhi	.L128
1516:Generated_Source\PSoC4/CyLib.c ****                 {
1517:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
 1928              		.loc 1 1517 0
 1929 0064 0123     		movs	r3, #1
 1930 0066 BB62     		str	r3, [r7, #40]
 1931 0068 25E0     		b	.L127
 1932              	.L128:
1518:Generated_Source\PSoC4/CyLib.c ****                 }
1519:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
 1933              		.loc 1 1519 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 62


 1934 006a 3B68     		ldr	r3, [r7]
 1935 006c 544A     		ldr	r2, .L145+20
 1936 006e 9342     		cmp	r3, r2
 1937 0070 02D8     		bhi	.L129
1520:Generated_Source\PSoC4/CyLib.c ****                 {
1521:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
 1938              		.loc 1 1521 0
 1939 0072 0223     		movs	r3, #2
 1940 0074 BB62     		str	r3, [r7, #40]
 1941 0076 1EE0     		b	.L127
 1942              	.L129:
1522:Generated_Source\PSoC4/CyLib.c ****                 }
1523:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
 1943              		.loc 1 1523 0
 1944 0078 3B68     		ldr	r3, [r7]
 1945 007a 524A     		ldr	r2, .L145+24
 1946 007c 9342     		cmp	r3, r2
 1947 007e 02D8     		bhi	.L130
1524:Generated_Source\PSoC4/CyLib.c ****                 {
1525:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
 1948              		.loc 1 1525 0
 1949 0080 0323     		movs	r3, #3
 1950 0082 BB62     		str	r3, [r7, #40]
 1951 0084 17E0     		b	.L127
 1952              	.L130:
1526:Generated_Source\PSoC4/CyLib.c ****                 }
1527:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
 1953              		.loc 1 1527 0
 1954 0086 3A68     		ldr	r2, [r7]
 1955 0088 8023     		movs	r3, #128
 1956 008a DB00     		lsls	r3, r3, #3
 1957 008c 9A42     		cmp	r2, r3
 1958 008e 02D8     		bhi	.L131
1528:Generated_Source\PSoC4/CyLib.c ****                 {
1529:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
 1959              		.loc 1 1529 0
 1960 0090 0423     		movs	r3, #4
 1961 0092 BB62     		str	r3, [r7, #40]
 1962 0094 0FE0     		b	.L127
 1963              	.L131:
1530:Generated_Source\PSoC4/CyLib.c ****                 }
1531:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
 1964              		.loc 1 1531 0
 1965 0096 3B68     		ldr	r3, [r7]
 1966 0098 4B4A     		ldr	r2, .L145+28
 1967 009a 9342     		cmp	r3, r2
 1968 009c 02D8     		bhi	.L132
1532:Generated_Source\PSoC4/CyLib.c ****                 {
1533:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
 1969              		.loc 1 1533 0
 1970 009e 0523     		movs	r3, #5
 1971 00a0 BB62     		str	r3, [r7, #40]
 1972 00a2 08E0     		b	.L127
 1973              	.L132:
1534:Generated_Source\PSoC4/CyLib.c ****                 }
1535:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
 1974              		.loc 1 1535 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 63


 1975 00a4 3B68     		ldr	r3, [r7]
 1976 00a6 494A     		ldr	r2, .L145+32
 1977 00a8 9342     		cmp	r3, r2
 1978 00aa 02D8     		bhi	.L133
1536:Generated_Source\PSoC4/CyLib.c ****                 {
1537:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
 1979              		.loc 1 1537 0
 1980 00ac 0623     		movs	r3, #6
 1981 00ae BB62     		str	r3, [r7, #40]
 1982 00b0 01E0     		b	.L127
 1983              	.L133:
1538:Generated_Source\PSoC4/CyLib.c ****                 }
1539:Generated_Source\PSoC4/CyLib.c ****                 else
1540:Generated_Source\PSoC4/CyLib.c ****                 {
1541:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
 1984              		.loc 1 1541 0
 1985 00b2 0723     		movs	r3, #7
 1986 00b4 BB62     		str	r3, [r7, #40]
 1987              	.L127:
1542:Generated_Source\PSoC4/CyLib.c ****                 }
1543:Generated_Source\PSoC4/CyLib.c **** 
1544:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1545:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
 1988              		.loc 1 1545 0
 1989 00b6 3B68     		ldr	r3, [r7]
 1990 00b8 3E4A     		ldr	r2, .L145+8
 1991 00ba 9342     		cmp	r3, r2
 1992 00bc 07D8     		bhi	.L134
 1993              		.loc 1 1545 0 is_stmt 0 discriminator 1
 1994 00be 3B68     		ldr	r3, [r7]
 1995 00c0 C821     		movs	r1, #200
 1996 00c2 1800     		movs	r0, r3
 1997 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 1998 00c8 0300     		movs	r3, r0
 1999 00ca 023B     		subs	r3, r3, #2
 2000 00cc 00E0     		b	.L135
 2001              	.L134:
 2002              		.loc 1 1545 0 discriminator 2
 2003 00ce 0323     		movs	r3, #3
 2004              	.L135:
 2005              		.loc 1 1545 0 discriminator 4
 2006 00d0 FB61     		str	r3, [r7, #28]
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1548:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
 2007              		.loc 1 1548 0 is_stmt 1 discriminator 4
 2008 00d2 FB68     		ldr	r3, [r7, #12]
 2009 00d4 BA68     		ldr	r2, [r7, #8]
 2010 00d6 5A43     		muls	r2, r3
 2011 00d8 1300     		movs	r3, r2
 2012 00da 9B00     		lsls	r3, r3, #2
 2013 00dc 9B18     		adds	r3, r3, r2
 2014 00de 1B01     		lsls	r3, r3, #4
 2015 00e0 9A1A     		subs	r2, r3, r2
 2016 00e2 FA23     		movs	r3, #250
 2017 00e4 9900     		lsls	r1, r3, #2
 2018 00e6 1000     		movs	r0, r2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 64


 2019 00e8 FFF7FEFF 		bl	__aeabi_uidiv
 2020 00ec 0300     		movs	r3, r0
 2021 00ee 1C00     		movs	r4, r3
 2022 00f0 FB68     		ldr	r3, [r7, #12]
 2023 00f2 BA68     		ldr	r2, [r7, #8]
 2024 00f4 5343     		muls	r3, r2
 2025 00f6 7A68     		ldr	r2, [r7, #4]
 2026 00f8 5A43     		muls	r2, r3
 2027 00fa FA23     		movs	r3, #250
 2028 00fc 9900     		lsls	r1, r3, #2
 2029 00fe 1000     		movs	r0, r2
 2030 0100 FFF7FEFF 		bl	__aeabi_uidiv
 2031 0104 0300     		movs	r3, r0
 2032 0106 6343     		muls	r3, r4
 2033 0108 3149     		ldr	r1, .L145+36
 2034 010a 1800     		movs	r0, r3
 2035 010c FFF7FEFF 		bl	__aeabi_uidiv
 2036 0110 0300     		movs	r3, r0
 2037 0112 BB61     		str	r3, [r7, #24]
1549:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
 2038              		.loc 1 1549 0 discriminator 4
 2039 0114 BB69     		ldr	r3, [r7, #24]
 2040 0116 032B     		cmp	r3, #3
 2041 0118 04D9     		bls	.L136
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
 2042              		.loc 1 1551 0
 2043 011a 0123     		movs	r3, #1
 2044 011c FB62     		str	r3, [r7, #44]
1552:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
 2045              		.loc 1 1552 0
 2046 011e 0023     		movs	r3, #0
 2047 0120 3B62     		str	r3, [r7, #32]
 2048 0122 0BE0     		b	.L137
 2049              	.L136:
1553:Generated_Source\PSoC4/CyLib.c ****                 }
1554:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
 2050              		.loc 1 1554 0
 2051 0124 BB69     		ldr	r3, [r7, #24]
 2052 0126 012B     		cmp	r3, #1
 2053 0128 02D9     		bls	.L138
1555:Generated_Source\PSoC4/CyLib.c ****                 {
1556:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
 2054              		.loc 1 1556 0
 2055 012a BB69     		ldr	r3, [r7, #24]
 2056 012c 3B62     		str	r3, [r7, #32]
 2057 012e 05E0     		b	.L137
 2058              	.L138:
1557:Generated_Source\PSoC4/CyLib.c ****                 }
1558:Generated_Source\PSoC4/CyLib.c ****                 else
1559:Generated_Source\PSoC4/CyLib.c ****                 {
1560:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
 2059              		.loc 1 1560 0
 2060 0130 BB69     		ldr	r3, [r7, #24]
 2061 0132 013B     		subs	r3, r3, #1
 2062 0134 5A1E     		subs	r2, r3, #1
 2063 0136 9341     		sbcs	r3, r3, r2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 65


 2064 0138 DBB2     		uxtb	r3, r3
 2065 013a 3B62     		str	r3, [r7, #32]
 2066              	.L137:
1561:Generated_Source\PSoC4/CyLib.c ****                 }
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1564:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
 2067              		.loc 1 1564 0
 2068 013c FB68     		ldr	r3, [r7, #12]
 2069 013e 254A     		ldr	r2, .L145+40
 2070 0140 9342     		cmp	r3, r2
 2071 0142 02D9     		bls	.L139
1565:Generated_Source\PSoC4/CyLib.c ****                 {
1566:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
 2072              		.loc 1 1566 0
 2073 0144 0023     		movs	r3, #0
 2074 0146 7B62     		str	r3, [r7, #36]
 2075 0148 0FE0     		b	.L140
 2076              	.L139:
1567:Generated_Source\PSoC4/CyLib.c ****                 }
1568:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
 2077              		.loc 1 1568 0
 2078 014a FB68     		ldr	r3, [r7, #12]
 2079 014c 224A     		ldr	r2, .L145+44
 2080 014e 9342     		cmp	r3, r2
 2081 0150 02D9     		bls	.L141
1569:Generated_Source\PSoC4/CyLib.c ****                 {
1570:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
 2082              		.loc 1 1570 0
 2083 0152 0123     		movs	r3, #1
 2084 0154 7B62     		str	r3, [r7, #36]
 2085 0156 08E0     		b	.L140
 2086              	.L141:
1571:Generated_Source\PSoC4/CyLib.c ****                 }
1572:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
 2087              		.loc 1 1572 0
 2088 0158 FB68     		ldr	r3, [r7, #12]
 2089 015a 204A     		ldr	r2, .L145+48
 2090 015c 9342     		cmp	r3, r2
 2091 015e 02D9     		bls	.L142
1573:Generated_Source\PSoC4/CyLib.c ****                 {
1574:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
 2092              		.loc 1 1574 0
 2093 0160 0223     		movs	r3, #2
 2094 0162 7B62     		str	r3, [r7, #36]
 2095 0164 01E0     		b	.L140
 2096              	.L142:
1575:Generated_Source\PSoC4/CyLib.c ****                 }
1576:Generated_Source\PSoC4/CyLib.c ****                 else
1577:Generated_Source\PSoC4/CyLib.c ****                 {
1578:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
 2097              		.loc 1 1578 0
 2098 0166 0323     		movs	r3, #3
 2099 0168 7B62     		str	r3, [r7, #36]
 2100              	.L140:
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 66


1581:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1582:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
 2101              		.loc 1 1582 0
 2102 016a 7B6A     		ldr	r3, [r7, #36]
 2103 016c 7B61     		str	r3, [r7, #20]
1583:Generated_Source\PSoC4/CyLib.c **** 
1584:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
 2104              		.loc 1 1584 0
 2105 016e 7C6A     		ldr	r4, [r7, #36]
 2106 0170 7A69     		ldr	r2, [r7, #20]
 2107 0172 B96A     		ldr	r1, [r7, #40]
 2108 0174 F869     		ldr	r0, [r7, #28]
 2109 0176 3B6A     		ldr	r3, [r7, #32]
 2110 0178 0093     		str	r3, [sp]
 2111 017a 2300     		movs	r3, r4
 2112 017c FFF7FEFF 		bl	CySysClkConfigureEcoTrim
1585:Generated_Source\PSoC4/CyLib.c **** 
1586:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1587:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
 2113              		.loc 1 1587 0
 2114 0180 3B68     		ldr	r3, [r7]
 2115 0182 012B     		cmp	r3, #1
 2116 0184 06D8     		bhi	.L143
1588:Generated_Source\PSoC4/CyLib.c ****                 {
1589:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1590:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 2117              		.loc 1 1590 0
 2118 0186 164B     		ldr	r3, .L145+52
 2119 0188 154A     		ldr	r2, .L145+52
 2120 018a 1268     		ldr	r2, [r2]
 2121 018c 0221     		movs	r1, #2
 2122 018e 0A43     		orrs	r2, r1
 2123 0190 1A60     		str	r2, [r3]
 2124 0192 05E0     		b	.L123
 2125              	.L143:
1591:Generated_Source\PSoC4/CyLib.c ****                 }
1592:Generated_Source\PSoC4/CyLib.c ****                 else
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1595:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1596:Generated_Source\PSoC4/CyLib.c ****                     */
1597:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 2126              		.loc 1 1597 0
 2127 0194 124B     		ldr	r3, .L145+52
 2128 0196 124A     		ldr	r2, .L145+52
 2129 0198 1268     		ldr	r2, [r2]
 2130 019a 0221     		movs	r1, #2
 2131 019c 8A43     		bics	r2, r1
 2132 019e 1A60     		str	r2, [r3]
 2133              	.L123:
1598:Generated_Source\PSoC4/CyLib.c ****                 }
1599:Generated_Source\PSoC4/CyLib.c ****             }
1600:Generated_Source\PSoC4/CyLib.c **** 
1601:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
 2134              		.loc 1 1601 0
 2135 01a0 FB6A     		ldr	r3, [r7, #44]
1602:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 67


 2136              		.loc 1 1602 0
 2137 01a2 1800     		movs	r0, r3
 2138 01a4 BD46     		mov	sp, r7
 2139 01a6 0DB0     		add	sp, sp, #52
 2140              		@ sp needed
 2141 01a8 90BD     		pop	{r4, r7, pc}
 2142              	.L146:
 2143 01aa C046     		.align	2
 2144              	.L145:
 2145 01ac 9F0F0000 		.word	3999
 2146 01b0 35820000 		.word	33333
 2147 01b4 AF040000 		.word	1199
 2148 01b8 57020000 		.word	599
 2149 01bc BB020000 		.word	699
 2150 01c0 1F030000 		.word	799
 2151 01c4 83030000 		.word	899
 2152 01c8 7D040000 		.word	1149
 2153 01cc FA040000 		.word	1274
 2154 01d0 8074D21A 		.word	450000000
 2155 01d4 30750000 		.word	30000
 2156 01d8 C05D0000 		.word	24000
 2157 01dc 68420000 		.word	17000
 2158 01e0 08000C40 		.word	1074528264
 2159              		.cfi_endproc
 2160              	.LFE18:
 2161              		.size	CySysClkConfigureEcoDrive, .-CySysClkConfigureEcoDrive
 2162              		.section	.text.CySysClkPllStart,"ax",%progbits
 2163              		.align	2
 2164              		.global	CySysClkPllStart
 2165              		.code	16
 2166              		.thumb_func
 2167              		.type	CySysClkPllStart, %function
 2168              	CySysClkPllStart:
 2169              	.LFB19:
1603:Generated_Source\PSoC4/CyLib.c **** 
1604:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1605:Generated_Source\PSoC4/CyLib.c **** 
1606:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1607:Generated_Source\PSoC4/CyLib.c **** 
1608:Generated_Source\PSoC4/CyLib.c **** 
1609:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1610:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1611:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1612:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1613:Generated_Source\PSoC4/CyLib.c ****     *
1614:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1615:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1616:Generated_Source\PSoC4/CyLib.c ****     *
1617:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1618:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1619:Generated_Source\PSoC4/CyLib.c ****     *
1620:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1621:Generated_Source\PSoC4/CyLib.c ****     *
1622:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1623:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1624:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1625:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 68


1626:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1627:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1628:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1629:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1632:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1633:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1634:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1635:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1636:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1639:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1640:Generated_Source\PSoC4/CyLib.c ****     {
 2170              		.loc 1 1640 0
 2171              		.cfi_startproc
 2172              		@ args = 0, pretend = 0, frame = 24
 2173              		@ frame_needed = 1, uses_anonymous_args = 0
 2174 0000 90B5     		push	{r4, r7, lr}
 2175              		.cfi_def_cfa_offset 12
 2176              		.cfi_offset 4, -12
 2177              		.cfi_offset 7, -8
 2178              		.cfi_offset 14, -4
 2179 0002 87B0     		sub	sp, sp, #28
 2180              		.cfi_def_cfa_offset 40
 2181 0004 00AF     		add	r7, sp, #0
 2182              		.cfi_def_cfa_register 7
 2183 0006 7860     		str	r0, [r7, #4]
 2184 0008 3960     		str	r1, [r7]
1641:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
 2185              		.loc 1 1641 0
 2186 000a FF23     		movs	r3, #255
 2187 000c 7B61     		str	r3, [r7, #20]
1642:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1643:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 2188              		.loc 1 1643 0
 2189 000e 0023     		movs	r3, #0
 2190 0010 3B61     		str	r3, [r7, #16]
1644:Generated_Source\PSoC4/CyLib.c **** 
1645:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
 2191              		.loc 1 1645 0
 2192 0012 7B68     		ldr	r3, [r7, #4]
 2193 0014 012B     		cmp	r3, #1
 2194 0016 70D8     		bhi	.L148
 2195              		.loc 1 1645 0 is_stmt 0 discriminator 1
 2196 0018 3B68     		ldr	r3, [r7]
 2197 001a 012B     		cmp	r3, #1
 2198 001c 6DD8     		bhi	.L148
1646:Generated_Source\PSoC4/CyLib.c ****         {
1647:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 2199              		.loc 1 1647 0 is_stmt 1
 2200 001e 0F23     		movs	r3, #15
 2201 0020 FC18     		adds	r4, r7, r3
 2202 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 2203 0026 0300     		movs	r3, r0
 2204 0028 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 69


1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1650:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 2205              		.loc 1 1650 0
 2206 002a 3748     		ldr	r0, .L155
 2207 002c 3649     		ldr	r1, .L155
 2208 002e 7A68     		ldr	r2, [r7, #4]
 2209 0030 1300     		movs	r3, r2
 2210 0032 5B00     		lsls	r3, r3, #1
 2211 0034 9B18     		adds	r3, r3, r2
 2212 0036 9B00     		lsls	r3, r3, #2
 2213 0038 5B58     		ldr	r3, [r3, r1]
 2214 003a 344A     		ldr	r2, .L155+4
 2215 003c 1340     		ands	r3, r2
 2216 003e 1900     		movs	r1, r3
 2217 0040 7A68     		ldr	r2, [r7, #4]
 2218 0042 1300     		movs	r3, r2
 2219 0044 5B00     		lsls	r3, r3, #1
 2220 0046 9B18     		adds	r3, r3, r2
 2221 0048 9B00     		lsls	r3, r3, #2
 2222 004a 1950     		str	r1, [r3, r0]
1651:Generated_Source\PSoC4/CyLib.c **** 
1652:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1653:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
 2223              		.loc 1 1653 0
 2224 004c 2E48     		ldr	r0, .L155
 2225 004e 2E49     		ldr	r1, .L155
 2226 0050 7A68     		ldr	r2, [r7, #4]
 2227 0052 1300     		movs	r3, r2
 2228 0054 5B00     		lsls	r3, r3, #1
 2229 0056 9B18     		adds	r3, r3, r2
 2230 0058 9B00     		lsls	r3, r3, #2
 2231 005a 5B58     		ldr	r3, [r3, r1]
 2232 005c 8022     		movs	r2, #128
 2233 005e 1206     		lsls	r2, r2, #24
 2234 0060 1A43     		orrs	r2, r3
 2235 0062 1100     		movs	r1, r2
 2236 0064 7A68     		ldr	r2, [r7, #4]
 2237 0066 1300     		movs	r3, r2
 2238 0068 5B00     		lsls	r3, r3, #1
 2239 006a 9B18     		adds	r3, r3, r2
 2240 006c 9B00     		lsls	r3, r3, #2
 2241 006e 1950     		str	r1, [r3, r0]
1654:Generated_Source\PSoC4/CyLib.c **** 
1655:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2242              		.loc 1 1655 0
 2243 0070 0F23     		movs	r3, #15
 2244 0072 FB18     		adds	r3, r7, r3
 2245 0074 1B78     		ldrb	r3, [r3]
 2246 0076 1800     		movs	r0, r3
 2247 0078 FFF7FEFF 		bl	CyExitCriticalSection
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1658:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
 2248              		.loc 1 1658 0
 2249 007c 0520     		movs	r0, #5
 2250 007e FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 70


1659:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 2251              		.loc 1 1659 0
 2252 0082 0F23     		movs	r3, #15
 2253 0084 FC18     		adds	r4, r7, r3
 2254 0086 FFF7FEFF 		bl	CyEnterCriticalSection
 2255 008a 0300     		movs	r3, r0
 2256 008c 2370     		strb	r3, [r4]
1660:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 2257              		.loc 1 1660 0
 2258 008e 1E48     		ldr	r0, .L155
 2259 0090 1D49     		ldr	r1, .L155
 2260 0092 7A68     		ldr	r2, [r7, #4]
 2261 0094 1300     		movs	r3, r2
 2262 0096 5B00     		lsls	r3, r3, #1
 2263 0098 9B18     		adds	r3, r3, r2
 2264 009a 9B00     		lsls	r3, r3, #2
 2265 009c 5B58     		ldr	r3, [r3, r1]
 2266 009e 8022     		movs	r2, #128
 2267 00a0 D205     		lsls	r2, r2, #23
 2268 00a2 1A43     		orrs	r2, r3
 2269 00a4 1100     		movs	r1, r2
 2270 00a6 7A68     		ldr	r2, [r7, #4]
 2271 00a8 1300     		movs	r3, r2
 2272 00aa 5B00     		lsls	r3, r3, #1
 2273 00ac 9B18     		adds	r3, r3, r2
 2274 00ae 9B00     		lsls	r3, r3, #2
 2275 00b0 1950     		str	r1, [r3, r0]
1661:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2276              		.loc 1 1661 0
 2277 00b2 0F23     		movs	r3, #15
 2278 00b4 FB18     		adds	r3, r7, r3
 2279 00b6 1B78     		ldrb	r3, [r3]
 2280 00b8 1800     		movs	r0, r3
 2281 00ba FFF7FEFF 		bl	CyExitCriticalSection
1662:Generated_Source\PSoC4/CyLib.c **** 
1663:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
 2282              		.loc 1 1663 0
 2283 00be 3B68     		ldr	r3, [r7]
 2284 00c0 002B     		cmp	r3, #0
 2285 00c2 1CD0     		beq	.L153
1664:Generated_Source\PSoC4/CyLib.c ****             {
1665:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
 2286              		.loc 1 1665 0
 2287 00c4 1023     		movs	r3, #16
 2288 00c6 3B61     		str	r3, [r7, #16]
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
 2289              		.loc 1 1667 0
 2290 00c8 13E0     		b	.L150
 2291              	.L152:
1668:Generated_Source\PSoC4/CyLib.c ****                 {
1669:Generated_Source\PSoC4/CyLib.c **** 
1670:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
 2292              		.loc 1 1670 0
 2293 00ca 7B68     		ldr	r3, [r7, #4]
 2294 00cc 1800     		movs	r0, r3
 2295 00ce FFF7FEFF 		bl	CySysClkPllGetLockStatus
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 71


 2296 00d2 031E     		subs	r3, r0, #0
 2297 00d4 07D0     		beq	.L151
1671:Generated_Source\PSoC4/CyLib.c ****                     {
1672:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
 2298              		.loc 1 1672 0
 2299 00d6 0023     		movs	r3, #0
 2300 00d8 3B61     		str	r3, [r7, #16]
1673:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
 2301              		.loc 1 1673 0
 2302 00da 7B68     		ldr	r3, [r7, #4]
 2303 00dc 1800     		movs	r0, r3
 2304 00de FFF7FEFF 		bl	CySysClkPllGetUnlockStatus
1674:Generated_Source\PSoC4/CyLib.c ****                         break;
 2305              		.loc 1 1674 0
 2306 00e2 C046     		nop
1663:Generated_Source\PSoC4/CyLib.c ****             {
 2307              		.loc 1 1663 0
 2308 00e4 0BE0     		b	.L153
 2309              	.L151:
1675:Generated_Source\PSoC4/CyLib.c ****                     }
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
 2310              		.loc 1 1677 0
 2311 00e6 0120     		movs	r0, #1
 2312 00e8 FFF7FEFF 		bl	CyDelayUs
1678:Generated_Source\PSoC4/CyLib.c ****                     counts--;
 2313              		.loc 1 1678 0
 2314 00ec 7B69     		ldr	r3, [r7, #20]
 2315 00ee 013B     		subs	r3, r3, #1
 2316 00f0 7B61     		str	r3, [r7, #20]
 2317              	.L150:
1667:Generated_Source\PSoC4/CyLib.c ****                 {
 2318              		.loc 1 1667 0
 2319 00f2 7B69     		ldr	r3, [r7, #20]
 2320 00f4 002B     		cmp	r3, #0
 2321 00f6 E8D1     		bne	.L152
1663:Generated_Source\PSoC4/CyLib.c ****             {
 2322              		.loc 1 1663 0
 2323 00f8 01E0     		b	.L153
 2324              	.L148:
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c ****         }
1682:Generated_Source\PSoC4/CyLib.c ****         else
1683:Generated_Source\PSoC4/CyLib.c ****         {
1684:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
 2325              		.loc 1 1684 0
 2326 00fa 0123     		movs	r3, #1
 2327 00fc 3B61     		str	r3, [r7, #16]
 2328              	.L153:
1685:Generated_Source\PSoC4/CyLib.c ****         }
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2329              		.loc 1 1687 0
 2330 00fe 3B69     		ldr	r3, [r7, #16]
1688:Generated_Source\PSoC4/CyLib.c ****     }
 2331              		.loc 1 1688 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 72


 2332 0100 1800     		movs	r0, r3
 2333 0102 BD46     		mov	sp, r7
 2334 0104 07B0     		add	sp, sp, #28
 2335              		@ sp needed
 2336 0106 90BD     		pop	{r4, r7, pc}
 2337              	.L156:
 2338              		.align	2
 2339              	.L155:
 2340 0108 14000C40 		.word	1074528276
 2341 010c FFFFFFBF 		.word	-1073741825
 2342              		.cfi_endproc
 2343              	.LFE19:
 2344              		.size	CySysClkPllStart, .-CySysClkPllStart
 2345              		.section	.text.CySysClkPllGetLockStatus,"ax",%progbits
 2346              		.align	2
 2347              		.global	CySysClkPllGetLockStatus
 2348              		.code	16
 2349              		.thumb_func
 2350              		.type	CySysClkPllGetLockStatus, %function
 2351              	CySysClkPllGetLockStatus:
 2352              	.LFB20:
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** 
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1696:Generated_Source\PSoC4/CyLib.c ****     *
1697:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1698:Generated_Source\PSoC4/CyLib.c ****     *
1699:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1700:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1701:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1704:Generated_Source\PSoC4/CyLib.c ****     *
1705:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1706:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1707:Generated_Source\PSoC4/CyLib.c ****     {
 2353              		.loc 1 1707 0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 16
 2356              		@ frame_needed = 1, uses_anonymous_args = 0
 2357 0000 90B5     		push	{r4, r7, lr}
 2358              		.cfi_def_cfa_offset 12
 2359              		.cfi_offset 4, -12
 2360              		.cfi_offset 7, -8
 2361              		.cfi_offset 14, -4
 2362 0002 85B0     		sub	sp, sp, #20
 2363              		.cfi_def_cfa_offset 32
 2364 0004 00AF     		add	r7, sp, #0
 2365              		.cfi_def_cfa_register 7
 2366 0006 7860     		str	r0, [r7, #4]
1708:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1709:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1710:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 73


1711:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
 2367              		.loc 1 1711 0
 2368 0008 7B68     		ldr	r3, [r7, #4]
 2369 000a 012B     		cmp	r3, #1
 2370 000c 02D9     		bls	.L158
 2371              		.loc 1 1711 0 is_stmt 0 discriminator 1
 2372 000e 0020     		movs	r0, #0
 2373 0010 FFF7FEFF 		bl	CyHalt
 2374              	.L158:
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2375              		.loc 1 1713 0 is_stmt 1
 2376 0014 0B23     		movs	r3, #11
 2377 0016 FC18     		adds	r4, r7, r3
 2378 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 2379 001c 0300     		movs	r3, r0
 2380 001e 2370     		strb	r3, [r4]
1714:Generated_Source\PSoC4/CyLib.c **** 
1715:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1716:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
 2381              		.loc 1 1716 0
 2382 0020 1249     		ldr	r1, .L161
 2383 0022 7A68     		ldr	r2, [r7, #4]
 2384 0024 1300     		movs	r3, r2
 2385 0026 5B00     		lsls	r3, r3, #1
 2386 0028 9B18     		adds	r3, r3, r2
 2387 002a 9B00     		lsls	r3, r3, #2
 2388 002c CB18     		adds	r3, r1, r3
 2389 002e 0433     		adds	r3, r3, #4
 2390 0030 1B68     		ldr	r3, [r3]
 2391 0032 0122     		movs	r2, #1
 2392 0034 1340     		ands	r3, r2
 2393 0036 FB60     		str	r3, [r7, #12]
1717:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
 2394              		.loc 1 1717 0
 2395 0038 FB68     		ldr	r3, [r7, #12]
 2396 003a 002B     		cmp	r3, #0
 2397 003c 0BD0     		beq	.L159
1718:Generated_Source\PSoC4/CyLib.c ****         {
1719:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
 2398              		.loc 1 1719 0
 2399 003e 0B49     		ldr	r1, .L161
 2400 0040 7A68     		ldr	r2, [r7, #4]
 2401 0042 1300     		movs	r3, r2
 2402 0044 5B00     		lsls	r3, r3, #1
 2403 0046 9B18     		adds	r3, r3, r2
 2404 0048 9B00     		lsls	r3, r3, #2
 2405 004a CB18     		adds	r3, r1, r3
 2406 004c 0433     		adds	r3, r3, #4
 2407 004e 1B68     		ldr	r3, [r3]
 2408 0050 0122     		movs	r2, #1
 2409 0052 1340     		ands	r3, r2
 2410 0054 FB60     		str	r3, [r7, #12]
 2411              	.L159:
1720:Generated_Source\PSoC4/CyLib.c ****         }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 74


 2412              		.loc 1 1722 0
 2413 0056 0B23     		movs	r3, #11
 2414 0058 FB18     		adds	r3, r7, r3
 2415 005a 1B78     		ldrb	r3, [r3]
 2416 005c 1800     		movs	r0, r3
 2417 005e FFF7FEFF 		bl	CyExitCriticalSection
1723:Generated_Source\PSoC4/CyLib.c **** 
1724:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2418              		.loc 1 1724 0
 2419 0062 FB68     		ldr	r3, [r7, #12]
1725:Generated_Source\PSoC4/CyLib.c ****     }
 2420              		.loc 1 1725 0
 2421 0064 1800     		movs	r0, r3
 2422 0066 BD46     		mov	sp, r7
 2423 0068 05B0     		add	sp, sp, #20
 2424              		@ sp needed
 2425 006a 90BD     		pop	{r4, r7, pc}
 2426              	.L162:
 2427              		.align	2
 2428              	.L161:
 2429 006c 14000C40 		.word	1074528276
 2430              		.cfi_endproc
 2431              	.LFE20:
 2432              		.size	CySysClkPllGetLockStatus, .-CySysClkPllGetLockStatus
 2433              		.section	.text.CySysClkPllStop,"ax",%progbits
 2434              		.align	2
 2435              		.global	CySysClkPllStop
 2436              		.code	16
 2437              		.thumb_func
 2438              		.type	CySysClkPllStop, %function
 2439              	CySysClkPllStop:
 2440              	.LFB21:
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1734:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1737:Generated_Source\PSoC4/CyLib.c ****     *
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1739:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1740:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1743:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1744:Generated_Source\PSoC4/CyLib.c ****     {
 2441              		.loc 1 1744 0
 2442              		.cfi_startproc
 2443              		@ args = 0, pretend = 0, frame = 16
 2444              		@ frame_needed = 1, uses_anonymous_args = 0
 2445 0000 90B5     		push	{r4, r7, lr}
 2446              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 75


 2447              		.cfi_offset 4, -12
 2448              		.cfi_offset 7, -8
 2449              		.cfi_offset 14, -4
 2450 0002 85B0     		sub	sp, sp, #20
 2451              		.cfi_def_cfa_offset 32
 2452 0004 00AF     		add	r7, sp, #0
 2453              		.cfi_def_cfa_register 7
 2454 0006 7860     		str	r0, [r7, #4]
1745:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 2455              		.loc 1 1747 0
 2456 0008 7B68     		ldr	r3, [r7, #4]
 2457 000a 012B     		cmp	r3, #1
 2458 000c 1BD8     		bhi	.L165
1748:Generated_Source\PSoC4/CyLib.c ****         {
1749:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 2459              		.loc 1 1749 0
 2460 000e 0F23     		movs	r3, #15
 2461 0010 FC18     		adds	r4, r7, r3
 2462 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 2463 0016 0300     		movs	r3, r0
 2464 0018 2370     		strb	r3, [r4]
1750:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
 2465              		.loc 1 1750 0
 2466 001a 0D48     		ldr	r0, .L166
 2467 001c 0C49     		ldr	r1, .L166
 2468 001e 7A68     		ldr	r2, [r7, #4]
 2469 0020 1300     		movs	r3, r2
 2470 0022 5B00     		lsls	r3, r3, #1
 2471 0024 9B18     		adds	r3, r3, r2
 2472 0026 9B00     		lsls	r3, r3, #2
 2473 0028 5B58     		ldr	r3, [r3, r1]
 2474 002a 9B00     		lsls	r3, r3, #2
 2475 002c 9908     		lsrs	r1, r3, #2
 2476 002e 7A68     		ldr	r2, [r7, #4]
 2477 0030 1300     		movs	r3, r2
 2478 0032 5B00     		lsls	r3, r3, #1
 2479 0034 9B18     		adds	r3, r3, r2
 2480 0036 9B00     		lsls	r3, r3, #2
 2481 0038 1950     		str	r1, [r3, r0]
1751:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2482              		.loc 1 1751 0
 2483 003a 0F23     		movs	r3, #15
 2484 003c FB18     		adds	r3, r7, r3
 2485 003e 1B78     		ldrb	r3, [r3]
 2486 0040 1800     		movs	r0, r3
 2487 0042 FFF7FEFF 		bl	CyExitCriticalSection
 2488              	.L165:
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c ****     }
 2489              		.loc 1 1753 0
 2490 0046 C046     		nop
 2491 0048 BD46     		mov	sp, r7
 2492 004a 05B0     		add	sp, sp, #20
 2493              		@ sp needed
 2494 004c 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 76


 2495              	.L167:
 2496 004e C046     		.align	2
 2497              	.L166:
 2498 0050 14000C40 		.word	1074528276
 2499              		.cfi_endproc
 2500              	.LFE21:
 2501              		.size	CySysClkPllStop, .-CySysClkPllStop
 2502              		.section	.text.CySysClkPllSetPQ,"ax",%progbits
 2503              		.align	2
 2504              		.global	CySysClkPllSetPQ
 2505              		.code	16
 2506              		.thumb_func
 2507              		.type	CySysClkPllSetPQ, %function
 2508              	CySysClkPllSetPQ:
 2509              	.LFB22:
1754:Generated_Source\PSoC4/CyLib.c **** 
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1757:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1758:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1761:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1762:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1763:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1766:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1775:Generated_Source\PSoC4/CyLib.c ****     * divider.
1776:Generated_Source\PSoC4/CyLib.c ****     *
1777:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1780:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1781:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1784:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1785:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1788:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1789:Generated_Source\PSoC4/CyLib.c ****     {
 2510              		.loc 1 1789 0
 2511              		.cfi_startproc
 2512              		@ args = 0, pretend = 0, frame = 32
 2513              		@ frame_needed = 1, uses_anonymous_args = 0
 2514 0000 90B5     		push	{r4, r7, lr}
 2515              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 77


 2516              		.cfi_offset 4, -12
 2517              		.cfi_offset 7, -8
 2518              		.cfi_offset 14, -4
 2519 0002 89B0     		sub	sp, sp, #36
 2520              		.cfi_def_cfa_offset 48
 2521 0004 00AF     		add	r7, sp, #0
 2522              		.cfi_def_cfa_register 7
 2523 0006 F860     		str	r0, [r7, #12]
 2524 0008 B960     		str	r1, [r7, #8]
 2525 000a 7A60     		str	r2, [r7, #4]
 2526 000c 3B60     		str	r3, [r7]
1790:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1791:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1792:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1793:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 2527              		.loc 1 1793 0
 2528 000e 0123     		movs	r3, #1
 2529 0010 FB61     		str	r3, [r7, #28]
1794:Generated_Source\PSoC4/CyLib.c **** 
1795:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2530              		.loc 1 1795 0
 2531 0012 1B23     		movs	r3, #27
 2532 0014 FC18     		adds	r4, r7, r3
 2533 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 2534 001a 0300     		movs	r3, r0
 2535 001c 2370     		strb	r3, [r4]
1796:Generated_Source\PSoC4/CyLib.c **** 
1797:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 2536              		.loc 1 1797 0
 2537 001e FB68     		ldr	r3, [r7, #12]
 2538 0020 1800     		movs	r0, r3
 2539 0022 FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 2540 0026 0300     		movs	r3, r0
 2541 0028 7B61     		str	r3, [r7, #20]
1798:Generated_Source\PSoC4/CyLib.c **** 
1799:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
 2542              		.loc 1 1799 0
 2543 002a FB68     		ldr	r3, [r7, #12]
 2544 002c 012B     		cmp	r3, #1
 2545 002e 41D8     		bhi	.L169
 2546              		.loc 1 1799 0 is_stmt 0 discriminator 1
 2547 0030 BB68     		ldr	r3, [r7, #8]
 2548 0032 032B     		cmp	r3, #3
 2549 0034 3ED9     		bls	.L169
1800:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
 2550              		.loc 1 1800 0 is_stmt 1
 2551 0036 BA68     		ldr	r2, [r7, #8]
 2552 0038 0423     		movs	r3, #4
 2553 003a FF33     		adds	r3, r3, #255
 2554 003c 9A42     		cmp	r2, r3
 2555 003e 39D8     		bhi	.L169
 2556              		.loc 1 1800 0 is_stmt 0 discriminator 1
 2557 0040 7B68     		ldr	r3, [r7, #4]
 2558 0042 002B     		cmp	r3, #0
 2559 0044 36D0     		beq	.L169
1801:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
 2560              		.loc 1 1801 0 is_stmt 1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 78


 2561 0046 7B68     		ldr	r3, [r7, #4]
 2562 0048 402B     		cmp	r3, #64
 2563 004a 33D8     		bhi	.L169
 2564              		.loc 1 1801 0 is_stmt 0 discriminator 1
 2565 004c 3B68     		ldr	r3, [r7]
 2566 004e 012B     		cmp	r3, #1
 2567 0050 30D9     		bls	.L169
1802:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
 2568              		.loc 1 1802 0 is_stmt 1
 2569 0052 3B68     		ldr	r3, [r7]
 2570 0054 032B     		cmp	r3, #3
 2571 0056 2DD8     		bhi	.L169
 2572              		.loc 1 1802 0 is_stmt 0 discriminator 1
 2573 0058 7B69     		ldr	r3, [r7, #20]
 2574 005a 002B     		cmp	r3, #0
 2575 005c 2AD1     		bne	.L169
1803:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1804:Generated_Source\PSoC4/CyLib.c ****         {
1805:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1806:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
 2576              		.loc 1 1806 0 is_stmt 1
 2577 005e 1B49     		ldr	r1, .L171
 2578 0060 FA68     		ldr	r2, [r7, #12]
 2579 0062 1300     		movs	r3, r2
 2580 0064 5B00     		lsls	r3, r3, #1
 2581 0066 9B18     		adds	r3, r3, r2
 2582 0068 9B00     		lsls	r3, r3, #2
 2583 006a 5B58     		ldr	r3, [r3, r1]
 2584 006c 184A     		ldr	r2, .L171+4
 2585 006e 1340     		ands	r3, r2
 2586 0070 3B61     		str	r3, [r7, #16]
1807:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1808:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1809:Generated_Source\PSoC4/CyLib.c **** 
1810:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
 2587              		.loc 1 1810 0
 2588 0072 BB68     		ldr	r3, [r7, #8]
 2589 0074 FF22     		movs	r2, #255
 2590 0076 1340     		ands	r3, r2
 2591 0078 3A69     		ldr	r2, [r7, #16]
 2592 007a 1343     		orrs	r3, r2
 2593 007c 3B61     		str	r3, [r7, #16]
1811:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
 2594              		.loc 1 1811 0
 2595 007e 7B68     		ldr	r3, [r7, #4]
 2596 0080 013B     		subs	r3, r3, #1
 2597 0082 1A02     		lsls	r2, r3, #8
 2598 0084 FC23     		movs	r3, #252
 2599 0086 9B01     		lsls	r3, r3, #6
 2600 0088 1340     		ands	r3, r2
 2601 008a 3A69     		ldr	r2, [r7, #16]
 2602 008c 1343     		orrs	r3, r2
 2603 008e 3B61     		str	r3, [r7, #16]
1812:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
 2604              		.loc 1 1812 0
 2605 0090 3B68     		ldr	r3, [r7]
 2606 0092 1A04     		lsls	r2, r3, #16
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 79


 2607 0094 E023     		movs	r3, #224
 2608 0096 DB02     		lsls	r3, r3, #11
 2609 0098 1340     		ands	r3, r2
 2610 009a 3A69     		ldr	r2, [r7, #16]
 2611 009c 1343     		orrs	r3, r2
 2612 009e 3B61     		str	r3, [r7, #16]
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 2613              		.loc 1 1814 0
 2614 00a0 0A49     		ldr	r1, .L171
 2615 00a2 FA68     		ldr	r2, [r7, #12]
 2616 00a4 1300     		movs	r3, r2
 2617 00a6 5B00     		lsls	r3, r3, #1
 2618 00a8 9B18     		adds	r3, r3, r2
 2619 00aa 9B00     		lsls	r3, r3, #2
 2620 00ac 3A69     		ldr	r2, [r7, #16]
 2621 00ae 5A50     		str	r2, [r3, r1]
1815:Generated_Source\PSoC4/CyLib.c **** 
1816:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
 2622              		.loc 1 1816 0
 2623 00b0 0023     		movs	r3, #0
 2624 00b2 FB61     		str	r3, [r7, #28]
 2625              	.L169:
1817:Generated_Source\PSoC4/CyLib.c ****         }
1818:Generated_Source\PSoC4/CyLib.c **** 
1819:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2626              		.loc 1 1819 0
 2627 00b4 1B23     		movs	r3, #27
 2628 00b6 FB18     		adds	r3, r7, r3
 2629 00b8 1B78     		ldrb	r3, [r3]
 2630 00ba 1800     		movs	r0, r3
 2631 00bc FFF7FEFF 		bl	CyExitCriticalSection
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2632              		.loc 1 1821 0
 2633 00c0 FB69     		ldr	r3, [r7, #28]
1822:Generated_Source\PSoC4/CyLib.c ****     }
 2634              		.loc 1 1822 0
 2635 00c2 1800     		movs	r0, r3
 2636 00c4 BD46     		mov	sp, r7
 2637 00c6 09B0     		add	sp, sp, #36
 2638              		@ sp needed
 2639 00c8 90BD     		pop	{r4, r7, pc}
 2640              	.L172:
 2641 00ca C046     		.align	2
 2642              	.L171:
 2643 00cc 14000C40 		.word	1074528276
 2644 00d0 00C0F8FF 		.word	-475136
 2645              		.cfi_endproc
 2646              	.LFE22:
 2647              		.size	CySysClkPllSetPQ, .-CySysClkPllSetPQ
 2648              		.section	.text.CySysClkPllSetBypassMode,"ax",%progbits
 2649              		.align	2
 2650              		.global	CySysClkPllSetBypassMode
 2651              		.code	16
 2652              		.thumb_func
 2653              		.type	CySysClkPllSetBypassMode, %function
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 80


 2654              	CySysClkPllSetBypassMode:
 2655              	.LFB23:
1823:Generated_Source\PSoC4/CyLib.c **** 
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1826:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1827:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1828:Generated_Source\PSoC4/CyLib.c ****     *
1829:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1830:Generated_Source\PSoC4/CyLib.c ****     *
1831:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1832:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1833:Generated_Source\PSoC4/CyLib.c ****     *
1834:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1835:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1836:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1837:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1838:Generated_Source\PSoC4/CyLib.c ****     *
1839:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1842:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1843:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1844:Generated_Source\PSoC4/CyLib.c ****     *
1845:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1846:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1847:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1848:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1851:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1852:Generated_Source\PSoC4/CyLib.c ****     *
1853:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1856:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1857:Generated_Source\PSoC4/CyLib.c ****     {
 2656              		.loc 1 1857 0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 16
 2659              		@ frame_needed = 1, uses_anonymous_args = 0
 2660 0000 90B5     		push	{r4, r7, lr}
 2661              		.cfi_def_cfa_offset 12
 2662              		.cfi_offset 4, -12
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 85B0     		sub	sp, sp, #20
 2666              		.cfi_def_cfa_offset 32
 2667 0004 00AF     		add	r7, sp, #0
 2668              		.cfi_def_cfa_register 7
 2669 0006 7860     		str	r0, [r7, #4]
 2670 0008 3960     		str	r1, [r7]
1858:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1859:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1860:Generated_Source\PSoC4/CyLib.c **** 
1861:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2671              		.loc 1 1861 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 81


 2672 000a 0F23     		movs	r3, #15
 2673 000c FC18     		adds	r4, r7, r3
 2674 000e FFF7FEFF 		bl	CyEnterCriticalSection
 2675 0012 0300     		movs	r3, r0
 2676 0014 2370     		strb	r3, [r4]
1862:Generated_Source\PSoC4/CyLib.c **** 
1863:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
 2677              		.loc 1 1863 0
 2678 0016 7B68     		ldr	r3, [r7, #4]
 2679 0018 012B     		cmp	r3, #1
 2680 001a 19D8     		bhi	.L174
 2681              		.loc 1 1863 0 is_stmt 0 discriminator 1
 2682 001c 3B68     		ldr	r3, [r7]
 2683 001e 032B     		cmp	r3, #3
 2684 0020 16D8     		bhi	.L174
1864:Generated_Source\PSoC4/CyLib.c ****         {
1865:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
 2685              		.loc 1 1865 0 is_stmt 1
 2686 0022 1049     		ldr	r1, .L175
 2687 0024 7A68     		ldr	r2, [r7, #4]
 2688 0026 1300     		movs	r3, r2
 2689 0028 5B00     		lsls	r3, r3, #1
 2690 002a 9B18     		adds	r3, r3, r2
 2691 002c 9B00     		lsls	r3, r3, #2
 2692 002e 5B58     		ldr	r3, [r3, r1]
 2693 0030 0D4A     		ldr	r2, .L175+4
 2694 0032 1340     		ands	r3, r2
 2695 0034 BB60     		str	r3, [r7, #8]
1866:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
 2696              		.loc 1 1866 0
 2697 0036 3B68     		ldr	r3, [r7]
 2698 0038 1B05     		lsls	r3, r3, #20
 2699 003a BA68     		ldr	r2, [r7, #8]
 2700 003c 1343     		orrs	r3, r2
 2701 003e BB60     		str	r3, [r7, #8]
1867:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 2702              		.loc 1 1867 0
 2703 0040 0849     		ldr	r1, .L175
 2704 0042 7A68     		ldr	r2, [r7, #4]
 2705 0044 1300     		movs	r3, r2
 2706 0046 5B00     		lsls	r3, r3, #1
 2707 0048 9B18     		adds	r3, r3, r2
 2708 004a 9B00     		lsls	r3, r3, #2
 2709 004c BA68     		ldr	r2, [r7, #8]
 2710 004e 5A50     		str	r2, [r3, r1]
 2711              	.L174:
1868:Generated_Source\PSoC4/CyLib.c ****         }
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2712              		.loc 1 1870 0
 2713 0050 0F23     		movs	r3, #15
 2714 0052 FB18     		adds	r3, r7, r3
 2715 0054 1B78     		ldrb	r3, [r3]
 2716 0056 1800     		movs	r0, r3
 2717 0058 FFF7FEFF 		bl	CyExitCriticalSection
1871:Generated_Source\PSoC4/CyLib.c ****     }
 2718              		.loc 1 1871 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 82


 2719 005c C046     		nop
 2720 005e BD46     		mov	sp, r7
 2721 0060 05B0     		add	sp, sp, #20
 2722              		@ sp needed
 2723 0062 90BD     		pop	{r4, r7, pc}
 2724              	.L176:
 2725              		.align	2
 2726              	.L175:
 2727 0064 14000C40 		.word	1074528276
 2728 0068 FFFFCFFF 		.word	-3145729
 2729              		.cfi_endproc
 2730              	.LFE23:
 2731              		.size	CySysClkPllSetBypassMode, .-CySysClkPllSetBypassMode
 2732              		.section	.text.CySysClkPllGetBypassMode,"ax",%progbits
 2733              		.align	2
 2734              		.code	16
 2735              		.thumb_func
 2736              		.type	CySysClkPllGetBypassMode, %function
 2737              	CySysClkPllGetBypassMode:
 2738              	.LFB24:
1872:Generated_Source\PSoC4/CyLib.c **** 
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1876:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1877:Generated_Source\PSoC4/CyLib.c ****     *
1878:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1879:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1882:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1883:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1886:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1889:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1890:Generated_Source\PSoC4/CyLib.c ****     {
 2739              		.loc 1 1890 0
 2740              		.cfi_startproc
 2741              		@ args = 0, pretend = 0, frame = 16
 2742              		@ frame_needed = 1, uses_anonymous_args = 0
 2743 0000 90B5     		push	{r4, r7, lr}
 2744              		.cfi_def_cfa_offset 12
 2745              		.cfi_offset 4, -12
 2746              		.cfi_offset 7, -8
 2747              		.cfi_offset 14, -4
 2748 0002 85B0     		sub	sp, sp, #20
 2749              		.cfi_def_cfa_offset 32
 2750 0004 00AF     		add	r7, sp, #0
 2751              		.cfi_def_cfa_register 7
 2752 0006 7860     		str	r0, [r7, #4]
1891:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1892:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1893:Generated_Source\PSoC4/CyLib.c **** 
1894:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 83


 2753              		.loc 1 1894 0
 2754 0008 7B68     		ldr	r3, [r7, #4]
 2755 000a 012B     		cmp	r3, #1
 2756 000c 02D9     		bls	.L178
 2757              		.loc 1 1894 0 is_stmt 0 discriminator 1
 2758 000e 0020     		movs	r0, #0
 2759 0010 FFF7FEFF 		bl	CyHalt
 2760              	.L178:
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2761              		.loc 1 1896 0 is_stmt 1
 2762 0014 0F23     		movs	r3, #15
 2763 0016 FC18     		adds	r4, r7, r3
 2764 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 2765 001c 0300     		movs	r3, r0
 2766 001e 2370     		strb	r3, [r4]
1897:Generated_Source\PSoC4/CyLib.c **** 
1898:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
 2767              		.loc 1 1898 0
 2768 0020 0C49     		ldr	r1, .L180
 2769 0022 7A68     		ldr	r2, [r7, #4]
 2770 0024 1300     		movs	r3, r2
 2771 0026 5B00     		lsls	r3, r3, #1
 2772 0028 9B18     		adds	r3, r3, r2
 2773 002a 9B00     		lsls	r3, r3, #2
 2774 002c 5A58     		ldr	r2, [r3, r1]
 2775 002e C023     		movs	r3, #192
 2776 0030 9B03     		lsls	r3, r3, #14
 2777 0032 1340     		ands	r3, r2
 2778 0034 BB60     		str	r3, [r7, #8]
1899:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
 2779              		.loc 1 1899 0
 2780 0036 BB68     		ldr	r3, [r7, #8]
 2781 0038 1B0D     		lsrs	r3, r3, #20
 2782 003a BB60     		str	r3, [r7, #8]
1900:Generated_Source\PSoC4/CyLib.c **** 
1901:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2783              		.loc 1 1901 0
 2784 003c 0F23     		movs	r3, #15
 2785 003e FB18     		adds	r3, r7, r3
 2786 0040 1B78     		ldrb	r3, [r3]
 2787 0042 1800     		movs	r0, r3
 2788 0044 FFF7FEFF 		bl	CyExitCriticalSection
1902:Generated_Source\PSoC4/CyLib.c **** 
1903:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 2789              		.loc 1 1903 0
 2790 0048 BB68     		ldr	r3, [r7, #8]
1904:Generated_Source\PSoC4/CyLib.c ****     }
 2791              		.loc 1 1904 0
 2792 004a 1800     		movs	r0, r3
 2793 004c BD46     		mov	sp, r7
 2794 004e 05B0     		add	sp, sp, #20
 2795              		@ sp needed
 2796 0050 90BD     		pop	{r4, r7, pc}
 2797              	.L181:
 2798 0052 C046     		.align	2
 2799              	.L180:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 84


 2800 0054 14000C40 		.word	1074528276
 2801              		.cfi_endproc
 2802              	.LFE24:
 2803              		.size	CySysClkPllGetBypassMode, .-CySysClkPllGetBypassMode
 2804              		.section	.text.CySysClkPllConfigChangeAllowed,"ax",%progbits
 2805              		.align	2
 2806              		.code	16
 2807              		.thumb_func
 2808              		.type	CySysClkPllConfigChangeAllowed, %function
 2809              	CySysClkPllConfigChangeAllowed:
 2810              	.LFB25:
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c **** 
1907:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1909:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1912:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1917:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1918:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1921:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1922:Generated_Source\PSoC4/CyLib.c ****     *
1923:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1924:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1925:Generated_Source\PSoC4/CyLib.c ****     {
 2811              		.loc 1 1925 0
 2812              		.cfi_startproc
 2813              		@ args = 0, pretend = 0, frame = 24
 2814              		@ frame_needed = 1, uses_anonymous_args = 0
 2815 0000 80B5     		push	{r7, lr}
 2816              		.cfi_def_cfa_offset 8
 2817              		.cfi_offset 7, -8
 2818              		.cfi_offset 14, -4
 2819 0002 86B0     		sub	sp, sp, #24
 2820              		.cfi_def_cfa_offset 32
 2821 0004 00AF     		add	r7, sp, #0
 2822              		.cfi_def_cfa_register 7
 2823 0006 7860     		str	r0, [r7, #4]
1926:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1927:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1928:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
 2824              		.loc 1 1928 0
 2825 0008 1123     		movs	r3, #17
 2826 000a 7B61     		str	r3, [r7, #20]
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
 2827              		.loc 1 1930 0
 2828 000c FFF7FEFF 		bl	CySysClkGetSysclkSource
 2829 0010 0300     		movs	r3, r0
 2830 0012 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 85


1931:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
 2831              		.loc 1 1931 0
 2832 0014 7B68     		ldr	r3, [r7, #4]
 2833 0016 1800     		movs	r0, r3
 2834 0018 FFF7FEFF 		bl	CySysClkPllGetBypassMode
 2835 001c 0300     		movs	r3, r0
 2836 001e FB60     		str	r3, [r7, #12]
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
 2837              		.loc 1 1933 0
 2838 0020 FB68     		ldr	r3, [r7, #12]
 2839 0022 022B     		cmp	r3, #2
 2840 0024 0FD0     		beq	.L183
 2841              		.loc 1 1933 0 is_stmt 0 discriminator 1
 2842 0026 3A69     		ldr	r2, [r7, #16]
 2843 0028 8023     		movs	r3, #128
 2844 002a 9B02     		lsls	r3, r3, #10
 2845 002c 9A42     		cmp	r2, r3
 2846 002e 02D0     		beq	.L184
1934:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
 2847              		.loc 1 1934 0 is_stmt 1
 2848 0030 7B68     		ldr	r3, [r7, #4]
 2849 0032 002B     		cmp	r3, #0
 2850 0034 07D0     		beq	.L183
 2851              	.L184:
1935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1936:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
 2852              		.loc 1 1936 0
 2853 0036 3A69     		ldr	r2, [r7, #16]
 2854 0038 8023     		movs	r3, #128
 2855 003a 5B02     		lsls	r3, r3, #9
 2856 003c 9A42     		cmp	r2, r3
 2857 003e 04D0     		beq	.L185
 2858              		.loc 1 1936 0 is_stmt 0 discriminator 1
 2859 0040 7B68     		ldr	r3, [r7, #4]
 2860 0042 012B     		cmp	r3, #1
 2861 0044 01D1     		bne	.L185
 2862              	.L183:
1937:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1938:Generated_Source\PSoC4/CyLib.c ****             )
1939:Generated_Source\PSoC4/CyLib.c ****         {
1940:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
 2863              		.loc 1 1940 0 is_stmt 1
 2864 0046 0023     		movs	r3, #0
 2865 0048 7B61     		str	r3, [r7, #20]
 2866              	.L185:
1941:Generated_Source\PSoC4/CyLib.c ****         }
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 2867              		.loc 1 1943 0
 2868 004a 7B69     		ldr	r3, [r7, #20]
1944:Generated_Source\PSoC4/CyLib.c ****     }
 2869              		.loc 1 1944 0
 2870 004c 1800     		movs	r0, r3
 2871 004e BD46     		mov	sp, r7
 2872 0050 06B0     		add	sp, sp, #24
 2873              		@ sp needed
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 86


 2874 0052 80BD     		pop	{r7, pc}
 2875              		.cfi_endproc
 2876              	.LFE25:
 2877              		.size	CySysClkPllConfigChangeAllowed, .-CySysClkPllConfigChangeAllowed
 2878              		.section	.text.CySysClkPllGetUnlockStatus,"ax",%progbits
 2879              		.align	2
 2880              		.global	CySysClkPllGetUnlockStatus
 2881              		.code	16
 2882              		.thumb_func
 2883              		.type	CySysClkPllGetUnlockStatus, %function
 2884              	CySysClkPllGetUnlockStatus:
 2885              	.LFB26:
1945:Generated_Source\PSoC4/CyLib.c **** 
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1948:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1949:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1952:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1953:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1954:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1955:Generated_Source\PSoC4/CyLib.c ****     *
1956:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1957:Generated_Source\PSoC4/CyLib.c ****     *
1958:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1959:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1960:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1963:Generated_Source\PSoC4/CyLib.c ****     *
1964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1965:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1966:Generated_Source\PSoC4/CyLib.c ****     {
 2886              		.loc 1 1966 0
 2887              		.cfi_startproc
 2888              		@ args = 0, pretend = 0, frame = 16
 2889              		@ frame_needed = 1, uses_anonymous_args = 0
 2890 0000 90B5     		push	{r4, r7, lr}
 2891              		.cfi_def_cfa_offset 12
 2892              		.cfi_offset 4, -12
 2893              		.cfi_offset 7, -8
 2894              		.cfi_offset 14, -4
 2895 0002 85B0     		sub	sp, sp, #20
 2896              		.cfi_def_cfa_offset 32
 2897 0004 00AF     		add	r7, sp, #0
 2898              		.cfi_def_cfa_register 7
 2899 0006 7860     		str	r0, [r7, #4]
1967:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
 2900              		.loc 1 1967 0
 2901 0008 0023     		movs	r3, #0
 2902 000a FB60     		str	r3, [r7, #12]
1968:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1969:Generated_Source\PSoC4/CyLib.c **** 
1970:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2903              		.loc 1 1970 0
 2904 000c 0B23     		movs	r3, #11
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 87


 2905 000e FC18     		adds	r4, r7, r3
 2906 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 2907 0014 0300     		movs	r3, r0
 2908 0016 2370     		strb	r3, [r4]
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
 2909              		.loc 1 1972 0
 2910 0018 1549     		ldr	r1, .L189
 2911 001a 7A68     		ldr	r2, [r7, #4]
 2912 001c 1300     		movs	r3, r2
 2913 001e 5B00     		lsls	r3, r3, #1
 2914 0020 9B18     		adds	r3, r3, r2
 2915 0022 9B00     		lsls	r3, r3, #2
 2916 0024 CB18     		adds	r3, r1, r3
 2917 0026 0833     		adds	r3, r3, #8
 2918 0028 1B68     		ldr	r3, [r3]
 2919 002a 1022     		movs	r2, #16
 2920 002c 1340     		ands	r3, r2
 2921 002e FB60     		str	r3, [r7, #12]
1973:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
 2922              		.loc 1 1973 0
 2923 0030 0F48     		ldr	r0, .L189
 2924 0032 0F49     		ldr	r1, .L189
 2925 0034 7A68     		ldr	r2, [r7, #4]
 2926 0036 1300     		movs	r3, r2
 2927 0038 5B00     		lsls	r3, r3, #1
 2928 003a 9B18     		adds	r3, r3, r2
 2929 003c 9B00     		lsls	r3, r3, #2
 2930 003e CB18     		adds	r3, r1, r3
 2931 0040 0833     		adds	r3, r3, #8
 2932 0042 1B68     		ldr	r3, [r3]
 2933 0044 1022     		movs	r2, #16
 2934 0046 1A43     		orrs	r2, r3
 2935 0048 1100     		movs	r1, r2
 2936 004a 7A68     		ldr	r2, [r7, #4]
 2937 004c 1300     		movs	r3, r2
 2938 004e 5B00     		lsls	r3, r3, #1
 2939 0050 9B18     		adds	r3, r3, r2
 2940 0052 9B00     		lsls	r3, r3, #2
 2941 0054 C318     		adds	r3, r0, r3
 2942 0056 0833     		adds	r3, r3, #8
 2943 0058 1960     		str	r1, [r3]
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2944              		.loc 1 1975 0
 2945 005a 0B23     		movs	r3, #11
 2946 005c FB18     		adds	r3, r7, r3
 2947 005e 1B78     		ldrb	r3, [r3]
 2948 0060 1800     		movs	r0, r3
 2949 0062 FFF7FEFF 		bl	CyExitCriticalSection
1976:Generated_Source\PSoC4/CyLib.c **** 
1977:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2950              		.loc 1 1977 0
 2951 0066 FB68     		ldr	r3, [r7, #12]
1978:Generated_Source\PSoC4/CyLib.c ****     }
 2952              		.loc 1 1978 0
 2953 0068 1800     		movs	r0, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 88


 2954 006a BD46     		mov	sp, r7
 2955 006c 05B0     		add	sp, sp, #20
 2956              		@ sp needed
 2957 006e 90BD     		pop	{r4, r7, pc}
 2958              	.L190:
 2959              		.align	2
 2960              	.L189:
 2961 0070 14000C40 		.word	1074528276
 2962              		.cfi_endproc
 2963              	.LFE26:
 2964              		.size	CySysClkPllGetUnlockStatus, .-CySysClkPllGetUnlockStatus
 2965              		.global	__aeabi_idiv
 2966              		.section	.text.CySysClkPllSetFrequency,"ax",%progbits
 2967              		.align	2
 2968              		.global	CySysClkPllSetFrequency
 2969              		.code	16
 2970              		.thumb_func
 2971              		.type	CySysClkPllSetFrequency, %function
 2972              	CySysClkPllSetFrequency:
 2973              	.LFB27:
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1982:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1983:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1984:Generated_Source\PSoC4/CyLib.c ****     *
1985:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1986:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1987:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1988:Generated_Source\PSoC4/CyLib.c ****     *
1989:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1990:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1993:Generated_Source\PSoC4/CyLib.c ****     *
1994:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1995:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1996:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2001:Generated_Source\PSoC4/CyLib.c ****     *
2002:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2003:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2004:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2005:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2006:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2007:Generated_Source\PSoC4/CyLib.c ****     *
2008:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2011:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2014:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2015:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 89


2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2018:Generated_Source\PSoC4/CyLib.c ****     {
 2974              		.loc 1 2018 0
 2975              		.cfi_startproc
 2976              		@ args = 4, pretend = 0, frame = 56
 2977              		@ frame_needed = 1, uses_anonymous_args = 0
 2978 0000 80B5     		push	{r7, lr}
 2979              		.cfi_def_cfa_offset 8
 2980              		.cfi_offset 7, -8
 2981              		.cfi_offset 14, -4
 2982 0002 8EB0     		sub	sp, sp, #56
 2983              		.cfi_def_cfa_offset 64
 2984 0004 00AF     		add	r7, sp, #0
 2985              		.cfi_def_cfa_register 7
 2986 0006 F860     		str	r0, [r7, #12]
 2987 0008 B960     		str	r1, [r7, #8]
 2988 000a 7A60     		str	r2, [r7, #4]
 2989 000c 3B60     		str	r3, [r7]
2019:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2020:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
 2990              		.loc 1 2022 0
 2991 000e 0023     		movs	r3, #0
 2992 0010 7B63     		str	r3, [r7, #52]
2023:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
 2993              		.loc 1 2023 0
 2994 0012 0023     		movs	r3, #0
 2995 0014 3B63     		str	r3, [r7, #48]
2024:Generated_Source\PSoC4/CyLib.c **** 
2025:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2026:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2029:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2032:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 2996              		.loc 1 2032 0
 2997 0016 0123     		movs	r3, #1
 2998 0018 BB62     		str	r3, [r7, #40]
2033:Generated_Source\PSoC4/CyLib.c **** 
2034:Generated_Source\PSoC4/CyLib.c **** 
2035:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 2999              		.loc 1 2035 0
 3000 001a FB68     		ldr	r3, [r7, #12]
 3001 001c 1800     		movs	r0, r3
 3002 001e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 3003 0022 0300     		movs	r3, r0
 3004 0024 7B62     		str	r3, [r7, #36]
2036:Generated_Source\PSoC4/CyLib.c **** 
2037:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
 3005              		.loc 1 2037 0
 3006 0026 FB68     		ldr	r3, [r7, #12]
 3007 0028 012B     		cmp	r3, #1
 3008 002a 00D9     		bls	.LCB2536
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 90


 3009 002c 8EE0     		b	.L192	@long jump
 3010              	.LCB2536:
 3011              		.loc 1 2037 0 is_stmt 0 discriminator 1
 3012 002e BB68     		ldr	r3, [r7, #8]
 3013 0030 494A     		ldr	r2, .L201
 3014 0032 9342     		cmp	r3, r2
 3015 0034 00D8     		bhi	.LCB2540
 3016 0036 89E0     		b	.L192	@long jump
 3017              	.LCB2540:
2038:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
 3018              		.loc 1 2038 0 is_stmt 1
 3019 0038 BA68     		ldr	r2, [r7, #8]
 3020 003a C023     		movs	r3, #192
 3021 003c 1B02     		lsls	r3, r3, #8
 3022 003e 9A42     		cmp	r2, r3
 3023 0040 00D9     		bls	.LCB2545
 3024 0042 83E0     		b	.L192	@long jump
 3025              	.LCB2545:
 3026              		.loc 1 2038 0 is_stmt 0 discriminator 1
 3027 0044 7B68     		ldr	r3, [r7, #4]
 3028 0046 454A     		ldr	r2, .L201+4
 3029 0048 9342     		cmp	r3, r2
 3030 004a 00D8     		bhi	.LCB2549
 3031 004c 7EE0     		b	.L192	@long jump
 3032              	.LCB2549:
2039:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
 3033              		.loc 1 2039 0 is_stmt 1
 3034 004e 7A68     		ldr	r2, [r7, #4]
 3035 0050 C023     		movs	r3, #192
 3036 0052 1B02     		lsls	r3, r3, #8
 3037 0054 9A42     		cmp	r2, r3
 3038 0056 00D9     		bls	.LCB2554
 3039 0058 78E0     		b	.L192	@long jump
 3040              	.LCB2554:
 3041              		.loc 1 2039 0 is_stmt 0 discriminator 1
 3042 005a 3B68     		ldr	r3, [r7]
 3043 005c 032B     		cmp	r3, #3
 3044 005e 00D9     		bls	.LCB2557
 3045 0060 74E0     		b	.L192	@long jump
 3046              	.LCB2557:
2040:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
 3047              		.loc 1 2040 0 is_stmt 1
 3048 0062 7B6A     		ldr	r3, [r7, #36]
 3049 0064 002B     		cmp	r3, #0
 3050 0066 00D0     		beq	.LCB2560
 3051 0068 70E0     		b	.L192	@long jump
 3052              	.LCB2560:
2041:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2042:Generated_Source\PSoC4/CyLib.c ****         {
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2045:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
 3053              		.loc 1 2045 0
 3054 006a BB68     		ldr	r3, [r7, #8]
 3055 006c 3C4A     		ldr	r2, .L201+8
 3056 006e 9446     		mov	ip, r2
 3057 0070 6344     		add	r3, r3, ip
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 91


 3058 0072 3C49     		ldr	r1, .L201+12
 3059 0074 1800     		movs	r0, r3
 3060 0076 FFF7FEFF 		bl	__aeabi_uidiv
 3061 007a 0300     		movs	r3, r0
 3062 007c 3B62     		str	r3, [r7, #32]
2046:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
 3063              		.loc 1 2046 0
 3064 007e 3B6A     		ldr	r3, [r7, #32]
 3065 0080 002B     		cmp	r3, #0
 3066 0082 01D0     		beq	.L193
 3067              		.loc 1 2046 0 is_stmt 0 discriminator 1
 3068 0084 3B6A     		ldr	r3, [r7, #32]
 3069 0086 00E0     		b	.L194
 3070              	.L193:
 3071              		.loc 1 2046 0 discriminator 2
 3072 0088 0123     		movs	r3, #1
 3073              	.L194:
 3074              		.loc 1 2046 0 discriminator 4
 3075 008a 3B62     		str	r3, [r7, #32]
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2049:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
 3076              		.loc 1 2049 0 is_stmt 1 discriminator 4
 3077 008c BA68     		ldr	r2, [r7, #8]
 3078 008e FA23     		movs	r3, #250
 3079 0090 9900     		lsls	r1, r3, #2
 3080 0092 1000     		movs	r0, r2
 3081 0094 FFF7FEFF 		bl	__aeabi_uidiv
 3082 0098 0300     		movs	r3, r0
 3083 009a FB61     		str	r3, [r7, #28]
2050:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
 3084              		.loc 1 2050 0 discriminator 4
 3085 009c FB69     		ldr	r3, [r7, #28]
 3086 009e 402B     		cmp	r3, #64
 3087 00a0 00D9     		bls	.L195
 3088 00a2 4023     		movs	r3, #64
 3089              	.L195:
 3090 00a4 FB61     		str	r3, [r7, #28]
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
 3091              		.loc 1 2052 0 discriminator 4
 3092 00a6 3A6A     		ldr	r2, [r7, #32]
 3093 00a8 FB69     		ldr	r3, [r7, #28]
 3094 00aa 9A42     		cmp	r2, r3
 3095 00ac 4ED8     		bhi	.L192
2053:Generated_Source\PSoC4/CyLib.c ****             {
2054:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
 3096              		.loc 1 2054 0
 3097 00ae 3B6A     		ldr	r3, [r7, #32]
 3098 00b0 FB62     		str	r3, [r7, #44]
 3099 00b2 31E0     		b	.L196
 3100              	.L199:
2055:Generated_Source\PSoC4/CyLib.c ****                 {
2056:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2059:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 92


 3101              		.loc 1 2059 0
 3102 00b4 7B68     		ldr	r3, [r7, #4]
 3103 00b6 FA6A     		ldr	r2, [r7, #44]
 3104 00b8 5A43     		muls	r2, r3
 3105 00ba BB68     		ldr	r3, [r7, #8]
 3106 00bc 5B08     		lsrs	r3, r3, #1
 3107 00be D318     		adds	r3, r2, r3
 3108 00c0 B968     		ldr	r1, [r7, #8]
 3109 00c2 1800     		movs	r0, r3
 3110 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 3111 00c8 0300     		movs	r3, r0
 3112 00ca BB61     		str	r3, [r7, #24]
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2062:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
 3113              		.loc 1 2062 0
 3114 00cc BB68     		ldr	r3, [r7, #8]
 3115 00ce BA69     		ldr	r2, [r7, #24]
 3116 00d0 5343     		muls	r3, r2
 3117 00d2 F96A     		ldr	r1, [r7, #44]
 3118 00d4 1800     		movs	r0, r3
 3119 00d6 FFF7FEFF 		bl	__aeabi_uidiv
 3120 00da 0300     		movs	r3, r0
 3121 00dc 7B61     		str	r3, [r7, #20]
2063:Generated_Source\PSoC4/CyLib.c **** 
2064:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2065:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
 3122              		.loc 1 2065 0
 3123 00de 7A69     		ldr	r2, [r7, #20]
 3124 00e0 7B68     		ldr	r3, [r7, #4]
 3125 00e2 D31A     		subs	r3, r2, r3
 3126 00e4 204A     		ldr	r2, .L201+16
 3127 00e6 5343     		muls	r3, r2
 3128 00e8 7A68     		ldr	r2, [r7, #4]
 3129 00ea 1100     		movs	r1, r2
 3130 00ec 1800     		movs	r0, r3
 3131 00ee FFF7FEFF 		bl	__aeabi_idiv
 3132 00f2 0300     		movs	r3, r0
 3133 00f4 3B61     		str	r3, [r7, #16]
2066:Generated_Source\PSoC4/CyLib.c **** 
2067:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2068:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
 3134              		.loc 1 2068 0
 3135 00f6 3B6C     		ldr	r3, [r7, #64]
 3136 00f8 5A42     		rsbs	r2, r3, #0
 3137 00fa 3B69     		ldr	r3, [r7, #16]
 3138 00fc 9A42     		cmp	r2, r3
 3139 00fe 08DC     		bgt	.L197
 3140              		.loc 1 2068 0 is_stmt 0 discriminator 1
 3141 0100 3B6C     		ldr	r3, [r7, #64]
 3142 0102 3A69     		ldr	r2, [r7, #16]
 3143 0104 9A42     		cmp	r2, r3
 3144 0106 04DC     		bgt	.L197
2069:Generated_Source\PSoC4/CyLib.c ****                     {
2070:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
 3145              		.loc 1 2070 0 is_stmt 1
 3146 0108 FB6A     		ldr	r3, [r7, #44]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 93


 3147 010a 7B63     		str	r3, [r7, #52]
2071:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
 3148              		.loc 1 2071 0
 3149 010c BB69     		ldr	r3, [r7, #24]
 3150 010e 3B63     		str	r3, [r7, #48]
2072:Generated_Source\PSoC4/CyLib.c ****                         break;
 3151              		.loc 1 2072 0
 3152 0110 06E0     		b	.L198
 3153              	.L197:
2054:Generated_Source\PSoC4/CyLib.c ****                 {
 3154              		.loc 1 2054 0 discriminator 2
 3155 0112 FB6A     		ldr	r3, [r7, #44]
 3156 0114 0133     		adds	r3, r3, #1
 3157 0116 FB62     		str	r3, [r7, #44]
 3158              	.L196:
2054:Generated_Source\PSoC4/CyLib.c ****                 {
 3159              		.loc 1 2054 0 is_stmt 0 discriminator 1
 3160 0118 FA6A     		ldr	r2, [r7, #44]
 3161 011a FB69     		ldr	r3, [r7, #28]
 3162 011c 9A42     		cmp	r2, r3
 3163 011e C9D9     		bls	.L199
 3164              	.L198:
2073:Generated_Source\PSoC4/CyLib.c ****                     }
2074:Generated_Source\PSoC4/CyLib.c ****                 }
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
 3165              		.loc 1 2077 0 is_stmt 1
 3166 0120 3B6B     		ldr	r3, [r7, #48]
 3167 0122 002B     		cmp	r3, #0
 3168 0124 12D0     		beq	.L192
 3169              		.loc 1 2077 0 is_stmt 0 discriminator 1
 3170 0126 7B6B     		ldr	r3, [r7, #52]
 3171 0128 002B     		cmp	r3, #0
 3172 012a 0FD0     		beq	.L192
2078:Generated_Source\PSoC4/CyLib.c ****                 {
2079:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
 3173              		.loc 1 2079 0 is_stmt 1
 3174 012c 7A6B     		ldr	r2, [r7, #52]
 3175 012e 396B     		ldr	r1, [r7, #48]
 3176 0130 F868     		ldr	r0, [r7, #12]
 3177 0132 0223     		movs	r3, #2
 3178 0134 FFF7FEFF 		bl	CySysClkPllSetPQ
 3179 0138 031E     		subs	r3, r0, #0
 3180 013a 07D1     		bne	.L192
2080:Generated_Source\PSoC4/CyLib.c ****                     {
2081:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
 3181              		.loc 1 2081 0
 3182 013c 3A68     		ldr	r2, [r7]
 3183 013e FB68     		ldr	r3, [r7, #12]
 3184 0140 1100     		movs	r1, r2
 3185 0142 1800     		movs	r0, r3
 3186 0144 FFF7FEFF 		bl	CySysClkPllSetOutputDivider
 3187 0148 0300     		movs	r3, r0
 3188 014a BB62     		str	r3, [r7, #40]
 3189              	.L192:
2082:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 94


2083:Generated_Source\PSoC4/CyLib.c ****                 }
2084:Generated_Source\PSoC4/CyLib.c ****             }
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****         }
2087:Generated_Source\PSoC4/CyLib.c **** 
2088:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 3190              		.loc 1 2088 0
 3191 014c BB6A     		ldr	r3, [r7, #40]
2089:Generated_Source\PSoC4/CyLib.c ****     }
 3192              		.loc 1 2089 0
 3193 014e 1800     		movs	r0, r3
 3194 0150 BD46     		mov	sp, r7
 3195 0152 0EB0     		add	sp, sp, #56
 3196              		@ sp needed
 3197 0154 80BD     		pop	{r7, pc}
 3198              	.L202:
 3199 0156 C046     		.align	2
 3200              	.L201:
 3201 0158 E7030000 		.word	999
 3202 015c E3570000 		.word	22499
 3203 0160 B70B0000 		.word	2999
 3204 0164 B80B0000 		.word	3000
 3205 0168 40420F00 		.word	1000000
 3206              		.cfi_endproc
 3207              	.LFE27:
 3208              		.size	CySysClkPllSetFrequency, .-CySysClkPllSetFrequency
 3209              		.section	.text.CySysClkPllSetSource,"ax",%progbits
 3210              		.align	2
 3211              		.global	CySysClkPllSetSource
 3212              		.code	16
 3213              		.thumb_func
 3214              		.type	CySysClkPllSetSource, %function
 3215              	CySysClkPllSetSource:
 3216              	.LFB28:
2090:Generated_Source\PSoC4/CyLib.c **** 
2091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLib.c ****     *
2095:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2096:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2097:Generated_Source\PSoC4/CyLib.c ****     *
2098:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2099:Generated_Source\PSoC4/CyLib.c ****     *
2100:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2101:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2102:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2103:Generated_Source\PSoC4/CyLib.c ****     *
2104:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2105:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2106:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2107:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2108:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2109:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2110:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2111:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2112:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 95


2113:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2114:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2115:Generated_Source\PSoC4/CyLib.c ****     {
 3217              		.loc 1 2115 0
 3218              		.cfi_startproc
 3219              		@ args = 0, pretend = 0, frame = 16
 3220              		@ frame_needed = 1, uses_anonymous_args = 0
 3221 0000 90B5     		push	{r4, r7, lr}
 3222              		.cfi_def_cfa_offset 12
 3223              		.cfi_offset 4, -12
 3224              		.cfi_offset 7, -8
 3225              		.cfi_offset 14, -4
 3226 0002 85B0     		sub	sp, sp, #20
 3227              		.cfi_def_cfa_offset 32
 3228 0004 00AF     		add	r7, sp, #0
 3229              		.cfi_def_cfa_register 7
 3230 0006 7860     		str	r0, [r7, #4]
 3231 0008 3960     		str	r1, [r7]
2116:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2117:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2118:Generated_Source\PSoC4/CyLib.c ****         
2119:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2120:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2121:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 3232              		.loc 1 2123 0
 3233 000a 0F23     		movs	r3, #15
 3234 000c FC18     		adds	r4, r7, r3
 3235 000e FFF7FEFF 		bl	CyEnterCriticalSection
 3236 0012 0300     		movs	r3, r0
 3237 0014 2370     		strb	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 3238              		.loc 1 2125 0
 3239 0016 7B68     		ldr	r3, [r7, #4]
 3240 0018 012B     		cmp	r3, #1
 3241 001a 23D8     		bhi	.L204
2126:Generated_Source\PSoC4/CyLib.c ****         {
2127:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2128:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
 3242              		.loc 1 2128 0
 3243 001c 164B     		ldr	r3, .L205
 3244 001e 1968     		ldr	r1, [r3]
 3245 0020 7B68     		ldr	r3, [r7, #4]
 3246 0022 5A1C     		adds	r2, r3, #1
 3247 0024 1300     		movs	r3, r2
 3248 0026 5B00     		lsls	r3, r3, #1
 3249 0028 9B18     		adds	r3, r3, r2
 3250 002a 0722     		movs	r2, #7
 3251 002c 9A40     		lsls	r2, r2, r3
 3252 002e 1300     		movs	r3, r2
 3253 0030 DB43     		mvns	r3, r3
 3254 0032 0B40     		ands	r3, r1
 3255 0034 BB60     		str	r3, [r7, #8]
2129:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
 3256              		.loc 1 2129 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 96


 3257 0036 7B68     		ldr	r3, [r7, #4]
 3258 0038 5A1C     		adds	r2, r3, #1
 3259 003a 1300     		movs	r3, r2
 3260 003c 5B00     		lsls	r3, r3, #1
 3261 003e 9B18     		adds	r3, r3, r2
 3262 0040 3A68     		ldr	r2, [r7]
 3263 0042 9A40     		lsls	r2, r2, r3
 3264 0044 1100     		movs	r1, r2
 3265 0046 7B68     		ldr	r3, [r7, #4]
 3266 0048 5A1C     		adds	r2, r3, #1
 3267 004a 1300     		movs	r3, r2
 3268 004c 5B00     		lsls	r3, r3, #1
 3269 004e 9B18     		adds	r3, r3, r2
 3270 0050 0722     		movs	r2, #7
 3271 0052 9A40     		lsls	r2, r2, r3
 3272 0054 1300     		movs	r3, r2
 3273 0056 0B40     		ands	r3, r1
 3274 0058 BA68     		ldr	r2, [r7, #8]
 3275 005a 1343     		orrs	r3, r2
 3276 005c BB60     		str	r3, [r7, #8]
2130:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
 3277              		.loc 1 2130 0
 3278 005e 064B     		ldr	r3, .L205
 3279 0060 BA68     		ldr	r2, [r7, #8]
 3280 0062 1A60     		str	r2, [r3]
 3281              	.L204:
2131:Generated_Source\PSoC4/CyLib.c ****             #else
2132:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2133:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2134:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2135:Generated_Source\PSoC4/CyLib.c ****                 
2136:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2137:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2138:Generated_Source\PSoC4/CyLib.c ****                 
2139:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2140:Generated_Source\PSoC4/CyLib.c ****                 {
2141:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2142:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2143:Generated_Source\PSoC4/CyLib.c ****                 }
2144:Generated_Source\PSoC4/CyLib.c ****                 
2145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2148:Generated_Source\PSoC4/CyLib.c ****         }
2149:Generated_Source\PSoC4/CyLib.c **** 
2150:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 3282              		.loc 1 2150 0
 3283 0064 0F23     		movs	r3, #15
 3284 0066 FB18     		adds	r3, r7, r3
 3285 0068 1B78     		ldrb	r3, [r3]
 3286 006a 1800     		movs	r0, r3
 3287 006c FFF7FEFF 		bl	CyExitCriticalSection
2151:Generated_Source\PSoC4/CyLib.c ****     }
 3288              		.loc 1 2151 0
 3289 0070 C046     		nop
 3290 0072 BD46     		mov	sp, r7
 3291 0074 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 97


 3292              		@ sp needed
 3293 0076 90BD     		pop	{r4, r7, pc}
 3294              	.L206:
 3295              		.align	2
 3296              	.L205:
 3297 0078 00010B40 		.word	1074462976
 3298              		.cfi_endproc
 3299              	.LFE28:
 3300              		.size	CySysClkPllSetSource, .-CySysClkPllSetSource
 3301              		.section	.text.CySysClkPllSetOutputDivider,"ax",%progbits
 3302              		.align	2
 3303              		.global	CySysClkPllSetOutputDivider
 3304              		.code	16
 3305              		.thumb_func
 3306              		.type	CySysClkPllSetOutputDivider, %function
 3307              	CySysClkPllSetOutputDivider:
 3308              	.LFB29:
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****     
2154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2157:Generated_Source\PSoC4/CyLib.c ****     *
2158:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2159:Generated_Source\PSoC4/CyLib.c ****     *
2160:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2161:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2162:Generated_Source\PSoC4/CyLib.c ****     *
2163:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2166:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2167:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2168:Generated_Source\PSoC4/CyLib.c ****     *
2169:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2170:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2171:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2172:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2173:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2176:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2177:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2178:Generated_Source\PSoC4/CyLib.c ****     *
2179:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2180:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2181:Generated_Source\PSoC4/CyLib.c ****     {
 3309              		.loc 1 2181 0
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 24
 3312              		@ frame_needed = 1, uses_anonymous_args = 0
 3313 0000 90B5     		push	{r4, r7, lr}
 3314              		.cfi_def_cfa_offset 12
 3315              		.cfi_offset 4, -12
 3316              		.cfi_offset 7, -8
 3317              		.cfi_offset 14, -4
 3318 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 98


 3319              		.cfi_def_cfa_offset 40
 3320 0004 00AF     		add	r7, sp, #0
 3321              		.cfi_def_cfa_register 7
 3322 0006 7860     		str	r0, [r7, #4]
 3323 0008 3960     		str	r1, [r7]
2182:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2183:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2184:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 3324              		.loc 1 2184 0
 3325 000a 0123     		movs	r3, #1
 3326 000c 7B61     		str	r3, [r7, #20]
2185:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** 
2188:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 3327              		.loc 1 2188 0
 3328 000e 1323     		movs	r3, #19
 3329 0010 FC18     		adds	r4, r7, r3
 3330 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 3331 0016 0300     		movs	r3, r0
 3332 0018 2370     		strb	r3, [r4]
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 3333              		.loc 1 2190 0
 3334 001a 7B68     		ldr	r3, [r7, #4]
 3335 001c 1800     		movs	r0, r3
 3336 001e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 3337 0022 0300     		movs	r3, r0
 3338 0024 FB60     		str	r3, [r7, #12]
2191:Generated_Source\PSoC4/CyLib.c **** 
2192:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
 3339              		.loc 1 2192 0
 3340 0026 7B68     		ldr	r3, [r7, #4]
 3341 0028 012B     		cmp	r3, #1
 3342 002a 20D8     		bhi	.L208
 3343              		.loc 1 2192 0 is_stmt 0 discriminator 1
 3344 002c FB68     		ldr	r3, [r7, #12]
 3345 002e 002B     		cmp	r3, #0
 3346 0030 1DD1     		bne	.L208
 3347              		.loc 1 2192 0 discriminator 2
 3348 0032 3B68     		ldr	r3, [r7]
 3349 0034 032B     		cmp	r3, #3
 3350 0036 1AD8     		bhi	.L208
2193:Generated_Source\PSoC4/CyLib.c ****         {
2194:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
 3351              		.loc 1 2194 0 is_stmt 1
 3352 0038 1249     		ldr	r1, .L210
 3353 003a 7A68     		ldr	r2, [r7, #4]
 3354 003c 1300     		movs	r3, r2
 3355 003e 5B00     		lsls	r3, r3, #1
 3356 0040 9B18     		adds	r3, r3, r2
 3357 0042 9B00     		lsls	r3, r3, #2
 3358 0044 5B58     		ldr	r3, [r3, r1]
 3359 0046 104A     		ldr	r2, .L210+4
 3360 0048 1340     		ands	r3, r2
 3361 004a BB60     		str	r3, [r7, #8]
2195:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 99


 3362              		.loc 1 2195 0
 3363 004c 3B68     		ldr	r3, [r7]
 3364 004e 9B03     		lsls	r3, r3, #14
 3365 0050 1B04     		lsls	r3, r3, #16
 3366 0052 1B0C     		lsrs	r3, r3, #16
 3367 0054 BA68     		ldr	r2, [r7, #8]
 3368 0056 1343     		orrs	r3, r2
 3369 0058 BB60     		str	r3, [r7, #8]
2196:Generated_Source\PSoC4/CyLib.c **** 
2197:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
 3370              		.loc 1 2197 0
 3371 005a 0A49     		ldr	r1, .L210
 3372 005c 7A68     		ldr	r2, [r7, #4]
 3373 005e 1300     		movs	r3, r2
 3374 0060 5B00     		lsls	r3, r3, #1
 3375 0062 9B18     		adds	r3, r3, r2
 3376 0064 9B00     		lsls	r3, r3, #2
 3377 0066 BA68     		ldr	r2, [r7, #8]
 3378 0068 5A50     		str	r2, [r3, r1]
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
 3379              		.loc 1 2199 0
 3380 006a 0023     		movs	r3, #0
 3381 006c 7B61     		str	r3, [r7, #20]
 3382              	.L208:
2200:Generated_Source\PSoC4/CyLib.c ****         }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 3383              		.loc 1 2202 0
 3384 006e 1323     		movs	r3, #19
 3385 0070 FB18     		adds	r3, r7, r3
 3386 0072 1B78     		ldrb	r3, [r3]
 3387 0074 1800     		movs	r0, r3
 3388 0076 FFF7FEFF 		bl	CyExitCriticalSection
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 3389              		.loc 1 2204 0
 3390 007a 7B69     		ldr	r3, [r7, #20]
2205:Generated_Source\PSoC4/CyLib.c ****     }
 3391              		.loc 1 2205 0
 3392 007c 1800     		movs	r0, r3
 3393 007e BD46     		mov	sp, r7
 3394 0080 07B0     		add	sp, sp, #28
 3395              		@ sp needed
 3396 0082 90BD     		pop	{r4, r7, pc}
 3397              	.L211:
 3398              		.align	2
 3399              	.L210:
 3400 0084 14000C40 		.word	1074528276
 3401 0088 FF3FFFFF 		.word	-49153
 3402              		.cfi_endproc
 3403              	.LFE29:
 3404              		.size	CySysClkPllSetOutputDivider, .-CySysClkPllSetOutputDivider
 3405              		.section	.text.CySysLvdEnable,"ax",%progbits
 3406              		.align	2
 3407              		.global	CySysLvdEnable
 3408              		.code	16
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 100


 3409              		.thumb_func
 3410              		.type	CySysLvdEnable, %function
 3411              	CySysLvdEnable:
 3412              	.LFB30:
2206:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2207:Generated_Source\PSoC4/CyLib.c **** 
2208:Generated_Source\PSoC4/CyLib.c **** 
2209:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2210:Generated_Source\PSoC4/CyLib.c **** 
2211:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2212:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2213:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2214:Generated_Source\PSoC4/CyLib.c ****     *
2215:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2216:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2217:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2218:Generated_Source\PSoC4/CyLib.c ****     *
2219:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2220:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2221:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2222:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2223:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2224:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2225:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2226:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2227:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2228:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2229:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2230:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2231:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2232:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2233:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2234:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2235:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2236:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2237:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2238:Generated_Source\PSoC4/CyLib.c ****     *
2239:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2241:Generated_Source\PSoC4/CyLib.c ****     {
 3413              		.loc 1 2241 0
 3414              		.cfi_startproc
 3415              		@ args = 0, pretend = 0, frame = 8
 3416              		@ frame_needed = 1, uses_anonymous_args = 0
 3417 0000 80B5     		push	{r7, lr}
 3418              		.cfi_def_cfa_offset 8
 3419              		.cfi_offset 7, -8
 3420              		.cfi_offset 14, -4
 3421 0002 82B0     		sub	sp, sp, #8
 3422              		.cfi_def_cfa_offset 16
 3423 0004 00AF     		add	r7, sp, #0
 3424              		.cfi_def_cfa_register 7
 3425 0006 7860     		str	r0, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2243:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 3426              		.loc 1 2243 0
 3427 0008 144B     		ldr	r3, .L213
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 101


 3428 000a 144A     		ldr	r2, .L213
 3429 000c 1268     		ldr	r2, [r2]
 3430 000e 0221     		movs	r1, #2
 3431 0010 8A43     		bics	r2, r1
 3432 0012 1A60     		str	r2, [r3]
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2246:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 3433              		.loc 1 2246 0
 3434 0014 124B     		ldr	r3, .L213+4
 3435 0016 124A     		ldr	r2, .L213+4
 3436 0018 1268     		ldr	r2, [r2]
 3437 001a 1E21     		movs	r1, #30
 3438 001c 8A43     		bics	r2, r1
 3439 001e 1100     		movs	r1, r2
2247:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 3440              		.loc 1 2247 0
 3441 0020 7A68     		ldr	r2, [r7, #4]
 3442 0022 5200     		lsls	r2, r2, #1
 3443 0024 1E20     		movs	r0, #30
 3444 0026 0240     		ands	r2, r0
2246:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 3445              		.loc 1 2246 0
 3446 0028 0A43     		orrs	r2, r1
 3447 002a 1A60     		str	r2, [r3]
2248:Generated_Source\PSoC4/CyLib.c **** 
2249:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2250:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 3448              		.loc 1 2250 0
 3449 002c 0C4B     		ldr	r3, .L213+4
 3450 002e 0C4A     		ldr	r2, .L213+4
 3451 0030 1268     		ldr	r2, [r2]
 3452 0032 0121     		movs	r1, #1
 3453 0034 0A43     		orrs	r2, r1
 3454 0036 1A60     		str	r2, [r3]
2251:Generated_Source\PSoC4/CyLib.c **** 
2252:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2253:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 3455              		.loc 1 2253 0
 3456 0038 FA23     		movs	r3, #250
 3457 003a 9B00     		lsls	r3, r3, #2
 3458 003c 1800     		movs	r0, r3
 3459 003e FFF7FEFF 		bl	CyDelayUs
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2256:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 3460              		.loc 1 2256 0
 3461 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2259:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 3462              		.loc 1 2259 0
 3463 0046 054B     		ldr	r3, .L213
 3464 0048 044A     		ldr	r2, .L213
 3465 004a 1268     		ldr	r2, [r2]
 3466 004c 0221     		movs	r1, #2
 3467 004e 0A43     		orrs	r2, r1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 102


 3468 0050 1A60     		str	r2, [r3]
2260:Generated_Source\PSoC4/CyLib.c ****     }
 3469              		.loc 1 2260 0
 3470 0052 C046     		nop
 3471 0054 BD46     		mov	sp, r7
 3472 0056 02B0     		add	sp, sp, #8
 3473              		@ sp needed
 3474 0058 80BD     		pop	{r7, pc}
 3475              	.L214:
 3476 005a C046     		.align	2
 3477              	.L213:
 3478 005c 08000B40 		.word	1074462728
 3479 0060 18000B40 		.word	1074462744
 3480              		.cfi_endproc
 3481              	.LFE30:
 3482              		.size	CySysLvdEnable, .-CySysLvdEnable
 3483              		.section	.text.CySysLvdDisable,"ax",%progbits
 3484              		.align	2
 3485              		.global	CySysLvdDisable
 3486              		.code	16
 3487              		.thumb_func
 3488              		.type	CySysLvdDisable, %function
 3489              	CySysLvdDisable:
 3490              	.LFB31:
2261:Generated_Source\PSoC4/CyLib.c **** 
2262:Generated_Source\PSoC4/CyLib.c **** 
2263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2266:Generated_Source\PSoC4/CyLib.c ****     *
2267:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2268:Generated_Source\PSoC4/CyLib.c ****     *
2269:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2270:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2271:Generated_Source\PSoC4/CyLib.c ****     {
 3491              		.loc 1 2271 0
 3492              		.cfi_startproc
 3493              		@ args = 0, pretend = 0, frame = 0
 3494              		@ frame_needed = 1, uses_anonymous_args = 0
 3495 0000 80B5     		push	{r7, lr}
 3496              		.cfi_def_cfa_offset 8
 3497              		.cfi_offset 7, -8
 3498              		.cfi_offset 14, -4
 3499 0002 00AF     		add	r7, sp, #0
 3500              		.cfi_def_cfa_register 7
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 3501              		.loc 1 2272 0
 3502 0004 074B     		ldr	r3, .L216
 3503 0006 074A     		ldr	r2, .L216
 3504 0008 1268     		ldr	r2, [r2]
 3505 000a 0221     		movs	r1, #2
 3506 000c 8A43     		bics	r2, r1
 3507 000e 1A60     		str	r2, [r3]
2273:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 3508              		.loc 1 2273 0
 3509 0010 054B     		ldr	r3, .L216+4
 3510 0012 054A     		ldr	r2, .L216+4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 103


 3511 0014 1268     		ldr	r2, [r2]
 3512 0016 0121     		movs	r1, #1
 3513 0018 8A43     		bics	r2, r1
 3514 001a 1A60     		str	r2, [r3]
2274:Generated_Source\PSoC4/CyLib.c ****     }
 3515              		.loc 1 2274 0
 3516 001c C046     		nop
 3517 001e BD46     		mov	sp, r7
 3518              		@ sp needed
 3519 0020 80BD     		pop	{r7, pc}
 3520              	.L217:
 3521 0022 C046     		.align	2
 3522              	.L216:
 3523 0024 08000B40 		.word	1074462728
 3524 0028 18000B40 		.word	1074462744
 3525              		.cfi_endproc
 3526              	.LFE31:
 3527              		.size	CySysLvdDisable, .-CySysLvdDisable
 3528              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 3529              		.align	2
 3530              		.global	CySysLvdGetInterruptSource
 3531              		.code	16
 3532              		.thumb_func
 3533              		.type	CySysLvdGetInterruptSource, %function
 3534              	CySysLvdGetInterruptSource:
 3535              	.LFB32:
2275:Generated_Source\PSoC4/CyLib.c **** 
2276:Generated_Source\PSoC4/CyLib.c **** 
2277:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2278:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2279:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2280:Generated_Source\PSoC4/CyLib.c ****     *
2281:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2282:Generated_Source\PSoC4/CyLib.c ****     *
2283:Generated_Source\PSoC4/CyLib.c ****     * \return
2284:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2285:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2286:Generated_Source\PSoC4/CyLib.c ****     *
2287:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2289:Generated_Source\PSoC4/CyLib.c ****     {
 3536              		.loc 1 2289 0
 3537              		.cfi_startproc
 3538              		@ args = 0, pretend = 0, frame = 0
 3539              		@ frame_needed = 1, uses_anonymous_args = 0
 3540 0000 80B5     		push	{r7, lr}
 3541              		.cfi_def_cfa_offset 8
 3542              		.cfi_offset 7, -8
 3543              		.cfi_offset 14, -4
 3544 0002 00AF     		add	r7, sp, #0
 3545              		.cfi_def_cfa_register 7
2290:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 3546              		.loc 1 2290 0
 3547 0004 034B     		ldr	r3, .L220
 3548 0006 1B68     		ldr	r3, [r3]
 3549 0008 0222     		movs	r2, #2
 3550 000a 1340     		ands	r3, r2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 104


2291:Generated_Source\PSoC4/CyLib.c ****     }
 3551              		.loc 1 2291 0
 3552 000c 1800     		movs	r0, r3
 3553 000e BD46     		mov	sp, r7
 3554              		@ sp needed
 3555 0010 80BD     		pop	{r7, pc}
 3556              	.L221:
 3557 0012 C046     		.align	2
 3558              	.L220:
 3559 0014 04000B40 		.word	1074462724
 3560              		.cfi_endproc
 3561              	.LFE32:
 3562              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 3563              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 3564              		.align	2
 3565              		.global	CySysLvdClearInterrupt
 3566              		.code	16
 3567              		.thumb_func
 3568              		.type	CySysLvdClearInterrupt, %function
 3569              	CySysLvdClearInterrupt:
 3570              	.LFB33:
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2296:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c ****     *
2298:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2299:Generated_Source\PSoC4/CyLib.c ****     *
2300:Generated_Source\PSoC4/CyLib.c ****     * \return
2301:Generated_Source\PSoC4/CyLib.c ****     *  None
2302:Generated_Source\PSoC4/CyLib.c ****     *
2303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2304:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2305:Generated_Source\PSoC4/CyLib.c ****     {
 3571              		.loc 1 2305 0
 3572              		.cfi_startproc
 3573              		@ args = 0, pretend = 0, frame = 0
 3574              		@ frame_needed = 1, uses_anonymous_args = 0
 3575 0000 80B5     		push	{r7, lr}
 3576              		.cfi_def_cfa_offset 8
 3577              		.cfi_offset 7, -8
 3578              		.cfi_offset 14, -4
 3579 0002 00AF     		add	r7, sp, #0
 3580              		.cfi_def_cfa_register 7
2306:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 3581              		.loc 1 2306 0
 3582 0004 024B     		ldr	r3, .L223
 3583 0006 0222     		movs	r2, #2
 3584 0008 1A60     		str	r2, [r3]
2307:Generated_Source\PSoC4/CyLib.c ****     }
 3585              		.loc 1 2307 0
 3586 000a C046     		nop
 3587 000c BD46     		mov	sp, r7
 3588              		@ sp needed
 3589 000e 80BD     		pop	{r7, pc}
 3590              	.L224:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 105


 3591              		.align	2
 3592              	.L223:
 3593 0010 04000B40 		.word	1074462724
 3594              		.cfi_endproc
 3595              	.LFE33:
 3596              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 3597              		.section	.text.CySysGetResetReason,"ax",%progbits
 3598              		.align	2
 3599              		.global	CySysGetResetReason
 3600              		.code	16
 3601              		.thumb_func
 3602              		.type	CySysGetResetReason, %function
 3603              	CySysGetResetReason:
 3604              	.LFB34:
2308:Generated_Source\PSoC4/CyLib.c **** 
2309:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2310:Generated_Source\PSoC4/CyLib.c **** 
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2313:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2314:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2315:Generated_Source\PSoC4/CyLib.c **** *
2316:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2317:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2318:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2319:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2322:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2323:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2324:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2325:Generated_Source\PSoC4/CyLib.c **** *
2326:Generated_Source\PSoC4/CyLib.c **** * \return
2327:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2331:Generated_Source\PSoC4/CyLib.c **** {
 3605              		.loc 1 2331 0
 3606              		.cfi_startproc
 3607              		@ args = 0, pretend = 0, frame = 16
 3608              		@ frame_needed = 1, uses_anonymous_args = 0
 3609 0000 80B5     		push	{r7, lr}
 3610              		.cfi_def_cfa_offset 8
 3611              		.cfi_offset 7, -8
 3612              		.cfi_offset 14, -4
 3613 0002 84B0     		sub	sp, sp, #16
 3614              		.cfi_def_cfa_offset 24
 3615 0004 00AF     		add	r7, sp, #0
 3616              		.cfi_def_cfa_register 7
 3617 0006 7860     		str	r0, [r7, #4]
2332:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2333:Generated_Source\PSoC4/CyLib.c **** 
2334:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 3618              		.loc 1 2334 0
 3619 0008 7B68     		ldr	r3, [r7, #4]
 3620 000a 1922     		movs	r2, #25
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 106


 3621 000c 1340     		ands	r3, r2
 3622 000e 7B60     		str	r3, [r7, #4]
2335:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 3623              		.loc 1 2335 0
 3624 0010 064B     		ldr	r3, .L227
 3625 0012 1B68     		ldr	r3, [r3]
 3626 0014 1922     		movs	r2, #25
 3627 0016 1340     		ands	r3, r2
 3628 0018 FB60     		str	r3, [r7, #12]
2336:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2337:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 3629              		.loc 1 2337 0
 3630 001a 044B     		ldr	r3, .L227
 3631 001c 7A68     		ldr	r2, [r7, #4]
 3632 001e 1A60     		str	r2, [r3]
2338:Generated_Source\PSoC4/CyLib.c **** 
2339:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 3633              		.loc 1 2339 0
 3634 0020 FB68     		ldr	r3, [r7, #12]
2340:Generated_Source\PSoC4/CyLib.c **** }
 3635              		.loc 1 2340 0
 3636 0022 1800     		movs	r0, r3
 3637 0024 BD46     		mov	sp, r7
 3638 0026 04B0     		add	sp, sp, #16
 3639              		@ sp needed
 3640 0028 80BD     		pop	{r7, pc}
 3641              	.L228:
 3642 002a C046     		.align	2
 3643              	.L227:
 3644 002c 00030B40 		.word	1074463488
 3645              		.cfi_endproc
 3646              	.LFE34:
 3647              		.size	CySysGetResetReason, .-CySysGetResetReason
 3648              		.section	.text.CyDisableInts,"ax",%progbits
 3649              		.align	2
 3650              		.global	CyDisableInts
 3651              		.code	16
 3652              		.thumb_func
 3653              		.type	CyDisableInts, %function
 3654              	CyDisableInts:
 3655              	.LFB35:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** 
2343:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2344:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2345:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2348:Generated_Source\PSoC4/CyLib.c **** *
2349:Generated_Source\PSoC4/CyLib.c **** * \return
2350:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2353:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2354:Generated_Source\PSoC4/CyLib.c **** {
 3656              		.loc 1 2354 0
 3657              		.cfi_startproc
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 107


 3658              		@ args = 0, pretend = 0, frame = 8
 3659              		@ frame_needed = 1, uses_anonymous_args = 0
 3660 0000 80B5     		push	{r7, lr}
 3661              		.cfi_def_cfa_offset 8
 3662              		.cfi_offset 7, -8
 3663              		.cfi_offset 14, -4
 3664 0002 82B0     		sub	sp, sp, #8
 3665              		.cfi_def_cfa_offset 16
 3666 0004 00AF     		add	r7, sp, #0
 3667              		.cfi_def_cfa_register 7
2355:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2358:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 3668              		.loc 1 2358 0
 3669 0006 064B     		ldr	r3, .L231
 3670 0008 1B68     		ldr	r3, [r3]
 3671 000a 7B60     		str	r3, [r7, #4]
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2361:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 3672              		.loc 1 2361 0
 3673 000c 044B     		ldr	r3, .L231
 3674 000e 0122     		movs	r2, #1
 3675 0010 5242     		rsbs	r2, r2, #0
 3676 0012 1A60     		str	r2, [r3]
2362:Generated_Source\PSoC4/CyLib.c **** 
2363:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 3677              		.loc 1 2363 0
 3678 0014 7B68     		ldr	r3, [r7, #4]
2364:Generated_Source\PSoC4/CyLib.c **** }
 3679              		.loc 1 2364 0
 3680 0016 1800     		movs	r0, r3
 3681 0018 BD46     		mov	sp, r7
 3682 001a 02B0     		add	sp, sp, #8
 3683              		@ sp needed
 3684 001c 80BD     		pop	{r7, pc}
 3685              	.L232:
 3686 001e C046     		.align	2
 3687              	.L231:
 3688 0020 80E100E0 		.word	-536813184
 3689              		.cfi_endproc
 3690              	.LFE35:
 3691              		.size	CyDisableInts, .-CyDisableInts
 3692              		.section	.text.CyEnableInts,"ax",%progbits
 3693              		.align	2
 3694              		.global	CyEnableInts
 3695              		.code	16
 3696              		.thumb_func
 3697              		.type	CyEnableInts, %function
 3698              	CyEnableInts:
 3699              	.LFB36:
2365:Generated_Source\PSoC4/CyLib.c **** 
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2368:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2369:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 108


2370:Generated_Source\PSoC4/CyLib.c **** *
2371:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2376:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2377:Generated_Source\PSoC4/CyLib.c **** {
 3700              		.loc 1 2377 0
 3701              		.cfi_startproc
 3702              		@ args = 0, pretend = 0, frame = 8
 3703              		@ frame_needed = 1, uses_anonymous_args = 0
 3704 0000 80B5     		push	{r7, lr}
 3705              		.cfi_def_cfa_offset 8
 3706              		.cfi_offset 7, -8
 3707              		.cfi_offset 14, -4
 3708 0002 82B0     		sub	sp, sp, #8
 3709              		.cfi_def_cfa_offset 16
 3710 0004 00AF     		add	r7, sp, #0
 3711              		.cfi_def_cfa_register 7
 3712 0006 7860     		str	r0, [r7, #4]
2378:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 3713              		.loc 1 2378 0
 3714 0008 034B     		ldr	r3, .L234
 3715 000a 7A68     		ldr	r2, [r7, #4]
 3716 000c 1A60     		str	r2, [r3]
2379:Generated_Source\PSoC4/CyLib.c **** }
 3717              		.loc 1 2379 0
 3718 000e C046     		nop
 3719 0010 BD46     		mov	sp, r7
 3720 0012 02B0     		add	sp, sp, #8
 3721              		@ sp needed
 3722 0014 80BD     		pop	{r7, pc}
 3723              	.L235:
 3724 0016 C046     		.align	2
 3725              	.L234:
 3726 0018 00E100E0 		.word	-536813312
 3727              		.cfi_endproc
 3728              	.LFE36:
 3729              		.size	CyEnableInts, .-CyEnableInts
 3730              		.section	.text.CyIntSetSysVector,"ax",%progbits
 3731              		.align	2
 3732              		.global	CyIntSetSysVector
 3733              		.code	16
 3734              		.thumb_func
 3735              		.type	CyIntSetSysVector, %function
 3736              	CyIntSetSysVector:
 3737              	.LFB37:
2380:Generated_Source\PSoC4/CyLib.c **** 
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2383:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2384:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2385:Generated_Source\PSoC4/CyLib.c **** *
2386:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2387:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2388:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 109


2389:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2390:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2391:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2392:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2393:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2394:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2395:Generated_Source\PSoC4/CyLib.c **** *
2396:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2397:Generated_Source\PSoC4/CyLib.c **** *
2398:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2399:Generated_Source\PSoC4/CyLib.c **** *
2400:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2401:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2402:Generated_Source\PSoC4/CyLib.c **** {
 3738              		.loc 1 2402 0
 3739              		.cfi_startproc
 3740              		@ args = 0, pretend = 0, frame = 16
 3741              		@ frame_needed = 1, uses_anonymous_args = 0
 3742 0000 80B5     		push	{r7, lr}
 3743              		.cfi_def_cfa_offset 8
 3744              		.cfi_offset 7, -8
 3745              		.cfi_offset 14, -4
 3746 0002 84B0     		sub	sp, sp, #16
 3747              		.cfi_def_cfa_offset 24
 3748 0004 00AF     		add	r7, sp, #0
 3749              		.cfi_def_cfa_register 7
 3750 0006 0200     		movs	r2, r0
 3751 0008 3960     		str	r1, [r7]
 3752 000a FB1D     		adds	r3, r7, #7
 3753 000c 1A70     		strb	r2, [r3]
2403:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2404:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3754              		.loc 1 2404 0
 3755 000e 8023     		movs	r3, #128
 3756 0010 9B05     		lsls	r3, r3, #22
 3757 0012 FB60     		str	r3, [r7, #12]
2405:Generated_Source\PSoC4/CyLib.c **** 
2406:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 3758              		.loc 1 2406 0
 3759 0014 FB1D     		adds	r3, r7, #7
 3760 0016 1B78     		ldrb	r3, [r3]
 3761 0018 0F2B     		cmp	r3, #15
 3762 001a 02D9     		bls	.L237
 3763              		.loc 1 2406 0 is_stmt 0 discriminator 1
 3764 001c 0020     		movs	r0, #0
 3765 001e FFF7FEFF 		bl	CyHalt
 3766              	.L237:
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2409:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 3767              		.loc 1 2409 0 is_stmt 1
 3768 0022 FB1D     		adds	r3, r7, #7
 3769 0024 1B78     		ldrb	r3, [r3]
 3770 0026 9B00     		lsls	r3, r3, #2
 3771 0028 FA68     		ldr	r2, [r7, #12]
 3772 002a D318     		adds	r3, r2, r3
 3773 002c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 110


 3774 002e BB60     		str	r3, [r7, #8]
2410:Generated_Source\PSoC4/CyLib.c **** 
2411:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2412:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 3775              		.loc 1 2412 0
 3776 0030 FB1D     		adds	r3, r7, #7
 3777 0032 1B78     		ldrb	r3, [r3]
 3778 0034 9B00     		lsls	r3, r3, #2
 3779 0036 FA68     		ldr	r2, [r7, #12]
 3780 0038 D318     		adds	r3, r2, r3
 3781 003a 3A68     		ldr	r2, [r7]
 3782 003c 1A60     		str	r2, [r3]
2413:Generated_Source\PSoC4/CyLib.c **** 
2414:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 3783              		.loc 1 2414 0
 3784 003e BB68     		ldr	r3, [r7, #8]
2415:Generated_Source\PSoC4/CyLib.c **** }
 3785              		.loc 1 2415 0
 3786 0040 1800     		movs	r0, r3
 3787 0042 BD46     		mov	sp, r7
 3788 0044 04B0     		add	sp, sp, #16
 3789              		@ sp needed
 3790 0046 80BD     		pop	{r7, pc}
 3791              		.cfi_endproc
 3792              	.LFE37:
 3793              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 3794              		.section	.text.CyIntGetSysVector,"ax",%progbits
 3795              		.align	2
 3796              		.global	CyIntGetSysVector
 3797              		.code	16
 3798              		.thumb_func
 3799              		.type	CyIntGetSysVector, %function
 3800              	CyIntGetSysVector:
 3801              	.LFB38:
2416:Generated_Source\PSoC4/CyLib.c **** 
2417:Generated_Source\PSoC4/CyLib.c **** 
2418:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2419:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2420:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2423:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2424:Generated_Source\PSoC4/CyLib.c **** *
2425:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2426:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2427:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2428:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2429:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2430:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2435:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2436:Generated_Source\PSoC4/CyLib.c **** {
 3802              		.loc 1 2436 0
 3803              		.cfi_startproc
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 111


 3804              		@ args = 0, pretend = 0, frame = 16
 3805              		@ frame_needed = 1, uses_anonymous_args = 0
 3806 0000 80B5     		push	{r7, lr}
 3807              		.cfi_def_cfa_offset 8
 3808              		.cfi_offset 7, -8
 3809              		.cfi_offset 14, -4
 3810 0002 84B0     		sub	sp, sp, #16
 3811              		.cfi_def_cfa_offset 24
 3812 0004 00AF     		add	r7, sp, #0
 3813              		.cfi_def_cfa_register 7
 3814 0006 0200     		movs	r2, r0
 3815 0008 FB1D     		adds	r3, r7, #7
 3816 000a 1A70     		strb	r2, [r3]
2437:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3817              		.loc 1 2437 0
 3818 000c 8023     		movs	r3, #128
 3819 000e 9B05     		lsls	r3, r3, #22
 3820 0010 FB60     		str	r3, [r7, #12]
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 3821              		.loc 1 2439 0
 3822 0012 FB1D     		adds	r3, r7, #7
 3823 0014 1B78     		ldrb	r3, [r3]
 3824 0016 0F2B     		cmp	r3, #15
 3825 0018 02D9     		bls	.L240
 3826              		.loc 1 2439 0 is_stmt 0 discriminator 1
 3827 001a 0020     		movs	r0, #0
 3828 001c FFF7FEFF 		bl	CyHalt
 3829              	.L240:
2440:Generated_Source\PSoC4/CyLib.c **** 
2441:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 3830              		.loc 1 2441 0 is_stmt 1
 3831 0020 FB1D     		adds	r3, r7, #7
 3832 0022 1B78     		ldrb	r3, [r3]
 3833 0024 9B00     		lsls	r3, r3, #2
 3834 0026 FA68     		ldr	r2, [r7, #12]
 3835 0028 D318     		adds	r3, r2, r3
 3836 002a 1B68     		ldr	r3, [r3]
2442:Generated_Source\PSoC4/CyLib.c **** }
 3837              		.loc 1 2442 0
 3838 002c 1800     		movs	r0, r3
 3839 002e BD46     		mov	sp, r7
 3840 0030 04B0     		add	sp, sp, #16
 3841              		@ sp needed
 3842 0032 80BD     		pop	{r7, pc}
 3843              		.cfi_endproc
 3844              	.LFE38:
 3845              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 3846              		.section	.text.CyIntSetVector,"ax",%progbits
 3847              		.align	2
 3848              		.global	CyIntSetVector
 3849              		.code	16
 3850              		.thumb_func
 3851              		.type	CyIntSetVector, %function
 3852              	CyIntSetVector:
 3853              	.LFB39:
2443:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 112


2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2446:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2447:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2452:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2455:Generated_Source\PSoC4/CyLib.c **** *
2456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2457:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2458:Generated_Source\PSoC4/CyLib.c **** {
 3854              		.loc 1 2458 0
 3855              		.cfi_startproc
 3856              		@ args = 0, pretend = 0, frame = 16
 3857              		@ frame_needed = 1, uses_anonymous_args = 0
 3858 0000 80B5     		push	{r7, lr}
 3859              		.cfi_def_cfa_offset 8
 3860              		.cfi_offset 7, -8
 3861              		.cfi_offset 14, -4
 3862 0002 84B0     		sub	sp, sp, #16
 3863              		.cfi_def_cfa_offset 24
 3864 0004 00AF     		add	r7, sp, #0
 3865              		.cfi_def_cfa_register 7
 3866 0006 0200     		movs	r2, r0
 3867 0008 3960     		str	r1, [r7]
 3868 000a FB1D     		adds	r3, r7, #7
 3869 000c 1A70     		strb	r2, [r3]
2459:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2460:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3870              		.loc 1 2460 0
 3871 000e 8023     		movs	r3, #128
 3872 0010 9B05     		lsls	r3, r3, #22
 3873 0012 FB60     		str	r3, [r7, #12]
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3874              		.loc 1 2462 0
 3875 0014 FB1D     		adds	r3, r7, #7
 3876 0016 1B78     		ldrb	r3, [r3]
 3877 0018 1F2B     		cmp	r3, #31
 3878 001a 02D9     		bls	.L243
 3879              		.loc 1 2462 0 is_stmt 0 discriminator 1
 3880 001c 0020     		movs	r0, #0
 3881 001e FFF7FEFF 		bl	CyHalt
 3882              	.L243:
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2465:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 3883              		.loc 1 2465 0 is_stmt 1
 3884 0022 FB1D     		adds	r3, r7, #7
 3885 0024 1B78     		ldrb	r3, [r3]
 3886 0026 1033     		adds	r3, r3, #16
 3887 0028 9B00     		lsls	r3, r3, #2
 3888 002a FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 113


 3889 002c D318     		adds	r3, r2, r3
 3890 002e 1B68     		ldr	r3, [r3]
 3891 0030 BB60     		str	r3, [r7, #8]
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2468:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 3892              		.loc 1 2468 0
 3893 0032 FB1D     		adds	r3, r7, #7
 3894 0034 1B78     		ldrb	r3, [r3]
 3895 0036 1033     		adds	r3, r3, #16
 3896 0038 9B00     		lsls	r3, r3, #2
 3897 003a FA68     		ldr	r2, [r7, #12]
 3898 003c D318     		adds	r3, r2, r3
 3899 003e 3A68     		ldr	r2, [r7]
 3900 0040 1A60     		str	r2, [r3]
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 3901              		.loc 1 2470 0
 3902 0042 BB68     		ldr	r3, [r7, #8]
2471:Generated_Source\PSoC4/CyLib.c **** }
 3903              		.loc 1 2471 0
 3904 0044 1800     		movs	r0, r3
 3905 0046 BD46     		mov	sp, r7
 3906 0048 04B0     		add	sp, sp, #16
 3907              		@ sp needed
 3908 004a 80BD     		pop	{r7, pc}
 3909              		.cfi_endproc
 3910              	.LFE39:
 3911              		.size	CyIntSetVector, .-CyIntSetVector
 3912              		.section	.text.CyIntGetVector,"ax",%progbits
 3913              		.align	2
 3914              		.global	CyIntGetVector
 3915              		.code	16
 3916              		.thumb_func
 3917              		.type	CyIntGetVector, %function
 3918              	CyIntGetVector:
 3919              	.LFB40:
2472:Generated_Source\PSoC4/CyLib.c **** 
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2475:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2476:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 3920              		.loc 1 2486 0
 3921              		.cfi_startproc
 3922              		@ args = 0, pretend = 0, frame = 16
 3923              		@ frame_needed = 1, uses_anonymous_args = 0
 3924 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 114


 3925              		.cfi_def_cfa_offset 8
 3926              		.cfi_offset 7, -8
 3927              		.cfi_offset 14, -4
 3928 0002 84B0     		sub	sp, sp, #16
 3929              		.cfi_def_cfa_offset 24
 3930 0004 00AF     		add	r7, sp, #0
 3931              		.cfi_def_cfa_register 7
 3932 0006 0200     		movs	r2, r0
 3933 0008 FB1D     		adds	r3, r7, #7
 3934 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3935              		.loc 1 2487 0
 3936 000c 8023     		movs	r3, #128
 3937 000e 9B05     		lsls	r3, r3, #22
 3938 0010 FB60     		str	r3, [r7, #12]
2488:Generated_Source\PSoC4/CyLib.c **** 
2489:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3939              		.loc 1 2489 0
 3940 0012 FB1D     		adds	r3, r7, #7
 3941 0014 1B78     		ldrb	r3, [r3]
 3942 0016 1F2B     		cmp	r3, #31
 3943 0018 02D9     		bls	.L246
 3944              		.loc 1 2489 0 is_stmt 0 discriminator 1
 3945 001a 0020     		movs	r0, #0
 3946 001c FFF7FEFF 		bl	CyHalt
 3947              	.L246:
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 3948              		.loc 1 2491 0 is_stmt 1
 3949 0020 FB1D     		adds	r3, r7, #7
 3950 0022 1B78     		ldrb	r3, [r3]
 3951 0024 1033     		adds	r3, r3, #16
 3952 0026 9B00     		lsls	r3, r3, #2
 3953 0028 FA68     		ldr	r2, [r7, #12]
 3954 002a D318     		adds	r3, r2, r3
 3955 002c 1B68     		ldr	r3, [r3]
2492:Generated_Source\PSoC4/CyLib.c **** }
 3956              		.loc 1 2492 0
 3957 002e 1800     		movs	r0, r3
 3958 0030 BD46     		mov	sp, r7
 3959 0032 04B0     		add	sp, sp, #16
 3960              		@ sp needed
 3961 0034 80BD     		pop	{r7, pc}
 3962              		.cfi_endproc
 3963              	.LFE40:
 3964              		.size	CyIntGetVector, .-CyIntGetVector
 3965 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 3966              		.align	2
 3967              		.global	CyIntSetPriority
 3968              		.code	16
 3969              		.thumb_func
 3970              		.type	CyIntSetPriority, %function
 3971              	CyIntSetPriority:
 3972              	.LFB41:
2493:Generated_Source\PSoC4/CyLib.c **** 
2494:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2495:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 115


2496:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2497:Generated_Source\PSoC4/CyLib.c **** *
2498:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2501:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2502:Generated_Source\PSoC4/CyLib.c **** *
2503:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2504:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2505:Generated_Source\PSoC4/CyLib.c **** {
 3973              		.loc 1 2505 0
 3974              		.cfi_startproc
 3975              		@ args = 0, pretend = 0, frame = 24
 3976              		@ frame_needed = 1, uses_anonymous_args = 0
 3977 0000 90B5     		push	{r4, r7, lr}
 3978              		.cfi_def_cfa_offset 12
 3979              		.cfi_offset 4, -12
 3980              		.cfi_offset 7, -8
 3981              		.cfi_offset 14, -4
 3982 0002 87B0     		sub	sp, sp, #28
 3983              		.cfi_def_cfa_offset 40
 3984 0004 00AF     		add	r7, sp, #0
 3985              		.cfi_def_cfa_register 7
 3986 0006 0200     		movs	r2, r0
 3987 0008 FB1D     		adds	r3, r7, #7
 3988 000a 1A70     		strb	r2, [r3]
 3989 000c BB1D     		adds	r3, r7, #6
 3990 000e 0A1C     		adds	r2, r1, #0
 3991 0010 1A70     		strb	r2, [r3]
2506:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2507:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2508:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2509:Generated_Source\PSoC4/CyLib.c **** 
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 3992              		.loc 1 2510 0
 3993 0012 BB1D     		adds	r3, r7, #6
 3994 0014 1B78     		ldrb	r3, [r3]
 3995 0016 032B     		cmp	r3, #3
 3996 0018 02D9     		bls	.L249
 3997              		.loc 1 2510 0 is_stmt 0 discriminator 1
 3998 001a 0020     		movs	r0, #0
 3999 001c FFF7FEFF 		bl	CyHalt
 4000              	.L249:
2511:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 4001              		.loc 1 2511 0 is_stmt 1
 4002 0020 FB1D     		adds	r3, r7, #7
 4003 0022 1B78     		ldrb	r3, [r3]
 4004 0024 1F2B     		cmp	r3, #31
 4005 0026 02D9     		bls	.L250
 4006              		.loc 1 2511 0 is_stmt 0 discriminator 1
 4007 0028 0020     		movs	r0, #0
 4008 002a FFF7FEFF 		bl	CyHalt
 4009              	.L250:
2512:Generated_Source\PSoC4/CyLib.c **** 
2513:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 4010              		.loc 1 2513 0 is_stmt 1
 4011 002e FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 116


 4012 0030 1B78     		ldrb	r3, [r3]
 4013 0032 0322     		movs	r2, #3
 4014 0034 1340     		ands	r3, r2
 4015 0036 DB00     		lsls	r3, r3, #3
 4016 0038 0633     		adds	r3, r3, #6
 4017 003a 7B61     		str	r3, [r7, #20]
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 4018              		.loc 1 2515 0
 4019 003c 1323     		movs	r3, #19
 4020 003e FC18     		adds	r4, r7, r3
 4021 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 4022 0044 0300     		movs	r3, r0
 4023 0046 2370     		strb	r3, [r4]
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 4024              		.loc 1 2517 0
 4025 0048 FB1D     		adds	r3, r7, #7
 4026 004a 1B78     		ldrb	r3, [r3]
 4027 004c 9B08     		lsrs	r3, r3, #2
 4028 004e DBB2     		uxtb	r3, r3
 4029 0050 9B00     		lsls	r3, r3, #2
 4030 0052 144A     		ldr	r2, .L251
 4031 0054 9446     		mov	ip, r2
 4032 0056 6344     		add	r3, r3, ip
 4033 0058 1B68     		ldr	r3, [r3]
 4034 005a FB60     		str	r3, [r7, #12]
2518:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 4035              		.loc 1 2518 0
 4036 005c 0322     		movs	r2, #3
 4037 005e 7B69     		ldr	r3, [r7, #20]
 4038 0060 9A40     		lsls	r2, r2, r3
 4039 0062 1300     		movs	r3, r2
 4040 0064 DA43     		mvns	r2, r3
 4041 0066 FB68     		ldr	r3, [r7, #12]
 4042 0068 1340     		ands	r3, r2
 4043 006a FB60     		str	r3, [r7, #12]
2519:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 4044              		.loc 1 2519 0
 4045 006c BB1D     		adds	r3, r7, #6
 4046 006e 1A78     		ldrb	r2, [r3]
 4047 0070 7B69     		ldr	r3, [r7, #20]
 4048 0072 9A40     		lsls	r2, r2, r3
 4049 0074 1300     		movs	r3, r2
 4050 0076 FA68     		ldr	r2, [r7, #12]
 4051 0078 1343     		orrs	r3, r2
 4052 007a FB60     		str	r3, [r7, #12]
2520:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 4053              		.loc 1 2520 0
 4054 007c FB1D     		adds	r3, r7, #7
 4055 007e 1B78     		ldrb	r3, [r3]
 4056 0080 9B08     		lsrs	r3, r3, #2
 4057 0082 DBB2     		uxtb	r3, r3
 4058 0084 9B00     		lsls	r3, r3, #2
 4059 0086 074A     		ldr	r2, .L251
 4060 0088 9446     		mov	ip, r2
 4061 008a 6344     		add	r3, r3, ip
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 117


 4062 008c FA68     		ldr	r2, [r7, #12]
 4063 008e 1A60     		str	r2, [r3]
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 4064              		.loc 1 2522 0
 4065 0090 1323     		movs	r3, #19
 4066 0092 FB18     		adds	r3, r7, r3
 4067 0094 1B78     		ldrb	r3, [r3]
 4068 0096 1800     		movs	r0, r3
 4069 0098 FFF7FEFF 		bl	CyExitCriticalSection
2523:Generated_Source\PSoC4/CyLib.c **** }
 4070              		.loc 1 2523 0
 4071 009c C046     		nop
 4072 009e BD46     		mov	sp, r7
 4073 00a0 07B0     		add	sp, sp, #28
 4074              		@ sp needed
 4075 00a2 90BD     		pop	{r4, r7, pc}
 4076              	.L252:
 4077              		.align	2
 4078              	.L251:
 4079 00a4 00E400E0 		.word	-536812544
 4080              		.cfi_endproc
 4081              	.LFE41:
 4082              		.size	CyIntSetPriority, .-CyIntSetPriority
 4083              		.section	.text.CyIntGetPriority,"ax",%progbits
 4084              		.align	2
 4085              		.global	CyIntGetPriority
 4086              		.code	16
 4087              		.thumb_func
 4088              		.type	CyIntGetPriority, %function
 4089              	CyIntGetPriority:
 4090              	.LFB42:
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c **** 
2526:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2527:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2528:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2529:Generated_Source\PSoC4/CyLib.c **** *
2530:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2531:Generated_Source\PSoC4/CyLib.c **** *
2532:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2533:Generated_Source\PSoC4/CyLib.c **** *
2534:Generated_Source\PSoC4/CyLib.c **** * \return
2535:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2536:Generated_Source\PSoC4/CyLib.c **** *
2537:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2538:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2539:Generated_Source\PSoC4/CyLib.c **** {
 4091              		.loc 1 2539 0
 4092              		.cfi_startproc
 4093              		@ args = 0, pretend = 0, frame = 16
 4094              		@ frame_needed = 1, uses_anonymous_args = 0
 4095 0000 80B5     		push	{r7, lr}
 4096              		.cfi_def_cfa_offset 8
 4097              		.cfi_offset 7, -8
 4098              		.cfi_offset 14, -4
 4099 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 118


 4100              		.cfi_def_cfa_offset 24
 4101 0004 00AF     		add	r7, sp, #0
 4102              		.cfi_def_cfa_register 7
 4103 0006 0200     		movs	r2, r0
 4104 0008 FB1D     		adds	r3, r7, #7
 4105 000a 1A70     		strb	r2, [r3]
2540:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2541:Generated_Source\PSoC4/CyLib.c **** 
2542:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 4106              		.loc 1 2542 0
 4107 000c FB1D     		adds	r3, r7, #7
 4108 000e 1B78     		ldrb	r3, [r3]
 4109 0010 1F2B     		cmp	r3, #31
 4110 0012 02D9     		bls	.L254
 4111              		.loc 1 2542 0 is_stmt 0 discriminator 1
 4112 0014 0020     		movs	r0, #0
 4113 0016 FFF7FEFF 		bl	CyHalt
 4114              	.L254:
2543:Generated_Source\PSoC4/CyLib.c **** 
2544:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 4115              		.loc 1 2544 0 is_stmt 1
 4116 001a FB1D     		adds	r3, r7, #7
 4117 001c 1B78     		ldrb	r3, [r3]
 4118 001e 9B08     		lsrs	r3, r3, #2
 4119 0020 DBB2     		uxtb	r3, r3
 4120 0022 9B00     		lsls	r3, r3, #2
 4121 0024 0B4A     		ldr	r2, .L256
 4122 0026 9446     		mov	ip, r2
 4123 0028 6344     		add	r3, r3, ip
 4124 002a 1A68     		ldr	r2, [r3]
 4125 002c FB1D     		adds	r3, r7, #7
 4126 002e 1B78     		ldrb	r3, [r3]
 4127 0030 0321     		movs	r1, #3
 4128 0032 0B40     		ands	r3, r1
 4129 0034 DB00     		lsls	r3, r3, #3
 4130 0036 0633     		adds	r3, r3, #6
 4131 0038 DA40     		lsrs	r2, r2, r3
 4132 003a 0F23     		movs	r3, #15
 4133 003c FB18     		adds	r3, r7, r3
 4134 003e 1A70     		strb	r2, [r3]
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 4135              		.loc 1 2546 0
 4136 0040 0F23     		movs	r3, #15
 4137 0042 FB18     		adds	r3, r7, r3
 4138 0044 1B78     		ldrb	r3, [r3]
 4139 0046 0322     		movs	r2, #3
 4140 0048 1340     		ands	r3, r2
 4141 004a DBB2     		uxtb	r3, r3
2547:Generated_Source\PSoC4/CyLib.c **** }
 4142              		.loc 1 2547 0
 4143 004c 1800     		movs	r0, r3
 4144 004e BD46     		mov	sp, r7
 4145 0050 04B0     		add	sp, sp, #16
 4146              		@ sp needed
 4147 0052 80BD     		pop	{r7, pc}
 4148              	.L257:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 119


 4149              		.align	2
 4150              	.L256:
 4151 0054 00E400E0 		.word	-536812544
 4152              		.cfi_endproc
 4153              	.LFE42:
 4154              		.size	CyIntGetPriority, .-CyIntGetPriority
 4155              		.section	.text.CyIntEnable,"ax",%progbits
 4156              		.align	2
 4157              		.global	CyIntEnable
 4158              		.code	16
 4159              		.thumb_func
 4160              		.type	CyIntEnable, %function
 4161              	CyIntEnable:
 4162              	.LFB43:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2560:Generated_Source\PSoC4/CyLib.c **** {
 4163              		.loc 1 2560 0
 4164              		.cfi_startproc
 4165              		@ args = 0, pretend = 0, frame = 8
 4166              		@ frame_needed = 1, uses_anonymous_args = 0
 4167 0000 80B5     		push	{r7, lr}
 4168              		.cfi_def_cfa_offset 8
 4169              		.cfi_offset 7, -8
 4170              		.cfi_offset 14, -4
 4171 0002 82B0     		sub	sp, sp, #8
 4172              		.cfi_def_cfa_offset 16
 4173 0004 00AF     		add	r7, sp, #0
 4174              		.cfi_def_cfa_register 7
 4175 0006 0200     		movs	r2, r0
 4176 0008 FB1D     		adds	r3, r7, #7
 4177 000a 1A70     		strb	r2, [r3]
2561:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4178              		.loc 1 2561 0
 4179 000c 064B     		ldr	r3, .L259
 4180 000e FA1D     		adds	r2, r7, #7
 4181 0010 1278     		ldrb	r2, [r2]
 4182 0012 1F21     		movs	r1, #31
 4183 0014 0A40     		ands	r2, r1
 4184 0016 0121     		movs	r1, #1
 4185 0018 9140     		lsls	r1, r1, r2
 4186 001a 0A00     		movs	r2, r1
 4187 001c 1A60     		str	r2, [r3]
2562:Generated_Source\PSoC4/CyLib.c **** }
 4188              		.loc 1 2562 0
 4189 001e C046     		nop
 4190 0020 BD46     		mov	sp, r7
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 120


 4191 0022 02B0     		add	sp, sp, #8
 4192              		@ sp needed
 4193 0024 80BD     		pop	{r7, pc}
 4194              	.L260:
 4195 0026 C046     		.align	2
 4196              	.L259:
 4197 0028 00E100E0 		.word	-536813312
 4198              		.cfi_endproc
 4199              	.LFE43:
 4200              		.size	CyIntEnable, .-CyIntEnable
 4201              		.section	.text.CyIntGetState,"ax",%progbits
 4202              		.align	2
 4203              		.global	CyIntGetState
 4204              		.code	16
 4205              		.thumb_func
 4206              		.type	CyIntGetState, %function
 4207              	CyIntGetState:
 4208              	.LFB44:
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c **** 
2565:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2566:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2567:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2568:Generated_Source\PSoC4/CyLib.c **** *
2569:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2572:Generated_Source\PSoC4/CyLib.c **** *
2573:Generated_Source\PSoC4/CyLib.c **** * \return
2574:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2575:Generated_Source\PSoC4/CyLib.c **** *
2576:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2577:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2578:Generated_Source\PSoC4/CyLib.c **** {
 4209              		.loc 1 2578 0
 4210              		.cfi_startproc
 4211              		@ args = 0, pretend = 0, frame = 8
 4212              		@ frame_needed = 1, uses_anonymous_args = 0
 4213 0000 80B5     		push	{r7, lr}
 4214              		.cfi_def_cfa_offset 8
 4215              		.cfi_offset 7, -8
 4216              		.cfi_offset 14, -4
 4217 0002 82B0     		sub	sp, sp, #8
 4218              		.cfi_def_cfa_offset 16
 4219 0004 00AF     		add	r7, sp, #0
 4220              		.cfi_def_cfa_register 7
 4221 0006 0200     		movs	r2, r0
 4222 0008 FB1D     		adds	r3, r7, #7
 4223 000a 1A70     		strb	r2, [r3]
2579:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2580:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 4224              		.loc 1 2580 0
 4225 000c 074B     		ldr	r3, .L263
 4226 000e 1A68     		ldr	r2, [r3]
 4227 0010 FB1D     		adds	r3, r7, #7
 4228 0012 1B78     		ldrb	r3, [r3]
 4229 0014 1F21     		movs	r1, #31
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 121


 4230 0016 0B40     		ands	r3, r1
 4231 0018 DA40     		lsrs	r2, r2, r3
 4232 001a 1300     		movs	r3, r2
 4233 001c DBB2     		uxtb	r3, r3
 4234 001e 0122     		movs	r2, #1
 4235 0020 1340     		ands	r3, r2
 4236 0022 DBB2     		uxtb	r3, r3
2581:Generated_Source\PSoC4/CyLib.c **** }
 4237              		.loc 1 2581 0
 4238 0024 1800     		movs	r0, r3
 4239 0026 BD46     		mov	sp, r7
 4240 0028 02B0     		add	sp, sp, #8
 4241              		@ sp needed
 4242 002a 80BD     		pop	{r7, pc}
 4243              	.L264:
 4244              		.align	2
 4245              	.L263:
 4246 002c 00E100E0 		.word	-536813312
 4247              		.cfi_endproc
 4248              	.LFE44:
 4249              		.size	CyIntGetState, .-CyIntGetState
 4250              		.section	.text.CyIntDisable,"ax",%progbits
 4251              		.align	2
 4252              		.global	CyIntDisable
 4253              		.code	16
 4254              		.thumb_func
 4255              		.type	CyIntDisable, %function
 4256              	CyIntDisable:
 4257              	.LFB45:
2582:Generated_Source\PSoC4/CyLib.c **** 
2583:Generated_Source\PSoC4/CyLib.c **** 
2584:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2585:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2586:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2587:Generated_Source\PSoC4/CyLib.c **** *
2588:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2589:Generated_Source\PSoC4/CyLib.c **** *
2590:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2591:Generated_Source\PSoC4/CyLib.c **** *
2592:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2593:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2594:Generated_Source\PSoC4/CyLib.c **** {
 4258              		.loc 1 2594 0
 4259              		.cfi_startproc
 4260              		@ args = 0, pretend = 0, frame = 8
 4261              		@ frame_needed = 1, uses_anonymous_args = 0
 4262 0000 80B5     		push	{r7, lr}
 4263              		.cfi_def_cfa_offset 8
 4264              		.cfi_offset 7, -8
 4265              		.cfi_offset 14, -4
 4266 0002 82B0     		sub	sp, sp, #8
 4267              		.cfi_def_cfa_offset 16
 4268 0004 00AF     		add	r7, sp, #0
 4269              		.cfi_def_cfa_register 7
 4270 0006 0200     		movs	r2, r0
 4271 0008 FB1D     		adds	r3, r7, #7
 4272 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 122


2595:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4273              		.loc 1 2595 0
 4274 000c 064B     		ldr	r3, .L266
 4275 000e FA1D     		adds	r2, r7, #7
 4276 0010 1278     		ldrb	r2, [r2]
 4277 0012 1F21     		movs	r1, #31
 4278 0014 0A40     		ands	r2, r1
 4279 0016 0121     		movs	r1, #1
 4280 0018 9140     		lsls	r1, r1, r2
 4281 001a 0A00     		movs	r2, r1
 4282 001c 1A60     		str	r2, [r3]
2596:Generated_Source\PSoC4/CyLib.c **** }
 4283              		.loc 1 2596 0
 4284 001e C046     		nop
 4285 0020 BD46     		mov	sp, r7
 4286 0022 02B0     		add	sp, sp, #8
 4287              		@ sp needed
 4288 0024 80BD     		pop	{r7, pc}
 4289              	.L267:
 4290 0026 C046     		.align	2
 4291              	.L266:
 4292 0028 80E100E0 		.word	-536813184
 4293              		.cfi_endproc
 4294              	.LFE45:
 4295              		.size	CyIntDisable, .-CyIntDisable
 4296              		.section	.text.CyIntSetPending,"ax",%progbits
 4297              		.align	2
 4298              		.global	CyIntSetPending
 4299              		.code	16
 4300              		.thumb_func
 4301              		.type	CyIntSetPending, %function
 4302              	CyIntSetPending:
 4303              	.LFB46:
2597:Generated_Source\PSoC4/CyLib.c **** 
2598:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2599:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2600:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2605:Generated_Source\PSoC4/CyLib.c **** *
2606:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2607:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2608:Generated_Source\PSoC4/CyLib.c **** {
 4304              		.loc 1 2608 0
 4305              		.cfi_startproc
 4306              		@ args = 0, pretend = 0, frame = 8
 4307              		@ frame_needed = 1, uses_anonymous_args = 0
 4308 0000 80B5     		push	{r7, lr}
 4309              		.cfi_def_cfa_offset 8
 4310              		.cfi_offset 7, -8
 4311              		.cfi_offset 14, -4
 4312 0002 82B0     		sub	sp, sp, #8
 4313              		.cfi_def_cfa_offset 16
 4314 0004 00AF     		add	r7, sp, #0
 4315              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 123


 4316 0006 0200     		movs	r2, r0
 4317 0008 FB1D     		adds	r3, r7, #7
 4318 000a 1A70     		strb	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4319              		.loc 1 2609 0
 4320 000c 064B     		ldr	r3, .L269
 4321 000e FA1D     		adds	r2, r7, #7
 4322 0010 1278     		ldrb	r2, [r2]
 4323 0012 1F21     		movs	r1, #31
 4324 0014 0A40     		ands	r2, r1
 4325 0016 0121     		movs	r1, #1
 4326 0018 9140     		lsls	r1, r1, r2
 4327 001a 0A00     		movs	r2, r1
 4328 001c 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 4329              		.loc 1 2610 0
 4330 001e C046     		nop
 4331 0020 BD46     		mov	sp, r7
 4332 0022 02B0     		add	sp, sp, #8
 4333              		@ sp needed
 4334 0024 80BD     		pop	{r7, pc}
 4335              	.L270:
 4336 0026 C046     		.align	2
 4337              	.L269:
 4338 0028 00E200E0 		.word	-536813056
 4339              		.cfi_endproc
 4340              	.LFE46:
 4341              		.size	CyIntSetPending, .-CyIntSetPending
 4342              		.section	.text.CyIntClearPending,"ax",%progbits
 4343              		.align	2
 4344              		.global	CyIntClearPending
 4345              		.code	16
 4346              		.thumb_func
 4347              		.type	CyIntClearPending, %function
 4348              	CyIntClearPending:
 4349              	.LFB47:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2618:Generated_Source\PSoC4/CyLib.c **** *
2619:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2620:Generated_Source\PSoC4/CyLib.c **** *
2621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2622:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2623:Generated_Source\PSoC4/CyLib.c **** {
 4350              		.loc 1 2623 0
 4351              		.cfi_startproc
 4352              		@ args = 0, pretend = 0, frame = 8
 4353              		@ frame_needed = 1, uses_anonymous_args = 0
 4354 0000 80B5     		push	{r7, lr}
 4355              		.cfi_def_cfa_offset 8
 4356              		.cfi_offset 7, -8
 4357              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 124


 4358 0002 82B0     		sub	sp, sp, #8
 4359              		.cfi_def_cfa_offset 16
 4360 0004 00AF     		add	r7, sp, #0
 4361              		.cfi_def_cfa_register 7
 4362 0006 0200     		movs	r2, r0
 4363 0008 FB1D     		adds	r3, r7, #7
 4364 000a 1A70     		strb	r2, [r3]
2624:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4365              		.loc 1 2624 0
 4366 000c 064B     		ldr	r3, .L272
 4367 000e FA1D     		adds	r2, r7, #7
 4368 0010 1278     		ldrb	r2, [r2]
 4369 0012 1F21     		movs	r1, #31
 4370 0014 0A40     		ands	r2, r1
 4371 0016 0121     		movs	r1, #1
 4372 0018 9140     		lsls	r1, r1, r2
 4373 001a 0A00     		movs	r2, r1
 4374 001c 1A60     		str	r2, [r3]
2625:Generated_Source\PSoC4/CyLib.c **** }
 4375              		.loc 1 2625 0
 4376 001e C046     		nop
 4377 0020 BD46     		mov	sp, r7
 4378 0022 02B0     		add	sp, sp, #8
 4379              		@ sp needed
 4380 0024 80BD     		pop	{r7, pc}
 4381              	.L273:
 4382 0026 C046     		.align	2
 4383              	.L272:
 4384 0028 80E200E0 		.word	-536812928
 4385              		.cfi_endproc
 4386              	.LFE47:
 4387              		.size	CyIntClearPending, .-CyIntClearPending
 4388              		.section	.text.CyHalt,"ax",%progbits
 4389              		.align	2
 4390              		.global	CyHalt
 4391              		.code	16
 4392              		.thumb_func
 4393              		.type	CyHalt, %function
 4394              	CyHalt:
 4395              	.LFB48:
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2629:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2630:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2633:Generated_Source\PSoC4/CyLib.c **** *
2634:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2638:Generated_Source\PSoC4/CyLib.c **** {
 4396              		.loc 1 2638 0
 4397              		.cfi_startproc
 4398              		@ args = 0, pretend = 0, frame = 8
 4399              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 125


 4400 0000 80B5     		push	{r7, lr}
 4401              		.cfi_def_cfa_offset 8
 4402              		.cfi_offset 7, -8
 4403              		.cfi_offset 14, -4
 4404 0002 82B0     		sub	sp, sp, #8
 4405              		.cfi_def_cfa_offset 16
 4406 0004 00AF     		add	r7, sp, #0
 4407              		.cfi_def_cfa_register 7
 4408 0006 0200     		movs	r2, r0
 4409 0008 FB1D     		adds	r3, r7, #7
 4410 000a 1A70     		strb	r2, [r3]
2639:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2640:Generated_Source\PSoC4/CyLib.c ****     {
2641:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2642:Generated_Source\PSoC4/CyLib.c ****     }
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2645:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2646:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2647:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 4411              		.loc 1 2647 0
 4412              		.syntax divided
 4413              	@ 2647 "Generated_Source\PSoC4\CyLib.c" 1
 4414 000c 01BE     		    bkpt    1
 4415              	@ 0 "" 2
2648:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2649:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2650:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2651:Generated_Source\PSoC4/CyLib.c **** }
 4416              		.loc 1 2651 0
 4417              		.thumb
 4418              		.syntax unified
 4419 000e C046     		nop
 4420 0010 BD46     		mov	sp, r7
 4421 0012 02B0     		add	sp, sp, #8
 4422              		@ sp needed
 4423 0014 80BD     		pop	{r7, pc}
 4424              		.cfi_endproc
 4425              	.LFE48:
 4426              		.size	CyHalt, .-CyHalt
 4427 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 4428              		.align	2
 4429              		.global	CySoftwareReset
 4430              		.code	16
 4431              		.thumb_func
 4432              		.type	CySoftwareReset, %function
 4433              	CySoftwareReset:
 4434              	.LFB49:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 126


2661:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2662:Generated_Source\PSoC4/CyLib.c **** {
 4435              		.loc 1 2662 0
 4436              		.cfi_startproc
 4437              		@ args = 0, pretend = 0, frame = 0
 4438              		@ frame_needed = 1, uses_anonymous_args = 0
 4439 0000 80B5     		push	{r7, lr}
 4440              		.cfi_def_cfa_offset 8
 4441              		.cfi_offset 7, -8
 4442              		.cfi_offset 14, -4
 4443 0002 00AF     		add	r7, sp, #0
 4444              		.cfi_def_cfa_register 7
2663:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2664:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2665:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2666:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2667:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 4445              		.loc 1 2667 0
 4446 0004 054B     		ldr	r3, .L276
 4447 0006 054A     		ldr	r2, .L276
 4448 0008 1268     		ldr	r2, [r2]
 4449 000a 1204     		lsls	r2, r2, #16
 4450 000c 120C     		lsrs	r2, r2, #16
2668:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 4451              		.loc 1 2668 0
 4452 000e 0449     		ldr	r1, .L276+4
 4453 0010 0A43     		orrs	r2, r1
2667:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 4454              		.loc 1 2667 0
 4455 0012 1A60     		str	r2, [r3]
2669:Generated_Source\PSoC4/CyLib.c **** }
 4456              		.loc 1 2669 0
 4457 0014 C046     		nop
 4458 0016 BD46     		mov	sp, r7
 4459              		@ sp needed
 4460 0018 80BD     		pop	{r7, pc}
 4461              	.L277:
 4462 001a C046     		.align	2
 4463              	.L276:
 4464 001c 0CED00E0 		.word	-536810228
 4465 0020 0400FA05 		.word	100270084
 4466              		.cfi_endproc
 4467              	.LFE49:
 4468              		.size	CySoftwareReset, .-CySoftwareReset
 4469              		.section	.text.CyDelay,"ax",%progbits
 4470              		.align	2
 4471              		.global	CyDelay
 4472              		.code	16
 4473              		.thumb_func
 4474              		.type	CyDelay, %function
 4475              	CyDelay:
 4476              	.LFB50:
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2673:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2674:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 127


2675:Generated_Source\PSoC4/CyLib.c **** *
2676:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2677:Generated_Source\PSoC4/CyLib.c **** *
2678:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2679:Generated_Source\PSoC4/CyLib.c **** *
2680:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2681:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2682:Generated_Source\PSoC4/CyLib.c **** {
 4477              		.loc 1 2682 0
 4478              		.cfi_startproc
 4479              		@ args = 0, pretend = 0, frame = 8
 4480              		@ frame_needed = 1, uses_anonymous_args = 0
 4481 0000 80B5     		push	{r7, lr}
 4482              		.cfi_def_cfa_offset 8
 4483              		.cfi_offset 7, -8
 4484              		.cfi_offset 14, -4
 4485 0002 82B0     		sub	sp, sp, #8
 4486              		.cfi_def_cfa_offset 16
 4487 0004 00AF     		add	r7, sp, #0
 4488              		.cfi_def_cfa_register 7
 4489 0006 7860     		str	r0, [r7, #4]
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 4490              		.loc 1 2683 0
 4491 0008 09E0     		b	.L279
 4492              	.L280:
2684:Generated_Source\PSoC4/CyLib.c ****     {
2685:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2686:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2687:Generated_Source\PSoC4/CyLib.c ****          */
2688:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 4493              		.loc 1 2688 0
 4494 000a 0D4B     		ldr	r3, .L281
 4495 000c 1B68     		ldr	r3, [r3]
 4496 000e 1800     		movs	r0, r3
 4497 0010 FFF7FEFF 		bl	CyDelayCycles
2689:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 4498              		.loc 1 2689 0
 4499 0014 7B68     		ldr	r3, [r7, #4]
 4500 0016 0B4A     		ldr	r2, .L281+4
 4501 0018 9446     		mov	ip, r2
 4502 001a 6344     		add	r3, r3, ip
 4503 001c 7B60     		str	r3, [r7, #4]
 4504              	.L279:
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 4505              		.loc 1 2683 0
 4506 001e 7A68     		ldr	r2, [r7, #4]
 4507 0020 8023     		movs	r3, #128
 4508 0022 1B02     		lsls	r3, r3, #8
 4509 0024 9A42     		cmp	r2, r3
 4510 0026 F0D8     		bhi	.L280
2690:Generated_Source\PSoC4/CyLib.c ****     }
2691:Generated_Source\PSoC4/CyLib.c **** 
2692:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 4511              		.loc 1 2692 0
 4512 0028 074B     		ldr	r3, .L281+8
 4513 002a 1B68     		ldr	r3, [r3]
 4514 002c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 128


 4515 002e 5343     		muls	r3, r2
 4516 0030 1800     		movs	r0, r3
 4517 0032 FFF7FEFF 		bl	CyDelayCycles
2693:Generated_Source\PSoC4/CyLib.c **** }
 4518              		.loc 1 2693 0
 4519 0036 C046     		nop
 4520 0038 BD46     		mov	sp, r7
 4521 003a 02B0     		add	sp, sp, #8
 4522              		@ sp needed
 4523 003c 80BD     		pop	{r7, pc}
 4524              	.L282:
 4525 003e C046     		.align	2
 4526              	.L281:
 4527 0040 00000000 		.word	cydelay32kMs
 4528 0044 0080FFFF 		.word	-32768
 4529 0048 00000000 		.word	cydelayFreqKhz
 4530              		.cfi_endproc
 4531              	.LFE50:
 4532              		.size	CyDelay, .-CyDelay
 4533              		.section	.text.CyDelayUs,"ax",%progbits
 4534              		.align	2
 4535              		.global	CyDelayUs
 4536              		.code	16
 4537              		.thumb_func
 4538              		.type	CyDelayUs, %function
 4539              	CyDelayUs:
 4540              	.LFB51:
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** 
2696:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2697:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2698:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2699:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2705:Generated_Source\PSoC4/CyLib.c **** {
 4541              		.loc 1 2705 0
 4542              		.cfi_startproc
 4543              		@ args = 0, pretend = 0, frame = 8
 4544              		@ frame_needed = 1, uses_anonymous_args = 0
 4545 0000 80B5     		push	{r7, lr}
 4546              		.cfi_def_cfa_offset 8
 4547              		.cfi_offset 7, -8
 4548              		.cfi_offset 14, -4
 4549 0002 82B0     		sub	sp, sp, #8
 4550              		.cfi_def_cfa_offset 16
 4551 0004 00AF     		add	r7, sp, #0
 4552              		.cfi_def_cfa_register 7
 4553 0006 0200     		movs	r2, r0
 4554 0008 BB1D     		adds	r3, r7, #6
 4555 000a 1A80     		strh	r2, [r3]
2706:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 4556              		.loc 1 2706 0
 4557 000c BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 129


 4558 000e 1B88     		ldrh	r3, [r3]
 4559 0010 044A     		ldr	r2, .L284
 4560 0012 1278     		ldrb	r2, [r2]
 4561 0014 5343     		muls	r3, r2
 4562 0016 1800     		movs	r0, r3
 4563 0018 FFF7FEFF 		bl	CyDelayCycles
2707:Generated_Source\PSoC4/CyLib.c **** }
 4564              		.loc 1 2707 0
 4565 001c C046     		nop
 4566 001e BD46     		mov	sp, r7
 4567 0020 02B0     		add	sp, sp, #8
 4568              		@ sp needed
 4569 0022 80BD     		pop	{r7, pc}
 4570              	.L285:
 4571              		.align	2
 4572              	.L284:
 4573 0024 00000000 		.word	cydelayFreqMhz
 4574              		.cfi_endproc
 4575              	.LFE51:
 4576              		.size	CyDelayUs, .-CyDelayUs
 4577              		.section	.text.CyDelayFreq,"ax",%progbits
 4578              		.align	2
 4579              		.global	CyDelayFreq
 4580              		.code	16
 4581              		.thumb_func
 4582              		.type	CyDelayFreq, %function
 4583              	CyDelayFreq:
 4584              	.LFB52:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2718:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2719:Generated_Source\PSoC4/CyLib.c **** {
 4585              		.loc 1 2719 0
 4586              		.cfi_startproc
 4587              		@ args = 0, pretend = 0, frame = 8
 4588              		@ frame_needed = 1, uses_anonymous_args = 0
 4589 0000 80B5     		push	{r7, lr}
 4590              		.cfi_def_cfa_offset 8
 4591              		.cfi_offset 7, -8
 4592              		.cfi_offset 14, -4
 4593 0002 82B0     		sub	sp, sp, #8
 4594              		.cfi_def_cfa_offset 16
 4595 0004 00AF     		add	r7, sp, #0
 4596              		.cfi_def_cfa_register 7
 4597 0006 7860     		str	r0, [r7, #4]
2720:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 4598              		.loc 1 2720 0
 4599 0008 7B68     		ldr	r3, [r7, #4]
 4600 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 130


 4601 000c 03D0     		beq	.L287
2721:Generated_Source\PSoC4/CyLib.c ****     {
2722:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 4602              		.loc 1 2722 0
 4603 000e 154B     		ldr	r3, .L289
 4604 0010 7A68     		ldr	r2, [r7, #4]
 4605 0012 1A60     		str	r2, [r3]
 4606 0014 02E0     		b	.L288
 4607              	.L287:
2723:Generated_Source\PSoC4/CyLib.c ****     }
2724:Generated_Source\PSoC4/CyLib.c ****     else
2725:Generated_Source\PSoC4/CyLib.c ****     {
2726:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 4608              		.loc 1 2726 0
 4609 0016 134B     		ldr	r3, .L289
 4610 0018 134A     		ldr	r2, .L289+4
 4611 001a 1A60     		str	r2, [r3]
 4612              	.L288:
2727:Generated_Source\PSoC4/CyLib.c ****     }
2728:Generated_Source\PSoC4/CyLib.c **** 
2729:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 4613              		.loc 1 2729 0
 4614 001c 114B     		ldr	r3, .L289
 4615 001e 1B68     		ldr	r3, [r3]
 4616 0020 124A     		ldr	r2, .L289+8
 4617 0022 9446     		mov	ip, r2
 4618 0024 6344     		add	r3, r3, ip
 4619 0026 1249     		ldr	r1, .L289+12
 4620 0028 1800     		movs	r0, r3
 4621 002a FFF7FEFF 		bl	__aeabi_uidiv
 4622 002e 0300     		movs	r3, r0
 4623 0030 DAB2     		uxtb	r2, r3
 4624 0032 104B     		ldr	r3, .L289+16
 4625 0034 1A70     		strb	r2, [r3]
2730:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 4626              		.loc 1 2730 0
 4627 0036 0B4B     		ldr	r3, .L289
 4628 0038 1B68     		ldr	r3, [r3]
 4629 003a 0F4A     		ldr	r2, .L289+20
 4630 003c 9A18     		adds	r2, r3, r2
 4631 003e FA23     		movs	r3, #250
 4632 0040 9900     		lsls	r1, r3, #2
 4633 0042 1000     		movs	r0, r2
 4634 0044 FFF7FEFF 		bl	__aeabi_uidiv
 4635 0048 0300     		movs	r3, r0
 4636 004a 1A00     		movs	r2, r3
 4637 004c 0B4B     		ldr	r3, .L289+24
 4638 004e 1A60     		str	r2, [r3]
2731:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 4639              		.loc 1 2731 0
 4640 0050 0A4B     		ldr	r3, .L289+24
 4641 0052 1B68     		ldr	r3, [r3]
 4642 0054 DA03     		lsls	r2, r3, #15
 4643 0056 0A4B     		ldr	r3, .L289+28
 4644 0058 1A60     		str	r2, [r3]
2732:Generated_Source\PSoC4/CyLib.c **** }
 4645              		.loc 1 2732 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 131


 4646 005a C046     		nop
 4647 005c BD46     		mov	sp, r7
 4648 005e 02B0     		add	sp, sp, #8
 4649              		@ sp needed
 4650 0060 80BD     		pop	{r7, pc}
 4651              	.L290:
 4652 0062 C046     		.align	2
 4653              	.L289:
 4654 0064 00000000 		.word	cydelayFreqHz
 4655 0068 00366E01 		.word	24000000
 4656 006c 3F420F00 		.word	999999
 4657 0070 40420F00 		.word	1000000
 4658 0074 00000000 		.word	cydelayFreqMhz
 4659 0078 E7030000 		.word	999
 4660 007c 00000000 		.word	cydelayFreqKhz
 4661 0080 00000000 		.word	cydelay32kMs
 4662              		.cfi_endproc
 4663              	.LFE52:
 4664              		.size	CyDelayFreq, .-CyDelayFreq
 4665              		.section	.text.CySysTickStart,"ax",%progbits
 4666              		.align	2
 4667              		.global	CySysTickStart
 4668              		.code	16
 4669              		.thumb_func
 4670              		.type	CySysTickStart, %function
 4671              	CySysTickStart:
 4672              	.LFB53:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2740:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2743:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2744:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2747:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2748:Generated_Source\PSoC4/CyLib.c **** *
2749:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2750:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2751:Generated_Source\PSoC4/CyLib.c **** {
 4673              		.loc 1 2751 0
 4674              		.cfi_startproc
 4675              		@ args = 0, pretend = 0, frame = 0
 4676              		@ frame_needed = 1, uses_anonymous_args = 0
 4677 0000 80B5     		push	{r7, lr}
 4678              		.cfi_def_cfa_offset 8
 4679              		.cfi_offset 7, -8
 4680              		.cfi_offset 14, -4
 4681 0002 00AF     		add	r7, sp, #0
 4682              		.cfi_def_cfa_register 7
2752:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 132


 4683              		.loc 1 2752 0
 4684 0004 064B     		ldr	r3, .L293
 4685 0006 1B68     		ldr	r3, [r3]
 4686 0008 002B     		cmp	r3, #0
 4687 000a 04D1     		bne	.L292
2753:Generated_Source\PSoC4/CyLib.c ****     {
2754:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 4688              		.loc 1 2754 0
 4689 000c FFF7FEFF 		bl	CySysTickInit
2755:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 4690              		.loc 1 2755 0
 4691 0010 034B     		ldr	r3, .L293
 4692 0012 0122     		movs	r2, #1
 4693 0014 1A60     		str	r2, [r3]
 4694              	.L292:
2756:Generated_Source\PSoC4/CyLib.c ****     }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 4695              		.loc 1 2758 0
 4696 0016 FFF7FEFF 		bl	CySysTickEnable
2759:Generated_Source\PSoC4/CyLib.c **** }
 4697              		.loc 1 2759 0
 4698 001a C046     		nop
 4699 001c BD46     		mov	sp, r7
 4700              		@ sp needed
 4701 001e 80BD     		pop	{r7, pc}
 4702              	.L294:
 4703              		.align	2
 4704              	.L293:
 4705 0020 00000000 		.word	CySysTickInitVar
 4706              		.cfi_endproc
 4707              	.LFE53:
 4708              		.size	CySysTickStart, .-CySysTickStart
 4709              		.section	.text.CySysTickInit,"ax",%progbits
 4710              		.align	2
 4711              		.global	CySysTickInit
 4712              		.code	16
 4713              		.thumb_func
 4714              		.type	CySysTickInit, %function
 4715              	CySysTickInit:
 4716              	.LFB54:
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** 
2762:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2763:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2764:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2767:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2768:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2769:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2772:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2773:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 133


2776:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2777:Generated_Source\PSoC4/CyLib.c **** *
2778:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2779:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2780:Generated_Source\PSoC4/CyLib.c **** {
 4717              		.loc 1 2780 0
 4718              		.cfi_startproc
 4719              		@ args = 0, pretend = 0, frame = 8
 4720              		@ frame_needed = 1, uses_anonymous_args = 0
 4721 0000 80B5     		push	{r7, lr}
 4722              		.cfi_def_cfa_offset 8
 4723              		.cfi_offset 7, -8
 4724              		.cfi_offset 14, -4
 4725 0002 82B0     		sub	sp, sp, #8
 4726              		.cfi_def_cfa_offset 16
 4727 0004 00AF     		add	r7, sp, #0
 4728              		.cfi_def_cfa_register 7
2781:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2782:Generated_Source\PSoC4/CyLib.c **** 
2783:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 4729              		.loc 1 2783 0
 4730 0006 0023     		movs	r3, #0
 4731 0008 7B60     		str	r3, [r7, #4]
 4732 000a 07E0     		b	.L296
 4733              	.L297:
2784:Generated_Source\PSoC4/CyLib.c ****     {
2785:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 4734              		.loc 1 2785 0 discriminator 3
 4735 000c 114B     		ldr	r3, .L298
 4736 000e 7A68     		ldr	r2, [r7, #4]
 4737 0010 9200     		lsls	r2, r2, #2
 4738 0012 0021     		movs	r1, #0
 4739 0014 D150     		str	r1, [r2, r3]
2783:Generated_Source\PSoC4/CyLib.c ****     {
 4740              		.loc 1 2783 0 discriminator 3
 4741 0016 7B68     		ldr	r3, [r7, #4]
 4742 0018 0133     		adds	r3, r3, #1
 4743 001a 7B60     		str	r3, [r7, #4]
 4744              	.L296:
2783:Generated_Source\PSoC4/CyLib.c ****     {
 4745              		.loc 1 2783 0 is_stmt 0 discriminator 1
 4746 001c 7B68     		ldr	r3, [r7, #4]
 4747 001e 042B     		cmp	r3, #4
 4748 0020 F4D9     		bls	.L297
2786:Generated_Source\PSoC4/CyLib.c ****     }
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 4749              		.loc 1 2788 0 is_stmt 1
 4750 0022 0D4B     		ldr	r3, .L298+4
 4751 0024 1900     		movs	r1, r3
 4752 0026 0F20     		movs	r0, #15
 4753 0028 FFF7FEFF 		bl	CyIntSetSysVector
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2791:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 4754              		.loc 1 2791 0
 4755 002c 0120     		movs	r0, #1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 134


 4756 002e FFF7FEFF 		bl	CySysTickSetClockSource
2792:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2793:Generated_Source\PSoC4/CyLib.c **** 
2794:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 4757              		.loc 1 2794 0
 4758 0032 0A4B     		ldr	r3, .L298+8
 4759 0034 1A68     		ldr	r2, [r3]
 4760 0036 FA23     		movs	r3, #250
 4761 0038 9900     		lsls	r1, r3, #2
 4762 003a 1000     		movs	r0, r2
 4763 003c FFF7FEFF 		bl	__aeabi_uidiv
 4764 0040 0300     		movs	r3, r0
 4765 0042 1800     		movs	r0, r3
 4766 0044 FFF7FEFF 		bl	CySysTickSetReload
2795:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 4767              		.loc 1 2795 0
 4768 0048 FFF7FEFF 		bl	CySysTickClear
2796:Generated_Source\PSoC4/CyLib.c **** }
 4769              		.loc 1 2796 0
 4770 004c C046     		nop
 4771 004e BD46     		mov	sp, r7
 4772 0050 02B0     		add	sp, sp, #8
 4773              		@ sp needed
 4774 0052 80BD     		pop	{r7, pc}
 4775              	.L299:
 4776              		.align	2
 4777              	.L298:
 4778 0054 00000000 		.word	CySysTickCallbacks
 4779 0058 00000000 		.word	CySysTickServiceCallbacks
 4780 005c 00000000 		.word	cydelayFreqHz
 4781              		.cfi_endproc
 4782              	.LFE54:
 4783              		.size	CySysTickInit, .-CySysTickInit
 4784              		.section	.text.CySysTickEnable,"ax",%progbits
 4785              		.align	2
 4786              		.global	CySysTickEnable
 4787              		.code	16
 4788              		.thumb_func
 4789              		.type	CySysTickEnable, %function
 4790              	CySysTickEnable:
 4791              	.LFB55:
2797:Generated_Source\PSoC4/CyLib.c **** 
2798:Generated_Source\PSoC4/CyLib.c **** 
2799:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2800:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2801:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2802:Generated_Source\PSoC4/CyLib.c **** *
2803:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2806:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2809:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2810:Generated_Source\PSoC4/CyLib.c **** {
 4792              		.loc 1 2810 0
 4793              		.cfi_startproc
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 135


 4794              		@ args = 0, pretend = 0, frame = 0
 4795              		@ frame_needed = 1, uses_anonymous_args = 0
 4796 0000 80B5     		push	{r7, lr}
 4797              		.cfi_def_cfa_offset 8
 4798              		.cfi_offset 7, -8
 4799              		.cfi_offset 14, -4
 4800 0002 00AF     		add	r7, sp, #0
 4801              		.cfi_def_cfa_register 7
2811:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 4802              		.loc 1 2811 0
 4803 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2812:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 4804              		.loc 1 2812 0
 4805 0008 044B     		ldr	r3, .L301
 4806 000a 044A     		ldr	r2, .L301
 4807 000c 1268     		ldr	r2, [r2]
 4808 000e 0121     		movs	r1, #1
 4809 0010 0A43     		orrs	r2, r1
 4810 0012 1A60     		str	r2, [r3]
2813:Generated_Source\PSoC4/CyLib.c **** }
 4811              		.loc 1 2813 0
 4812 0014 C046     		nop
 4813 0016 BD46     		mov	sp, r7
 4814              		@ sp needed
 4815 0018 80BD     		pop	{r7, pc}
 4816              	.L302:
 4817 001a C046     		.align	2
 4818              	.L301:
 4819 001c 10E000E0 		.word	-536813552
 4820              		.cfi_endproc
 4821              	.LFE55:
 4822              		.size	CySysTickEnable, .-CySysTickEnable
 4823              		.section	.text.CySysTickStop,"ax",%progbits
 4824              		.align	2
 4825              		.global	CySysTickStop
 4826              		.code	16
 4827              		.thumb_func
 4828              		.type	CySysTickStop, %function
 4829              	CySysTickStop:
 4830              	.LFB56:
2814:Generated_Source\PSoC4/CyLib.c **** 
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2817:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2818:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2823:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2824:Generated_Source\PSoC4/CyLib.c **** *
2825:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2826:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2827:Generated_Source\PSoC4/CyLib.c **** {
 4831              		.loc 1 2827 0
 4832              		.cfi_startproc
 4833              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 136


 4834              		@ frame_needed = 1, uses_anonymous_args = 0
 4835 0000 80B5     		push	{r7, lr}
 4836              		.cfi_def_cfa_offset 8
 4837              		.cfi_offset 7, -8
 4838              		.cfi_offset 14, -4
 4839 0002 00AF     		add	r7, sp, #0
 4840              		.cfi_def_cfa_register 7
2828:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 4841              		.loc 1 2828 0
 4842 0004 044B     		ldr	r3, .L304
 4843 0006 044A     		ldr	r2, .L304
 4844 0008 1268     		ldr	r2, [r2]
 4845 000a 0121     		movs	r1, #1
 4846 000c 8A43     		bics	r2, r1
 4847 000e 1A60     		str	r2, [r3]
2829:Generated_Source\PSoC4/CyLib.c **** }
 4848              		.loc 1 2829 0
 4849 0010 C046     		nop
 4850 0012 BD46     		mov	sp, r7
 4851              		@ sp needed
 4852 0014 80BD     		pop	{r7, pc}
 4853              	.L305:
 4854 0016 C046     		.align	2
 4855              	.L304:
 4856 0018 10E000E0 		.word	-536813552
 4857              		.cfi_endproc
 4858              	.LFE56:
 4859              		.size	CySysTickStop, .-CySysTickStop
 4860              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 4861              		.align	2
 4862              		.global	CySysTickEnableInterrupt
 4863              		.code	16
 4864              		.thumb_func
 4865              		.type	CySysTickEnableInterrupt, %function
 4866              	CySysTickEnableInterrupt:
 4867              	.LFB57:
2830:Generated_Source\PSoC4/CyLib.c **** 
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2833:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2834:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2835:Generated_Source\PSoC4/CyLib.c **** *
2836:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2837:Generated_Source\PSoC4/CyLib.c **** *
2838:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2839:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2840:Generated_Source\PSoC4/CyLib.c **** *
2841:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2843:Generated_Source\PSoC4/CyLib.c **** {
 4868              		.loc 1 2843 0
 4869              		.cfi_startproc
 4870              		@ args = 0, pretend = 0, frame = 0
 4871              		@ frame_needed = 1, uses_anonymous_args = 0
 4872 0000 80B5     		push	{r7, lr}
 4873              		.cfi_def_cfa_offset 8
 4874              		.cfi_offset 7, -8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 137


 4875              		.cfi_offset 14, -4
 4876 0002 00AF     		add	r7, sp, #0
 4877              		.cfi_def_cfa_register 7
2844:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 4878              		.loc 1 2844 0
 4879 0004 044B     		ldr	r3, .L307
 4880 0006 044A     		ldr	r2, .L307
 4881 0008 1268     		ldr	r2, [r2]
 4882 000a 0221     		movs	r1, #2
 4883 000c 0A43     		orrs	r2, r1
 4884 000e 1A60     		str	r2, [r3]
2845:Generated_Source\PSoC4/CyLib.c **** }
 4885              		.loc 1 2845 0
 4886 0010 C046     		nop
 4887 0012 BD46     		mov	sp, r7
 4888              		@ sp needed
 4889 0014 80BD     		pop	{r7, pc}
 4890              	.L308:
 4891 0016 C046     		.align	2
 4892              	.L307:
 4893 0018 10E000E0 		.word	-536813552
 4894              		.cfi_endproc
 4895              	.LFE57:
 4896              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 4897              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 4898              		.align	2
 4899              		.global	CySysTickDisableInterrupt
 4900              		.code	16
 4901              		.thumb_func
 4902              		.type	CySysTickDisableInterrupt, %function
 4903              	CySysTickDisableInterrupt:
 4904              	.LFB58:
2846:Generated_Source\PSoC4/CyLib.c **** 
2847:Generated_Source\PSoC4/CyLib.c **** 
2848:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2849:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2850:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2855:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2858:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2859:Generated_Source\PSoC4/CyLib.c **** {
 4905              		.loc 1 2859 0
 4906              		.cfi_startproc
 4907              		@ args = 0, pretend = 0, frame = 0
 4908              		@ frame_needed = 1, uses_anonymous_args = 0
 4909 0000 80B5     		push	{r7, lr}
 4910              		.cfi_def_cfa_offset 8
 4911              		.cfi_offset 7, -8
 4912              		.cfi_offset 14, -4
 4913 0002 00AF     		add	r7, sp, #0
 4914              		.cfi_def_cfa_register 7
2860:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 138


 4915              		.loc 1 2860 0
 4916 0004 044B     		ldr	r3, .L310
 4917 0006 044A     		ldr	r2, .L310
 4918 0008 1268     		ldr	r2, [r2]
 4919 000a 0221     		movs	r1, #2
 4920 000c 8A43     		bics	r2, r1
 4921 000e 1A60     		str	r2, [r3]
2861:Generated_Source\PSoC4/CyLib.c **** }
 4922              		.loc 1 2861 0
 4923 0010 C046     		nop
 4924 0012 BD46     		mov	sp, r7
 4925              		@ sp needed
 4926 0014 80BD     		pop	{r7, pc}
 4927              	.L311:
 4928 0016 C046     		.align	2
 4929              	.L310:
 4930 0018 10E000E0 		.word	-536813552
 4931              		.cfi_endproc
 4932              	.LFE58:
 4933              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 4934              		.section	.text.CySysTickSetReload,"ax",%progbits
 4935              		.align	2
 4936              		.global	CySysTickSetReload
 4937              		.code	16
 4938              		.thumb_func
 4939              		.type	CySysTickSetReload, %function
 4940              	CySysTickSetReload:
 4941              	.LFB59:
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c **** 
2864:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2865:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2866:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2869:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2870:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2871:Generated_Source\PSoC4/CyLib.c **** *
2872:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2873:Generated_Source\PSoC4/CyLib.c **** *
2874:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2875:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2876:Generated_Source\PSoC4/CyLib.c **** {
 4942              		.loc 1 2876 0
 4943              		.cfi_startproc
 4944              		@ args = 0, pretend = 0, frame = 8
 4945              		@ frame_needed = 1, uses_anonymous_args = 0
 4946 0000 80B5     		push	{r7, lr}
 4947              		.cfi_def_cfa_offset 8
 4948              		.cfi_offset 7, -8
 4949              		.cfi_offset 14, -4
 4950 0002 82B0     		sub	sp, sp, #8
 4951              		.cfi_def_cfa_offset 16
 4952 0004 00AF     		add	r7, sp, #0
 4953              		.cfi_def_cfa_register 7
 4954 0006 7860     		str	r0, [r7, #4]
2877:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 139


 4955              		.loc 1 2877 0
 4956 0008 044B     		ldr	r3, .L313
 4957 000a 7A68     		ldr	r2, [r7, #4]
 4958 000c 1202     		lsls	r2, r2, #8
 4959 000e 120A     		lsrs	r2, r2, #8
 4960 0010 1A60     		str	r2, [r3]
2878:Generated_Source\PSoC4/CyLib.c **** }
 4961              		.loc 1 2878 0
 4962 0012 C046     		nop
 4963 0014 BD46     		mov	sp, r7
 4964 0016 02B0     		add	sp, sp, #8
 4965              		@ sp needed
 4966 0018 80BD     		pop	{r7, pc}
 4967              	.L314:
 4968 001a C046     		.align	2
 4969              	.L313:
 4970 001c 14E000E0 		.word	-536813548
 4971              		.cfi_endproc
 4972              	.LFE59:
 4973              		.size	CySysTickSetReload, .-CySysTickSetReload
 4974              		.section	.text.CySysTickGetReload,"ax",%progbits
 4975              		.align	2
 4976              		.global	CySysTickGetReload
 4977              		.code	16
 4978              		.thumb_func
 4979              		.type	CySysTickGetReload, %function
 4980              	CySysTickGetReload:
 4981              	.LFB60:
2879:Generated_Source\PSoC4/CyLib.c **** 
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2882:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2883:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2884:Generated_Source\PSoC4/CyLib.c **** *
2885:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2886:Generated_Source\PSoC4/CyLib.c **** *
2887:Generated_Source\PSoC4/CyLib.c **** * \return
2888:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2889:Generated_Source\PSoC4/CyLib.c **** *
2890:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2891:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2892:Generated_Source\PSoC4/CyLib.c **** {
 4982              		.loc 1 2892 0
 4983              		.cfi_startproc
 4984              		@ args = 0, pretend = 0, frame = 0
 4985              		@ frame_needed = 1, uses_anonymous_args = 0
 4986 0000 80B5     		push	{r7, lr}
 4987              		.cfi_def_cfa_offset 8
 4988              		.cfi_offset 7, -8
 4989              		.cfi_offset 14, -4
 4990 0002 00AF     		add	r7, sp, #0
 4991              		.cfi_def_cfa_register 7
2893:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 4992              		.loc 1 2893 0
 4993 0004 034B     		ldr	r3, .L317
 4994 0006 1B68     		ldr	r3, [r3]
 4995 0008 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 140


 4996 000a 1B0A     		lsrs	r3, r3, #8
2894:Generated_Source\PSoC4/CyLib.c **** }
 4997              		.loc 1 2894 0
 4998 000c 1800     		movs	r0, r3
 4999 000e BD46     		mov	sp, r7
 5000              		@ sp needed
 5001 0010 80BD     		pop	{r7, pc}
 5002              	.L318:
 5003 0012 C046     		.align	2
 5004              	.L317:
 5005 0014 14E000E0 		.word	-536813548
 5006              		.cfi_endproc
 5007              	.LFE60:
 5008              		.size	CySysTickGetReload, .-CySysTickGetReload
 5009              		.section	.text.CySysTickGetValue,"ax",%progbits
 5010              		.align	2
 5011              		.global	CySysTickGetValue
 5012              		.code	16
 5013              		.thumb_func
 5014              		.type	CySysTickGetValue, %function
 5015              	CySysTickGetValue:
 5016              	.LFB61:
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** 
2897:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2898:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2899:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2902:Generated_Source\PSoC4/CyLib.c **** *
2903:Generated_Source\PSoC4/CyLib.c **** * \return
2904:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2908:Generated_Source\PSoC4/CyLib.c **** {
 5017              		.loc 1 2908 0
 5018              		.cfi_startproc
 5019              		@ args = 0, pretend = 0, frame = 0
 5020              		@ frame_needed = 1, uses_anonymous_args = 0
 5021 0000 80B5     		push	{r7, lr}
 5022              		.cfi_def_cfa_offset 8
 5023              		.cfi_offset 7, -8
 5024              		.cfi_offset 14, -4
 5025 0002 00AF     		add	r7, sp, #0
 5026              		.cfi_def_cfa_register 7
2909:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 5027              		.loc 1 2909 0
 5028 0004 034B     		ldr	r3, .L321
 5029 0006 1B68     		ldr	r3, [r3]
 5030 0008 1B02     		lsls	r3, r3, #8
 5031 000a 1B0A     		lsrs	r3, r3, #8
2910:Generated_Source\PSoC4/CyLib.c **** }
 5032              		.loc 1 2910 0
 5033 000c 1800     		movs	r0, r3
 5034 000e BD46     		mov	sp, r7
 5035              		@ sp needed
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 141


 5036 0010 80BD     		pop	{r7, pc}
 5037              	.L322:
 5038 0012 C046     		.align	2
 5039              	.L321:
 5040 0014 18E000E0 		.word	-536813544
 5041              		.cfi_endproc
 5042              	.LFE61:
 5043              		.size	CySysTickGetValue, .-CySysTickGetValue
 5044              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 5045              		.align	2
 5046              		.global	CySysTickSetClockSource
 5047              		.code	16
 5048              		.thumb_func
 5049              		.type	CySysTickSetClockSource, %function
 5050              	CySysTickSetClockSource:
 5051              	.LFB62:
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2914:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2915:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2916:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2917:Generated_Source\PSoC4/CyLib.c ****     *
2918:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2919:Generated_Source\PSoC4/CyLib.c ****     *
2920:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2921:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2922:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2923:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2924:Generated_Source\PSoC4/CyLib.c ****     *
2925:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2926:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2927:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2928:Generated_Source\PSoC4/CyLib.c ****     *
2929:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2930:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2931:Generated_Source\PSoC4/CyLib.c ****     *
2932:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2933:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2934:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2935:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2936:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2937:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2938:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2939:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2940:Generated_Source\PSoC4/CyLib.c ****     {
 5052              		.loc 1 2940 0
 5053              		.cfi_startproc
 5054              		@ args = 0, pretend = 0, frame = 8
 5055              		@ frame_needed = 1, uses_anonymous_args = 0
 5056 0000 80B5     		push	{r7, lr}
 5057              		.cfi_def_cfa_offset 8
 5058              		.cfi_offset 7, -8
 5059              		.cfi_offset 14, -4
 5060 0002 82B0     		sub	sp, sp, #8
 5061              		.cfi_def_cfa_offset 16
 5062 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 142


 5063              		.cfi_def_cfa_register 7
 5064 0006 7860     		str	r0, [r7, #4]
2941:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 5065              		.loc 1 2941 0
 5066 0008 7B68     		ldr	r3, [r7, #4]
 5067 000a 012B     		cmp	r3, #1
 5068 000c 06D1     		bne	.L324
2942:Generated_Source\PSoC4/CyLib.c ****         {
2943:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 5069              		.loc 1 2943 0
 5070 000e 084B     		ldr	r3, .L327
 5071 0010 074A     		ldr	r2, .L327
 5072 0012 1268     		ldr	r2, [r2]
 5073 0014 0421     		movs	r1, #4
 5074 0016 0A43     		orrs	r2, r1
 5075 0018 1A60     		str	r2, [r3]
2944:Generated_Source\PSoC4/CyLib.c ****         }
2945:Generated_Source\PSoC4/CyLib.c ****         else
2946:Generated_Source\PSoC4/CyLib.c ****         {
2947:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2948:Generated_Source\PSoC4/CyLib.c ****         }
2949:Generated_Source\PSoC4/CyLib.c ****     }
 5076              		.loc 1 2949 0
 5077 001a 05E0     		b	.L326
 5078              	.L324:
2947:Generated_Source\PSoC4/CyLib.c ****         }
 5079              		.loc 1 2947 0
 5080 001c 044B     		ldr	r3, .L327
 5081 001e 044A     		ldr	r2, .L327
 5082 0020 1268     		ldr	r2, [r2]
 5083 0022 0421     		movs	r1, #4
 5084 0024 8A43     		bics	r2, r1
 5085 0026 1A60     		str	r2, [r3]
 5086              	.L326:
 5087              		.loc 1 2949 0
 5088 0028 C046     		nop
 5089 002a BD46     		mov	sp, r7
 5090 002c 02B0     		add	sp, sp, #8
 5091              		@ sp needed
 5092 002e 80BD     		pop	{r7, pc}
 5093              	.L328:
 5094              		.align	2
 5095              	.L327:
 5096 0030 10E000E0 		.word	-536813552
 5097              		.cfi_endproc
 5098              	.LFE62:
 5099              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 5100              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 5101              		.align	2
 5102              		.global	CySysTickGetClockSource
 5103              		.code	16
 5104              		.thumb_func
 5105              		.type	CySysTickGetClockSource, %function
 5106              	CySysTickGetClockSource:
 5107              	.LFB63:
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c ****     
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 143


2952:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2954:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c ****     *
2956:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2959:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2961:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2963:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2964:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2965:Generated_Source\PSoC4/CyLib.c ****     {
 5108              		.loc 1 2965 0
 5109              		.cfi_startproc
 5110              		@ args = 0, pretend = 0, frame = 0
 5111              		@ frame_needed = 1, uses_anonymous_args = 0
 5112 0000 80B5     		push	{r7, lr}
 5113              		.cfi_def_cfa_offset 8
 5114              		.cfi_offset 7, -8
 5115              		.cfi_offset 14, -4
 5116 0002 00AF     		add	r7, sp, #0
 5117              		.cfi_def_cfa_register 7
2966:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 5118              		.loc 1 2966 0
 5119 0004 034B     		ldr	r3, .L331
 5120 0006 1B68     		ldr	r3, [r3]
 5121 0008 9B08     		lsrs	r3, r3, #2
 5122 000a 0122     		movs	r2, #1
 5123 000c 1340     		ands	r3, r2
2967:Generated_Source\PSoC4/CyLib.c ****     }
 5124              		.loc 1 2967 0
 5125 000e 1800     		movs	r0, r3
 5126 0010 BD46     		mov	sp, r7
 5127              		@ sp needed
 5128 0012 80BD     		pop	{r7, pc}
 5129              	.L332:
 5130              		.align	2
 5131              	.L331:
 5132 0014 10E000E0 		.word	-536813552
 5133              		.cfi_endproc
 5134              	.LFE63:
 5135              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 5136              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 5137              		.align	2
 5138              		.global	CySysTickGetCountFlag
 5139              		.code	16
 5140              		.thumb_func
 5141              		.type	CySysTickGetCountFlag, %function
 5142              	CySysTickGetCountFlag:
 5143              	.LFB64:
2968:Generated_Source\PSoC4/CyLib.c ****     
2969:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 144


2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2977:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2978:Generated_Source\PSoC4/CyLib.c **** *
2979:Generated_Source\PSoC4/CyLib.c **** * \return
2980:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *
2983:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2984:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2985:Generated_Source\PSoC4/CyLib.c **** *
2986:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2987:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2988:Generated_Source\PSoC4/CyLib.c **** {
 5144              		.loc 1 2988 0
 5145              		.cfi_startproc
 5146              		@ args = 0, pretend = 0, frame = 0
 5147              		@ frame_needed = 1, uses_anonymous_args = 0
 5148 0000 80B5     		push	{r7, lr}
 5149              		.cfi_def_cfa_offset 8
 5150              		.cfi_offset 7, -8
 5151              		.cfi_offset 14, -4
 5152 0002 00AF     		add	r7, sp, #0
 5153              		.cfi_def_cfa_register 7
2989:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 5154              		.loc 1 2989 0
 5155 0004 034B     		ldr	r3, .L335
 5156 0006 1B68     		ldr	r3, [r3]
 5157 0008 1B0C     		lsrs	r3, r3, #16
 5158 000a 0122     		movs	r2, #1
 5159 000c 1340     		ands	r3, r2
2990:Generated_Source\PSoC4/CyLib.c **** }
 5160              		.loc 1 2990 0
 5161 000e 1800     		movs	r0, r3
 5162 0010 BD46     		mov	sp, r7
 5163              		@ sp needed
 5164 0012 80BD     		pop	{r7, pc}
 5165              	.L336:
 5166              		.align	2
 5167              	.L335:
 5168 0014 10E000E0 		.word	-536813552
 5169              		.cfi_endproc
 5170              	.LFE64:
 5171              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 5172              		.section	.text.CySysTickClear,"ax",%progbits
 5173              		.align	2
 5174              		.global	CySysTickClear
 5175              		.code	16
 5176              		.thumb_func
 5177              		.type	CySysTickClear, %function
 5178              	CySysTickClear:
 5179              	.LFB65:
2991:Generated_Source\PSoC4/CyLib.c **** 
2992:Generated_Source\PSoC4/CyLib.c **** 
2993:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 145


2994:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2995:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2996:Generated_Source\PSoC4/CyLib.c **** *
2997:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2998:Generated_Source\PSoC4/CyLib.c **** *
2999:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3000:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3001:Generated_Source\PSoC4/CyLib.c **** {
 5180              		.loc 1 3001 0
 5181              		.cfi_startproc
 5182              		@ args = 0, pretend = 0, frame = 0
 5183              		@ frame_needed = 1, uses_anonymous_args = 0
 5184 0000 80B5     		push	{r7, lr}
 5185              		.cfi_def_cfa_offset 8
 5186              		.cfi_offset 7, -8
 5187              		.cfi_offset 14, -4
 5188 0002 00AF     		add	r7, sp, #0
 5189              		.cfi_def_cfa_register 7
3002:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 5190              		.loc 1 3002 0
 5191 0004 024B     		ldr	r3, .L338
 5192 0006 0022     		movs	r2, #0
 5193 0008 1A60     		str	r2, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** }
 5194              		.loc 1 3003 0
 5195 000a C046     		nop
 5196 000c BD46     		mov	sp, r7
 5197              		@ sp needed
 5198 000e 80BD     		pop	{r7, pc}
 5199              	.L339:
 5200              		.align	2
 5201              	.L338:
 5202 0010 18E000E0 		.word	-536813544
 5203              		.cfi_endproc
 5204              	.LFE65:
 5205              		.size	CySysTickClear, .-CySysTickClear
 5206              		.section	.text.CySysTickSetCallback,"ax",%progbits
 5207              		.align	2
 5208              		.global	CySysTickSetCallback
 5209              		.code	16
 5210              		.thumb_func
 5211              		.type	CySysTickSetCallback, %function
 5212              	CySysTickSetCallback:
 5213              	.LFB66:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3011:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3012:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3015:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3016:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 146


3017:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3018:Generated_Source\PSoC4/CyLib.c **** *  functions.
3019:Generated_Source\PSoC4/CyLib.c **** *
3020:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3021:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3024:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3025:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3026:Generated_Source\PSoC4/CyLib.c **** *
3027:Generated_Source\PSoC4/CyLib.c **** * \return
3028:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3029:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3030:Generated_Source\PSoC4/CyLib.c **** *
3031:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3032:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3033:Generated_Source\PSoC4/CyLib.c **** *
3034:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3036:Generated_Source\PSoC4/CyLib.c **** {
 5214              		.loc 1 3036 0
 5215              		.cfi_startproc
 5216              		@ args = 0, pretend = 0, frame = 16
 5217              		@ frame_needed = 1, uses_anonymous_args = 0
 5218 0000 80B5     		push	{r7, lr}
 5219              		.cfi_def_cfa_offset 8
 5220              		.cfi_offset 7, -8
 5221              		.cfi_offset 14, -4
 5222 0002 84B0     		sub	sp, sp, #16
 5223              		.cfi_def_cfa_offset 24
 5224 0004 00AF     		add	r7, sp, #0
 5225              		.cfi_def_cfa_register 7
 5226 0006 7860     		str	r0, [r7, #4]
 5227 0008 3960     		str	r1, [r7]
3037:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 5228              		.loc 1 3039 0
 5229 000a 074B     		ldr	r3, .L342
 5230 000c 7A68     		ldr	r2, [r7, #4]
 5231 000e 9200     		lsls	r2, r2, #2
 5232 0010 D358     		ldr	r3, [r2, r3]
 5233 0012 FB60     		str	r3, [r7, #12]
3040:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 5234              		.loc 1 3040 0
 5235 0014 044B     		ldr	r3, .L342
 5236 0016 7A68     		ldr	r2, [r7, #4]
 5237 0018 9200     		lsls	r2, r2, #2
 5238 001a 3968     		ldr	r1, [r7]
 5239 001c D150     		str	r1, [r2, r3]
3041:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 5240              		.loc 1 3041 0
 5241 001e FB68     		ldr	r3, [r7, #12]
3042:Generated_Source\PSoC4/CyLib.c **** }
 5242              		.loc 1 3042 0
 5243 0020 1800     		movs	r0, r3
 5244 0022 BD46     		mov	sp, r7
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 147


 5245 0024 04B0     		add	sp, sp, #16
 5246              		@ sp needed
 5247 0026 80BD     		pop	{r7, pc}
 5248              	.L343:
 5249              		.align	2
 5250              	.L342:
 5251 0028 00000000 		.word	CySysTickCallbacks
 5252              		.cfi_endproc
 5253              	.LFE66:
 5254              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 5255              		.section	.text.CySysTickGetCallback,"ax",%progbits
 5256              		.align	2
 5257              		.global	CySysTickGetCallback
 5258              		.code	16
 5259              		.thumb_func
 5260              		.type	CySysTickGetCallback, %function
 5261              	CySysTickGetCallback:
 5262              	.LFB67:
3043:Generated_Source\PSoC4/CyLib.c **** 
3044:Generated_Source\PSoC4/CyLib.c **** 
3045:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3046:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3047:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3050:Generated_Source\PSoC4/CyLib.c **** *
3051:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3052:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** * \return
3055:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3056:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3060:Generated_Source\PSoC4/CyLib.c **** {
 5263              		.loc 1 3060 0
 5264              		.cfi_startproc
 5265              		@ args = 0, pretend = 0, frame = 8
 5266              		@ frame_needed = 1, uses_anonymous_args = 0
 5267 0000 80B5     		push	{r7, lr}
 5268              		.cfi_def_cfa_offset 8
 5269              		.cfi_offset 7, -8
 5270              		.cfi_offset 14, -4
 5271 0002 82B0     		sub	sp, sp, #8
 5272              		.cfi_def_cfa_offset 16
 5273 0004 00AF     		add	r7, sp, #0
 5274              		.cfi_def_cfa_register 7
 5275 0006 7860     		str	r0, [r7, #4]
3061:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 5276              		.loc 1 3061 0
 5277 0008 034B     		ldr	r3, .L346
 5278 000a 7A68     		ldr	r2, [r7, #4]
 5279 000c 9200     		lsls	r2, r2, #2
 5280 000e D358     		ldr	r3, [r2, r3]
3062:Generated_Source\PSoC4/CyLib.c **** }
 5281              		.loc 1 3062 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 148


 5282 0010 1800     		movs	r0, r3
 5283 0012 BD46     		mov	sp, r7
 5284 0014 02B0     		add	sp, sp, #8
 5285              		@ sp needed
 5286 0016 80BD     		pop	{r7, pc}
 5287              	.L347:
 5288              		.align	2
 5289              	.L346:
 5290 0018 00000000 		.word	CySysTickCallbacks
 5291              		.cfi_endproc
 5292              	.LFE67:
 5293              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 5294              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 5295              		.align	2
 5296              		.code	16
 5297              		.thumb_func
 5298              		.type	CySysTickServiceCallbacks, %function
 5299              	CySysTickServiceCallbacks:
 5300              	.LFB68:
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3066:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3067:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3073:Generated_Source\PSoC4/CyLib.c **** {
 5301              		.loc 1 3073 0
 5302              		.cfi_startproc
 5303              		@ args = 0, pretend = 0, frame = 8
 5304              		@ frame_needed = 1, uses_anonymous_args = 0
 5305 0000 80B5     		push	{r7, lr}
 5306              		.cfi_def_cfa_offset 8
 5307              		.cfi_offset 7, -8
 5308              		.cfi_offset 14, -4
 5309 0002 82B0     		sub	sp, sp, #8
 5310              		.cfi_def_cfa_offset 16
 5311 0004 00AF     		add	r7, sp, #0
 5312              		.cfi_def_cfa_register 7
3074:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3077:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 5313              		.loc 1 3077 0
 5314 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 5315 000a 0300     		movs	r3, r0
 5316 000c 012B     		cmp	r3, #1
 5317 000e 13D1     		bne	.L353
3078:Generated_Source\PSoC4/CyLib.c ****     {
3079:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 5318              		.loc 1 3079 0
 5319 0010 0023     		movs	r3, #0
 5320 0012 7B60     		str	r3, [r7, #4]
 5321 0014 0DE0     		b	.L350
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 149


 5322              	.L352:
3080:Generated_Source\PSoC4/CyLib.c ****         {
3081:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 5323              		.loc 1 3081 0
 5324 0016 0A4B     		ldr	r3, .L354
 5325 0018 7A68     		ldr	r2, [r7, #4]
 5326 001a 9200     		lsls	r2, r2, #2
 5327 001c D358     		ldr	r3, [r2, r3]
 5328 001e 002B     		cmp	r3, #0
 5329 0020 04D0     		beq	.L351
3082:Generated_Source\PSoC4/CyLib.c ****             {
3083:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 5330              		.loc 1 3083 0
 5331 0022 074B     		ldr	r3, .L354
 5332 0024 7A68     		ldr	r2, [r7, #4]
 5333 0026 9200     		lsls	r2, r2, #2
 5334 0028 D358     		ldr	r3, [r2, r3]
 5335 002a 9847     		blx	r3
 5336              	.L351:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 5337              		.loc 1 3079 0 discriminator 2
 5338 002c 7B68     		ldr	r3, [r7, #4]
 5339 002e 0133     		adds	r3, r3, #1
 5340 0030 7B60     		str	r3, [r7, #4]
 5341              	.L350:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 5342              		.loc 1 3079 0 is_stmt 0 discriminator 1
 5343 0032 7B68     		ldr	r3, [r7, #4]
 5344 0034 042B     		cmp	r3, #4
 5345 0036 EED9     		bls	.L352
 5346              	.L353:
3084:Generated_Source\PSoC4/CyLib.c ****             }
3085:Generated_Source\PSoC4/CyLib.c ****         }
3086:Generated_Source\PSoC4/CyLib.c ****     }
3087:Generated_Source\PSoC4/CyLib.c **** }
 5347              		.loc 1 3087 0 is_stmt 1
 5348 0038 C046     		nop
 5349 003a BD46     		mov	sp, r7
 5350 003c 02B0     		add	sp, sp, #8
 5351              		@ sp needed
 5352 003e 80BD     		pop	{r7, pc}
 5353              	.L355:
 5354              		.align	2
 5355              	.L354:
 5356 0040 00000000 		.word	CySysTickCallbacks
 5357              		.cfi_endproc
 5358              	.LFE68:
 5359              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 5360              		.section	.text.CyGetUniqueId,"ax",%progbits
 5361              		.align	2
 5362              		.global	CyGetUniqueId
 5363              		.code	16
 5364              		.thumb_func
 5365              		.type	CyGetUniqueId, %function
 5366              	CyGetUniqueId:
 5367              	.LFB69:
3088:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 150


3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3092:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c **** *
3094:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3095:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3096:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3097:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3098:Generated_Source\PSoC4/CyLib.c **** *
3099:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3100:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3101:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3102:Generated_Source\PSoC4/CyLib.c **** *
3103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3104:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3105:Generated_Source\PSoC4/CyLib.c **** {
 5368              		.loc 1 3105 0
 5369              		.cfi_startproc
 5370              		@ args = 0, pretend = 0, frame = 8
 5371              		@ frame_needed = 1, uses_anonymous_args = 0
 5372 0000 80B5     		push	{r7, lr}
 5373              		.cfi_def_cfa_offset 8
 5374              		.cfi_offset 7, -8
 5375              		.cfi_offset 14, -4
 5376 0002 82B0     		sub	sp, sp, #8
 5377              		.cfi_def_cfa_offset 16
 5378 0004 00AF     		add	r7, sp, #0
 5379              		.cfi_def_cfa_register 7
 5380 0006 7860     		str	r0, [r7, #4]
3106:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3107:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 5381              		.loc 1 3107 0
 5382 0008 254B     		ldr	r3, .L357
 5383 000a 1B78     		ldrb	r3, [r3]
 5384 000c DBB2     		uxtb	r3, r3
 5385 000e 1A00     		movs	r2, r3
 5386 0010 7B68     		ldr	r3, [r7, #4]
 5387 0012 1A60     		str	r2, [r3]
3108:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 5388              		.loc 1 3108 0
 5389 0014 234B     		ldr	r3, .L357+4
 5390 0016 1B78     		ldrb	r3, [r3]
 5391 0018 DBB2     		uxtb	r3, r3
 5392 001a 1A02     		lsls	r2, r3, #8
 5393 001c 7B68     		ldr	r3, [r7, #4]
 5394 001e 1B68     		ldr	r3, [r3]
 5395 0020 1A43     		orrs	r2, r3
 5396 0022 7B68     		ldr	r3, [r7, #4]
 5397 0024 1A60     		str	r2, [r3]
3109:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 5398              		.loc 1 3109 0
 5399 0026 204B     		ldr	r3, .L357+8
 5400 0028 1B78     		ldrb	r3, [r3]
 5401 002a DBB2     		uxtb	r3, r3
 5402 002c 1A04     		lsls	r2, r3, #16
 5403 002e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 151


 5404 0030 1B68     		ldr	r3, [r3]
 5405 0032 1A43     		orrs	r2, r3
 5406 0034 7B68     		ldr	r3, [r7, #4]
 5407 0036 1A60     		str	r2, [r3]
3110:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 5408              		.loc 1 3110 0
 5409 0038 1C4B     		ldr	r3, .L357+12
 5410 003a 1B78     		ldrb	r3, [r3]
 5411 003c DBB2     		uxtb	r3, r3
 5412 003e 1A06     		lsls	r2, r3, #24
 5413 0040 7B68     		ldr	r3, [r7, #4]
 5414 0042 1B68     		ldr	r3, [r3]
 5415 0044 1A43     		orrs	r2, r3
 5416 0046 7B68     		ldr	r3, [r7, #4]
 5417 0048 1A60     		str	r2, [r3]
3111:Generated_Source\PSoC4/CyLib.c **** 
3112:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 5418              		.loc 1 3112 0
 5419 004a 7B68     		ldr	r3, [r7, #4]
 5420 004c 0433     		adds	r3, r3, #4
 5421 004e 184A     		ldr	r2, .L357+16
 5422 0050 1278     		ldrb	r2, [r2]
 5423 0052 D2B2     		uxtb	r2, r2
 5424 0054 1A60     		str	r2, [r3]
3113:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 5425              		.loc 1 3113 0
 5426 0056 174B     		ldr	r3, .L357+20
 5427 0058 1B78     		ldrb	r3, [r3]
 5428 005a DBB2     		uxtb	r3, r3
 5429 005c 1902     		lsls	r1, r3, #8
 5430 005e 7B68     		ldr	r3, [r7, #4]
 5431 0060 0433     		adds	r3, r3, #4
 5432 0062 7A68     		ldr	r2, [r7, #4]
 5433 0064 0432     		adds	r2, r2, #4
 5434 0066 1268     		ldr	r2, [r2]
 5435 0068 0A43     		orrs	r2, r1
 5436 006a 1A60     		str	r2, [r3]
3114:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 5437              		.loc 1 3114 0
 5438 006c 124B     		ldr	r3, .L357+24
 5439 006e 1B78     		ldrb	r3, [r3]
 5440 0070 DBB2     		uxtb	r3, r3
 5441 0072 1904     		lsls	r1, r3, #16
 5442 0074 7B68     		ldr	r3, [r7, #4]
 5443 0076 0433     		adds	r3, r3, #4
 5444 0078 7A68     		ldr	r2, [r7, #4]
 5445 007a 0432     		adds	r2, r2, #4
 5446 007c 1268     		ldr	r2, [r2]
 5447 007e 0A43     		orrs	r2, r1
 5448 0080 1A60     		str	r2, [r3]
3115:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 5449              		.loc 1 3115 0
 5450 0082 0E4B     		ldr	r3, .L357+28
 5451 0084 1B78     		ldrb	r3, [r3]
 5452 0086 DBB2     		uxtb	r3, r3
 5453 0088 1906     		lsls	r1, r3, #24
 5454 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 152


 5455 008c 0433     		adds	r3, r3, #4
 5456 008e 7A68     		ldr	r2, [r7, #4]
 5457 0090 0432     		adds	r2, r2, #4
 5458 0092 1268     		ldr	r2, [r2]
 5459 0094 0A43     		orrs	r2, r1
 5460 0096 1A60     		str	r2, [r3]
3116:Generated_Source\PSoC4/CyLib.c **** #else
3117:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3118:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3119:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3120:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3121:Generated_Source\PSoC4/CyLib.c **** 
3122:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3123:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3124:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3125:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3126:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3127:Generated_Source\PSoC4/CyLib.c **** }
 5461              		.loc 1 3127 0
 5462 0098 C046     		nop
 5463 009a BD46     		mov	sp, r7
 5464 009c 02B0     		add	sp, sp, #8
 5465              		@ sp needed
 5466 009e 80BD     		pop	{r7, pc}
 5467              	.L358:
 5468              		.align	2
 5469              	.L357:
 5470 00a0 78F2FF0F 		.word	268431992
 5471 00a4 79F2FF0F 		.word	268431993
 5472 00a8 7AF2FF0F 		.word	268431994
 5473 00ac 7BF2FF0F 		.word	268431995
 5474 00b0 7CF2FF0F 		.word	268431996
 5475 00b4 7DF2FF0F 		.word	268431997
 5476 00b8 7EF2FF0F 		.word	268431998
 5477 00bc 7FF2FF0F 		.word	268431999
 5478              		.cfi_endproc
 5479              	.LFE69:
 5480              		.size	CyGetUniqueId, .-CyGetUniqueId
 5481              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 5482              		.align	2
 5483              		.global	CySysSetRamAccessArbPriority
 5484              		.code	16
 5485              		.thumb_func
 5486              		.type	CySysSetRamAccessArbPriority, %function
 5487              	CySysSetRamAccessArbPriority:
 5488              	.LFB70:
3128:Generated_Source\PSoC4/CyLib.c **** 
3129:Generated_Source\PSoC4/CyLib.c **** 
3130:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3131:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3132:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3133:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3134:Generated_Source\PSoC4/CyLib.c ****     *
3135:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3136:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3137:Generated_Source\PSoC4/CyLib.c ****     *  details.
3138:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 153


3139:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3140:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3141:Generated_Source\PSoC4/CyLib.c ****     *
3142:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3143:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3144:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3145:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3146:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3147:Generated_Source\PSoC4/CyLib.c ****     *
3148:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3149:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3150:Generated_Source\PSoC4/CyLib.c ****     {
 5489              		.loc 1 3150 0
 5490              		.cfi_startproc
 5491              		@ args = 0, pretend = 0, frame = 16
 5492              		@ frame_needed = 1, uses_anonymous_args = 0
 5493 0000 80B5     		push	{r7, lr}
 5494              		.cfi_def_cfa_offset 8
 5495              		.cfi_offset 7, -8
 5496              		.cfi_offset 14, -4
 5497 0002 84B0     		sub	sp, sp, #16
 5498              		.cfi_def_cfa_offset 24
 5499 0004 00AF     		add	r7, sp, #0
 5500              		.cfi_def_cfa_register 7
 5501 0006 7860     		str	r0, [r7, #4]
3151:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3152:Generated_Source\PSoC4/CyLib.c **** 
3153:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 5502              		.loc 1 3153 0
 5503 0008 094B     		ldr	r3, .L360
 5504 000a 1B68     		ldr	r3, [r3]
 5505 000c 094A     		ldr	r2, .L360+4
 5506 000e 1340     		ands	r3, r2
 5507 0010 FB60     		str	r3, [r7, #12]
3154:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 5508              		.loc 1 3154 0
 5509 0012 7B68     		ldr	r3, [r7, #4]
 5510 0014 5A04     		lsls	r2, r3, #17
 5511 0016 C023     		movs	r3, #192
 5512 0018 DB02     		lsls	r3, r3, #11
 5513 001a 1340     		ands	r3, r2
 5514 001c FA68     		ldr	r2, [r7, #12]
 5515 001e 1343     		orrs	r3, r2
 5516 0020 FB60     		str	r3, [r7, #12]
3155:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 5517              		.loc 1 3155 0
 5518 0022 034B     		ldr	r3, .L360
 5519 0024 FA68     		ldr	r2, [r7, #12]
 5520 0026 1A60     		str	r2, [r3]
3156:Generated_Source\PSoC4/CyLib.c ****     }
 5521              		.loc 1 3156 0
 5522 0028 C046     		nop
 5523 002a BD46     		mov	sp, r7
 5524 002c 04B0     		add	sp, sp, #16
 5525              		@ sp needed
 5526 002e 80BD     		pop	{r7, pc}
 5527              	.L361:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 154


 5528              		.align	2
 5529              	.L360:
 5530 0030 38001040 		.word	1074790456
 5531 0034 FFFFF9FF 		.word	-393217
 5532              		.cfi_endproc
 5533              	.LFE70:
 5534              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 5535              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 5536              		.align	2
 5537              		.global	CySysSetFlashAccessArbPriority
 5538              		.code	16
 5539              		.thumb_func
 5540              		.type	CySysSetFlashAccessArbPriority, %function
 5541              	CySysSetFlashAccessArbPriority:
 5542              	.LFB71:
3157:Generated_Source\PSoC4/CyLib.c **** 
3158:Generated_Source\PSoC4/CyLib.c **** 
3159:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3160:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3161:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3162:Generated_Source\PSoC4/CyLib.c ****     *
3163:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3164:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3165:Generated_Source\PSoC4/CyLib.c ****     *  details.
3166:Generated_Source\PSoC4/CyLib.c ****     *
3167:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3168:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3169:Generated_Source\PSoC4/CyLib.c ****     *
3170:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3171:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3172:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3173:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3174:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3175:Generated_Source\PSoC4/CyLib.c ****     *
3176:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3177:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3178:Generated_Source\PSoC4/CyLib.c ****     {
 5543              		.loc 1 3178 0
 5544              		.cfi_startproc
 5545              		@ args = 0, pretend = 0, frame = 16
 5546              		@ frame_needed = 1, uses_anonymous_args = 0
 5547 0000 80B5     		push	{r7, lr}
 5548              		.cfi_def_cfa_offset 8
 5549              		.cfi_offset 7, -8
 5550              		.cfi_offset 14, -4
 5551 0002 84B0     		sub	sp, sp, #16
 5552              		.cfi_def_cfa_offset 24
 5553 0004 00AF     		add	r7, sp, #0
 5554              		.cfi_def_cfa_register 7
 5555 0006 7860     		str	r0, [r7, #4]
3179:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3180:Generated_Source\PSoC4/CyLib.c **** 
3181:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 5556              		.loc 1 3181 0
 5557 0008 094B     		ldr	r3, .L363
 5558 000a 1B68     		ldr	r3, [r3]
 5559 000c 094A     		ldr	r2, .L363+4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 155


 5560 000e 1340     		ands	r3, r2
 5561 0010 FB60     		str	r3, [r7, #12]
3182:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 5562              		.loc 1 3182 0
 5563 0012 7B68     		ldr	r3, [r7, #4]
 5564 0014 5A04     		lsls	r2, r3, #17
 5565 0016 C023     		movs	r3, #192
 5566 0018 DB02     		lsls	r3, r3, #11
 5567 001a 1340     		ands	r3, r2
 5568 001c FA68     		ldr	r2, [r7, #12]
 5569 001e 1343     		orrs	r3, r2
 5570 0020 FB60     		str	r3, [r7, #12]
3183:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 5571              		.loc 1 3183 0
 5572 0022 034B     		ldr	r3, .L363
 5573 0024 FA68     		ldr	r2, [r7, #12]
 5574 0026 1A60     		str	r2, [r3]
3184:Generated_Source\PSoC4/CyLib.c ****     }
 5575              		.loc 1 3184 0
 5576 0028 C046     		nop
 5577 002a BD46     		mov	sp, r7
 5578 002c 04B0     		add	sp, sp, #16
 5579              		@ sp needed
 5580 002e 80BD     		pop	{r7, pc}
 5581              	.L364:
 5582              		.align	2
 5583              	.L363:
 5584 0030 30001040 		.word	1074790448
 5585 0034 FFFFF9FF 		.word	-393217
 5586              		.cfi_endproc
 5587              	.LFE71:
 5588              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 5589              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 5590              		.align	2
 5591              		.global	CySysSetDmacAccessArbPriority
 5592              		.code	16
 5593              		.thumb_func
 5594              		.type	CySysSetDmacAccessArbPriority, %function
 5595              	CySysSetDmacAccessArbPriority:
 5596              	.LFB72:
3185:Generated_Source\PSoC4/CyLib.c **** 
3186:Generated_Source\PSoC4/CyLib.c **** 
3187:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3188:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3189:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3190:Generated_Source\PSoC4/CyLib.c ****     *
3191:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3192:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3193:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3194:Generated_Source\PSoC4/CyLib.c ****     *
3195:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3196:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3197:Generated_Source\PSoC4/CyLib.c ****     *
3198:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3199:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3200:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3201:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 156


3202:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3203:Generated_Source\PSoC4/CyLib.c ****     *
3204:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3205:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3206:Generated_Source\PSoC4/CyLib.c ****     {
 5597              		.loc 1 3206 0
 5598              		.cfi_startproc
 5599              		@ args = 0, pretend = 0, frame = 16
 5600              		@ frame_needed = 1, uses_anonymous_args = 0
 5601 0000 80B5     		push	{r7, lr}
 5602              		.cfi_def_cfa_offset 8
 5603              		.cfi_offset 7, -8
 5604              		.cfi_offset 14, -4
 5605 0002 84B0     		sub	sp, sp, #16
 5606              		.cfi_def_cfa_offset 24
 5607 0004 00AF     		add	r7, sp, #0
 5608              		.cfi_def_cfa_register 7
 5609 0006 7860     		str	r0, [r7, #4]
3207:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3208:Generated_Source\PSoC4/CyLib.c **** 
3209:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 5610              		.loc 1 3209 0
 5611 0008 094B     		ldr	r3, .L366
 5612 000a 1B68     		ldr	r3, [r3]
 5613 000c 094A     		ldr	r2, .L366+4
 5614 000e 1340     		ands	r3, r2
 5615 0010 FB60     		str	r3, [r7, #12]
3210:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 5616              		.loc 1 3210 0
 5617 0012 7B68     		ldr	r3, [r7, #4]
 5618 0014 5A04     		lsls	r2, r3, #17
 5619 0016 C023     		movs	r3, #192
 5620 0018 DB02     		lsls	r3, r3, #11
 5621 001a 1340     		ands	r3, r2
 5622 001c FA68     		ldr	r2, [r7, #12]
 5623 001e 1343     		orrs	r3, r2
 5624 0020 FB60     		str	r3, [r7, #12]
3211:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 5625              		.loc 1 3211 0
 5626 0022 034B     		ldr	r3, .L366
 5627 0024 FA68     		ldr	r2, [r7, #12]
 5628 0026 1A60     		str	r2, [r3]
3212:Generated_Source\PSoC4/CyLib.c ****     }
 5629              		.loc 1 3212 0
 5630 0028 C046     		nop
 5631 002a BD46     		mov	sp, r7
 5632 002c 04B0     		add	sp, sp, #16
 5633              		@ sp needed
 5634 002e 80BD     		pop	{r7, pc}
 5635              	.L367:
 5636              		.align	2
 5637              	.L366:
 5638 0030 3C001040 		.word	1074790460
 5639 0034 FFFFF9FF 		.word	-393217
 5640              		.cfi_endproc
 5641              	.LFE72:
 5642              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 157


 5643              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 5644              		.align	2
 5645              		.global	CySysSetPeripheralAccessArbPriority
 5646              		.code	16
 5647              		.thumb_func
 5648              		.type	CySysSetPeripheralAccessArbPriority, %function
 5649              	CySysSetPeripheralAccessArbPriority:
 5650              	.LFB73:
3213:Generated_Source\PSoC4/CyLib.c **** 
3214:Generated_Source\PSoC4/CyLib.c **** 
3215:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3216:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3217:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3218:Generated_Source\PSoC4/CyLib.c ****     *
3219:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3220:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3221:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3222:Generated_Source\PSoC4/CyLib.c ****     *
3223:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3224:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3225:Generated_Source\PSoC4/CyLib.c ****     *
3226:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3227:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3228:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3229:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3230:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3231:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3232:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3233:Generated_Source\PSoC4/CyLib.c ****     *
3234:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3235:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3236:Generated_Source\PSoC4/CyLib.c ****     {
 5651              		.loc 1 3236 0
 5652              		.cfi_startproc
 5653              		@ args = 0, pretend = 0, frame = 16
 5654              		@ frame_needed = 1, uses_anonymous_args = 0
 5655 0000 80B5     		push	{r7, lr}
 5656              		.cfi_def_cfa_offset 8
 5657              		.cfi_offset 7, -8
 5658              		.cfi_offset 14, -4
 5659 0002 84B0     		sub	sp, sp, #16
 5660              		.cfi_def_cfa_offset 24
 5661 0004 00AF     		add	r7, sp, #0
 5662              		.cfi_def_cfa_register 7
 5663 0006 7860     		str	r0, [r7, #4]
 5664 0008 3960     		str	r1, [r7]
3237:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3238:Generated_Source\PSoC4/CyLib.c **** 
3239:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 5665              		.loc 1 3239 0
 5666 000a 7B68     		ldr	r3, [r7, #4]
 5667 000c 002B     		cmp	r3, #0
 5668 000e 10D1     		bne	.L369
3240:Generated_Source\PSoC4/CyLib.c ****         {
3241:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 5669              		.loc 1 3241 0
 5670 0010 1F4B     		ldr	r3, .L374
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 158


 5671 0012 1B68     		ldr	r3, [r3]
 5672 0014 1F4A     		ldr	r2, .L374+4
 5673 0016 1340     		ands	r3, r2
 5674 0018 FB60     		str	r3, [r7, #12]
3242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5675              		.loc 1 3242 0
 5676 001a 3B68     		ldr	r3, [r7]
 5677 001c 5A04     		lsls	r2, r3, #17
 5678 001e C023     		movs	r3, #192
 5679 0020 DB02     		lsls	r3, r3, #11
 5680 0022 1340     		ands	r3, r2
 5681 0024 FA68     		ldr	r2, [r7, #12]
 5682 0026 1343     		orrs	r3, r2
 5683 0028 FB60     		str	r3, [r7, #12]
3243:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 5684              		.loc 1 3243 0
 5685 002a 194B     		ldr	r3, .L374
 5686 002c FA68     		ldr	r2, [r7, #12]
 5687 002e 1A60     		str	r2, [r3]
3244:Generated_Source\PSoC4/CyLib.c ****         } else
3245:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3246:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
3247:Generated_Source\PSoC4/CyLib.c ****         {
3248:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3249:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3250:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3251:Generated_Source\PSoC4/CyLib.c ****         } else
3252:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3253:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3254:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3255:Generated_Source\PSoC4/CyLib.c ****         {
3256:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3257:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3259:Generated_Source\PSoC4/CyLib.c ****         } else
3260:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3261:Generated_Source\PSoC4/CyLib.c ****         {
3262:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3263:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3264:Generated_Source\PSoC4/CyLib.c ****         }
3265:Generated_Source\PSoC4/CyLib.c ****     }
 5688              		.loc 1 3265 0
 5689 0030 2AE0     		b	.L373
 5690              	.L369:
3246:Generated_Source\PSoC4/CyLib.c ****         {
 5691              		.loc 1 3246 0
 5692 0032 7B68     		ldr	r3, [r7, #4]
 5693 0034 012B     		cmp	r3, #1
 5694 0036 10D1     		bne	.L371
3248:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5695              		.loc 1 3248 0
 5696 0038 174B     		ldr	r3, .L374+8
 5697 003a 1B68     		ldr	r3, [r3]
 5698 003c 154A     		ldr	r2, .L374+4
 5699 003e 1340     		ands	r3, r2
 5700 0040 FB60     		str	r3, [r7, #12]
3249:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 159


 5701              		.loc 1 3249 0
 5702 0042 3B68     		ldr	r3, [r7]
 5703 0044 5A04     		lsls	r2, r3, #17
 5704 0046 C023     		movs	r3, #192
 5705 0048 DB02     		lsls	r3, r3, #11
 5706 004a 1340     		ands	r3, r2
 5707 004c FA68     		ldr	r2, [r7, #12]
 5708 004e 1343     		orrs	r3, r2
 5709 0050 FB60     		str	r3, [r7, #12]
3250:Generated_Source\PSoC4/CyLib.c ****         } else
 5710              		.loc 1 3250 0
 5711 0052 114B     		ldr	r3, .L374+8
 5712 0054 FA68     		ldr	r2, [r7, #12]
 5713 0056 1A60     		str	r2, [r3]
 5714              		.loc 1 3265 0
 5715 0058 16E0     		b	.L373
 5716              	.L371:
3254:Generated_Source\PSoC4/CyLib.c ****         {
 5717              		.loc 1 3254 0
 5718 005a 7B68     		ldr	r3, [r7, #4]
 5719 005c 022B     		cmp	r3, #2
 5720 005e 10D1     		bne	.L372
3256:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5721              		.loc 1 3256 0
 5722 0060 0E4B     		ldr	r3, .L374+12
 5723 0062 1B68     		ldr	r3, [r3]
 5724 0064 0B4A     		ldr	r2, .L374+4
 5725 0066 1340     		ands	r3, r2
 5726 0068 FB60     		str	r3, [r7, #12]
3257:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 5727              		.loc 1 3257 0
 5728 006a 3B68     		ldr	r3, [r7]
 5729 006c 5A04     		lsls	r2, r3, #17
 5730 006e C023     		movs	r3, #192
 5731 0070 DB02     		lsls	r3, r3, #11
 5732 0072 1340     		ands	r3, r2
 5733 0074 FA68     		ldr	r2, [r7, #12]
 5734 0076 1343     		orrs	r3, r2
 5735 0078 FB60     		str	r3, [r7, #12]
3258:Generated_Source\PSoC4/CyLib.c ****         } else
 5736              		.loc 1 3258 0
 5737 007a 084B     		ldr	r3, .L374+12
 5738 007c FA68     		ldr	r2, [r7, #12]
 5739 007e 1A60     		str	r2, [r3]
 5740              		.loc 1 3265 0
 5741 0080 02E0     		b	.L373
 5742              	.L372:
3263:Generated_Source\PSoC4/CyLib.c ****         }
 5743              		.loc 1 3263 0 discriminator 1
 5744 0082 0020     		movs	r0, #0
 5745 0084 FFF7FEFF 		bl	CyHalt
 5746              	.L373:
 5747              		.loc 1 3265 0
 5748 0088 C046     		nop
 5749 008a BD46     		mov	sp, r7
 5750 008c 04B0     		add	sp, sp, #16
 5751              		@ sp needed
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 160


 5752 008e 80BD     		pop	{r7, pc}
 5753              	.L375:
 5754              		.align	2
 5755              	.L374:
 5756 0090 00011040 		.word	1074790656
 5757 0094 FFFFF9FF 		.word	-393217
 5758 0098 04011040 		.word	1074790660
 5759 009c 08011040 		.word	1074790664
 5760              		.cfi_endproc
 5761              	.LFE73:
 5762              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 5763              		.text
 5764              	.Letext0:
 5765              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 5766              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 5767              		.section	.debug_info,"",%progbits
 5768              	.Ldebug_info0:
 5769 0000 38120000 		.4byte	0x1238
 5770 0004 0400     		.2byte	0x4
 5771 0006 00000000 		.4byte	.Ldebug_abbrev0
 5772 000a 04       		.byte	0x4
 5773 000b 01       		.uleb128 0x1
 5774 000c 55010000 		.4byte	.LASF174
 5775 0010 0C       		.byte	0xc
 5776 0011 07080000 		.4byte	.LASF175
 5777 0015 D8030000 		.4byte	.LASF176
 5778 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5779 001d 00000000 		.4byte	0
 5780 0021 00000000 		.4byte	.Ldebug_line0
 5781 0025 02       		.uleb128 0x2
 5782 0026 01       		.byte	0x1
 5783 0027 06       		.byte	0x6
 5784 0028 850A0000 		.4byte	.LASF0
 5785 002c 02       		.uleb128 0x2
 5786 002d 01       		.byte	0x1
 5787 002e 08       		.byte	0x8
 5788 002f 3C090000 		.4byte	.LASF1
 5789 0033 02       		.uleb128 0x2
 5790 0034 02       		.byte	0x2
 5791 0035 05       		.byte	0x5
 5792 0036 39070000 		.4byte	.LASF2
 5793 003a 02       		.uleb128 0x2
 5794 003b 02       		.byte	0x2
 5795 003c 07       		.byte	0x7
 5796 003d 910A0000 		.4byte	.LASF3
 5797 0041 02       		.uleb128 0x2
 5798 0042 04       		.byte	0x4
 5799 0043 05       		.byte	0x5
 5800 0044 4B070000 		.4byte	.LASF4
 5801 0048 02       		.uleb128 0x2
 5802 0049 04       		.byte	0x4
 5803 004a 07       		.byte	0x7
 5804 004b A8080000 		.4byte	.LASF5
 5805 004f 02       		.uleb128 0x2
 5806 0050 08       		.byte	0x8
 5807 0051 05       		.byte	0x5
 5808 0052 30050000 		.4byte	.LASF6
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 161


 5809 0056 02       		.uleb128 0x2
 5810 0057 08       		.byte	0x8
 5811 0058 07       		.byte	0x7
 5812 0059 E6020000 		.4byte	.LASF7
 5813 005d 03       		.uleb128 0x3
 5814 005e 04       		.byte	0x4
 5815 005f 05       		.byte	0x5
 5816 0060 696E7400 		.ascii	"int\000"
 5817 0064 02       		.uleb128 0x2
 5818 0065 04       		.byte	0x4
 5819 0066 07       		.byte	0x7
 5820 0067 D1000000 		.4byte	.LASF8
 5821 006b 04       		.uleb128 0x4
 5822 006c AC0A0000 		.4byte	.LASF9
 5823 0070 02       		.byte	0x2
 5824 0071 E401     		.2byte	0x1e4
 5825 0073 2C000000 		.4byte	0x2c
 5826 0077 04       		.uleb128 0x4
 5827 0078 6E040000 		.4byte	.LASF10
 5828 007c 02       		.byte	0x2
 5829 007d E501     		.2byte	0x1e5
 5830 007f 3A000000 		.4byte	0x3a
 5831 0083 04       		.uleb128 0x4
 5832 0084 33060000 		.4byte	.LASF11
 5833 0088 02       		.byte	0x2
 5834 0089 E601     		.2byte	0x1e6
 5835 008b 48000000 		.4byte	0x48
 5836 008f 04       		.uleb128 0x4
 5837 0090 AB020000 		.4byte	.LASF12
 5838 0094 02       		.byte	0x2
 5839 0095 E901     		.2byte	0x1e9
 5840 0097 41000000 		.4byte	0x41
 5841 009b 02       		.uleb128 0x2
 5842 009c 04       		.byte	0x4
 5843 009d 04       		.byte	0x4
 5844 009e 9F020000 		.4byte	.LASF13
 5845 00a2 02       		.uleb128 0x2
 5846 00a3 08       		.byte	0x8
 5847 00a4 04       		.byte	0x4
 5848 00a5 B20A0000 		.4byte	.LASF14
 5849 00a9 02       		.uleb128 0x2
 5850 00aa 01       		.byte	0x1
 5851 00ab 08       		.byte	0x8
 5852 00ac 2A040000 		.4byte	.LASF15
 5853 00b0 04       		.uleb128 0x4
 5854 00b1 18090000 		.4byte	.LASF16
 5855 00b5 02       		.byte	0x2
 5856 00b6 8602     		.2byte	0x286
 5857 00b8 48000000 		.4byte	0x48
 5858 00bc 04       		.uleb128 0x4
 5859 00bd 50010000 		.4byte	.LASF17
 5860 00c1 02       		.byte	0x2
 5861 00c2 8E02     		.2byte	0x28e
 5862 00c4 C8000000 		.4byte	0xc8
 5863 00c8 05       		.uleb128 0x5
 5864 00c9 6B000000 		.4byte	0x6b
 5865 00cd 04       		.uleb128 0x4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 162


 5866 00ce EB060000 		.4byte	.LASF18
 5867 00d2 02       		.byte	0x2
 5868 00d3 9002     		.2byte	0x290
 5869 00d5 D9000000 		.4byte	0xd9
 5870 00d9 05       		.uleb128 0x5
 5871 00da 83000000 		.4byte	0x83
 5872 00de 04       		.uleb128 0x4
 5873 00df 0E060000 		.4byte	.LASF19
 5874 00e3 02       		.byte	0x2
 5875 00e4 A002     		.2byte	0x2a0
 5876 00e6 EA000000 		.4byte	0xea
 5877 00ea 06       		.uleb128 0x6
 5878 00eb 04       		.byte	0x4
 5879 00ec F0000000 		.4byte	0xf0
 5880 00f0 07       		.uleb128 0x7
 5881 00f1 02       		.uleb128 0x2
 5882 00f2 08       		.byte	0x8
 5883 00f3 04       		.byte	0x4
 5884 00f4 D1060000 		.4byte	.LASF20
 5885 00f8 02       		.uleb128 0x2
 5886 00f9 04       		.byte	0x4
 5887 00fa 07       		.byte	0x7
 5888 00fb 6D080000 		.4byte	.LASF21
 5889 00ff 08       		.uleb128 0x8
 5890 0100 C7080000 		.4byte	.LASF22
 5891 0104 03       		.byte	0x3
 5892 0105 F5       		.byte	0xf5
 5893 0106 EA000000 		.4byte	0xea
 5894 010a 09       		.uleb128 0x9
 5895 010b 0C       		.byte	0xc
 5896 010c 03       		.byte	0x3
 5897 010d AA01     		.2byte	0x1aa
 5898 010f 3B010000 		.4byte	0x13b
 5899 0113 0A       		.uleb128 0xa
 5900 0114 04070000 		.4byte	.LASF23
 5901 0118 03       		.byte	0x3
 5902 0119 AC01     		.2byte	0x1ac
 5903 011b 83000000 		.4byte	0x83
 5904 011f 00       		.byte	0
 5905 0120 0A       		.uleb128 0xa
 5906 0121 A8040000 		.4byte	.LASF24
 5907 0125 03       		.byte	0x3
 5908 0126 AD01     		.2byte	0x1ad
 5909 0128 83000000 		.4byte	0x83
 5910 012c 04       		.byte	0x4
 5911 012d 0A       		.uleb128 0xa
 5912 012e 7F090000 		.4byte	.LASF25
 5913 0132 03       		.byte	0x3
 5914 0133 AE01     		.2byte	0x1ae
 5915 0135 83000000 		.4byte	0x83
 5916 0139 08       		.byte	0x8
 5917 013a 00       		.byte	0
 5918 013b 04       		.uleb128 0x4
 5919 013c 8D040000 		.4byte	.LASF26
 5920 0140 03       		.byte	0x3
 5921 0141 AF01     		.2byte	0x1af
 5922 0143 0A010000 		.4byte	0x10a
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 163


 5923 0147 09       		.uleb128 0x9
 5924 0148 18       		.byte	0x18
 5925 0149 03       		.byte	0x3
 5926 014a B201     		.2byte	0x1b2
 5927 014c 5E010000 		.4byte	0x15e
 5928 0150 0B       		.uleb128 0xb
 5929 0151 706C6C00 		.ascii	"pll\000"
 5930 0155 03       		.byte	0x3
 5931 0156 B401     		.2byte	0x1b4
 5932 0158 5E010000 		.4byte	0x15e
 5933 015c 00       		.byte	0
 5934 015d 00       		.byte	0
 5935 015e 0C       		.uleb128 0xc
 5936 015f 3B010000 		.4byte	0x13b
 5937 0163 6E010000 		.4byte	0x16e
 5938 0167 0D       		.uleb128 0xd
 5939 0168 F8000000 		.4byte	0xf8
 5940 016c 01       		.byte	0x1
 5941 016d 00       		.byte	0
 5942 016e 04       		.uleb128 0x4
 5943 016f 79020000 		.4byte	.LASF27
 5944 0173 03       		.byte	0x3
 5945 0174 B501     		.2byte	0x1b5
 5946 0176 47010000 		.4byte	0x147
 5947 017a 0E       		.uleb128 0xe
 5948 017b B0060000 		.4byte	.LASF28
 5949 017f 01       		.byte	0x1
 5950 0180 6C       		.byte	0x6c
 5951 0181 00000000 		.4byte	.LFB1
 5952 0185 1C000000 		.4byte	.LFE1-.LFB1
 5953 0189 01       		.uleb128 0x1
 5954 018a 9C       		.byte	0x9c
 5955 018b 0F       		.uleb128 0xf
 5956 018c 45040000 		.4byte	.LASF29
 5957 0190 01       		.byte	0x1
 5958 0191 8C       		.byte	0x8c
 5959 0192 00000000 		.4byte	.LFB2
 5960 0196 24000000 		.4byte	.LFE2-.LFB2
 5961 019a 01       		.uleb128 0x1
 5962 019b 9C       		.byte	0x9c
 5963 019c 10       		.uleb128 0x10
 5964 019d 3E050000 		.4byte	.LASF36
 5965 01a1 01       		.byte	0x1
 5966 01a2 B0       		.byte	0xb0
 5967 01a3 00000000 		.4byte	.LFB3
 5968 01a7 54010000 		.4byte	.LFE3-.LFB3
 5969 01ab 01       		.uleb128 0x1
 5970 01ac 9C       		.byte	0x9c
 5971 01ad 04020000 		.4byte	0x204
 5972 01b1 11       		.uleb128 0x11
 5973 01b2 6900     		.ascii	"i\000"
 5974 01b4 01       		.byte	0x1
 5975 01b5 B3       		.byte	0xb3
 5976 01b6 83000000 		.4byte	0x83
 5977 01ba 02       		.uleb128 0x2
 5978 01bb 91       		.byte	0x91
 5979 01bc 6C       		.sleb128 -20
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 164


 5980 01bd 12       		.uleb128 0x12
 5981 01be CC030000 		.4byte	.LASF30
 5982 01c2 01       		.byte	0x1
 5983 01c3 B6       		.byte	0xb6
 5984 01c4 83000000 		.4byte	0x83
 5985 01c8 02       		.uleb128 0x2
 5986 01c9 91       		.byte	0x91
 5987 01ca 68       		.sleb128 -24
 5988 01cb 12       		.uleb128 0x12
 5989 01cc 2B010000 		.4byte	.LASF31
 5990 01d0 01       		.byte	0x1
 5991 01d1 B7       		.byte	0xb7
 5992 01d2 6B000000 		.4byte	0x6b
 5993 01d6 02       		.uleb128 0x2
 5994 01d7 91       		.byte	0x91
 5995 01d8 5F       		.sleb128 -33
 5996 01d9 12       		.uleb128 0x12
 5997 01da 12030000 		.4byte	.LASF32
 5998 01de 01       		.byte	0x1
 5999 01df B8       		.byte	0xb8
 6000 01e0 83000000 		.4byte	0x83
 6001 01e4 02       		.uleb128 0x2
 6002 01e5 91       		.byte	0x91
 6003 01e6 64       		.sleb128 -28
 6004 01e7 12       		.uleb128 0x12
 6005 01e8 34080000 		.4byte	.LASF33
 6006 01ec 01       		.byte	0x1
 6007 01ed B9       		.byte	0xb9
 6008 01ee 83000000 		.4byte	0x83
 6009 01f2 02       		.uleb128 0x2
 6010 01f3 91       		.byte	0x91
 6011 01f4 60       		.sleb128 -32
 6012 01f5 12       		.uleb128 0x12
 6013 01f6 00000000 		.4byte	.LASF34
 6014 01fa 01       		.byte	0x1
 6015 01fb BA       		.byte	0xba
 6016 01fc D9000000 		.4byte	0xd9
 6017 0200 02       		.uleb128 0x2
 6018 0201 91       		.byte	0x91
 6019 0202 58       		.sleb128 -40
 6020 0203 00       		.byte	0
 6021 0204 13       		.uleb128 0x13
 6022 0205 090A0000 		.4byte	.LASF35
 6023 0209 01       		.byte	0x1
 6024 020a 1E01     		.2byte	0x11e
 6025 020c 00000000 		.4byte	.LFB4
 6026 0210 20000000 		.4byte	.LFE4-.LFB4
 6027 0214 01       		.uleb128 0x1
 6028 0215 9C       		.byte	0x9c
 6029 0216 14       		.uleb128 0x14
 6030 0217 3A010000 		.4byte	.LASF40
 6031 021b 01       		.byte	0x1
 6032 021c 3101     		.2byte	0x131
 6033 021e 83000000 		.4byte	0x83
 6034 0222 00000000 		.4byte	.LFB5
 6035 0226 20000000 		.4byte	.LFE5-.LFB5
 6036 022a 01       		.uleb128 0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 165


 6037 022b 9C       		.byte	0x9c
 6038 022c 15       		.uleb128 0x15
 6039 022d 8E070000 		.4byte	.LASF37
 6040 0231 01       		.byte	0x1
 6041 0232 4C01     		.2byte	0x14c
 6042 0234 00000000 		.4byte	.LFB6
 6043 0238 38010000 		.4byte	.LFE6-.LFB6
 6044 023c 01       		.uleb128 0x1
 6045 023d 9C       		.byte	0x9c
 6046 023e 6E020000 		.4byte	0x26e
 6047 0242 16       		.uleb128 0x16
 6048 0243 6900     		.ascii	"i\000"
 6049 0245 01       		.byte	0x1
 6050 0246 4F01     		.2byte	0x14f
 6051 0248 83000000 		.4byte	0x83
 6052 024c 02       		.uleb128 0x2
 6053 024d 91       		.byte	0x91
 6054 024e 74       		.sleb128 -12
 6055 024f 17       		.uleb128 0x17
 6056 0250 B6000000 		.4byte	.LASF38
 6057 0254 01       		.byte	0x1
 6058 0255 5201     		.2byte	0x152
 6059 0257 83000000 		.4byte	0x83
 6060 025b 02       		.uleb128 0x2
 6061 025c 91       		.byte	0x91
 6062 025d 6C       		.sleb128 -20
 6063 025e 17       		.uleb128 0x17
 6064 025f CC030000 		.4byte	.LASF30
 6065 0263 01       		.byte	0x1
 6066 0264 5601     		.2byte	0x156
 6067 0266 83000000 		.4byte	0x83
 6068 026a 02       		.uleb128 0x2
 6069 026b 91       		.byte	0x91
 6070 026c 70       		.sleb128 -16
 6071 026d 00       		.byte	0
 6072 026e 15       		.uleb128 0x15
 6073 026f DE000000 		.4byte	.LASF39
 6074 0273 01       		.byte	0x1
 6075 0274 A101     		.2byte	0x1a1
 6076 0276 00000000 		.4byte	.LFB7
 6077 027a C4000000 		.4byte	.LFE7-.LFB7
 6078 027e 01       		.uleb128 0x1
 6079 027f 9C       		.byte	0x9c
 6080 0280 B0020000 		.4byte	0x2b0
 6081 0284 16       		.uleb128 0x16
 6082 0285 6900     		.ascii	"i\000"
 6083 0287 01       		.byte	0x1
 6084 0288 A401     		.2byte	0x1a4
 6085 028a 83000000 		.4byte	0x83
 6086 028e 02       		.uleb128 0x2
 6087 028f 91       		.byte	0x91
 6088 0290 74       		.sleb128 -12
 6089 0291 17       		.uleb128 0x17
 6090 0292 B6000000 		.4byte	.LASF38
 6091 0296 01       		.byte	0x1
 6092 0297 A701     		.2byte	0x1a7
 6093 0299 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 166


 6094 029d 02       		.uleb128 0x2
 6095 029e 91       		.byte	0x91
 6096 029f 6C       		.sleb128 -20
 6097 02a0 17       		.uleb128 0x17
 6098 02a1 CC030000 		.4byte	.LASF30
 6099 02a5 01       		.byte	0x1
 6100 02a6 AB01     		.2byte	0x1ab
 6101 02a8 83000000 		.4byte	0x83
 6102 02ac 02       		.uleb128 0x2
 6103 02ad 91       		.byte	0x91
 6104 02ae 70       		.sleb128 -16
 6105 02af 00       		.byte	0
 6106 02b0 14       		.uleb128 0x14
 6107 02b1 63020000 		.4byte	.LASF41
 6108 02b5 01       		.byte	0x1
 6109 02b6 D601     		.2byte	0x1d6
 6110 02b8 83000000 		.4byte	0x83
 6111 02bc 00000000 		.4byte	.LFB8
 6112 02c0 20000000 		.4byte	.LFE8-.LFB8
 6113 02c4 01       		.uleb128 0x1
 6114 02c5 9C       		.byte	0x9c
 6115 02c6 18       		.uleb128 0x18
 6116 02c7 55040000 		.4byte	.LASF42
 6117 02cb 01       		.byte	0x1
 6118 02cc 0102     		.2byte	0x201
 6119 02ce 00000000 		.4byte	.LFB9
 6120 02d2 70000000 		.4byte	.LFE9-.LFB9
 6121 02d6 01       		.uleb128 0x1
 6122 02d7 9C       		.byte	0x9c
 6123 02d8 0A030000 		.4byte	0x30a
 6124 02dc 19       		.uleb128 0x19
 6125 02dd B2030000 		.4byte	.LASF45
 6126 02e1 01       		.byte	0x1
 6127 02e2 0102     		.2byte	0x201
 6128 02e4 83000000 		.4byte	0x83
 6129 02e8 02       		.uleb128 0x2
 6130 02e9 91       		.byte	0x91
 6131 02ea 64       		.sleb128 -28
 6132 02eb 17       		.uleb128 0x17
 6133 02ec 2B010000 		.4byte	.LASF31
 6134 02f0 01       		.byte	0x1
 6135 02f1 0302     		.2byte	0x203
 6136 02f3 6B000000 		.4byte	0x6b
 6137 02f7 02       		.uleb128 0x2
 6138 02f8 91       		.byte	0x91
 6139 02f9 6B       		.sleb128 -21
 6140 02fa 17       		.uleb128 0x17
 6141 02fb FD060000 		.4byte	.LASF43
 6142 02ff 01       		.byte	0x1
 6143 0300 0402     		.2byte	0x204
 6144 0302 83000000 		.4byte	0x83
 6145 0306 02       		.uleb128 0x2
 6146 0307 91       		.byte	0x91
 6147 0308 6C       		.sleb128 -20
 6148 0309 00       		.byte	0
 6149 030a 15       		.uleb128 0x15
 6150 030b 16010000 		.4byte	.LASF44
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 167


 6151 030f 01       		.byte	0x1
 6152 0310 4902     		.2byte	0x249
 6153 0312 00000000 		.4byte	.LFB10
 6154 0316 50000000 		.4byte	.LFE10-.LFB10
 6155 031a 01       		.uleb128 0x1
 6156 031b 9C       		.byte	0x9c
 6157 031c 30030000 		.4byte	0x330
 6158 0320 19       		.uleb128 0x19
 6159 0321 0B030000 		.4byte	.LASF46
 6160 0325 01       		.byte	0x1
 6161 0326 4902     		.2byte	0x249
 6162 0328 83000000 		.4byte	0x83
 6163 032c 02       		.uleb128 0x2
 6164 032d 91       		.byte	0x91
 6165 032e 74       		.sleb128 -12
 6166 032f 00       		.byte	0
 6167 0330 1A       		.uleb128 0x1a
 6168 0331 1F030000 		.4byte	.LASF57
 6169 0335 01       		.byte	0x1
 6170 0336 6E02     		.2byte	0x26e
 6171 0338 83000000 		.4byte	0x83
 6172 033c 00000000 		.4byte	.LFB11
 6173 0340 4C000000 		.4byte	.LFE11-.LFB11
 6174 0344 01       		.uleb128 0x1
 6175 0345 9C       		.byte	0x9c
 6176 0346 69030000 		.4byte	0x369
 6177 034a 17       		.uleb128 0x17
 6178 034b 2B010000 		.4byte	.LASF31
 6179 034f 01       		.byte	0x1
 6180 0350 7002     		.2byte	0x270
 6181 0352 6B000000 		.4byte	0x6b
 6182 0356 02       		.uleb128 0x2
 6183 0357 91       		.byte	0x91
 6184 0358 6B       		.sleb128 -21
 6185 0359 17       		.uleb128 0x17
 6186 035a B90A0000 		.4byte	.LASF47
 6187 035e 01       		.byte	0x1
 6188 035f 7102     		.2byte	0x271
 6189 0361 83000000 		.4byte	0x83
 6190 0365 02       		.uleb128 0x2
 6191 0366 91       		.byte	0x91
 6192 0367 6C       		.sleb128 -20
 6193 0368 00       		.byte	0
 6194 0369 18       		.uleb128 0x18
 6195 036a D0070000 		.4byte	.LASF48
 6196 036e 01       		.byte	0x1
 6197 036f AB02     		.2byte	0x2ab
 6198 0371 00000000 		.4byte	.LFB12
 6199 0375 48000000 		.4byte	.LFE12-.LFB12
 6200 0379 01       		.uleb128 0x1
 6201 037a 9C       		.byte	0x9c
 6202 037b 9E030000 		.4byte	0x39e
 6203 037f 19       		.uleb128 0x19
 6204 0380 43070000 		.4byte	.LASF49
 6205 0384 01       		.byte	0x1
 6206 0385 AB02     		.2byte	0x2ab
 6207 0387 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 168


 6208 038b 02       		.uleb128 0x2
 6209 038c 91       		.byte	0x91
 6210 038d 64       		.sleb128 -28
 6211 038e 17       		.uleb128 0x17
 6212 038f 2B010000 		.4byte	.LASF31
 6213 0393 01       		.byte	0x1
 6214 0394 AD02     		.2byte	0x2ad
 6215 0396 6B000000 		.4byte	0x6b
 6216 039a 02       		.uleb128 0x2
 6217 039b 91       		.byte	0x91
 6218 039c 6F       		.sleb128 -17
 6219 039d 00       		.byte	0
 6220 039e 18       		.uleb128 0x18
 6221 039f 450A0000 		.4byte	.LASF50
 6222 03a3 01       		.byte	0x1
 6223 03a4 E502     		.2byte	0x2e5
 6224 03a6 00000000 		.4byte	.LFB13
 6225 03aa 2C020000 		.4byte	.LFE13-.LFB13
 6226 03ae 01       		.uleb128 0x1
 6227 03af 9C       		.byte	0x9c
 6228 03b0 2D040000 		.4byte	0x42d
 6229 03b4 19       		.uleb128 0x19
 6230 03b5 CC030000 		.4byte	.LASF30
 6231 03b9 01       		.byte	0x1
 6232 03ba E502     		.2byte	0x2e5
 6233 03bc 83000000 		.4byte	0x83
 6234 03c0 02       		.uleb128 0x2
 6235 03c1 91       		.byte	0x91
 6236 03c2 5C       		.sleb128 -36
 6237 03c3 17       		.uleb128 0x17
 6238 03c4 F9090000 		.4byte	.LASF51
 6239 03c8 01       		.byte	0x1
 6240 03c9 EB02     		.2byte	0x2eb
 6241 03cb 6B000000 		.4byte	0x6b
 6242 03cf 02       		.uleb128 0x2
 6243 03d0 91       		.byte	0x91
 6244 03d1 6F       		.sleb128 -17
 6245 03d2 17       		.uleb128 0x17
 6246 03d3 010A0000 		.4byte	.LASF52
 6247 03d7 01       		.byte	0x1
 6248 03d8 EC02     		.2byte	0x2ec
 6249 03da 6B000000 		.4byte	0x6b
 6250 03de 02       		.uleb128 0x2
 6251 03df 91       		.byte	0x91
 6252 03e0 6E       		.sleb128 -18
 6253 03e1 17       		.uleb128 0x17
 6254 03e2 21090000 		.4byte	.LASF53
 6255 03e6 01       		.byte	0x1
 6256 03e7 ED02     		.2byte	0x2ed
 6257 03e9 6B000000 		.4byte	0x6b
 6258 03ed 02       		.uleb128 0x2
 6259 03ee 91       		.byte	0x91
 6260 03ef 62       		.sleb128 -30
 6261 03f0 17       		.uleb128 0x17
 6262 03f1 0B070000 		.4byte	.LASF54
 6263 03f5 01       		.byte	0x1
 6264 03f6 EE02     		.2byte	0x2ee
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 169


 6265 03f8 6B000000 		.4byte	0x6b
 6266 03fc 02       		.uleb128 0x2
 6267 03fd 91       		.byte	0x91
 6268 03fe 6D       		.sleb128 -19
 6269 03ff 17       		.uleb128 0x17
 6270 0400 C9060000 		.4byte	.LASF55
 6271 0404 01       		.byte	0x1
 6272 0405 F202     		.2byte	0x2f2
 6273 0407 83000000 		.4byte	0x83
 6274 040b 02       		.uleb128 0x2
 6275 040c 91       		.byte	0x91
 6276 040d 68       		.sleb128 -24
 6277 040e 17       		.uleb128 0x17
 6278 040f A7070000 		.4byte	.LASF56
 6279 0413 01       		.byte	0x1
 6280 0414 F602     		.2byte	0x2f6
 6281 0416 83000000 		.4byte	0x83
 6282 041a 02       		.uleb128 0x2
 6283 041b 91       		.byte	0x91
 6284 041c 64       		.sleb128 -28
 6285 041d 17       		.uleb128 0x17
 6286 041e 2B010000 		.4byte	.LASF31
 6287 0422 01       		.byte	0x1
 6288 0423 F902     		.2byte	0x2f9
 6289 0425 6B000000 		.4byte	0x6b
 6290 0429 02       		.uleb128 0x2
 6291 042a 91       		.byte	0x91
 6292 042b 63       		.sleb128 -29
 6293 042c 00       		.byte	0
 6294 042d 1A       		.uleb128 0x1a
 6295 042e 22060000 		.4byte	.LASF58
 6296 0432 01       		.byte	0x1
 6297 0433 6504     		.2byte	0x465
 6298 0435 B0000000 		.4byte	0xb0
 6299 0439 00000000 		.4byte	.LFB14
 6300 043d 68000000 		.4byte	.LFE14-.LFB14
 6301 0441 01       		.uleb128 0x1
 6302 0442 9C       		.byte	0x9c
 6303 0443 66040000 		.4byte	0x466
 6304 0447 19       		.uleb128 0x19
 6305 0448 32090000 		.4byte	.LASF59
 6306 044c 01       		.byte	0x1
 6307 044d 6504     		.2byte	0x465
 6308 044f 83000000 		.4byte	0x83
 6309 0453 02       		.uleb128 0x2
 6310 0454 91       		.byte	0x91
 6311 0455 6C       		.sleb128 -20
 6312 0456 17       		.uleb128 0x17
 6313 0457 9A000000 		.4byte	.LASF60
 6314 045b 01       		.byte	0x1
 6315 045c 6704     		.2byte	0x467
 6316 045e B0000000 		.4byte	0xb0
 6317 0462 02       		.uleb128 0x2
 6318 0463 91       		.byte	0x91
 6319 0464 74       		.sleb128 -12
 6320 0465 00       		.byte	0
 6321 0466 13       		.uleb128 0x13
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 170


 6322 0467 8F020000 		.4byte	.LASF61
 6323 046b 01       		.byte	0x1
 6324 046c F304     		.2byte	0x4f3
 6325 046e 00000000 		.4byte	.LFB15
 6326 0472 20000000 		.4byte	.LFE15-.LFB15
 6327 0476 01       		.uleb128 0x1
 6328 0477 9C       		.byte	0x9c
 6329 0478 1B       		.uleb128 0x1b
 6330 0479 CC040000 		.4byte	.LASF62
 6331 047d 01       		.byte	0x1
 6332 047e 1505     		.2byte	0x515
 6333 0480 83000000 		.4byte	0x83
 6334 0484 00000000 		.4byte	.LFB16
 6335 0488 24000000 		.4byte	.LFE16-.LFB16
 6336 048c 01       		.uleb128 0x1
 6337 048d 9C       		.byte	0x9c
 6338 048e A2040000 		.4byte	0x4a2
 6339 0492 17       		.uleb128 0x17
 6340 0493 A4060000 		.4byte	.LASF63
 6341 0497 01       		.byte	0x1
 6342 0498 1705     		.2byte	0x517
 6343 049a 83000000 		.4byte	0x83
 6344 049e 02       		.uleb128 0x2
 6345 049f 91       		.byte	0x91
 6346 04a0 74       		.sleb128 -12
 6347 04a1 00       		.byte	0
 6348 04a2 18       		.uleb128 0x18
 6349 04a3 8F080000 		.4byte	.LASF64
 6350 04a7 01       		.byte	0x1
 6351 04a8 9D05     		.2byte	0x59d
 6352 04aa 00000000 		.4byte	.LFB17
 6353 04ae 98000000 		.4byte	.LFE17-.LFB17
 6354 04b2 01       		.uleb128 0x1
 6355 04b3 9C       		.byte	0x9c
 6356 04b4 22050000 		.4byte	0x522
 6357 04b8 19       		.uleb128 0x19
 6358 04b9 1B060000 		.4byte	.LASF65
 6359 04bd 01       		.byte	0x1
 6360 04be 9D05     		.2byte	0x59d
 6361 04c0 83000000 		.4byte	0x83
 6362 04c4 02       		.uleb128 0x2
 6363 04c5 91       		.byte	0x91
 6364 04c6 64       		.sleb128 -28
 6365 04c7 19       		.uleb128 0x19
 6366 04c8 F3040000 		.4byte	.LASF66
 6367 04cc 01       		.byte	0x1
 6368 04cd 9D05     		.2byte	0x59d
 6369 04cf 83000000 		.4byte	0x83
 6370 04d3 02       		.uleb128 0x2
 6371 04d4 91       		.byte	0x91
 6372 04d5 60       		.sleb128 -32
 6373 04d6 19       		.uleb128 0x19
 6374 04d7 F8000000 		.4byte	.LASF67
 6375 04db 01       		.byte	0x1
 6376 04dc 9D05     		.2byte	0x59d
 6377 04de 83000000 		.4byte	0x83
 6378 04e2 02       		.uleb128 0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 171


 6379 04e3 91       		.byte	0x91
 6380 04e4 5C       		.sleb128 -36
 6381 04e5 19       		.uleb128 0x19
 6382 04e6 C1080000 		.4byte	.LASF68
 6383 04ea 01       		.byte	0x1
 6384 04eb 9D05     		.2byte	0x59d
 6385 04ed 83000000 		.4byte	0x83
 6386 04f1 02       		.uleb128 0x2
 6387 04f2 91       		.byte	0x91
 6388 04f3 58       		.sleb128 -40
 6389 04f4 19       		.uleb128 0x19
 6390 04f5 01080000 		.4byte	.LASF69
 6391 04f9 01       		.byte	0x1
 6392 04fa 9D05     		.2byte	0x59d
 6393 04fc 83000000 		.4byte	0x83
 6394 0500 02       		.uleb128 0x2
 6395 0501 91       		.byte	0x91
 6396 0502 00       		.sleb128 0
 6397 0503 17       		.uleb128 0x17
 6398 0504 2B010000 		.4byte	.LASF31
 6399 0508 01       		.byte	0x1
 6400 0509 9F05     		.2byte	0x59f
 6401 050b 6B000000 		.4byte	0x6b
 6402 050f 02       		.uleb128 0x2
 6403 0510 91       		.byte	0x91
 6404 0511 6F       		.sleb128 -17
 6405 0512 17       		.uleb128 0x17
 6406 0513 12030000 		.4byte	.LASF32
 6407 0517 01       		.byte	0x1
 6408 0518 A005     		.2byte	0x5a0
 6409 051a 83000000 		.4byte	0x83
 6410 051e 02       		.uleb128 0x2
 6411 051f 91       		.byte	0x91
 6412 0520 68       		.sleb128 -24
 6413 0521 00       		.byte	0
 6414 0522 1A       		.uleb128 0x1a
 6415 0523 62070000 		.4byte	.LASF70
 6416 0527 01       		.byte	0x1
 6417 0528 D005     		.2byte	0x5d0
 6418 052a B0000000 		.4byte	0xb0
 6419 052e 00000000 		.4byte	.LFB18
 6420 0532 E4010000 		.4byte	.LFE18-.LFB18
 6421 0536 01       		.uleb128 0x1
 6422 0537 9C       		.byte	0x9c
 6423 0538 E2050000 		.4byte	0x5e2
 6424 053c 19       		.uleb128 0x19
 6425 053d CC030000 		.4byte	.LASF30
 6426 0541 01       		.byte	0x1
 6427 0542 D005     		.2byte	0x5d0
 6428 0544 83000000 		.4byte	0x83
 6429 0548 02       		.uleb128 0x2
 6430 0549 91       		.byte	0x91
 6431 054a 4C       		.sleb128 -52
 6432 054b 19       		.uleb128 0x19
 6433 054c 20070000 		.4byte	.LASF71
 6434 0550 01       		.byte	0x1
 6435 0551 D005     		.2byte	0x5d0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 172


 6436 0553 83000000 		.4byte	0x83
 6437 0557 02       		.uleb128 0x2
 6438 0558 91       		.byte	0x91
 6439 0559 48       		.sleb128 -56
 6440 055a 1C       		.uleb128 0x1c
 6441 055b 65737200 		.ascii	"esr\000"
 6442 055f 01       		.byte	0x1
 6443 0560 D005     		.2byte	0x5d0
 6444 0562 83000000 		.4byte	0x83
 6445 0566 02       		.uleb128 0x2
 6446 0567 91       		.byte	0x91
 6447 0568 44       		.sleb128 -60
 6448 0569 19       		.uleb128 0x19
 6449 056a FF040000 		.4byte	.LASF72
 6450 056e 01       		.byte	0x1
 6451 056f D005     		.2byte	0x5d0
 6452 0571 83000000 		.4byte	0x83
 6453 0575 02       		.uleb128 0x2
 6454 0576 91       		.byte	0x91
 6455 0577 40       		.sleb128 -64
 6456 0578 17       		.uleb128 0x17
 6457 0579 9A000000 		.4byte	.LASF60
 6458 057d 01       		.byte	0x1
 6459 057e D205     		.2byte	0x5d2
 6460 0580 B0000000 		.4byte	0xb0
 6461 0584 02       		.uleb128 0x2
 6462 0585 91       		.byte	0x91
 6463 0586 6C       		.sleb128 -20
 6464 0587 17       		.uleb128 0x17
 6465 0588 1B060000 		.4byte	.LASF65
 6466 058c 01       		.byte	0x1
 6467 058d D405     		.2byte	0x5d4
 6468 058f 83000000 		.4byte	0x83
 6469 0593 02       		.uleb128 0x2
 6470 0594 91       		.byte	0x91
 6471 0595 5C       		.sleb128 -36
 6472 0596 17       		.uleb128 0x17
 6473 0597 F3040000 		.4byte	.LASF66
 6474 059b 01       		.byte	0x1
 6475 059c D505     		.2byte	0x5d5
 6476 059e 83000000 		.4byte	0x83
 6477 05a2 02       		.uleb128 0x2
 6478 05a3 91       		.byte	0x91
 6479 05a4 68       		.sleb128 -24
 6480 05a5 17       		.uleb128 0x17
 6481 05a6 F8000000 		.4byte	.LASF67
 6482 05aa 01       		.byte	0x1
 6483 05ab D605     		.2byte	0x5d6
 6484 05ad 83000000 		.4byte	0x83
 6485 05b1 02       		.uleb128 0x2
 6486 05b2 91       		.byte	0x91
 6487 05b3 54       		.sleb128 -44
 6488 05b4 17       		.uleb128 0x17
 6489 05b5 C1080000 		.4byte	.LASF68
 6490 05b9 01       		.byte	0x1
 6491 05ba D705     		.2byte	0x5d7
 6492 05bc 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 173


 6493 05c0 02       		.uleb128 0x2
 6494 05c1 91       		.byte	0x91
 6495 05c2 64       		.sleb128 -28
 6496 05c3 17       		.uleb128 0x17
 6497 05c4 01080000 		.4byte	.LASF69
 6498 05c8 01       		.byte	0x1
 6499 05c9 D805     		.2byte	0x5d8
 6500 05cb 83000000 		.4byte	0x83
 6501 05cf 02       		.uleb128 0x2
 6502 05d0 91       		.byte	0x91
 6503 05d1 60       		.sleb128 -32
 6504 05d2 17       		.uleb128 0x17
 6505 05d3 F9040000 		.4byte	.LASF73
 6506 05d7 01       		.byte	0x1
 6507 05d8 DA05     		.2byte	0x5da
 6508 05da 83000000 		.4byte	0x83
 6509 05de 02       		.uleb128 0x2
 6510 05df 91       		.byte	0x91
 6511 05e0 58       		.sleb128 -40
 6512 05e1 00       		.byte	0
 6513 05e2 1A       		.uleb128 0x1a
 6514 05e3 AA090000 		.4byte	.LASF74
 6515 05e7 01       		.byte	0x1
 6516 05e8 6706     		.2byte	0x667
 6517 05ea B0000000 		.4byte	0xb0
 6518 05ee 00000000 		.4byte	.LFB19
 6519 05f2 10010000 		.4byte	.LFE19-.LFB19
 6520 05f6 01       		.uleb128 0x1
 6521 05f7 9C       		.byte	0x9c
 6522 05f8 48060000 		.4byte	0x648
 6523 05fc 1C       		.uleb128 0x1c
 6524 05fd 706C6C00 		.ascii	"pll\000"
 6525 0601 01       		.byte	0x1
 6526 0602 6706     		.2byte	0x667
 6527 0604 83000000 		.4byte	0x83
 6528 0608 02       		.uleb128 0x2
 6529 0609 91       		.byte	0x91
 6530 060a 5C       		.sleb128 -36
 6531 060b 19       		.uleb128 0x19
 6532 060c 9F060000 		.4byte	.LASF75
 6533 0610 01       		.byte	0x1
 6534 0611 6706     		.2byte	0x667
 6535 0613 83000000 		.4byte	0x83
 6536 0617 02       		.uleb128 0x2
 6537 0618 91       		.byte	0x91
 6538 0619 58       		.sleb128 -40
 6539 061a 17       		.uleb128 0x17
 6540 061b C5030000 		.4byte	.LASF76
 6541 061f 01       		.byte	0x1
 6542 0620 6906     		.2byte	0x669
 6543 0622 83000000 		.4byte	0x83
 6544 0626 02       		.uleb128 0x2
 6545 0627 91       		.byte	0x91
 6546 0628 6C       		.sleb128 -20
 6547 0629 17       		.uleb128 0x17
 6548 062a 2B010000 		.4byte	.LASF31
 6549 062e 01       		.byte	0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 174


 6550 062f 6A06     		.2byte	0x66a
 6551 0631 6B000000 		.4byte	0x6b
 6552 0635 02       		.uleb128 0x2
 6553 0636 91       		.byte	0x91
 6554 0637 67       		.sleb128 -25
 6555 0638 17       		.uleb128 0x17
 6556 0639 9A000000 		.4byte	.LASF60
 6557 063d 01       		.byte	0x1
 6558 063e 6B06     		.2byte	0x66b
 6559 0640 B0000000 		.4byte	0xb0
 6560 0644 02       		.uleb128 0x2
 6561 0645 91       		.byte	0x91
 6562 0646 68       		.sleb128 -24
 6563 0647 00       		.byte	0
 6564 0648 1A       		.uleb128 0x1a
 6565 0649 84090000 		.4byte	.LASF77
 6566 064d 01       		.byte	0x1
 6567 064e AA06     		.2byte	0x6aa
 6568 0650 83000000 		.4byte	0x83
 6569 0654 00000000 		.4byte	.LFB20
 6570 0658 70000000 		.4byte	.LFE20-.LFB20
 6571 065c 01       		.uleb128 0x1
 6572 065d 9C       		.byte	0x9c
 6573 065e 90060000 		.4byte	0x690
 6574 0662 1C       		.uleb128 0x1c
 6575 0663 706C6C00 		.ascii	"pll\000"
 6576 0667 01       		.byte	0x1
 6577 0668 AA06     		.2byte	0x6aa
 6578 066a 83000000 		.4byte	0x83
 6579 066e 02       		.uleb128 0x2
 6580 066f 91       		.byte	0x91
 6581 0670 64       		.sleb128 -28
 6582 0671 17       		.uleb128 0x17
 6583 0672 2B010000 		.4byte	.LASF31
 6584 0676 01       		.byte	0x1
 6585 0677 AC06     		.2byte	0x6ac
 6586 0679 6B000000 		.4byte	0x6b
 6587 067d 02       		.uleb128 0x2
 6588 067e 91       		.byte	0x91
 6589 067f 6B       		.sleb128 -21
 6590 0680 17       		.uleb128 0x17
 6591 0681 9A000000 		.4byte	.LASF60
 6592 0685 01       		.byte	0x1
 6593 0686 AD06     		.2byte	0x6ad
 6594 0688 83000000 		.4byte	0x83
 6595 068c 02       		.uleb128 0x2
 6596 068d 91       		.byte	0x91
 6597 068e 6C       		.sleb128 -20
 6598 068f 00       		.byte	0
 6599 0690 18       		.uleb128 0x18
 6600 0691 4F080000 		.4byte	.LASF78
 6601 0695 01       		.byte	0x1
 6602 0696 CF06     		.2byte	0x6cf
 6603 0698 00000000 		.4byte	.LFB21
 6604 069c 54000000 		.4byte	.LFE21-.LFB21
 6605 06a0 01       		.uleb128 0x1
 6606 06a1 9C       		.byte	0x9c
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 175


 6607 06a2 C5060000 		.4byte	0x6c5
 6608 06a6 1C       		.uleb128 0x1c
 6609 06a7 706C6C00 		.ascii	"pll\000"
 6610 06ab 01       		.byte	0x1
 6611 06ac CF06     		.2byte	0x6cf
 6612 06ae 83000000 		.4byte	0x83
 6613 06b2 02       		.uleb128 0x2
 6614 06b3 91       		.byte	0x91
 6615 06b4 64       		.sleb128 -28
 6616 06b5 17       		.uleb128 0x17
 6617 06b6 2B010000 		.4byte	.LASF31
 6618 06ba 01       		.byte	0x1
 6619 06bb D106     		.2byte	0x6d1
 6620 06bd 6B000000 		.4byte	0x6b
 6621 06c1 02       		.uleb128 0x2
 6622 06c2 91       		.byte	0x91
 6623 06c3 6F       		.sleb128 -17
 6624 06c4 00       		.byte	0
 6625 06c5 1A       		.uleb128 0x1a
 6626 06c6 E2040000 		.4byte	.LASF79
 6627 06ca 01       		.byte	0x1
 6628 06cb FC06     		.2byte	0x6fc
 6629 06cd B0000000 		.4byte	0xb0
 6630 06d1 00000000 		.4byte	.LFB22
 6631 06d5 D4000000 		.4byte	.LFE22-.LFB22
 6632 06d9 01       		.uleb128 0x1
 6633 06da 9C       		.byte	0x9c
 6634 06db 58070000 		.4byte	0x758
 6635 06df 1C       		.uleb128 0x1c
 6636 06e0 706C6C00 		.ascii	"pll\000"
 6637 06e4 01       		.byte	0x1
 6638 06e5 FC06     		.2byte	0x6fc
 6639 06e7 83000000 		.4byte	0x83
 6640 06eb 02       		.uleb128 0x2
 6641 06ec 91       		.byte	0x91
 6642 06ed 5C       		.sleb128 -36
 6643 06ee 19       		.uleb128 0x19
 6644 06ef 75040000 		.4byte	.LASF80
 6645 06f3 01       		.byte	0x1
 6646 06f4 FC06     		.2byte	0x6fc
 6647 06f6 83000000 		.4byte	0x83
 6648 06fa 02       		.uleb128 0x2
 6649 06fb 91       		.byte	0x91
 6650 06fc 58       		.sleb128 -40
 6651 06fd 19       		.uleb128 0x19
 6652 06fe 2B020000 		.4byte	.LASF81
 6653 0702 01       		.byte	0x1
 6654 0703 FC06     		.2byte	0x6fc
 6655 0705 83000000 		.4byte	0x83
 6656 0709 02       		.uleb128 0x2
 6657 070a 91       		.byte	0x91
 6658 070b 54       		.sleb128 -44
 6659 070c 19       		.uleb128 0x19
 6660 070d A40A0000 		.4byte	.LASF82
 6661 0711 01       		.byte	0x1
 6662 0712 FC06     		.2byte	0x6fc
 6663 0714 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 176


 6664 0718 02       		.uleb128 0x2
 6665 0719 91       		.byte	0x91
 6666 071a 50       		.sleb128 -48
 6667 071b 17       		.uleb128 0x17
 6668 071c 12030000 		.4byte	.LASF32
 6669 0720 01       		.byte	0x1
 6670 0721 FE06     		.2byte	0x6fe
 6671 0723 83000000 		.4byte	0x83
 6672 0727 02       		.uleb128 0x2
 6673 0728 91       		.byte	0x91
 6674 0729 60       		.sleb128 -32
 6675 072a 16       		.uleb128 0x16
 6676 072b 746D7000 		.ascii	"tmp\000"
 6677 072f 01       		.byte	0x1
 6678 0730 FF06     		.2byte	0x6ff
 6679 0732 B0000000 		.4byte	0xb0
 6680 0736 02       		.uleb128 0x2
 6681 0737 91       		.byte	0x91
 6682 0738 64       		.sleb128 -28
 6683 0739 17       		.uleb128 0x17
 6684 073a 2B010000 		.4byte	.LASF31
 6685 073e 01       		.byte	0x1
 6686 073f 0007     		.2byte	0x700
 6687 0741 6B000000 		.4byte	0x6b
 6688 0745 02       		.uleb128 0x2
 6689 0746 91       		.byte	0x91
 6690 0747 6B       		.sleb128 -21
 6691 0748 17       		.uleb128 0x17
 6692 0749 9A000000 		.4byte	.LASF60
 6693 074d 01       		.byte	0x1
 6694 074e 0107     		.2byte	0x701
 6695 0750 B0000000 		.4byte	0xb0
 6696 0754 02       		.uleb128 0x2
 6697 0755 91       		.byte	0x91
 6698 0756 6C       		.sleb128 -20
 6699 0757 00       		.byte	0
 6700 0758 18       		.uleb128 0x18
 6701 0759 76080000 		.4byte	.LASF83
 6702 075d 01       		.byte	0x1
 6703 075e 4007     		.2byte	0x740
 6704 0760 00000000 		.4byte	.LFB23
 6705 0764 6C000000 		.4byte	.LFE23-.LFB23
 6706 0768 01       		.uleb128 0x1
 6707 0769 9C       		.byte	0x9c
 6708 076a AB070000 		.4byte	0x7ab
 6709 076e 1C       		.uleb128 0x1c
 6710 076f 706C6C00 		.ascii	"pll\000"
 6711 0773 01       		.byte	0x1
 6712 0774 4007     		.2byte	0x740
 6713 0776 83000000 		.4byte	0x83
 6714 077a 02       		.uleb128 0x2
 6715 077b 91       		.byte	0x91
 6716 077c 64       		.sleb128 -28
 6717 077d 19       		.uleb128 0x19
 6718 077e D1030000 		.4byte	.LASF84
 6719 0782 01       		.byte	0x1
 6720 0783 4007     		.2byte	0x740
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 177


 6721 0785 83000000 		.4byte	0x83
 6722 0789 02       		.uleb128 0x2
 6723 078a 91       		.byte	0x91
 6724 078b 60       		.sleb128 -32
 6725 078c 17       		.uleb128 0x17
 6726 078d 12030000 		.4byte	.LASF32
 6727 0791 01       		.byte	0x1
 6728 0792 4207     		.2byte	0x742
 6729 0794 83000000 		.4byte	0x83
 6730 0798 02       		.uleb128 0x2
 6731 0799 91       		.byte	0x91
 6732 079a 68       		.sleb128 -24
 6733 079b 17       		.uleb128 0x17
 6734 079c 2B010000 		.4byte	.LASF31
 6735 07a0 01       		.byte	0x1
 6736 07a1 4307     		.2byte	0x743
 6737 07a3 6B000000 		.4byte	0x6b
 6738 07a7 02       		.uleb128 0x2
 6739 07a8 91       		.byte	0x91
 6740 07a9 6F       		.sleb128 -17
 6741 07aa 00       		.byte	0
 6742 07ab 1D       		.uleb128 0x1d
 6743 07ac D9050000 		.4byte	.LASF85
 6744 07b0 01       		.byte	0x1
 6745 07b1 6107     		.2byte	0x761
 6746 07b3 83000000 		.4byte	0x83
 6747 07b7 00000000 		.4byte	.LFB24
 6748 07bb 58000000 		.4byte	.LFE24-.LFB24
 6749 07bf 01       		.uleb128 0x1
 6750 07c0 9C       		.byte	0x9c
 6751 07c1 F3070000 		.4byte	0x7f3
 6752 07c5 1C       		.uleb128 0x1c
 6753 07c6 706C6C00 		.ascii	"pll\000"
 6754 07ca 01       		.byte	0x1
 6755 07cb 6107     		.2byte	0x761
 6756 07cd 83000000 		.4byte	0x83
 6757 07d1 02       		.uleb128 0x2
 6758 07d2 91       		.byte	0x91
 6759 07d3 64       		.sleb128 -28
 6760 07d4 17       		.uleb128 0x17
 6761 07d5 A4060000 		.4byte	.LASF63
 6762 07d9 01       		.byte	0x1
 6763 07da 6307     		.2byte	0x763
 6764 07dc 83000000 		.4byte	0x83
 6765 07e0 02       		.uleb128 0x2
 6766 07e1 91       		.byte	0x91
 6767 07e2 68       		.sleb128 -24
 6768 07e3 17       		.uleb128 0x17
 6769 07e4 2B010000 		.4byte	.LASF31
 6770 07e8 01       		.byte	0x1
 6771 07e9 6407     		.2byte	0x764
 6772 07eb 6B000000 		.4byte	0x6b
 6773 07ef 02       		.uleb128 0x2
 6774 07f0 91       		.byte	0x91
 6775 07f1 6F       		.sleb128 -17
 6776 07f2 00       		.byte	0
 6777 07f3 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 178


 6778 07f4 3A060000 		.4byte	.LASF86
 6779 07f8 01       		.byte	0x1
 6780 07f9 8407     		.2byte	0x784
 6781 07fb B0000000 		.4byte	0xb0
 6782 07ff 00000000 		.4byte	.LFB25
 6783 0803 54000000 		.4byte	.LFE25-.LFB25
 6784 0807 01       		.uleb128 0x1
 6785 0808 9C       		.byte	0x9c
 6786 0809 4A080000 		.4byte	0x84a
 6787 080d 1C       		.uleb128 0x1c
 6788 080e 706C6C00 		.ascii	"pll\000"
 6789 0812 01       		.byte	0x1
 6790 0813 8407     		.2byte	0x784
 6791 0815 83000000 		.4byte	0x83
 6792 0819 02       		.uleb128 0x2
 6793 081a 91       		.byte	0x91
 6794 081b 64       		.sleb128 -28
 6795 081c 17       		.uleb128 0x17
 6796 081d 54070000 		.4byte	.LASF87
 6797 0821 01       		.byte	0x1
 6798 0822 8607     		.2byte	0x786
 6799 0824 83000000 		.4byte	0x83
 6800 0828 02       		.uleb128 0x2
 6801 0829 91       		.byte	0x91
 6802 082a 6C       		.sleb128 -20
 6803 082b 17       		.uleb128 0x17
 6804 082c B90A0000 		.4byte	.LASF47
 6805 0830 01       		.byte	0x1
 6806 0831 8707     		.2byte	0x787
 6807 0833 83000000 		.4byte	0x83
 6808 0837 02       		.uleb128 0x2
 6809 0838 91       		.byte	0x91
 6810 0839 70       		.sleb128 -16
 6811 083a 17       		.uleb128 0x17
 6812 083b A4060000 		.4byte	.LASF63
 6813 083f 01       		.byte	0x1
 6814 0840 8807     		.2byte	0x788
 6815 0842 B0000000 		.4byte	0xb0
 6816 0846 02       		.uleb128 0x2
 6817 0847 91       		.byte	0x91
 6818 0848 74       		.sleb128 -12
 6819 0849 00       		.byte	0
 6820 084a 1A       		.uleb128 0x1a
 6821 084b 43000000 		.4byte	.LASF88
 6822 084f 01       		.byte	0x1
 6823 0850 AD07     		.2byte	0x7ad
 6824 0852 83000000 		.4byte	0x83
 6825 0856 00000000 		.4byte	.LFB26
 6826 085a 74000000 		.4byte	.LFE26-.LFB26
 6827 085e 01       		.uleb128 0x1
 6828 085f 9C       		.byte	0x9c
 6829 0860 92080000 		.4byte	0x892
 6830 0864 1C       		.uleb128 0x1c
 6831 0865 706C6C00 		.ascii	"pll\000"
 6832 0869 01       		.byte	0x1
 6833 086a AD07     		.2byte	0x7ad
 6834 086c 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 179


 6835 0870 02       		.uleb128 0x2
 6836 0871 91       		.byte	0x91
 6837 0872 64       		.sleb128 -28
 6838 0873 17       		.uleb128 0x17
 6839 0874 9A000000 		.4byte	.LASF60
 6840 0878 01       		.byte	0x1
 6841 0879 AF07     		.2byte	0x7af
 6842 087b 83000000 		.4byte	0x83
 6843 087f 02       		.uleb128 0x2
 6844 0880 91       		.byte	0x91
 6845 0881 6C       		.sleb128 -20
 6846 0882 17       		.uleb128 0x17
 6847 0883 2B010000 		.4byte	.LASF31
 6848 0887 01       		.byte	0x1
 6849 0888 B007     		.2byte	0x7b0
 6850 088a 6B000000 		.4byte	0x6b
 6851 088e 02       		.uleb128 0x2
 6852 088f 91       		.byte	0x91
 6853 0890 6B       		.sleb128 -21
 6854 0891 00       		.byte	0
 6855 0892 1A       		.uleb128 0x1a
 6856 0893 C4020000 		.4byte	.LASF89
 6857 0897 01       		.byte	0x1
 6858 0898 E107     		.2byte	0x7e1
 6859 089a B0000000 		.4byte	0xb0
 6860 089e 00000000 		.4byte	.LFB27
 6861 08a2 6C010000 		.4byte	.LFE27-.LFB27
 6862 08a6 01       		.uleb128 0x1
 6863 08a7 9C       		.byte	0x9c
 6864 08a8 8A090000 		.4byte	0x98a
 6865 08ac 1C       		.uleb128 0x1c
 6866 08ad 706C6C00 		.ascii	"pll\000"
 6867 08b1 01       		.byte	0x1
 6868 08b2 E107     		.2byte	0x7e1
 6869 08b4 83000000 		.4byte	0x83
 6870 08b8 02       		.uleb128 0x2
 6871 08b9 91       		.byte	0x91
 6872 08ba 4C       		.sleb128 -52
 6873 08bb 19       		.uleb128 0x19
 6874 08bc 66030000 		.4byte	.LASF90
 6875 08c0 01       		.byte	0x1
 6876 08c1 E107     		.2byte	0x7e1
 6877 08c3 83000000 		.4byte	0x83
 6878 08c7 02       		.uleb128 0x2
 6879 08c8 91       		.byte	0x91
 6880 08c9 48       		.sleb128 -56
 6881 08ca 19       		.uleb128 0x19
 6882 08cb C1060000 		.4byte	.LASF91
 6883 08cf 01       		.byte	0x1
 6884 08d0 E107     		.2byte	0x7e1
 6885 08d2 83000000 		.4byte	0x83
 6886 08d6 02       		.uleb128 0x2
 6887 08d7 91       		.byte	0x91
 6888 08d8 44       		.sleb128 -60
 6889 08d9 19       		.uleb128 0x19
 6890 08da 43070000 		.4byte	.LASF49
 6891 08de 01       		.byte	0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 180


 6892 08df E107     		.2byte	0x7e1
 6893 08e1 83000000 		.4byte	0x83
 6894 08e5 02       		.uleb128 0x2
 6895 08e6 91       		.byte	0x91
 6896 08e7 40       		.sleb128 -64
 6897 08e8 19       		.uleb128 0x19
 6898 08e9 0E010000 		.4byte	.LASF92
 6899 08ed 01       		.byte	0x1
 6900 08ee E107     		.2byte	0x7e1
 6901 08f0 83000000 		.4byte	0x83
 6902 08f4 02       		.uleb128 0x2
 6903 08f5 91       		.byte	0x91
 6904 08f6 00       		.sleb128 0
 6905 08f7 17       		.uleb128 0x17
 6906 08f8 37030000 		.4byte	.LASF93
 6907 08fc 01       		.byte	0x1
 6908 08fd E307     		.2byte	0x7e3
 6909 08ff 83000000 		.4byte	0x83
 6910 0903 02       		.uleb128 0x2
 6911 0904 91       		.byte	0x91
 6912 0905 60       		.sleb128 -32
 6913 0906 17       		.uleb128 0x17
 6914 0907 68080000 		.4byte	.LASF94
 6915 090b 01       		.byte	0x1
 6916 090c E407     		.2byte	0x7e4
 6917 090e 83000000 		.4byte	0x83
 6918 0912 02       		.uleb128 0x2
 6919 0913 91       		.byte	0x91
 6920 0914 5C       		.sleb128 -36
 6921 0915 17       		.uleb128 0x17
 6922 0916 9D030000 		.4byte	.LASF95
 6923 091a 01       		.byte	0x1
 6924 091b E607     		.2byte	0x7e6
 6925 091d 83000000 		.4byte	0x83
 6926 0921 02       		.uleb128 0x2
 6927 0922 91       		.byte	0x91
 6928 0923 74       		.sleb128 -12
 6929 0924 17       		.uleb128 0x17
 6930 0925 3C080000 		.4byte	.LASF96
 6931 0929 01       		.byte	0x1
 6932 092a E707     		.2byte	0x7e7
 6933 092c 83000000 		.4byte	0x83
 6934 0930 02       		.uleb128 0x2
 6935 0931 91       		.byte	0x91
 6936 0932 70       		.sleb128 -16
 6937 0933 16       		.uleb128 0x16
 6938 0934 7100     		.ascii	"q\000"
 6939 0936 01       		.byte	0x1
 6940 0937 E907     		.2byte	0x7e9
 6941 0939 83000000 		.4byte	0x83
 6942 093d 02       		.uleb128 0x2
 6943 093e 91       		.byte	0x91
 6944 093f 6C       		.sleb128 -20
 6945 0940 16       		.uleb128 0x16
 6946 0941 7000     		.ascii	"p\000"
 6947 0943 01       		.byte	0x1
 6948 0944 EA07     		.2byte	0x7ea
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 181


 6949 0946 83000000 		.4byte	0x83
 6950 094a 02       		.uleb128 0x2
 6951 094b 91       		.byte	0x91
 6952 094c 58       		.sleb128 -40
 6953 094d 17       		.uleb128 0x17
 6954 094e CB070000 		.4byte	.LASF97
 6955 0952 01       		.byte	0x1
 6956 0953 EC07     		.2byte	0x7ec
 6957 0955 83000000 		.4byte	0x83
 6958 0959 02       		.uleb128 0x2
 6959 095a 91       		.byte	0x91
 6960 095b 54       		.sleb128 -44
 6961 095c 17       		.uleb128 0x17
 6962 095d CC000000 		.4byte	.LASF98
 6963 0961 01       		.byte	0x1
 6964 0962 ED07     		.2byte	0x7ed
 6965 0964 8F000000 		.4byte	0x8f
 6966 0968 02       		.uleb128 0x2
 6967 0969 91       		.byte	0x91
 6968 096a 50       		.sleb128 -48
 6969 096b 16       		.uleb128 0x16
 6970 096c 746D7000 		.ascii	"tmp\000"
 6971 0970 01       		.byte	0x1
 6972 0971 EF07     		.2byte	0x7ef
 6973 0973 B0000000 		.4byte	0xb0
 6974 0977 02       		.uleb128 0x2
 6975 0978 91       		.byte	0x91
 6976 0979 64       		.sleb128 -28
 6977 097a 17       		.uleb128 0x17
 6978 097b 9A000000 		.4byte	.LASF60
 6979 097f 01       		.byte	0x1
 6980 0980 F007     		.2byte	0x7f0
 6981 0982 B0000000 		.4byte	0xb0
 6982 0986 02       		.uleb128 0x2
 6983 0987 91       		.byte	0x91
 6984 0988 68       		.sleb128 -24
 6985 0989 00       		.byte	0
 6986 098a 18       		.uleb128 0x18
 6987 098b 700A0000 		.4byte	.LASF99
 6988 098f 01       		.byte	0x1
 6989 0990 4208     		.2byte	0x842
 6990 0992 00000000 		.4byte	.LFB28
 6991 0996 7C000000 		.4byte	.LFE28-.LFB28
 6992 099a 01       		.uleb128 0x1
 6993 099b 9C       		.byte	0x9c
 6994 099c DD090000 		.4byte	0x9dd
 6995 09a0 1C       		.uleb128 0x1c
 6996 09a1 706C6C00 		.ascii	"pll\000"
 6997 09a5 01       		.byte	0x1
 6998 09a6 4208     		.2byte	0x842
 6999 09a8 83000000 		.4byte	0x83
 7000 09ac 02       		.uleb128 0x2
 7001 09ad 91       		.byte	0x91
 7002 09ae 64       		.sleb128 -28
 7003 09af 19       		.uleb128 0x19
 7004 09b0 26080000 		.4byte	.LASF100
 7005 09b4 01       		.byte	0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 182


 7006 09b5 4208     		.2byte	0x842
 7007 09b7 83000000 		.4byte	0x83
 7008 09bb 02       		.uleb128 0x2
 7009 09bc 91       		.byte	0x91
 7010 09bd 60       		.sleb128 -32
 7011 09be 17       		.uleb128 0x17
 7012 09bf 12030000 		.4byte	.LASF32
 7013 09c3 01       		.byte	0x1
 7014 09c4 4408     		.2byte	0x844
 7015 09c6 83000000 		.4byte	0x83
 7016 09ca 02       		.uleb128 0x2
 7017 09cb 91       		.byte	0x91
 7018 09cc 68       		.sleb128 -24
 7019 09cd 17       		.uleb128 0x17
 7020 09ce 2B010000 		.4byte	.LASF31
 7021 09d2 01       		.byte	0x1
 7022 09d3 4508     		.2byte	0x845
 7023 09d5 6B000000 		.4byte	0x6b
 7024 09d9 02       		.uleb128 0x2
 7025 09da 91       		.byte	0x91
 7026 09db 6F       		.sleb128 -17
 7027 09dc 00       		.byte	0
 7028 09dd 1A       		.uleb128 0x1a
 7029 09de F2050000 		.4byte	.LASF101
 7030 09e2 01       		.byte	0x1
 7031 09e3 8408     		.2byte	0x884
 7032 09e5 B0000000 		.4byte	0xb0
 7033 09e9 00000000 		.4byte	.LFB29
 7034 09ed 8C000000 		.4byte	.LFE29-.LFB29
 7035 09f1 01       		.uleb128 0x1
 7036 09f2 9C       		.byte	0x9c
 7037 09f3 520A0000 		.4byte	0xa52
 7038 09f7 1C       		.uleb128 0x1c
 7039 09f8 706C6C00 		.ascii	"pll\000"
 7040 09fc 01       		.byte	0x1
 7041 09fd 8408     		.2byte	0x884
 7042 09ff 83000000 		.4byte	0x83
 7043 0a03 02       		.uleb128 0x2
 7044 0a04 91       		.byte	0x91
 7045 0a05 5C       		.sleb128 -36
 7046 0a06 19       		.uleb128 0x19
 7047 0a07 43070000 		.4byte	.LASF49
 7048 0a0b 01       		.byte	0x1
 7049 0a0c 8408     		.2byte	0x884
 7050 0a0e 83000000 		.4byte	0x83
 7051 0a12 02       		.uleb128 0x2
 7052 0a13 91       		.byte	0x91
 7053 0a14 58       		.sleb128 -40
 7054 0a15 17       		.uleb128 0x17
 7055 0a16 FD060000 		.4byte	.LASF43
 7056 0a1a 01       		.byte	0x1
 7057 0a1b 8608     		.2byte	0x886
 7058 0a1d 83000000 		.4byte	0x83
 7059 0a21 02       		.uleb128 0x2
 7060 0a22 91       		.byte	0x91
 7061 0a23 60       		.sleb128 -32
 7062 0a24 17       		.uleb128 0x17
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 183


 7063 0a25 2B010000 		.4byte	.LASF31
 7064 0a29 01       		.byte	0x1
 7065 0a2a 8708     		.2byte	0x887
 7066 0a2c 6B000000 		.4byte	0x6b
 7067 0a30 02       		.uleb128 0x2
 7068 0a31 91       		.byte	0x91
 7069 0a32 6B       		.sleb128 -21
 7070 0a33 17       		.uleb128 0x17
 7071 0a34 9A000000 		.4byte	.LASF60
 7072 0a38 01       		.byte	0x1
 7073 0a39 8808     		.2byte	0x888
 7074 0a3b B0000000 		.4byte	0xb0
 7075 0a3f 02       		.uleb128 0x2
 7076 0a40 91       		.byte	0x91
 7077 0a41 6C       		.sleb128 -20
 7078 0a42 16       		.uleb128 0x16
 7079 0a43 746D7000 		.ascii	"tmp\000"
 7080 0a47 01       		.byte	0x1
 7081 0a48 8908     		.2byte	0x889
 7082 0a4a B0000000 		.4byte	0xb0
 7083 0a4e 02       		.uleb128 0x2
 7084 0a4f 91       		.byte	0x91
 7085 0a50 64       		.sleb128 -28
 7086 0a51 00       		.byte	0
 7087 0a52 18       		.uleb128 0x18
 7088 0a53 E3010000 		.4byte	.LASF102
 7089 0a57 01       		.byte	0x1
 7090 0a58 C008     		.2byte	0x8c0
 7091 0a5a 00000000 		.4byte	.LFB30
 7092 0a5e 64000000 		.4byte	.LFE30-.LFB30
 7093 0a62 01       		.uleb128 0x1
 7094 0a63 9C       		.byte	0x9c
 7095 0a64 780A0000 		.4byte	0xa78
 7096 0a68 19       		.uleb128 0x19
 7097 0a69 660A0000 		.4byte	.LASF103
 7098 0a6d 01       		.byte	0x1
 7099 0a6e C008     		.2byte	0x8c0
 7100 0a70 83000000 		.4byte	0x83
 7101 0a74 02       		.uleb128 0x2
 7102 0a75 91       		.byte	0x91
 7103 0a76 74       		.sleb128 -12
 7104 0a77 00       		.byte	0
 7105 0a78 13       		.uleb128 0x13
 7106 0a79 C60A0000 		.4byte	.LASF104
 7107 0a7d 01       		.byte	0x1
 7108 0a7e DE08     		.2byte	0x8de
 7109 0a80 00000000 		.4byte	.LFB31
 7110 0a84 2C000000 		.4byte	.LFE31-.LFB31
 7111 0a88 01       		.uleb128 0x1
 7112 0a89 9C       		.byte	0x9c
 7113 0a8a 14       		.uleb128 0x14
 7114 0a8b 10020000 		.4byte	.LASF105
 7115 0a8f 01       		.byte	0x1
 7116 0a90 F008     		.2byte	0x8f0
 7117 0a92 83000000 		.4byte	0x83
 7118 0a96 00000000 		.4byte	.LFB32
 7119 0a9a 18000000 		.4byte	.LFE32-.LFB32
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 184


 7120 0a9e 01       		.uleb128 0x1
 7121 0a9f 9C       		.byte	0x9c
 7122 0aa0 13       		.uleb128 0x13
 7123 0aa1 D9080000 		.4byte	.LASF106
 7124 0aa5 01       		.byte	0x1
 7125 0aa6 0009     		.2byte	0x900
 7126 0aa8 00000000 		.4byte	.LFB33
 7127 0aac 14000000 		.4byte	.LFE33-.LFB33
 7128 0ab0 01       		.uleb128 0x1
 7129 0ab1 9C       		.byte	0x9c
 7130 0ab2 1B       		.uleb128 0x1b
 7131 0ab3 6F050000 		.4byte	.LASF107
 7132 0ab7 01       		.byte	0x1
 7133 0ab8 1A09     		.2byte	0x91a
 7134 0aba 83000000 		.4byte	0x83
 7135 0abe 00000000 		.4byte	.LFB34
 7136 0ac2 30000000 		.4byte	.LFE34-.LFB34
 7137 0ac6 01       		.uleb128 0x1
 7138 0ac7 9C       		.byte	0x9c
 7139 0ac8 EB0A0000 		.4byte	0xaeb
 7140 0acc 19       		.uleb128 0x19
 7141 0acd FD020000 		.4byte	.LASF108
 7142 0ad1 01       		.byte	0x1
 7143 0ad2 1A09     		.2byte	0x91a
 7144 0ad4 83000000 		.4byte	0x83
 7145 0ad8 02       		.uleb128 0x2
 7146 0ad9 91       		.byte	0x91
 7147 0ada 6C       		.sleb128 -20
 7148 0adb 17       		.uleb128 0x17
 7149 0adc 9A000000 		.4byte	.LASF60
 7150 0ae0 01       		.byte	0x1
 7151 0ae1 1C09     		.2byte	0x91c
 7152 0ae3 83000000 		.4byte	0x83
 7153 0ae7 02       		.uleb128 0x2
 7154 0ae8 91       		.byte	0x91
 7155 0ae9 74       		.sleb128 -12
 7156 0aea 00       		.byte	0
 7157 0aeb 1B       		.uleb128 0x1b
 7158 0aec DD060000 		.4byte	.LASF109
 7159 0af0 01       		.byte	0x1
 7160 0af1 3109     		.2byte	0x931
 7161 0af3 83000000 		.4byte	0x83
 7162 0af7 00000000 		.4byte	.LFB35
 7163 0afb 24000000 		.4byte	.LFE35-.LFB35
 7164 0aff 01       		.uleb128 0x1
 7165 0b00 9C       		.byte	0x9c
 7166 0b01 150B0000 		.4byte	0xb15
 7167 0b05 17       		.uleb128 0x17
 7168 0b06 BC030000 		.4byte	.LASF110
 7169 0b0a 01       		.byte	0x1
 7170 0b0b 3309     		.2byte	0x933
 7171 0b0d 83000000 		.4byte	0x83
 7172 0b11 02       		.uleb128 0x2
 7173 0b12 91       		.byte	0x91
 7174 0b13 74       		.sleb128 -12
 7175 0b14 00       		.byte	0
 7176 0b15 15       		.uleb128 0x15
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 185


 7177 0b16 4A020000 		.4byte	.LASF111
 7178 0b1a 01       		.byte	0x1
 7179 0b1b 4809     		.2byte	0x948
 7180 0b1d 00000000 		.4byte	.LFB36
 7181 0b21 1C000000 		.4byte	.LFE36-.LFB36
 7182 0b25 01       		.uleb128 0x1
 7183 0b26 9C       		.byte	0x9c
 7184 0b27 3B0B0000 		.4byte	0xb3b
 7185 0b2b 19       		.uleb128 0x19
 7186 0b2c 82060000 		.4byte	.LASF112
 7187 0b30 01       		.byte	0x1
 7188 0b31 4809     		.2byte	0x948
 7189 0b33 83000000 		.4byte	0x83
 7190 0b37 02       		.uleb128 0x2
 7191 0b38 91       		.byte	0x91
 7192 0b39 74       		.sleb128 -12
 7193 0b3a 00       		.byte	0
 7194 0b3b 1A       		.uleb128 0x1a
 7195 0b3c 7C070000 		.4byte	.LASF113
 7196 0b40 01       		.byte	0x1
 7197 0b41 6109     		.2byte	0x961
 7198 0b43 DE000000 		.4byte	0xde
 7199 0b47 00000000 		.4byte	.LFB37
 7200 0b4b 48000000 		.4byte	.LFE37-.LFB37
 7201 0b4f 01       		.uleb128 0x1
 7202 0b50 9C       		.byte	0x9c
 7203 0b51 920B0000 		.4byte	0xb92
 7204 0b55 19       		.uleb128 0x19
 7205 0b56 2D080000 		.4byte	.LASF114
 7206 0b5a 01       		.byte	0x1
 7207 0b5b 6109     		.2byte	0x961
 7208 0b5d 6B000000 		.4byte	0x6b
 7209 0b61 02       		.uleb128 0x2
 7210 0b62 91       		.byte	0x91
 7211 0b63 6F       		.sleb128 -17
 7212 0b64 19       		.uleb128 0x19
 7213 0b65 57050000 		.4byte	.LASF115
 7214 0b69 01       		.byte	0x1
 7215 0b6a 6109     		.2byte	0x961
 7216 0b6c DE000000 		.4byte	0xde
 7217 0b70 02       		.uleb128 0x2
 7218 0b71 91       		.byte	0x91
 7219 0b72 68       		.sleb128 -24
 7220 0b73 17       		.uleb128 0x17
 7221 0b74 85030000 		.4byte	.LASF116
 7222 0b78 01       		.byte	0x1
 7223 0b79 6309     		.2byte	0x963
 7224 0b7b DE000000 		.4byte	0xde
 7225 0b7f 02       		.uleb128 0x2
 7226 0b80 91       		.byte	0x91
 7227 0b81 70       		.sleb128 -16
 7228 0b82 17       		.uleb128 0x17
 7229 0b83 59090000 		.4byte	.LASF117
 7230 0b87 01       		.byte	0x1
 7231 0b88 6409     		.2byte	0x964
 7232 0b8a 920B0000 		.4byte	0xb92
 7233 0b8e 02       		.uleb128 0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 186


 7234 0b8f 91       		.byte	0x91
 7235 0b90 74       		.sleb128 -12
 7236 0b91 00       		.byte	0
 7237 0b92 06       		.uleb128 0x6
 7238 0b93 04       		.byte	0x4
 7239 0b94 DE000000 		.4byte	0xde
 7240 0b98 1A       		.uleb128 0x1a
 7241 0b99 A2050000 		.4byte	.LASF118
 7242 0b9d 01       		.byte	0x1
 7243 0b9e 8309     		.2byte	0x983
 7244 0ba0 DE000000 		.4byte	0xde
 7245 0ba4 00000000 		.4byte	.LFB38
 7246 0ba8 34000000 		.4byte	.LFE38-.LFB38
 7247 0bac 01       		.uleb128 0x1
 7248 0bad 9C       		.byte	0x9c
 7249 0bae D10B0000 		.4byte	0xbd1
 7250 0bb2 19       		.uleb128 0x19
 7251 0bb3 2D080000 		.4byte	.LASF114
 7252 0bb7 01       		.byte	0x1
 7253 0bb8 8309     		.2byte	0x983
 7254 0bba 6B000000 		.4byte	0x6b
 7255 0bbe 02       		.uleb128 0x2
 7256 0bbf 91       		.byte	0x91
 7257 0bc0 6F       		.sleb128 -17
 7258 0bc1 17       		.uleb128 0x17
 7259 0bc2 59090000 		.4byte	.LASF117
 7260 0bc6 01       		.byte	0x1
 7261 0bc7 8509     		.2byte	0x985
 7262 0bc9 920B0000 		.4byte	0xb92
 7263 0bcd 02       		.uleb128 0x2
 7264 0bce 91       		.byte	0x91
 7265 0bcf 74       		.sleb128 -12
 7266 0bd0 00       		.byte	0
 7267 0bd1 1A       		.uleb128 0x1a
 7268 0bd2 7E040000 		.4byte	.LASF119
 7269 0bd6 01       		.byte	0x1
 7270 0bd7 9909     		.2byte	0x999
 7271 0bd9 DE000000 		.4byte	0xde
 7272 0bdd 00000000 		.4byte	.LFB39
 7273 0be1 4C000000 		.4byte	.LFE39-.LFB39
 7274 0be5 01       		.uleb128 0x1
 7275 0be6 9C       		.byte	0x9c
 7276 0be7 280C0000 		.4byte	0xc28
 7277 0beb 19       		.uleb128 0x19
 7278 0bec 2D080000 		.4byte	.LASF114
 7279 0bf0 01       		.byte	0x1
 7280 0bf1 9909     		.2byte	0x999
 7281 0bf3 6B000000 		.4byte	0x6b
 7282 0bf7 02       		.uleb128 0x2
 7283 0bf8 91       		.byte	0x91
 7284 0bf9 6F       		.sleb128 -17
 7285 0bfa 19       		.uleb128 0x19
 7286 0bfb 57050000 		.4byte	.LASF115
 7287 0bff 01       		.byte	0x1
 7288 0c00 9909     		.2byte	0x999
 7289 0c02 DE000000 		.4byte	0xde
 7290 0c06 02       		.uleb128 0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 187


 7291 0c07 91       		.byte	0x91
 7292 0c08 68       		.sleb128 -24
 7293 0c09 17       		.uleb128 0x17
 7294 0c0a 85030000 		.4byte	.LASF116
 7295 0c0e 01       		.byte	0x1
 7296 0c0f 9B09     		.2byte	0x99b
 7297 0c11 DE000000 		.4byte	0xde
 7298 0c15 02       		.uleb128 0x2
 7299 0c16 91       		.byte	0x91
 7300 0c17 70       		.sleb128 -16
 7301 0c18 17       		.uleb128 0x17
 7302 0c19 59090000 		.4byte	.LASF117
 7303 0c1d 01       		.byte	0x1
 7304 0c1e 9C09     		.2byte	0x99c
 7305 0c20 920B0000 		.4byte	0xb92
 7306 0c24 02       		.uleb128 0x2
 7307 0c25 91       		.byte	0x91
 7308 0c26 74       		.sleb128 -12
 7309 0c27 00       		.byte	0
 7310 0c28 1A       		.uleb128 0x1a
 7311 0c29 0C000000 		.4byte	.LASF120
 7312 0c2d 01       		.byte	0x1
 7313 0c2e B509     		.2byte	0x9b5
 7314 0c30 DE000000 		.4byte	0xde
 7315 0c34 00000000 		.4byte	.LFB40
 7316 0c38 36000000 		.4byte	.LFE40-.LFB40
 7317 0c3c 01       		.uleb128 0x1
 7318 0c3d 9C       		.byte	0x9c
 7319 0c3e 610C0000 		.4byte	0xc61
 7320 0c42 19       		.uleb128 0x19
 7321 0c43 2D080000 		.4byte	.LASF114
 7322 0c47 01       		.byte	0x1
 7323 0c48 B509     		.2byte	0x9b5
 7324 0c4a 6B000000 		.4byte	0x6b
 7325 0c4e 02       		.uleb128 0x2
 7326 0c4f 91       		.byte	0x91
 7327 0c50 6F       		.sleb128 -17
 7328 0c51 17       		.uleb128 0x17
 7329 0c52 59090000 		.4byte	.LASF117
 7330 0c56 01       		.byte	0x1
 7331 0c57 B709     		.2byte	0x9b7
 7332 0c59 920B0000 		.4byte	0xb92
 7333 0c5d 02       		.uleb128 0x2
 7334 0c5e 91       		.byte	0x91
 7335 0c5f 74       		.sleb128 -12
 7336 0c60 00       		.byte	0
 7337 0c61 18       		.uleb128 0x18
 7338 0c62 32000000 		.4byte	.LASF121
 7339 0c66 01       		.byte	0x1
 7340 0c67 C809     		.2byte	0x9c8
 7341 0c69 00000000 		.4byte	.LFB41
 7342 0c6d A8000000 		.4byte	.LFE41-.LFB41
 7343 0c71 01       		.uleb128 0x1
 7344 0c72 9C       		.byte	0x9c
 7345 0c73 C30C0000 		.4byte	0xcc3
 7346 0c77 19       		.uleb128 0x19
 7347 0c78 2D080000 		.4byte	.LASF114
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 188


 7348 0c7c 01       		.byte	0x1
 7349 0c7d C809     		.2byte	0x9c8
 7350 0c7f 6B000000 		.4byte	0x6b
 7351 0c83 02       		.uleb128 0x2
 7352 0c84 91       		.byte	0x91
 7353 0c85 5F       		.sleb128 -33
 7354 0c86 19       		.uleb128 0x19
 7355 0c87 AF070000 		.4byte	.LASF122
 7356 0c8b 01       		.byte	0x1
 7357 0c8c C809     		.2byte	0x9c8
 7358 0c8e 6B000000 		.4byte	0x6b
 7359 0c92 02       		.uleb128 0x2
 7360 0c93 91       		.byte	0x91
 7361 0c94 5E       		.sleb128 -34
 7362 0c95 17       		.uleb128 0x17
 7363 0c96 2B010000 		.4byte	.LASF31
 7364 0c9a 01       		.byte	0x1
 7365 0c9b CA09     		.2byte	0x9ca
 7366 0c9d 6B000000 		.4byte	0x6b
 7367 0ca1 02       		.uleb128 0x2
 7368 0ca2 91       		.byte	0x91
 7369 0ca3 6B       		.sleb128 -21
 7370 0ca4 17       		.uleb128 0x17
 7371 0ca5 A5020000 		.4byte	.LASF123
 7372 0ca9 01       		.byte	0x1
 7373 0caa CB09     		.2byte	0x9cb
 7374 0cac 83000000 		.4byte	0x83
 7375 0cb0 02       		.uleb128 0x2
 7376 0cb1 91       		.byte	0x91
 7377 0cb2 6C       		.sleb128 -20
 7378 0cb3 17       		.uleb128 0x17
 7379 0cb4 19030000 		.4byte	.LASF124
 7380 0cb8 01       		.byte	0x1
 7381 0cb9 CC09     		.2byte	0x9cc
 7382 0cbb 83000000 		.4byte	0x83
 7383 0cbf 02       		.uleb128 0x2
 7384 0cc0 91       		.byte	0x91
 7385 0cc1 64       		.sleb128 -28
 7386 0cc2 00       		.byte	0
 7387 0cc3 1A       		.uleb128 0x1a
 7388 0cc4 5E000000 		.4byte	.LASF125
 7389 0cc8 01       		.byte	0x1
 7390 0cc9 EA09     		.2byte	0x9ea
 7391 0ccb 6B000000 		.4byte	0x6b
 7392 0ccf 00000000 		.4byte	.LFB42
 7393 0cd3 58000000 		.4byte	.LFE42-.LFB42
 7394 0cd7 01       		.uleb128 0x1
 7395 0cd8 9C       		.byte	0x9c
 7396 0cd9 FC0C0000 		.4byte	0xcfc
 7397 0cdd 19       		.uleb128 0x19
 7398 0cde 2D080000 		.4byte	.LASF114
 7399 0ce2 01       		.byte	0x1
 7400 0ce3 EA09     		.2byte	0x9ea
 7401 0ce5 6B000000 		.4byte	0x6b
 7402 0ce9 02       		.uleb128 0x2
 7403 0cea 91       		.byte	0x91
 7404 0ceb 6F       		.sleb128 -17
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 189


 7405 0cec 17       		.uleb128 0x17
 7406 0ced AF070000 		.4byte	.LASF122
 7407 0cf1 01       		.byte	0x1
 7408 0cf2 EC09     		.2byte	0x9ec
 7409 0cf4 6B000000 		.4byte	0x6b
 7410 0cf8 02       		.uleb128 0x2
 7411 0cf9 91       		.byte	0x91
 7412 0cfa 77       		.sleb128 -9
 7413 0cfb 00       		.byte	0
 7414 0cfc 15       		.uleb128 0x15
 7415 0cfd 5A0A0000 		.4byte	.LASF126
 7416 0d01 01       		.byte	0x1
 7417 0d02 FF09     		.2byte	0x9ff
 7418 0d04 00000000 		.4byte	.LFB43
 7419 0d08 2C000000 		.4byte	.LFE43-.LFB43
 7420 0d0c 01       		.uleb128 0x1
 7421 0d0d 9C       		.byte	0x9c
 7422 0d0e 220D0000 		.4byte	0xd22
 7423 0d12 19       		.uleb128 0x19
 7424 0d13 2D080000 		.4byte	.LASF114
 7425 0d17 01       		.byte	0x1
 7426 0d18 FF09     		.2byte	0x9ff
 7427 0d1a 6B000000 		.4byte	0x6b
 7428 0d1e 02       		.uleb128 0x2
 7429 0d1f 91       		.byte	0x91
 7430 0d20 77       		.sleb128 -9
 7431 0d21 00       		.byte	0
 7432 0d22 1B       		.uleb128 0x1b
 7433 0d23 4A030000 		.4byte	.LASF127
 7434 0d27 01       		.byte	0x1
 7435 0d28 110A     		.2byte	0xa11
 7436 0d2a 6B000000 		.4byte	0x6b
 7437 0d2e 00000000 		.4byte	.LFB44
 7438 0d32 30000000 		.4byte	.LFE44-.LFB44
 7439 0d36 01       		.uleb128 0x1
 7440 0d37 9C       		.byte	0x9c
 7441 0d38 4C0D0000 		.4byte	0xd4c
 7442 0d3c 19       		.uleb128 0x19
 7443 0d3d 2D080000 		.4byte	.LASF114
 7444 0d41 01       		.byte	0x1
 7445 0d42 110A     		.2byte	0xa11
 7446 0d44 6B000000 		.4byte	0x6b
 7447 0d48 02       		.uleb128 0x2
 7448 0d49 91       		.byte	0x91
 7449 0d4a 77       		.sleb128 -9
 7450 0d4b 00       		.byte	0
 7451 0d4c 15       		.uleb128 0x15
 7452 0d4d F2010000 		.4byte	.LASF128
 7453 0d51 01       		.byte	0x1
 7454 0d52 210A     		.2byte	0xa21
 7455 0d54 00000000 		.4byte	.LFB45
 7456 0d58 2C000000 		.4byte	.LFE45-.LFB45
 7457 0d5c 01       		.uleb128 0x1
 7458 0d5d 9C       		.byte	0x9c
 7459 0d5e 720D0000 		.4byte	0xd72
 7460 0d62 19       		.uleb128 0x19
 7461 0d63 2D080000 		.4byte	.LASF114
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 190


 7462 0d67 01       		.byte	0x1
 7463 0d68 210A     		.2byte	0xa21
 7464 0d6a 6B000000 		.4byte	0x6b
 7465 0d6e 02       		.uleb128 0x2
 7466 0d6f 91       		.byte	0x91
 7467 0d70 77       		.sleb128 -9
 7468 0d71 00       		.byte	0
 7469 0d72 15       		.uleb128 0x15
 7470 0d73 A2030000 		.4byte	.LASF129
 7471 0d77 01       		.byte	0x1
 7472 0d78 2F0A     		.2byte	0xa2f
 7473 0d7a 00000000 		.4byte	.LFB46
 7474 0d7e 2C000000 		.4byte	.LFE46-.LFB46
 7475 0d82 01       		.uleb128 0x1
 7476 0d83 9C       		.byte	0x9c
 7477 0d84 980D0000 		.4byte	0xd98
 7478 0d88 19       		.uleb128 0x19
 7479 0d89 2D080000 		.4byte	.LASF114
 7480 0d8d 01       		.byte	0x1
 7481 0d8e 2F0A     		.2byte	0xa2f
 7482 0d90 6B000000 		.4byte	0x6b
 7483 0d94 02       		.uleb128 0x2
 7484 0d95 91       		.byte	0x91
 7485 0d96 77       		.sleb128 -9
 7486 0d97 00       		.byte	0
 7487 0d98 15       		.uleb128 0x15
 7488 0d99 18040000 		.4byte	.LASF130
 7489 0d9d 01       		.byte	0x1
 7490 0d9e 3E0A     		.2byte	0xa3e
 7491 0da0 00000000 		.4byte	.LFB47
 7492 0da4 2C000000 		.4byte	.LFE47-.LFB47
 7493 0da8 01       		.uleb128 0x1
 7494 0da9 9C       		.byte	0x9c
 7495 0daa BE0D0000 		.4byte	0xdbe
 7496 0dae 19       		.uleb128 0x19
 7497 0daf 2D080000 		.4byte	.LASF114
 7498 0db3 01       		.byte	0x1
 7499 0db4 3E0A     		.2byte	0xa3e
 7500 0db6 6B000000 		.4byte	0x6b
 7501 0dba 02       		.uleb128 0x2
 7502 0dbb 91       		.byte	0x91
 7503 0dbc 77       		.sleb128 -9
 7504 0dbd 00       		.byte	0
 7505 0dbe 15       		.uleb128 0x15
 7506 0dbf 04030000 		.4byte	.LASF131
 7507 0dc3 01       		.byte	0x1
 7508 0dc4 4D0A     		.2byte	0xa4d
 7509 0dc6 00000000 		.4byte	.LFB48
 7510 0dca 16000000 		.4byte	.LFE48-.LFB48
 7511 0dce 01       		.uleb128 0x1
 7512 0dcf 9C       		.byte	0x9c
 7513 0dd0 E40D0000 		.4byte	0xde4
 7514 0dd4 19       		.uleb128 0x19
 7515 0dd5 FD020000 		.4byte	.LASF108
 7516 0dd9 01       		.byte	0x1
 7517 0dda 4D0A     		.2byte	0xa4d
 7518 0ddc 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 191


 7519 0de0 02       		.uleb128 0x2
 7520 0de1 91       		.byte	0x91
 7521 0de2 77       		.sleb128 -9
 7522 0de3 00       		.byte	0
 7523 0de4 13       		.uleb128 0x13
 7524 0de5 08090000 		.4byte	.LASF132
 7525 0de9 01       		.byte	0x1
 7526 0dea 650A     		.2byte	0xa65
 7527 0dec 00000000 		.4byte	.LFB49
 7528 0df0 24000000 		.4byte	.LFE49-.LFB49
 7529 0df4 01       		.uleb128 0x1
 7530 0df5 9C       		.byte	0x9c
 7531 0df6 18       		.uleb128 0x18
 7532 0df7 2A000000 		.4byte	.LASF133
 7533 0dfb 01       		.byte	0x1
 7534 0dfc 790A     		.2byte	0xa79
 7535 0dfe 00000000 		.4byte	.LFB50
 7536 0e02 4C000000 		.4byte	.LFE50-.LFB50
 7537 0e06 01       		.uleb128 0x1
 7538 0e07 9C       		.byte	0x9c
 7539 0e08 1C0E0000 		.4byte	0xe1c
 7540 0e0c 19       		.uleb128 0x19
 7541 0e0d 8D000000 		.4byte	.LASF134
 7542 0e11 01       		.byte	0x1
 7543 0e12 790A     		.2byte	0xa79
 7544 0e14 83000000 		.4byte	0x83
 7545 0e18 02       		.uleb128 0x2
 7546 0e19 91       		.byte	0x91
 7547 0e1a 74       		.sleb128 -12
 7548 0e1b 00       		.byte	0
 7549 0e1c 18       		.uleb128 0x18
 7550 0e1d DC020000 		.4byte	.LASF135
 7551 0e21 01       		.byte	0x1
 7552 0e22 900A     		.2byte	0xa90
 7553 0e24 00000000 		.4byte	.LFB51
 7554 0e28 28000000 		.4byte	.LFE51-.LFB51
 7555 0e2c 01       		.uleb128 0x1
 7556 0e2d 9C       		.byte	0x9c
 7557 0e2e 420E0000 		.4byte	0xe42
 7558 0e32 19       		.uleb128 0x19
 7559 0e33 9D090000 		.4byte	.LASF136
 7560 0e37 01       		.byte	0x1
 7561 0e38 900A     		.2byte	0xa90
 7562 0e3a 77000000 		.4byte	0x77
 7563 0e3e 02       		.uleb128 0x2
 7564 0e3f 91       		.byte	0x91
 7565 0e40 76       		.sleb128 -10
 7566 0e41 00       		.byte	0
 7567 0e42 18       		.uleb128 0x18
 7568 0e43 57020000 		.4byte	.LASF137
 7569 0e47 01       		.byte	0x1
 7570 0e48 9E0A     		.2byte	0xa9e
 7571 0e4a 00000000 		.4byte	.LFB52
 7572 0e4e 84000000 		.4byte	.LFE52-.LFB52
 7573 0e52 01       		.uleb128 0x1
 7574 0e53 9C       		.byte	0x9c
 7575 0e54 680E0000 		.4byte	0xe68
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 192


 7576 0e58 19       		.uleb128 0x19
 7577 0e59 CC030000 		.4byte	.LASF30
 7578 0e5d 01       		.byte	0x1
 7579 0e5e 9E0A     		.2byte	0xa9e
 7580 0e60 83000000 		.4byte	0x83
 7581 0e64 02       		.uleb128 0x2
 7582 0e65 91       		.byte	0x91
 7583 0e66 74       		.sleb128 -12
 7584 0e67 00       		.byte	0
 7585 0e68 1E       		.uleb128 0x1e
 7586 0e69 59060000 		.4byte	.LASF138
 7587 0e6d 01       		.byte	0x1
 7588 0e6e BE0A     		.2byte	0xabe
 7589 0e70 00000000 		.4byte	.LFB53
 7590 0e74 24000000 		.4byte	.LFE53-.LFB53
 7591 0e78 01       		.uleb128 0x1
 7592 0e79 9C       		.byte	0x9c
 7593 0e7a 18       		.uleb128 0x18
 7594 0e7b 41080000 		.4byte	.LASF139
 7595 0e7f 01       		.byte	0x1
 7596 0e80 DB0A     		.2byte	0xadb
 7597 0e82 00000000 		.4byte	.LFB54
 7598 0e86 60000000 		.4byte	.LFE54-.LFB54
 7599 0e8a 01       		.uleb128 0x1
 7600 0e8b 9C       		.byte	0x9c
 7601 0e8c 9E0E0000 		.4byte	0xe9e
 7602 0e90 16       		.uleb128 0x16
 7603 0e91 6900     		.ascii	"i\000"
 7604 0e93 01       		.byte	0x1
 7605 0e94 DD0A     		.2byte	0xadd
 7606 0e96 83000000 		.4byte	0x83
 7607 0e9a 02       		.uleb128 0x2
 7608 0e9b 91       		.byte	0x91
 7609 0e9c 74       		.sleb128 -12
 7610 0e9d 00       		.byte	0
 7611 0e9e 1E       		.uleb128 0x1e
 7612 0e9f 5F050000 		.4byte	.LASF140
 7613 0ea3 01       		.byte	0x1
 7614 0ea4 F90A     		.2byte	0xaf9
 7615 0ea6 00000000 		.4byte	.LFB55
 7616 0eaa 20000000 		.4byte	.LFE55-.LFB55
 7617 0eae 01       		.uleb128 0x1
 7618 0eaf 9C       		.byte	0x9c
 7619 0eb0 13       		.uleb128 0x13
 7620 0eb1 3C030000 		.4byte	.LASF141
 7621 0eb5 01       		.byte	0x1
 7622 0eb6 0A0B     		.2byte	0xb0a
 7623 0eb8 00000000 		.4byte	.LFB56
 7624 0ebc 1C000000 		.4byte	.LFE56-.LFB56
 7625 0ec0 01       		.uleb128 0x1
 7626 0ec1 9C       		.byte	0x9c
 7627 0ec2 13       		.uleb128 0x13
 7628 0ec3 BB090000 		.4byte	.LASF142
 7629 0ec7 01       		.byte	0x1
 7630 0ec8 1A0B     		.2byte	0xb1a
 7631 0eca 00000000 		.4byte	.LFB57
 7632 0ece 1C000000 		.4byte	.LFE57-.LFB57
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 193


 7633 0ed2 01       		.uleb128 0x1
 7634 0ed3 9C       		.byte	0x9c
 7635 0ed4 13       		.uleb128 0x13
 7636 0ed5 E7070000 		.4byte	.LASF143
 7637 0ed9 01       		.byte	0x1
 7638 0eda 2A0B     		.2byte	0xb2a
 7639 0edc 00000000 		.4byte	.LFB58
 7640 0ee0 1C000000 		.4byte	.LFE58-.LFB58
 7641 0ee4 01       		.uleb128 0x1
 7642 0ee5 9C       		.byte	0x9c
 7643 0ee6 15       		.uleb128 0x15
 7644 0ee7 26070000 		.4byte	.LASF144
 7645 0eeb 01       		.byte	0x1
 7646 0eec 3B0B     		.2byte	0xb3b
 7647 0eee 00000000 		.4byte	.LFB59
 7648 0ef2 20000000 		.4byte	.LFE59-.LFB59
 7649 0ef6 01       		.uleb128 0x1
 7650 0ef7 9C       		.byte	0x9c
 7651 0ef8 0C0F0000 		.4byte	0xf0c
 7652 0efc 19       		.uleb128 0x19
 7653 0efd 19030000 		.4byte	.LASF124
 7654 0f01 01       		.byte	0x1
 7655 0f02 3B0B     		.2byte	0xb3b
 7656 0f04 83000000 		.4byte	0x83
 7657 0f08 02       		.uleb128 0x2
 7658 0f09 91       		.byte	0x91
 7659 0f0a 74       		.sleb128 -12
 7660 0f0b 00       		.byte	0
 7661 0f0c 14       		.uleb128 0x14
 7662 0f0d B1020000 		.4byte	.LASF145
 7663 0f11 01       		.byte	0x1
 7664 0f12 4B0B     		.2byte	0xb4b
 7665 0f14 83000000 		.4byte	0x83
 7666 0f18 00000000 		.4byte	.LFB60
 7667 0f1c 18000000 		.4byte	.LFE60-.LFB60
 7668 0f20 01       		.uleb128 0x1
 7669 0f21 9C       		.byte	0x9c
 7670 0f22 14       		.uleb128 0x14
 7671 0f23 C7050000 		.4byte	.LASF146
 7672 0f27 01       		.byte	0x1
 7673 0f28 5B0B     		.2byte	0xb5b
 7674 0f2a 83000000 		.4byte	0x83
 7675 0f2e 00000000 		.4byte	.LFB61
 7676 0f32 18000000 		.4byte	.LFE61-.LFB61
 7677 0f36 01       		.uleb128 0x1
 7678 0f37 9C       		.byte	0x9c
 7679 0f38 15       		.uleb128 0x15
 7680 0f39 87060000 		.4byte	.LASF147
 7681 0f3d 01       		.byte	0x1
 7682 0f3e 7B0B     		.2byte	0xb7b
 7683 0f40 00000000 		.4byte	.LFB62
 7684 0f44 34000000 		.4byte	.LFE62-.LFB62
 7685 0f48 01       		.uleb128 0x1
 7686 0f49 9C       		.byte	0x9c
 7687 0f4a 5E0F0000 		.4byte	0xf5e
 7688 0f4e 19       		.uleb128 0x19
 7689 0f4f F1060000 		.4byte	.LASF148
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 194


 7690 0f53 01       		.byte	0x1
 7691 0f54 7B0B     		.2byte	0xb7b
 7692 0f56 83000000 		.4byte	0x83
 7693 0f5a 02       		.uleb128 0x2
 7694 0f5b 91       		.byte	0x91
 7695 0f5c 74       		.sleb128 -12
 7696 0f5d 00       		.byte	0
 7697 0f5e 14       		.uleb128 0x14
 7698 0f5f F0080000 		.4byte	.LASF149
 7699 0f63 01       		.byte	0x1
 7700 0f64 940B     		.2byte	0xb94
 7701 0f66 83000000 		.4byte	0x83
 7702 0f6a 00000000 		.4byte	.LFB63
 7703 0f6e 18000000 		.4byte	.LFE63-.LFB63
 7704 0f72 01       		.uleb128 0x1
 7705 0f73 9C       		.byte	0x9c
 7706 0f74 14       		.uleb128 0x14
 7707 0f75 2F040000 		.4byte	.LASF150
 7708 0f79 01       		.byte	0x1
 7709 0f7a AB0B     		.2byte	0xbab
 7710 0f7c 83000000 		.4byte	0x83
 7711 0f80 00000000 		.4byte	.LFB64
 7712 0f84 18000000 		.4byte	.LFE64-.LFB64
 7713 0f88 01       		.uleb128 0x1
 7714 0f89 9C       		.byte	0x9c
 7715 0f8a 13       		.uleb128 0x13
 7716 0f8b 1B000000 		.4byte	.LASF151
 7717 0f8f 01       		.byte	0x1
 7718 0f90 B80B     		.2byte	0xbb8
 7719 0f92 00000000 		.4byte	.LFB65
 7720 0f96 14000000 		.4byte	.LFE65-.LFB65
 7721 0f9a 01       		.uleb128 0x1
 7722 0f9b 9C       		.byte	0x9c
 7723 0f9c 1B       		.uleb128 0x1b
 7724 0f9d 35020000 		.4byte	.LASF152
 7725 0fa1 01       		.byte	0x1
 7726 0fa2 DB0B     		.2byte	0xbdb
 7727 0fa4 FF000000 		.4byte	0xff
 7728 0fa8 00000000 		.4byte	.LFB66
 7729 0fac 2C000000 		.4byte	.LFE66-.LFB66
 7730 0fb0 01       		.uleb128 0x1
 7731 0fb1 9C       		.byte	0x9c
 7732 0fb2 E40F0000 		.4byte	0xfe4
 7733 0fb6 19       		.uleb128 0x19
 7734 0fb7 2D080000 		.4byte	.LASF114
 7735 0fbb 01       		.byte	0x1
 7736 0fbc DB0B     		.2byte	0xbdb
 7737 0fbe 83000000 		.4byte	0x83
 7738 0fc2 02       		.uleb128 0x2
 7739 0fc3 91       		.byte	0x91
 7740 0fc4 6C       		.sleb128 -20
 7741 0fc5 19       		.uleb128 0x19
 7742 0fc6 76090000 		.4byte	.LASF153
 7743 0fca 01       		.byte	0x1
 7744 0fcb DB0B     		.2byte	0xbdb
 7745 0fcd FF000000 		.4byte	0xff
 7746 0fd1 02       		.uleb128 0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 195


 7747 0fd2 91       		.byte	0x91
 7748 0fd3 68       		.sleb128 -24
 7749 0fd4 17       		.uleb128 0x17
 7750 0fd5 BA080000 		.4byte	.LASF154
 7751 0fd9 01       		.byte	0x1
 7752 0fda DD0B     		.2byte	0xbdd
 7753 0fdc FF000000 		.4byte	0xff
 7754 0fe0 02       		.uleb128 0x2
 7755 0fe1 91       		.byte	0x91
 7756 0fe2 74       		.sleb128 -12
 7757 0fe3 00       		.byte	0
 7758 0fe4 1B       		.uleb128 0x1b
 7759 0fe5 70030000 		.4byte	.LASF155
 7760 0fe9 01       		.byte	0x1
 7761 0fea F30B     		.2byte	0xbf3
 7762 0fec FF000000 		.4byte	0xff
 7763 0ff0 00000000 		.4byte	.LFB67
 7764 0ff4 1C000000 		.4byte	.LFE67-.LFB67
 7765 0ff8 01       		.uleb128 0x1
 7766 0ff9 9C       		.byte	0x9c
 7767 0ffa 0E100000 		.4byte	0x100e
 7768 0ffe 19       		.uleb128 0x19
 7769 0fff 2D080000 		.4byte	.LASF114
 7770 1003 01       		.byte	0x1
 7771 1004 F30B     		.2byte	0xbf3
 7772 1006 83000000 		.4byte	0x83
 7773 100a 02       		.uleb128 0x2
 7774 100b 91       		.byte	0x91
 7775 100c 74       		.sleb128 -12
 7776 100d 00       		.byte	0
 7777 100e 1F       		.uleb128 0x1f
 7778 100f 68060000 		.4byte	.LASF177
 7779 1013 01       		.byte	0x1
 7780 1014 000C     		.2byte	0xc00
 7781 1016 00000000 		.4byte	.LFB68
 7782 101a 44000000 		.4byte	.LFE68-.LFB68
 7783 101e 01       		.uleb128 0x1
 7784 101f 9C       		.byte	0x9c
 7785 1020 32100000 		.4byte	0x1032
 7786 1024 16       		.uleb128 0x16
 7787 1025 6900     		.ascii	"i\000"
 7788 1027 01       		.byte	0x1
 7789 1028 020C     		.2byte	0xc02
 7790 102a 83000000 		.4byte	0x83
 7791 102e 02       		.uleb128 0x2
 7792 102f 91       		.byte	0x91
 7793 1030 74       		.sleb128 -12
 7794 1031 00       		.byte	0
 7795 1032 15       		.uleb128 0x15
 7796 1033 68090000 		.4byte	.LASF156
 7797 1037 01       		.byte	0x1
 7798 1038 200C     		.2byte	0xc20
 7799 103a 00000000 		.4byte	.LFB69
 7800 103e C0000000 		.4byte	.LFE69-.LFB69
 7801 1042 01       		.uleb128 0x1
 7802 1043 9C       		.byte	0x9c
 7803 1044 58100000 		.4byte	0x1058
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 196


 7804 1048 19       		.uleb128 0x19
 7805 1049 5F080000 		.4byte	.LASF157
 7806 104d 01       		.byte	0x1
 7807 104e 200C     		.2byte	0xc20
 7808 1050 58100000 		.4byte	0x1058
 7809 1054 02       		.uleb128 0x2
 7810 1055 91       		.byte	0x91
 7811 1056 74       		.sleb128 -12
 7812 1057 00       		.byte	0
 7813 1058 06       		.uleb128 0x6
 7814 1059 04       		.byte	0x4
 7815 105a 83000000 		.4byte	0x83
 7816 105e 15       		.uleb128 0x15
 7817 105f AF040000 		.4byte	.LASF158
 7818 1063 01       		.byte	0x1
 7819 1064 4D0C     		.2byte	0xc4d
 7820 1066 00000000 		.4byte	.LFB70
 7821 106a 38000000 		.4byte	.LFE70-.LFB70
 7822 106e 01       		.uleb128 0x1
 7823 106f 9C       		.byte	0x9c
 7824 1070 93100000 		.4byte	0x1093
 7825 1074 19       		.uleb128 0x19
 7826 1075 26080000 		.4byte	.LASF100
 7827 1079 01       		.byte	0x1
 7828 107a 4D0C     		.2byte	0xc4d
 7829 107c 83000000 		.4byte	0x83
 7830 1080 02       		.uleb128 0x2
 7831 1081 91       		.byte	0x91
 7832 1082 6C       		.sleb128 -20
 7833 1083 17       		.uleb128 0x17
 7834 1084 12030000 		.4byte	.LASF32
 7835 1088 01       		.byte	0x1
 7836 1089 4F0C     		.2byte	0xc4f
 7837 108b 83000000 		.4byte	0x83
 7838 108f 02       		.uleb128 0x2
 7839 1090 91       		.byte	0x91
 7840 1091 74       		.sleb128 -12
 7841 1092 00       		.byte	0
 7842 1093 15       		.uleb128 0x15
 7843 1094 83050000 		.4byte	.LASF159
 7844 1098 01       		.byte	0x1
 7845 1099 690C     		.2byte	0xc69
 7846 109b 00000000 		.4byte	.LFB71
 7847 109f 38000000 		.4byte	.LFE71-.LFB71
 7848 10a3 01       		.uleb128 0x1
 7849 10a4 9C       		.byte	0x9c
 7850 10a5 C8100000 		.4byte	0x10c8
 7851 10a9 19       		.uleb128 0x19
 7852 10aa 26080000 		.4byte	.LASF100
 7853 10ae 01       		.byte	0x1
 7854 10af 690C     		.2byte	0xc69
 7855 10b1 83000000 		.4byte	0x83
 7856 10b5 02       		.uleb128 0x2
 7857 10b6 91       		.byte	0x91
 7858 10b7 6C       		.sleb128 -20
 7859 10b8 17       		.uleb128 0x17
 7860 10b9 12030000 		.4byte	.LASF32
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 197


 7861 10bd 01       		.byte	0x1
 7862 10be 6B0C     		.2byte	0xc6b
 7863 10c0 83000000 		.4byte	0x83
 7864 10c4 02       		.uleb128 0x2
 7865 10c5 91       		.byte	0x91
 7866 10c6 74       		.sleb128 -12
 7867 10c7 00       		.byte	0
 7868 10c8 15       		.uleb128 0x15
 7869 10c9 6F000000 		.4byte	.LASF160
 7870 10cd 01       		.byte	0x1
 7871 10ce 850C     		.2byte	0xc85
 7872 10d0 00000000 		.4byte	.LFB72
 7873 10d4 38000000 		.4byte	.LFE72-.LFB72
 7874 10d8 01       		.uleb128 0x1
 7875 10d9 9C       		.byte	0x9c
 7876 10da FD100000 		.4byte	0x10fd
 7877 10de 19       		.uleb128 0x19
 7878 10df 26080000 		.4byte	.LASF100
 7879 10e3 01       		.byte	0x1
 7880 10e4 850C     		.2byte	0xc85
 7881 10e6 83000000 		.4byte	0x83
 7882 10ea 02       		.uleb128 0x2
 7883 10eb 91       		.byte	0x91
 7884 10ec 6C       		.sleb128 -20
 7885 10ed 17       		.uleb128 0x17
 7886 10ee 12030000 		.4byte	.LASF32
 7887 10f2 01       		.byte	0x1
 7888 10f3 870C     		.2byte	0xc87
 7889 10f5 83000000 		.4byte	0x83
 7890 10f9 02       		.uleb128 0x2
 7891 10fa 91       		.byte	0x91
 7892 10fb 74       		.sleb128 -12
 7893 10fc 00       		.byte	0
 7894 10fd 18       		.uleb128 0x18
 7895 10fe 0C050000 		.4byte	.LASF161
 7896 1102 01       		.byte	0x1
 7897 1103 A30C     		.2byte	0xca3
 7898 1105 00000000 		.4byte	.LFB73
 7899 1109 A0000000 		.4byte	.LFE73-.LFB73
 7900 110d 01       		.uleb128 0x1
 7901 110e 9C       		.byte	0x9c
 7902 110f 41110000 		.4byte	0x1141
 7903 1113 19       		.uleb128 0x19
 7904 1114 FE000000 		.4byte	.LASF162
 7905 1118 01       		.byte	0x1
 7906 1119 A30C     		.2byte	0xca3
 7907 111b 83000000 		.4byte	0x83
 7908 111f 02       		.uleb128 0x2
 7909 1120 91       		.byte	0x91
 7910 1121 6C       		.sleb128 -20
 7911 1122 19       		.uleb128 0x19
 7912 1123 26080000 		.4byte	.LASF100
 7913 1127 01       		.byte	0x1
 7914 1128 A30C     		.2byte	0xca3
 7915 112a 83000000 		.4byte	0x83
 7916 112e 02       		.uleb128 0x2
 7917 112f 91       		.byte	0x91
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 198


 7918 1130 68       		.sleb128 -24
 7919 1131 17       		.uleb128 0x17
 7920 1132 12030000 		.4byte	.LASF32
 7921 1136 01       		.byte	0x1
 7922 1137 A50C     		.2byte	0xca5
 7923 1139 83000000 		.4byte	0x83
 7924 113d 02       		.uleb128 0x2
 7925 113e 91       		.byte	0x91
 7926 113f 74       		.sleb128 -12
 7927 1140 00       		.byte	0
 7928 1141 0C       		.uleb128 0xc
 7929 1142 FF000000 		.4byte	0xff
 7930 1146 51110000 		.4byte	0x1151
 7931 114a 0D       		.uleb128 0xd
 7932 114b F8000000 		.4byte	0xf8
 7933 114f 04       		.byte	0x4
 7934 1150 00       		.byte	0
 7935 1151 12       		.uleb128 0x12
 7936 1152 B4050000 		.4byte	.LASF163
 7937 1156 01       		.byte	0x1
 7938 1157 22       		.byte	0x22
 7939 1158 41110000 		.4byte	0x1141
 7940 115c 05       		.uleb128 0x5
 7941 115d 03       		.byte	0x3
 7942 115e 00000000 		.4byte	CySysTickCallbacks
 7943 1162 20       		.uleb128 0x20
 7944 1163 58030000 		.4byte	.LASF164
 7945 1167 01       		.byte	0x1
 7946 1168 1B       		.byte	0x1b
 7947 1169 83000000 		.4byte	0x83
 7948 116d 05       		.uleb128 0x5
 7949 116e 03       		.byte	0x3
 7950 116f 00000000 		.4byte	cydelayFreqHz
 7951 1173 20       		.uleb128 0x20
 7952 1174 A7000000 		.4byte	.LASF165
 7953 1178 01       		.byte	0x1
 7954 1179 1C       		.byte	0x1c
 7955 117a 83000000 		.4byte	0x83
 7956 117e 05       		.uleb128 0x5
 7957 117f 03       		.byte	0x3
 7958 1180 00000000 		.4byte	cydelayFreqKhz
 7959 1184 20       		.uleb128 0x20
 7960 1185 4A090000 		.4byte	.LASF166
 7961 1189 01       		.byte	0x1
 7962 118a 1D       		.byte	0x1d
 7963 118b 6B000000 		.4byte	0x6b
 7964 118f 05       		.uleb128 0x5
 7965 1190 03       		.byte	0x3
 7966 1191 00000000 		.4byte	cydelayFreqMhz
 7967 1195 20       		.uleb128 0x20
 7968 1196 D4090000 		.4byte	.LASF167
 7969 119a 01       		.byte	0x1
 7970 119b 1E       		.byte	0x1e
 7971 119c 83000000 		.4byte	0x83
 7972 11a0 05       		.uleb128 0x5
 7973 11a1 03       		.byte	0x3
 7974 11a2 00000000 		.4byte	cydelay32kMs
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 199


 7975 11a6 20       		.uleb128 0x20
 7976 11a7 FF010000 		.4byte	.LASF168
 7977 11ab 01       		.byte	0x1
 7978 11ac 36       		.byte	0x36
 7979 11ad 83000000 		.4byte	0x83
 7980 11b1 05       		.uleb128 0x5
 7981 11b2 03       		.byte	0x3
 7982 11b3 00000000 		.4byte	CySysTickInitVar
 7983 11b7 0C       		.uleb128 0xc
 7984 11b8 C7110000 		.4byte	0x11c7
 7985 11bc C7110000 		.4byte	0x11c7
 7986 11c0 0D       		.uleb128 0xd
 7987 11c1 F8000000 		.4byte	0xf8
 7988 11c5 2D       		.byte	0x2d
 7989 11c6 00       		.byte	0
 7990 11c7 21       		.uleb128 0x21
 7991 11c8 6B000000 		.4byte	0x6b
 7992 11cc 20       		.uleb128 0x20
 7993 11cd 8C030000 		.4byte	.LASF169
 7994 11d1 01       		.byte	0x1
 7995 11d2 3B       		.byte	0x3b
 7996 11d3 DD110000 		.4byte	0x11dd
 7997 11d7 05       		.uleb128 0x5
 7998 11d8 03       		.byte	0x3
 7999 11d9 00000000 		.4byte	cyImoFreqMhz2Reg
 8000 11dd 21       		.uleb128 0x21
 8001 11de B7110000 		.4byte	0x11b7
 8002 11e2 0C       		.uleb128 0xc
 8003 11e3 C7110000 		.4byte	0x11c7
 8004 11e7 F2110000 		.4byte	0x11f2
 8005 11eb 0D       		.uleb128 0xd
 8006 11ec F8000000 		.4byte	0xf8
 8007 11f0 16       		.byte	0x16
 8008 11f1 00       		.byte	0
 8009 11f2 20       		.uleb128 0x20
 8010 11f3 E1090000 		.4byte	.LASF170
 8011 11f7 01       		.byte	0x1
 8012 11f8 4C       		.byte	0x4c
 8013 11f9 03120000 		.4byte	0x1203
 8014 11fd 05       		.uleb128 0x5
 8015 11fe 03       		.byte	0x3
 8016 11ff 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 8017 1203 21       		.uleb128 0x21
 8018 1204 E2110000 		.4byte	0x11e2
 8019 1208 20       		.uleb128 0x20
 8020 1209 230A0000 		.4byte	.LASF171
 8021 120d 01       		.byte	0x1
 8022 120e 57       		.byte	0x57
 8023 120f 83000000 		.4byte	0x83
 8024 1213 05       		.uleb128 0x5
 8025 1214 03       		.byte	0x3
 8026 1215 00000000 		.4byte	CySysClkImoTrim4
 8027 1219 20       		.uleb128 0x20
 8028 121a 340A0000 		.4byte	.LASF172
 8029 121e 01       		.byte	0x1
 8030 121f 58       		.byte	0x58
 8031 1220 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 200


 8032 1224 05       		.uleb128 0x5
 8033 1225 03       		.byte	0x3
 8034 1226 00000000 		.4byte	CySysClkImoTrim5
 8035 122a 20       		.uleb128 0x20
 8036 122b B8070000 		.4byte	.LASF173
 8037 122f 01       		.byte	0x1
 8038 1230 5C       		.byte	0x5c
 8039 1231 83000000 		.4byte	0x83
 8040 1235 05       		.uleb128 0x5
 8041 1236 03       		.byte	0x3
 8042 1237 00000000 		.4byte	CySysClkPumpConfig
 8043 123b 00       		.byte	0
 8044              		.section	.debug_abbrev,"",%progbits
 8045              	.Ldebug_abbrev0:
 8046 0000 01       		.uleb128 0x1
 8047 0001 11       		.uleb128 0x11
 8048 0002 01       		.byte	0x1
 8049 0003 25       		.uleb128 0x25
 8050 0004 0E       		.uleb128 0xe
 8051 0005 13       		.uleb128 0x13
 8052 0006 0B       		.uleb128 0xb
 8053 0007 03       		.uleb128 0x3
 8054 0008 0E       		.uleb128 0xe
 8055 0009 1B       		.uleb128 0x1b
 8056 000a 0E       		.uleb128 0xe
 8057 000b 55       		.uleb128 0x55
 8058 000c 17       		.uleb128 0x17
 8059 000d 11       		.uleb128 0x11
 8060 000e 01       		.uleb128 0x1
 8061 000f 10       		.uleb128 0x10
 8062 0010 17       		.uleb128 0x17
 8063 0011 00       		.byte	0
 8064 0012 00       		.byte	0
 8065 0013 02       		.uleb128 0x2
 8066 0014 24       		.uleb128 0x24
 8067 0015 00       		.byte	0
 8068 0016 0B       		.uleb128 0xb
 8069 0017 0B       		.uleb128 0xb
 8070 0018 3E       		.uleb128 0x3e
 8071 0019 0B       		.uleb128 0xb
 8072 001a 03       		.uleb128 0x3
 8073 001b 0E       		.uleb128 0xe
 8074 001c 00       		.byte	0
 8075 001d 00       		.byte	0
 8076 001e 03       		.uleb128 0x3
 8077 001f 24       		.uleb128 0x24
 8078 0020 00       		.byte	0
 8079 0021 0B       		.uleb128 0xb
 8080 0022 0B       		.uleb128 0xb
 8081 0023 3E       		.uleb128 0x3e
 8082 0024 0B       		.uleb128 0xb
 8083 0025 03       		.uleb128 0x3
 8084 0026 08       		.uleb128 0x8
 8085 0027 00       		.byte	0
 8086 0028 00       		.byte	0
 8087 0029 04       		.uleb128 0x4
 8088 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 201


 8089 002b 00       		.byte	0
 8090 002c 03       		.uleb128 0x3
 8091 002d 0E       		.uleb128 0xe
 8092 002e 3A       		.uleb128 0x3a
 8093 002f 0B       		.uleb128 0xb
 8094 0030 3B       		.uleb128 0x3b
 8095 0031 05       		.uleb128 0x5
 8096 0032 49       		.uleb128 0x49
 8097 0033 13       		.uleb128 0x13
 8098 0034 00       		.byte	0
 8099 0035 00       		.byte	0
 8100 0036 05       		.uleb128 0x5
 8101 0037 35       		.uleb128 0x35
 8102 0038 00       		.byte	0
 8103 0039 49       		.uleb128 0x49
 8104 003a 13       		.uleb128 0x13
 8105 003b 00       		.byte	0
 8106 003c 00       		.byte	0
 8107 003d 06       		.uleb128 0x6
 8108 003e 0F       		.uleb128 0xf
 8109 003f 00       		.byte	0
 8110 0040 0B       		.uleb128 0xb
 8111 0041 0B       		.uleb128 0xb
 8112 0042 49       		.uleb128 0x49
 8113 0043 13       		.uleb128 0x13
 8114 0044 00       		.byte	0
 8115 0045 00       		.byte	0
 8116 0046 07       		.uleb128 0x7
 8117 0047 15       		.uleb128 0x15
 8118 0048 00       		.byte	0
 8119 0049 27       		.uleb128 0x27
 8120 004a 19       		.uleb128 0x19
 8121 004b 00       		.byte	0
 8122 004c 00       		.byte	0
 8123 004d 08       		.uleb128 0x8
 8124 004e 16       		.uleb128 0x16
 8125 004f 00       		.byte	0
 8126 0050 03       		.uleb128 0x3
 8127 0051 0E       		.uleb128 0xe
 8128 0052 3A       		.uleb128 0x3a
 8129 0053 0B       		.uleb128 0xb
 8130 0054 3B       		.uleb128 0x3b
 8131 0055 0B       		.uleb128 0xb
 8132 0056 49       		.uleb128 0x49
 8133 0057 13       		.uleb128 0x13
 8134 0058 00       		.byte	0
 8135 0059 00       		.byte	0
 8136 005a 09       		.uleb128 0x9
 8137 005b 13       		.uleb128 0x13
 8138 005c 01       		.byte	0x1
 8139 005d 0B       		.uleb128 0xb
 8140 005e 0B       		.uleb128 0xb
 8141 005f 3A       		.uleb128 0x3a
 8142 0060 0B       		.uleb128 0xb
 8143 0061 3B       		.uleb128 0x3b
 8144 0062 05       		.uleb128 0x5
 8145 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 202


 8146 0064 13       		.uleb128 0x13
 8147 0065 00       		.byte	0
 8148 0066 00       		.byte	0
 8149 0067 0A       		.uleb128 0xa
 8150 0068 0D       		.uleb128 0xd
 8151 0069 00       		.byte	0
 8152 006a 03       		.uleb128 0x3
 8153 006b 0E       		.uleb128 0xe
 8154 006c 3A       		.uleb128 0x3a
 8155 006d 0B       		.uleb128 0xb
 8156 006e 3B       		.uleb128 0x3b
 8157 006f 05       		.uleb128 0x5
 8158 0070 49       		.uleb128 0x49
 8159 0071 13       		.uleb128 0x13
 8160 0072 38       		.uleb128 0x38
 8161 0073 0B       		.uleb128 0xb
 8162 0074 00       		.byte	0
 8163 0075 00       		.byte	0
 8164 0076 0B       		.uleb128 0xb
 8165 0077 0D       		.uleb128 0xd
 8166 0078 00       		.byte	0
 8167 0079 03       		.uleb128 0x3
 8168 007a 08       		.uleb128 0x8
 8169 007b 3A       		.uleb128 0x3a
 8170 007c 0B       		.uleb128 0xb
 8171 007d 3B       		.uleb128 0x3b
 8172 007e 05       		.uleb128 0x5
 8173 007f 49       		.uleb128 0x49
 8174 0080 13       		.uleb128 0x13
 8175 0081 38       		.uleb128 0x38
 8176 0082 0B       		.uleb128 0xb
 8177 0083 00       		.byte	0
 8178 0084 00       		.byte	0
 8179 0085 0C       		.uleb128 0xc
 8180 0086 01       		.uleb128 0x1
 8181 0087 01       		.byte	0x1
 8182 0088 49       		.uleb128 0x49
 8183 0089 13       		.uleb128 0x13
 8184 008a 01       		.uleb128 0x1
 8185 008b 13       		.uleb128 0x13
 8186 008c 00       		.byte	0
 8187 008d 00       		.byte	0
 8188 008e 0D       		.uleb128 0xd
 8189 008f 21       		.uleb128 0x21
 8190 0090 00       		.byte	0
 8191 0091 49       		.uleb128 0x49
 8192 0092 13       		.uleb128 0x13
 8193 0093 2F       		.uleb128 0x2f
 8194 0094 0B       		.uleb128 0xb
 8195 0095 00       		.byte	0
 8196 0096 00       		.byte	0
 8197 0097 0E       		.uleb128 0xe
 8198 0098 2E       		.uleb128 0x2e
 8199 0099 00       		.byte	0
 8200 009a 3F       		.uleb128 0x3f
 8201 009b 19       		.uleb128 0x19
 8202 009c 03       		.uleb128 0x3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 203


 8203 009d 0E       		.uleb128 0xe
 8204 009e 3A       		.uleb128 0x3a
 8205 009f 0B       		.uleb128 0xb
 8206 00a0 3B       		.uleb128 0x3b
 8207 00a1 0B       		.uleb128 0xb
 8208 00a2 27       		.uleb128 0x27
 8209 00a3 19       		.uleb128 0x19
 8210 00a4 11       		.uleb128 0x11
 8211 00a5 01       		.uleb128 0x1
 8212 00a6 12       		.uleb128 0x12
 8213 00a7 06       		.uleb128 0x6
 8214 00a8 40       		.uleb128 0x40
 8215 00a9 18       		.uleb128 0x18
 8216 00aa 9742     		.uleb128 0x2117
 8217 00ac 19       		.uleb128 0x19
 8218 00ad 00       		.byte	0
 8219 00ae 00       		.byte	0
 8220 00af 0F       		.uleb128 0xf
 8221 00b0 2E       		.uleb128 0x2e
 8222 00b1 00       		.byte	0
 8223 00b2 3F       		.uleb128 0x3f
 8224 00b3 19       		.uleb128 0x19
 8225 00b4 03       		.uleb128 0x3
 8226 00b5 0E       		.uleb128 0xe
 8227 00b6 3A       		.uleb128 0x3a
 8228 00b7 0B       		.uleb128 0xb
 8229 00b8 3B       		.uleb128 0x3b
 8230 00b9 0B       		.uleb128 0xb
 8231 00ba 27       		.uleb128 0x27
 8232 00bb 19       		.uleb128 0x19
 8233 00bc 11       		.uleb128 0x11
 8234 00bd 01       		.uleb128 0x1
 8235 00be 12       		.uleb128 0x12
 8236 00bf 06       		.uleb128 0x6
 8237 00c0 40       		.uleb128 0x40
 8238 00c1 18       		.uleb128 0x18
 8239 00c2 9642     		.uleb128 0x2116
 8240 00c4 19       		.uleb128 0x19
 8241 00c5 00       		.byte	0
 8242 00c6 00       		.byte	0
 8243 00c7 10       		.uleb128 0x10
 8244 00c8 2E       		.uleb128 0x2e
 8245 00c9 01       		.byte	0x1
 8246 00ca 3F       		.uleb128 0x3f
 8247 00cb 19       		.uleb128 0x19
 8248 00cc 03       		.uleb128 0x3
 8249 00cd 0E       		.uleb128 0xe
 8250 00ce 3A       		.uleb128 0x3a
 8251 00cf 0B       		.uleb128 0xb
 8252 00d0 3B       		.uleb128 0x3b
 8253 00d1 0B       		.uleb128 0xb
 8254 00d2 27       		.uleb128 0x27
 8255 00d3 19       		.uleb128 0x19
 8256 00d4 11       		.uleb128 0x11
 8257 00d5 01       		.uleb128 0x1
 8258 00d6 12       		.uleb128 0x12
 8259 00d7 06       		.uleb128 0x6
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 204


 8260 00d8 40       		.uleb128 0x40
 8261 00d9 18       		.uleb128 0x18
 8262 00da 9642     		.uleb128 0x2116
 8263 00dc 19       		.uleb128 0x19
 8264 00dd 01       		.uleb128 0x1
 8265 00de 13       		.uleb128 0x13
 8266 00df 00       		.byte	0
 8267 00e0 00       		.byte	0
 8268 00e1 11       		.uleb128 0x11
 8269 00e2 34       		.uleb128 0x34
 8270 00e3 00       		.byte	0
 8271 00e4 03       		.uleb128 0x3
 8272 00e5 08       		.uleb128 0x8
 8273 00e6 3A       		.uleb128 0x3a
 8274 00e7 0B       		.uleb128 0xb
 8275 00e8 3B       		.uleb128 0x3b
 8276 00e9 0B       		.uleb128 0xb
 8277 00ea 49       		.uleb128 0x49
 8278 00eb 13       		.uleb128 0x13
 8279 00ec 02       		.uleb128 0x2
 8280 00ed 18       		.uleb128 0x18
 8281 00ee 00       		.byte	0
 8282 00ef 00       		.byte	0
 8283 00f0 12       		.uleb128 0x12
 8284 00f1 34       		.uleb128 0x34
 8285 00f2 00       		.byte	0
 8286 00f3 03       		.uleb128 0x3
 8287 00f4 0E       		.uleb128 0xe
 8288 00f5 3A       		.uleb128 0x3a
 8289 00f6 0B       		.uleb128 0xb
 8290 00f7 3B       		.uleb128 0x3b
 8291 00f8 0B       		.uleb128 0xb
 8292 00f9 49       		.uleb128 0x49
 8293 00fa 13       		.uleb128 0x13
 8294 00fb 02       		.uleb128 0x2
 8295 00fc 18       		.uleb128 0x18
 8296 00fd 00       		.byte	0
 8297 00fe 00       		.byte	0
 8298 00ff 13       		.uleb128 0x13
 8299 0100 2E       		.uleb128 0x2e
 8300 0101 00       		.byte	0
 8301 0102 3F       		.uleb128 0x3f
 8302 0103 19       		.uleb128 0x19
 8303 0104 03       		.uleb128 0x3
 8304 0105 0E       		.uleb128 0xe
 8305 0106 3A       		.uleb128 0x3a
 8306 0107 0B       		.uleb128 0xb
 8307 0108 3B       		.uleb128 0x3b
 8308 0109 05       		.uleb128 0x5
 8309 010a 27       		.uleb128 0x27
 8310 010b 19       		.uleb128 0x19
 8311 010c 11       		.uleb128 0x11
 8312 010d 01       		.uleb128 0x1
 8313 010e 12       		.uleb128 0x12
 8314 010f 06       		.uleb128 0x6
 8315 0110 40       		.uleb128 0x40
 8316 0111 18       		.uleb128 0x18
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 205


 8317 0112 9742     		.uleb128 0x2117
 8318 0114 19       		.uleb128 0x19
 8319 0115 00       		.byte	0
 8320 0116 00       		.byte	0
 8321 0117 14       		.uleb128 0x14
 8322 0118 2E       		.uleb128 0x2e
 8323 0119 00       		.byte	0
 8324 011a 3F       		.uleb128 0x3f
 8325 011b 19       		.uleb128 0x19
 8326 011c 03       		.uleb128 0x3
 8327 011d 0E       		.uleb128 0xe
 8328 011e 3A       		.uleb128 0x3a
 8329 011f 0B       		.uleb128 0xb
 8330 0120 3B       		.uleb128 0x3b
 8331 0121 05       		.uleb128 0x5
 8332 0122 27       		.uleb128 0x27
 8333 0123 19       		.uleb128 0x19
 8334 0124 49       		.uleb128 0x49
 8335 0125 13       		.uleb128 0x13
 8336 0126 11       		.uleb128 0x11
 8337 0127 01       		.uleb128 0x1
 8338 0128 12       		.uleb128 0x12
 8339 0129 06       		.uleb128 0x6
 8340 012a 40       		.uleb128 0x40
 8341 012b 18       		.uleb128 0x18
 8342 012c 9742     		.uleb128 0x2117
 8343 012e 19       		.uleb128 0x19
 8344 012f 00       		.byte	0
 8345 0130 00       		.byte	0
 8346 0131 15       		.uleb128 0x15
 8347 0132 2E       		.uleb128 0x2e
 8348 0133 01       		.byte	0x1
 8349 0134 3F       		.uleb128 0x3f
 8350 0135 19       		.uleb128 0x19
 8351 0136 03       		.uleb128 0x3
 8352 0137 0E       		.uleb128 0xe
 8353 0138 3A       		.uleb128 0x3a
 8354 0139 0B       		.uleb128 0xb
 8355 013a 3B       		.uleb128 0x3b
 8356 013b 05       		.uleb128 0x5
 8357 013c 27       		.uleb128 0x27
 8358 013d 19       		.uleb128 0x19
 8359 013e 11       		.uleb128 0x11
 8360 013f 01       		.uleb128 0x1
 8361 0140 12       		.uleb128 0x12
 8362 0141 06       		.uleb128 0x6
 8363 0142 40       		.uleb128 0x40
 8364 0143 18       		.uleb128 0x18
 8365 0144 9742     		.uleb128 0x2117
 8366 0146 19       		.uleb128 0x19
 8367 0147 01       		.uleb128 0x1
 8368 0148 13       		.uleb128 0x13
 8369 0149 00       		.byte	0
 8370 014a 00       		.byte	0
 8371 014b 16       		.uleb128 0x16
 8372 014c 34       		.uleb128 0x34
 8373 014d 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 206


 8374 014e 03       		.uleb128 0x3
 8375 014f 08       		.uleb128 0x8
 8376 0150 3A       		.uleb128 0x3a
 8377 0151 0B       		.uleb128 0xb
 8378 0152 3B       		.uleb128 0x3b
 8379 0153 05       		.uleb128 0x5
 8380 0154 49       		.uleb128 0x49
 8381 0155 13       		.uleb128 0x13
 8382 0156 02       		.uleb128 0x2
 8383 0157 18       		.uleb128 0x18
 8384 0158 00       		.byte	0
 8385 0159 00       		.byte	0
 8386 015a 17       		.uleb128 0x17
 8387 015b 34       		.uleb128 0x34
 8388 015c 00       		.byte	0
 8389 015d 03       		.uleb128 0x3
 8390 015e 0E       		.uleb128 0xe
 8391 015f 3A       		.uleb128 0x3a
 8392 0160 0B       		.uleb128 0xb
 8393 0161 3B       		.uleb128 0x3b
 8394 0162 05       		.uleb128 0x5
 8395 0163 49       		.uleb128 0x49
 8396 0164 13       		.uleb128 0x13
 8397 0165 02       		.uleb128 0x2
 8398 0166 18       		.uleb128 0x18
 8399 0167 00       		.byte	0
 8400 0168 00       		.byte	0
 8401 0169 18       		.uleb128 0x18
 8402 016a 2E       		.uleb128 0x2e
 8403 016b 01       		.byte	0x1
 8404 016c 3F       		.uleb128 0x3f
 8405 016d 19       		.uleb128 0x19
 8406 016e 03       		.uleb128 0x3
 8407 016f 0E       		.uleb128 0xe
 8408 0170 3A       		.uleb128 0x3a
 8409 0171 0B       		.uleb128 0xb
 8410 0172 3B       		.uleb128 0x3b
 8411 0173 05       		.uleb128 0x5
 8412 0174 27       		.uleb128 0x27
 8413 0175 19       		.uleb128 0x19
 8414 0176 11       		.uleb128 0x11
 8415 0177 01       		.uleb128 0x1
 8416 0178 12       		.uleb128 0x12
 8417 0179 06       		.uleb128 0x6
 8418 017a 40       		.uleb128 0x40
 8419 017b 18       		.uleb128 0x18
 8420 017c 9642     		.uleb128 0x2116
 8421 017e 19       		.uleb128 0x19
 8422 017f 01       		.uleb128 0x1
 8423 0180 13       		.uleb128 0x13
 8424 0181 00       		.byte	0
 8425 0182 00       		.byte	0
 8426 0183 19       		.uleb128 0x19
 8427 0184 05       		.uleb128 0x5
 8428 0185 00       		.byte	0
 8429 0186 03       		.uleb128 0x3
 8430 0187 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 207


 8431 0188 3A       		.uleb128 0x3a
 8432 0189 0B       		.uleb128 0xb
 8433 018a 3B       		.uleb128 0x3b
 8434 018b 05       		.uleb128 0x5
 8435 018c 49       		.uleb128 0x49
 8436 018d 13       		.uleb128 0x13
 8437 018e 02       		.uleb128 0x2
 8438 018f 18       		.uleb128 0x18
 8439 0190 00       		.byte	0
 8440 0191 00       		.byte	0
 8441 0192 1A       		.uleb128 0x1a
 8442 0193 2E       		.uleb128 0x2e
 8443 0194 01       		.byte	0x1
 8444 0195 3F       		.uleb128 0x3f
 8445 0196 19       		.uleb128 0x19
 8446 0197 03       		.uleb128 0x3
 8447 0198 0E       		.uleb128 0xe
 8448 0199 3A       		.uleb128 0x3a
 8449 019a 0B       		.uleb128 0xb
 8450 019b 3B       		.uleb128 0x3b
 8451 019c 05       		.uleb128 0x5
 8452 019d 27       		.uleb128 0x27
 8453 019e 19       		.uleb128 0x19
 8454 019f 49       		.uleb128 0x49
 8455 01a0 13       		.uleb128 0x13
 8456 01a1 11       		.uleb128 0x11
 8457 01a2 01       		.uleb128 0x1
 8458 01a3 12       		.uleb128 0x12
 8459 01a4 06       		.uleb128 0x6
 8460 01a5 40       		.uleb128 0x40
 8461 01a6 18       		.uleb128 0x18
 8462 01a7 9642     		.uleb128 0x2116
 8463 01a9 19       		.uleb128 0x19
 8464 01aa 01       		.uleb128 0x1
 8465 01ab 13       		.uleb128 0x13
 8466 01ac 00       		.byte	0
 8467 01ad 00       		.byte	0
 8468 01ae 1B       		.uleb128 0x1b
 8469 01af 2E       		.uleb128 0x2e
 8470 01b0 01       		.byte	0x1
 8471 01b1 3F       		.uleb128 0x3f
 8472 01b2 19       		.uleb128 0x19
 8473 01b3 03       		.uleb128 0x3
 8474 01b4 0E       		.uleb128 0xe
 8475 01b5 3A       		.uleb128 0x3a
 8476 01b6 0B       		.uleb128 0xb
 8477 01b7 3B       		.uleb128 0x3b
 8478 01b8 05       		.uleb128 0x5
 8479 01b9 27       		.uleb128 0x27
 8480 01ba 19       		.uleb128 0x19
 8481 01bb 49       		.uleb128 0x49
 8482 01bc 13       		.uleb128 0x13
 8483 01bd 11       		.uleb128 0x11
 8484 01be 01       		.uleb128 0x1
 8485 01bf 12       		.uleb128 0x12
 8486 01c0 06       		.uleb128 0x6
 8487 01c1 40       		.uleb128 0x40
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 208


 8488 01c2 18       		.uleb128 0x18
 8489 01c3 9742     		.uleb128 0x2117
 8490 01c5 19       		.uleb128 0x19
 8491 01c6 01       		.uleb128 0x1
 8492 01c7 13       		.uleb128 0x13
 8493 01c8 00       		.byte	0
 8494 01c9 00       		.byte	0
 8495 01ca 1C       		.uleb128 0x1c
 8496 01cb 05       		.uleb128 0x5
 8497 01cc 00       		.byte	0
 8498 01cd 03       		.uleb128 0x3
 8499 01ce 08       		.uleb128 0x8
 8500 01cf 3A       		.uleb128 0x3a
 8501 01d0 0B       		.uleb128 0xb
 8502 01d1 3B       		.uleb128 0x3b
 8503 01d2 05       		.uleb128 0x5
 8504 01d3 49       		.uleb128 0x49
 8505 01d4 13       		.uleb128 0x13
 8506 01d5 02       		.uleb128 0x2
 8507 01d6 18       		.uleb128 0x18
 8508 01d7 00       		.byte	0
 8509 01d8 00       		.byte	0
 8510 01d9 1D       		.uleb128 0x1d
 8511 01da 2E       		.uleb128 0x2e
 8512 01db 01       		.byte	0x1
 8513 01dc 03       		.uleb128 0x3
 8514 01dd 0E       		.uleb128 0xe
 8515 01de 3A       		.uleb128 0x3a
 8516 01df 0B       		.uleb128 0xb
 8517 01e0 3B       		.uleb128 0x3b
 8518 01e1 05       		.uleb128 0x5
 8519 01e2 27       		.uleb128 0x27
 8520 01e3 19       		.uleb128 0x19
 8521 01e4 49       		.uleb128 0x49
 8522 01e5 13       		.uleb128 0x13
 8523 01e6 11       		.uleb128 0x11
 8524 01e7 01       		.uleb128 0x1
 8525 01e8 12       		.uleb128 0x12
 8526 01e9 06       		.uleb128 0x6
 8527 01ea 40       		.uleb128 0x40
 8528 01eb 18       		.uleb128 0x18
 8529 01ec 9642     		.uleb128 0x2116
 8530 01ee 19       		.uleb128 0x19
 8531 01ef 01       		.uleb128 0x1
 8532 01f0 13       		.uleb128 0x13
 8533 01f1 00       		.byte	0
 8534 01f2 00       		.byte	0
 8535 01f3 1E       		.uleb128 0x1e
 8536 01f4 2E       		.uleb128 0x2e
 8537 01f5 00       		.byte	0
 8538 01f6 3F       		.uleb128 0x3f
 8539 01f7 19       		.uleb128 0x19
 8540 01f8 03       		.uleb128 0x3
 8541 01f9 0E       		.uleb128 0xe
 8542 01fa 3A       		.uleb128 0x3a
 8543 01fb 0B       		.uleb128 0xb
 8544 01fc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 209


 8545 01fd 05       		.uleb128 0x5
 8546 01fe 27       		.uleb128 0x27
 8547 01ff 19       		.uleb128 0x19
 8548 0200 11       		.uleb128 0x11
 8549 0201 01       		.uleb128 0x1
 8550 0202 12       		.uleb128 0x12
 8551 0203 06       		.uleb128 0x6
 8552 0204 40       		.uleb128 0x40
 8553 0205 18       		.uleb128 0x18
 8554 0206 9642     		.uleb128 0x2116
 8555 0208 19       		.uleb128 0x19
 8556 0209 00       		.byte	0
 8557 020a 00       		.byte	0
 8558 020b 1F       		.uleb128 0x1f
 8559 020c 2E       		.uleb128 0x2e
 8560 020d 01       		.byte	0x1
 8561 020e 03       		.uleb128 0x3
 8562 020f 0E       		.uleb128 0xe
 8563 0210 3A       		.uleb128 0x3a
 8564 0211 0B       		.uleb128 0xb
 8565 0212 3B       		.uleb128 0x3b
 8566 0213 05       		.uleb128 0x5
 8567 0214 27       		.uleb128 0x27
 8568 0215 19       		.uleb128 0x19
 8569 0216 11       		.uleb128 0x11
 8570 0217 01       		.uleb128 0x1
 8571 0218 12       		.uleb128 0x12
 8572 0219 06       		.uleb128 0x6
 8573 021a 40       		.uleb128 0x40
 8574 021b 18       		.uleb128 0x18
 8575 021c 9642     		.uleb128 0x2116
 8576 021e 19       		.uleb128 0x19
 8577 021f 01       		.uleb128 0x1
 8578 0220 13       		.uleb128 0x13
 8579 0221 00       		.byte	0
 8580 0222 00       		.byte	0
 8581 0223 20       		.uleb128 0x20
 8582 0224 34       		.uleb128 0x34
 8583 0225 00       		.byte	0
 8584 0226 03       		.uleb128 0x3
 8585 0227 0E       		.uleb128 0xe
 8586 0228 3A       		.uleb128 0x3a
 8587 0229 0B       		.uleb128 0xb
 8588 022a 3B       		.uleb128 0x3b
 8589 022b 0B       		.uleb128 0xb
 8590 022c 49       		.uleb128 0x49
 8591 022d 13       		.uleb128 0x13
 8592 022e 3F       		.uleb128 0x3f
 8593 022f 19       		.uleb128 0x19
 8594 0230 02       		.uleb128 0x2
 8595 0231 18       		.uleb128 0x18
 8596 0232 00       		.byte	0
 8597 0233 00       		.byte	0
 8598 0234 21       		.uleb128 0x21
 8599 0235 26       		.uleb128 0x26
 8600 0236 00       		.byte	0
 8601 0237 49       		.uleb128 0x49
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 210


 8602 0238 13       		.uleb128 0x13
 8603 0239 00       		.byte	0
 8604 023a 00       		.byte	0
 8605 023b 00       		.byte	0
 8606              		.section	.debug_aranges,"",%progbits
 8607 0000 5C020000 		.4byte	0x25c
 8608 0004 0200     		.2byte	0x2
 8609 0006 00000000 		.4byte	.Ldebug_info0
 8610 000a 04       		.byte	0x4
 8611 000b 00       		.byte	0
 8612 000c 0000     		.2byte	0
 8613 000e 0000     		.2byte	0
 8614 0010 00000000 		.4byte	.LFB1
 8615 0014 1C000000 		.4byte	.LFE1-.LFB1
 8616 0018 00000000 		.4byte	.LFB2
 8617 001c 24000000 		.4byte	.LFE2-.LFB2
 8618 0020 00000000 		.4byte	.LFB3
 8619 0024 54010000 		.4byte	.LFE3-.LFB3
 8620 0028 00000000 		.4byte	.LFB4
 8621 002c 20000000 		.4byte	.LFE4-.LFB4
 8622 0030 00000000 		.4byte	.LFB5
 8623 0034 20000000 		.4byte	.LFE5-.LFB5
 8624 0038 00000000 		.4byte	.LFB6
 8625 003c 38010000 		.4byte	.LFE6-.LFB6
 8626 0040 00000000 		.4byte	.LFB7
 8627 0044 C4000000 		.4byte	.LFE7-.LFB7
 8628 0048 00000000 		.4byte	.LFB8
 8629 004c 20000000 		.4byte	.LFE8-.LFB8
 8630 0050 00000000 		.4byte	.LFB9
 8631 0054 70000000 		.4byte	.LFE9-.LFB9
 8632 0058 00000000 		.4byte	.LFB10
 8633 005c 50000000 		.4byte	.LFE10-.LFB10
 8634 0060 00000000 		.4byte	.LFB11
 8635 0064 4C000000 		.4byte	.LFE11-.LFB11
 8636 0068 00000000 		.4byte	.LFB12
 8637 006c 48000000 		.4byte	.LFE12-.LFB12
 8638 0070 00000000 		.4byte	.LFB13
 8639 0074 2C020000 		.4byte	.LFE13-.LFB13
 8640 0078 00000000 		.4byte	.LFB14
 8641 007c 68000000 		.4byte	.LFE14-.LFB14
 8642 0080 00000000 		.4byte	.LFB15
 8643 0084 20000000 		.4byte	.LFE15-.LFB15
 8644 0088 00000000 		.4byte	.LFB16
 8645 008c 24000000 		.4byte	.LFE16-.LFB16
 8646 0090 00000000 		.4byte	.LFB17
 8647 0094 98000000 		.4byte	.LFE17-.LFB17
 8648 0098 00000000 		.4byte	.LFB18
 8649 009c E4010000 		.4byte	.LFE18-.LFB18
 8650 00a0 00000000 		.4byte	.LFB19
 8651 00a4 10010000 		.4byte	.LFE19-.LFB19
 8652 00a8 00000000 		.4byte	.LFB20
 8653 00ac 70000000 		.4byte	.LFE20-.LFB20
 8654 00b0 00000000 		.4byte	.LFB21
 8655 00b4 54000000 		.4byte	.LFE21-.LFB21
 8656 00b8 00000000 		.4byte	.LFB22
 8657 00bc D4000000 		.4byte	.LFE22-.LFB22
 8658 00c0 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 211


 8659 00c4 6C000000 		.4byte	.LFE23-.LFB23
 8660 00c8 00000000 		.4byte	.LFB24
 8661 00cc 58000000 		.4byte	.LFE24-.LFB24
 8662 00d0 00000000 		.4byte	.LFB25
 8663 00d4 54000000 		.4byte	.LFE25-.LFB25
 8664 00d8 00000000 		.4byte	.LFB26
 8665 00dc 74000000 		.4byte	.LFE26-.LFB26
 8666 00e0 00000000 		.4byte	.LFB27
 8667 00e4 6C010000 		.4byte	.LFE27-.LFB27
 8668 00e8 00000000 		.4byte	.LFB28
 8669 00ec 7C000000 		.4byte	.LFE28-.LFB28
 8670 00f0 00000000 		.4byte	.LFB29
 8671 00f4 8C000000 		.4byte	.LFE29-.LFB29
 8672 00f8 00000000 		.4byte	.LFB30
 8673 00fc 64000000 		.4byte	.LFE30-.LFB30
 8674 0100 00000000 		.4byte	.LFB31
 8675 0104 2C000000 		.4byte	.LFE31-.LFB31
 8676 0108 00000000 		.4byte	.LFB32
 8677 010c 18000000 		.4byte	.LFE32-.LFB32
 8678 0110 00000000 		.4byte	.LFB33
 8679 0114 14000000 		.4byte	.LFE33-.LFB33
 8680 0118 00000000 		.4byte	.LFB34
 8681 011c 30000000 		.4byte	.LFE34-.LFB34
 8682 0120 00000000 		.4byte	.LFB35
 8683 0124 24000000 		.4byte	.LFE35-.LFB35
 8684 0128 00000000 		.4byte	.LFB36
 8685 012c 1C000000 		.4byte	.LFE36-.LFB36
 8686 0130 00000000 		.4byte	.LFB37
 8687 0134 48000000 		.4byte	.LFE37-.LFB37
 8688 0138 00000000 		.4byte	.LFB38
 8689 013c 34000000 		.4byte	.LFE38-.LFB38
 8690 0140 00000000 		.4byte	.LFB39
 8691 0144 4C000000 		.4byte	.LFE39-.LFB39
 8692 0148 00000000 		.4byte	.LFB40
 8693 014c 36000000 		.4byte	.LFE40-.LFB40
 8694 0150 00000000 		.4byte	.LFB41
 8695 0154 A8000000 		.4byte	.LFE41-.LFB41
 8696 0158 00000000 		.4byte	.LFB42
 8697 015c 58000000 		.4byte	.LFE42-.LFB42
 8698 0160 00000000 		.4byte	.LFB43
 8699 0164 2C000000 		.4byte	.LFE43-.LFB43
 8700 0168 00000000 		.4byte	.LFB44
 8701 016c 30000000 		.4byte	.LFE44-.LFB44
 8702 0170 00000000 		.4byte	.LFB45
 8703 0174 2C000000 		.4byte	.LFE45-.LFB45
 8704 0178 00000000 		.4byte	.LFB46
 8705 017c 2C000000 		.4byte	.LFE46-.LFB46
 8706 0180 00000000 		.4byte	.LFB47
 8707 0184 2C000000 		.4byte	.LFE47-.LFB47
 8708 0188 00000000 		.4byte	.LFB48
 8709 018c 16000000 		.4byte	.LFE48-.LFB48
 8710 0190 00000000 		.4byte	.LFB49
 8711 0194 24000000 		.4byte	.LFE49-.LFB49
 8712 0198 00000000 		.4byte	.LFB50
 8713 019c 4C000000 		.4byte	.LFE50-.LFB50
 8714 01a0 00000000 		.4byte	.LFB51
 8715 01a4 28000000 		.4byte	.LFE51-.LFB51
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 212


 8716 01a8 00000000 		.4byte	.LFB52
 8717 01ac 84000000 		.4byte	.LFE52-.LFB52
 8718 01b0 00000000 		.4byte	.LFB53
 8719 01b4 24000000 		.4byte	.LFE53-.LFB53
 8720 01b8 00000000 		.4byte	.LFB54
 8721 01bc 60000000 		.4byte	.LFE54-.LFB54
 8722 01c0 00000000 		.4byte	.LFB55
 8723 01c4 20000000 		.4byte	.LFE55-.LFB55
 8724 01c8 00000000 		.4byte	.LFB56
 8725 01cc 1C000000 		.4byte	.LFE56-.LFB56
 8726 01d0 00000000 		.4byte	.LFB57
 8727 01d4 1C000000 		.4byte	.LFE57-.LFB57
 8728 01d8 00000000 		.4byte	.LFB58
 8729 01dc 1C000000 		.4byte	.LFE58-.LFB58
 8730 01e0 00000000 		.4byte	.LFB59
 8731 01e4 20000000 		.4byte	.LFE59-.LFB59
 8732 01e8 00000000 		.4byte	.LFB60
 8733 01ec 18000000 		.4byte	.LFE60-.LFB60
 8734 01f0 00000000 		.4byte	.LFB61
 8735 01f4 18000000 		.4byte	.LFE61-.LFB61
 8736 01f8 00000000 		.4byte	.LFB62
 8737 01fc 34000000 		.4byte	.LFE62-.LFB62
 8738 0200 00000000 		.4byte	.LFB63
 8739 0204 18000000 		.4byte	.LFE63-.LFB63
 8740 0208 00000000 		.4byte	.LFB64
 8741 020c 18000000 		.4byte	.LFE64-.LFB64
 8742 0210 00000000 		.4byte	.LFB65
 8743 0214 14000000 		.4byte	.LFE65-.LFB65
 8744 0218 00000000 		.4byte	.LFB66
 8745 021c 2C000000 		.4byte	.LFE66-.LFB66
 8746 0220 00000000 		.4byte	.LFB67
 8747 0224 1C000000 		.4byte	.LFE67-.LFB67
 8748 0228 00000000 		.4byte	.LFB68
 8749 022c 44000000 		.4byte	.LFE68-.LFB68
 8750 0230 00000000 		.4byte	.LFB69
 8751 0234 C0000000 		.4byte	.LFE69-.LFB69
 8752 0238 00000000 		.4byte	.LFB70
 8753 023c 38000000 		.4byte	.LFE70-.LFB70
 8754 0240 00000000 		.4byte	.LFB71
 8755 0244 38000000 		.4byte	.LFE71-.LFB71
 8756 0248 00000000 		.4byte	.LFB72
 8757 024c 38000000 		.4byte	.LFE72-.LFB72
 8758 0250 00000000 		.4byte	.LFB73
 8759 0254 A0000000 		.4byte	.LFE73-.LFB73
 8760 0258 00000000 		.4byte	0
 8761 025c 00000000 		.4byte	0
 8762              		.section	.debug_ranges,"",%progbits
 8763              	.Ldebug_ranges0:
 8764 0000 00000000 		.4byte	.LFB1
 8765 0004 1C000000 		.4byte	.LFE1
 8766 0008 00000000 		.4byte	.LFB2
 8767 000c 24000000 		.4byte	.LFE2
 8768 0010 00000000 		.4byte	.LFB3
 8769 0014 54010000 		.4byte	.LFE3
 8770 0018 00000000 		.4byte	.LFB4
 8771 001c 20000000 		.4byte	.LFE4
 8772 0020 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 213


 8773 0024 20000000 		.4byte	.LFE5
 8774 0028 00000000 		.4byte	.LFB6
 8775 002c 38010000 		.4byte	.LFE6
 8776 0030 00000000 		.4byte	.LFB7
 8777 0034 C4000000 		.4byte	.LFE7
 8778 0038 00000000 		.4byte	.LFB8
 8779 003c 20000000 		.4byte	.LFE8
 8780 0040 00000000 		.4byte	.LFB9
 8781 0044 70000000 		.4byte	.LFE9
 8782 0048 00000000 		.4byte	.LFB10
 8783 004c 50000000 		.4byte	.LFE10
 8784 0050 00000000 		.4byte	.LFB11
 8785 0054 4C000000 		.4byte	.LFE11
 8786 0058 00000000 		.4byte	.LFB12
 8787 005c 48000000 		.4byte	.LFE12
 8788 0060 00000000 		.4byte	.LFB13
 8789 0064 2C020000 		.4byte	.LFE13
 8790 0068 00000000 		.4byte	.LFB14
 8791 006c 68000000 		.4byte	.LFE14
 8792 0070 00000000 		.4byte	.LFB15
 8793 0074 20000000 		.4byte	.LFE15
 8794 0078 00000000 		.4byte	.LFB16
 8795 007c 24000000 		.4byte	.LFE16
 8796 0080 00000000 		.4byte	.LFB17
 8797 0084 98000000 		.4byte	.LFE17
 8798 0088 00000000 		.4byte	.LFB18
 8799 008c E4010000 		.4byte	.LFE18
 8800 0090 00000000 		.4byte	.LFB19
 8801 0094 10010000 		.4byte	.LFE19
 8802 0098 00000000 		.4byte	.LFB20
 8803 009c 70000000 		.4byte	.LFE20
 8804 00a0 00000000 		.4byte	.LFB21
 8805 00a4 54000000 		.4byte	.LFE21
 8806 00a8 00000000 		.4byte	.LFB22
 8807 00ac D4000000 		.4byte	.LFE22
 8808 00b0 00000000 		.4byte	.LFB23
 8809 00b4 6C000000 		.4byte	.LFE23
 8810 00b8 00000000 		.4byte	.LFB24
 8811 00bc 58000000 		.4byte	.LFE24
 8812 00c0 00000000 		.4byte	.LFB25
 8813 00c4 54000000 		.4byte	.LFE25
 8814 00c8 00000000 		.4byte	.LFB26
 8815 00cc 74000000 		.4byte	.LFE26
 8816 00d0 00000000 		.4byte	.LFB27
 8817 00d4 6C010000 		.4byte	.LFE27
 8818 00d8 00000000 		.4byte	.LFB28
 8819 00dc 7C000000 		.4byte	.LFE28
 8820 00e0 00000000 		.4byte	.LFB29
 8821 00e4 8C000000 		.4byte	.LFE29
 8822 00e8 00000000 		.4byte	.LFB30
 8823 00ec 64000000 		.4byte	.LFE30
 8824 00f0 00000000 		.4byte	.LFB31
 8825 00f4 2C000000 		.4byte	.LFE31
 8826 00f8 00000000 		.4byte	.LFB32
 8827 00fc 18000000 		.4byte	.LFE32
 8828 0100 00000000 		.4byte	.LFB33
 8829 0104 14000000 		.4byte	.LFE33
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 214


 8830 0108 00000000 		.4byte	.LFB34
 8831 010c 30000000 		.4byte	.LFE34
 8832 0110 00000000 		.4byte	.LFB35
 8833 0114 24000000 		.4byte	.LFE35
 8834 0118 00000000 		.4byte	.LFB36
 8835 011c 1C000000 		.4byte	.LFE36
 8836 0120 00000000 		.4byte	.LFB37
 8837 0124 48000000 		.4byte	.LFE37
 8838 0128 00000000 		.4byte	.LFB38
 8839 012c 34000000 		.4byte	.LFE38
 8840 0130 00000000 		.4byte	.LFB39
 8841 0134 4C000000 		.4byte	.LFE39
 8842 0138 00000000 		.4byte	.LFB40
 8843 013c 36000000 		.4byte	.LFE40
 8844 0140 00000000 		.4byte	.LFB41
 8845 0144 A8000000 		.4byte	.LFE41
 8846 0148 00000000 		.4byte	.LFB42
 8847 014c 58000000 		.4byte	.LFE42
 8848 0150 00000000 		.4byte	.LFB43
 8849 0154 2C000000 		.4byte	.LFE43
 8850 0158 00000000 		.4byte	.LFB44
 8851 015c 30000000 		.4byte	.LFE44
 8852 0160 00000000 		.4byte	.LFB45
 8853 0164 2C000000 		.4byte	.LFE45
 8854 0168 00000000 		.4byte	.LFB46
 8855 016c 2C000000 		.4byte	.LFE46
 8856 0170 00000000 		.4byte	.LFB47
 8857 0174 2C000000 		.4byte	.LFE47
 8858 0178 00000000 		.4byte	.LFB48
 8859 017c 16000000 		.4byte	.LFE48
 8860 0180 00000000 		.4byte	.LFB49
 8861 0184 24000000 		.4byte	.LFE49
 8862 0188 00000000 		.4byte	.LFB50
 8863 018c 4C000000 		.4byte	.LFE50
 8864 0190 00000000 		.4byte	.LFB51
 8865 0194 28000000 		.4byte	.LFE51
 8866 0198 00000000 		.4byte	.LFB52
 8867 019c 84000000 		.4byte	.LFE52
 8868 01a0 00000000 		.4byte	.LFB53
 8869 01a4 24000000 		.4byte	.LFE53
 8870 01a8 00000000 		.4byte	.LFB54
 8871 01ac 60000000 		.4byte	.LFE54
 8872 01b0 00000000 		.4byte	.LFB55
 8873 01b4 20000000 		.4byte	.LFE55
 8874 01b8 00000000 		.4byte	.LFB56
 8875 01bc 1C000000 		.4byte	.LFE56
 8876 01c0 00000000 		.4byte	.LFB57
 8877 01c4 1C000000 		.4byte	.LFE57
 8878 01c8 00000000 		.4byte	.LFB58
 8879 01cc 1C000000 		.4byte	.LFE58
 8880 01d0 00000000 		.4byte	.LFB59
 8881 01d4 20000000 		.4byte	.LFE59
 8882 01d8 00000000 		.4byte	.LFB60
 8883 01dc 18000000 		.4byte	.LFE60
 8884 01e0 00000000 		.4byte	.LFB61
 8885 01e4 18000000 		.4byte	.LFE61
 8886 01e8 00000000 		.4byte	.LFB62
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 215


 8887 01ec 34000000 		.4byte	.LFE62
 8888 01f0 00000000 		.4byte	.LFB63
 8889 01f4 18000000 		.4byte	.LFE63
 8890 01f8 00000000 		.4byte	.LFB64
 8891 01fc 18000000 		.4byte	.LFE64
 8892 0200 00000000 		.4byte	.LFB65
 8893 0204 14000000 		.4byte	.LFE65
 8894 0208 00000000 		.4byte	.LFB66
 8895 020c 2C000000 		.4byte	.LFE66
 8896 0210 00000000 		.4byte	.LFB67
 8897 0214 1C000000 		.4byte	.LFE67
 8898 0218 00000000 		.4byte	.LFB68
 8899 021c 44000000 		.4byte	.LFE68
 8900 0220 00000000 		.4byte	.LFB69
 8901 0224 C0000000 		.4byte	.LFE69
 8902 0228 00000000 		.4byte	.LFB70
 8903 022c 38000000 		.4byte	.LFE70
 8904 0230 00000000 		.4byte	.LFB71
 8905 0234 38000000 		.4byte	.LFE71
 8906 0238 00000000 		.4byte	.LFB72
 8907 023c 38000000 		.4byte	.LFE72
 8908 0240 00000000 		.4byte	.LFB73
 8909 0244 A0000000 		.4byte	.LFE73
 8910 0248 00000000 		.4byte	0
 8911 024c 00000000 		.4byte	0
 8912              		.section	.debug_line,"",%progbits
 8913              	.Ldebug_line0:
 8914 0000 36090000 		.section	.debug_str,"MS",%progbits,1
 8914      02004D00 
 8914      00000201 
 8914      FB0E0D00 
 8914      01010101 
 8915              	.LASF34:
 8916 0000 666C6173 		.ascii	"flashCtlReg\000"
 8916      6843746C 
 8916      52656700 
 8917              	.LASF120:
 8918 000c 4379496E 		.ascii	"CyIntGetVector\000"
 8918      74476574 
 8918      56656374 
 8918      6F7200
 8919              	.LASF151:
 8920 001b 43795379 		.ascii	"CySysTickClear\000"
 8920      73546963 
 8920      6B436C65 
 8920      617200
 8921              	.LASF133:
 8922 002a 43794465 		.ascii	"CyDelay\000"
 8922      6C617900 
 8923              	.LASF121:
 8924 0032 4379496E 		.ascii	"CyIntSetPriority\000"
 8924      74536574 
 8924      5072696F 
 8924      72697479 
 8924      00
 8925              	.LASF88:
 8926 0043 43795379 		.ascii	"CySysClkPllGetUnlockStatus\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 216


 8926      73436C6B 
 8926      506C6C47 
 8926      6574556E 
 8926      6C6F636B 
 8927              	.LASF125:
 8928 005e 4379496E 		.ascii	"CyIntGetPriority\000"
 8928      74476574 
 8928      5072696F 
 8928      72697479 
 8928      00
 8929              	.LASF160:
 8930 006f 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 8930      73536574 
 8930      446D6163 
 8930      41636365 
 8930      73734172 
 8931              	.LASF134:
 8932 008d 6D696C6C 		.ascii	"milliseconds\000"
 8932      69736563 
 8932      6F6E6473 
 8932      00
 8933              	.LASF60:
 8934 009a 72657475 		.ascii	"returnStatus\000"
 8934      726E5374 
 8934      61747573 
 8934      00
 8935              	.LASF165:
 8936 00a7 63796465 		.ascii	"cydelayFreqKhz\000"
 8936      6C617946 
 8936      7265714B 
 8936      687A00
 8937              	.LASF38:
 8938 00b6 43795379 		.ascii	"CySysClkUsbCuSortTrim\000"
 8938      73436C6B 
 8938      55736243 
 8938      75536F72 
 8938      74547269 
 8939              	.LASF98:
 8940 00cc 66657272 		.ascii	"ferr\000"
 8940      00
 8941              	.LASF8:
 8942 00d1 756E7369 		.ascii	"unsigned int\000"
 8942      676E6564 
 8942      20696E74 
 8942      00
 8943              	.LASF39:
 8944 00de 43795379 		.ascii	"CySysClkImoDisableUsbLock\000"
 8944      73436C6B 
 8944      496D6F44 
 8944      69736162 
 8944      6C655573 
 8945              	.LASF67:
 8946 00f8 66547269 		.ascii	"fTrim\000"
 8946      6D00
 8947              	.LASF162:
 8948 00fe 696E7465 		.ascii	"interfaceNumber\000"
 8948      72666163 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 217


 8948      654E756D 
 8948      62657200 
 8949              	.LASF92:
 8950 010e 66726571 		.ascii	"freqTol\000"
 8950      546F6C00 
 8951              	.LASF44:
 8952 0116 43795379 		.ascii	"CySysEnablePumpClock\000"
 8952      73456E61 
 8952      626C6550 
 8952      756D7043 
 8952      6C6F636B 
 8953              	.LASF31:
 8954 012b 696E7465 		.ascii	"interruptState\000"
 8954      72727570 
 8954      74537461 
 8954      746500
 8955              	.LASF40:
 8956 013a 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 8956      73436C6B 
 8956      496D6F47 
 8956      65745763 
 8956      6F4C6F63 
 8957              	.LASF17:
 8958 0150 72656738 		.ascii	"reg8\000"
 8958      00
 8959              	.LASF174:
 8960 0155 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8960      43313120 
 8960      352E342E 
 8960      31203230 
 8960      31363036 
 8961 0188 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 8961      20726576 
 8961      6973696F 
 8961      6E203233 
 8961      37373135 
 8962 01bb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8962      66756E63 
 8962      74696F6E 
 8962      2D736563 
 8962      74696F6E 
 8963              	.LASF102:
 8964 01e3 43795379 		.ascii	"CySysLvdEnable\000"
 8964      734C7664 
 8964      456E6162 
 8964      6C6500
 8965              	.LASF128:
 8966 01f2 4379496E 		.ascii	"CyIntDisable\000"
 8966      74446973 
 8966      61626C65 
 8966      00
 8967              	.LASF168:
 8968 01ff 43795379 		.ascii	"CySysTickInitVar\000"
 8968      73546963 
 8968      6B496E69 
 8968      74566172 
 8968      00
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 218


 8969              	.LASF105:
 8970 0210 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 8970      734C7664 
 8970      47657449 
 8970      6E746572 
 8970      72757074 
 8971              	.LASF81:
 8972 022b 72656665 		.ascii	"reference\000"
 8972      72656E63 
 8972      6500
 8973              	.LASF152:
 8974 0235 43795379 		.ascii	"CySysTickSetCallback\000"
 8974      73546963 
 8974      6B536574 
 8974      43616C6C 
 8974      6261636B 
 8975              	.LASF111:
 8976 024a 4379456E 		.ascii	"CyEnableInts\000"
 8976      61626C65 
 8976      496E7473 
 8976      00
 8977              	.LASF137:
 8978 0257 43794465 		.ascii	"CyDelayFreq\000"
 8978      6C617946 
 8978      72657100 
 8979              	.LASF41:
 8980 0263 43795379 		.ascii	"CySysClkImoGetUsbLock\000"
 8980      73436C6B 
 8980      496D6F47 
 8980      65745573 
 8980      624C6F63 
 8981              	.LASF27:
 8982 0279 63795F73 		.ascii	"cy_sys_clk_pll_struct\000"
 8982      79735F63 
 8982      6C6B5F70 
 8982      6C6C5F73 
 8982      74727563 
 8983              	.LASF61:
 8984 028f 43795379 		.ascii	"CySysClkEcoStop\000"
 8984      73436C6B 
 8984      45636F53 
 8984      746F7000 
 8985              	.LASF13:
 8986 029f 666C6F61 		.ascii	"float\000"
 8986      7400
 8987              	.LASF123:
 8988 02a5 73686966 		.ascii	"shift\000"
 8988      7400
 8989              	.LASF12:
 8990 02ab 696E7433 		.ascii	"int32\000"
 8990      3200
 8991              	.LASF145:
 8992 02b1 43795379 		.ascii	"CySysTickGetReload\000"
 8992      73546963 
 8992      6B476574 
 8992      52656C6F 
 8992      616400
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 219


 8993              	.LASF89:
 8994 02c4 43795379 		.ascii	"CySysClkPllSetFrequency\000"
 8994      73436C6B 
 8994      506C6C53 
 8994      65744672 
 8994      65717565 
 8995              	.LASF135:
 8996 02dc 43794465 		.ascii	"CyDelayUs\000"
 8996      6C617955 
 8996      7300
 8997              	.LASF7:
 8998 02e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 8998      206C6F6E 
 8998      6720756E 
 8998      7369676E 
 8998      65642069 
 8999              	.LASF108:
 9000 02fd 72656173 		.ascii	"reason\000"
 9000      6F6E00
 9001              	.LASF131:
 9002 0304 43794861 		.ascii	"CyHalt\000"
 9002      6C7400
 9003              	.LASF46:
 9004 030b 656E6162 		.ascii	"enable\000"
 9004      6C6500
 9005              	.LASF32:
 9006 0312 72656754 		.ascii	"regTmp\000"
 9006      6D7000
 9007              	.LASF124:
 9008 0319 76616C75 		.ascii	"value\000"
 9008      6500
 9009              	.LASF57:
 9010 031f 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 9010      73436C6B 
 9010      47657453 
 9010      7973636C 
 9010      6B536F75 
 9011              	.LASF93:
 9012 0337 714D696E 		.ascii	"qMin\000"
 9012      00
 9013              	.LASF141:
 9014 033c 43795379 		.ascii	"CySysTickStop\000"
 9014      73546963 
 9014      6B53746F 
 9014      7000
 9015              	.LASF127:
 9016 034a 4379496E 		.ascii	"CyIntGetState\000"
 9016      74476574 
 9016      53746174 
 9016      6500
 9017              	.LASF164:
 9018 0358 63796465 		.ascii	"cydelayFreqHz\000"
 9018      6C617946 
 9018      72657148 
 9018      7A00
 9019              	.LASF90:
 9020 0366 696E7075 		.ascii	"inputFreq\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 220


 9020      74467265 
 9020      7100
 9021              	.LASF155:
 9022 0370 43795379 		.ascii	"CySysTickGetCallback\000"
 9022      73546963 
 9022      6B476574 
 9022      43616C6C 
 9022      6261636B 
 9023              	.LASF116:
 9024 0385 6F6C6449 		.ascii	"oldIsr\000"
 9024      737200
 9025              	.LASF169:
 9026 038c 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 9026      6F467265 
 9026      714D687A 
 9026      32526567 
 9026      00
 9027              	.LASF95:
 9028 039d 7156616C 		.ascii	"qVal\000"
 9028      00
 9029              	.LASF129:
 9030 03a2 4379496E 		.ascii	"CyIntSetPending\000"
 9030      74536574 
 9030      50656E64 
 9030      696E6700 
 9031              	.LASF45:
 9032 03b2 636C6B53 		.ascii	"clkSelect\000"
 9032      656C6563 
 9032      7400
 9033              	.LASF110:
 9034 03bc 696E7453 		.ascii	"intState\000"
 9034      74617465 
 9034      00
 9035              	.LASF76:
 9036 03c5 636F756E 		.ascii	"counts\000"
 9036      747300
 9037              	.LASF30:
 9038 03cc 66726571 		.ascii	"freq\000"
 9038      00
 9039              	.LASF84:
 9040 03d1 62797061 		.ascii	"bypass\000"
 9040      737300
 9041              	.LASF176:
 9042 03d8 433A5C55 		.ascii	"C:\\Users\\Jason\\Documents\\PSoC Creator\\nixie\\n"
 9042      73657273 
 9042      5C4A6173 
 9042      6F6E5C44 
 9042      6F63756D 
 9043 0405 69786965 		.ascii	"ixie_control.cydsn\000"
 9043      5F636F6E 
 9043      74726F6C 
 9043      2E637964 
 9043      736E00
 9044              	.LASF130:
 9045 0418 4379496E 		.ascii	"CyIntClearPending\000"
 9045      74436C65 
 9045      61725065 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 221


 9045      6E64696E 
 9045      6700
 9046              	.LASF15:
 9047 042a 63686172 		.ascii	"char\000"
 9047      00
 9048              	.LASF150:
 9049 042f 43795379 		.ascii	"CySysTickGetCountFlag\000"
 9049      73546963 
 9049      6B476574 
 9049      436F756E 
 9049      74466C61 
 9050              	.LASF29:
 9051 0445 43795379 		.ascii	"CySysClkImoStop\000"
 9051      73436C6B 
 9051      496D6F53 
 9051      746F7000 
 9052              	.LASF42:
 9053 0455 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 9053      73436C6B 
 9053      57726974 
 9053      65486663 
 9053      6C6B4469 
 9054              	.LASF10:
 9055 046e 75696E74 		.ascii	"uint16\000"
 9055      313600
 9056              	.LASF80:
 9057 0475 66656564 		.ascii	"feedback\000"
 9057      6261636B 
 9057      00
 9058              	.LASF119:
 9059 047e 4379496E 		.ascii	"CyIntSetVector\000"
 9059      74536574 
 9059      56656374 
 9059      6F7200
 9060              	.LASF26:
 9061 048d 63795F73 		.ascii	"cy_sys_clk_pll_regs_struct\000"
 9061      79735F63 
 9061      6C6B5F70 
 9061      6C6C5F72 
 9061      6567735F 
 9062              	.LASF24:
 9063 04a8 73746174 		.ascii	"status\000"
 9063      757300
 9064              	.LASF158:
 9065 04af 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 9065      73536574 
 9065      52616D41 
 9065      63636573 
 9065      73417262 
 9066              	.LASF62:
 9067 04cc 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 9067      73436C6B 
 9067      45636F52 
 9067      65616453 
 9067      74617475 
 9068              	.LASF79:
 9069 04e2 43795379 		.ascii	"CySysClkPllSetPQ\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 222


 9069      73436C6B 
 9069      506C6C53 
 9069      65745051 
 9069      00
 9070              	.LASF66:
 9071 04f3 61547269 		.ascii	"aTrim\000"
 9071      6D00
 9072              	.LASF73:
 9073 04f9 676D4D69 		.ascii	"gmMin\000"
 9073      6E00
 9074              	.LASF72:
 9075 04ff 6D617841 		.ascii	"maxAmplitude\000"
 9075      6D706C69 
 9075      74756465 
 9075      00
 9076              	.LASF161:
 9077 050c 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 9077      73536574 
 9077      50657269 
 9077      70686572 
 9077      616C4163 
 9078              	.LASF6:
 9079 0530 6C6F6E67 		.ascii	"long long int\000"
 9079      206C6F6E 
 9079      6720696E 
 9079      7400
 9080              	.LASF36:
 9081 053e 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 9081      73436C6B 
 9081      496D6F45 
 9081      6E61626C 
 9081      6557636F 
 9082              	.LASF115:
 9083 0557 61646472 		.ascii	"address\000"
 9083      65737300 
 9084              	.LASF140:
 9085 055f 43795379 		.ascii	"CySysTickEnable\000"
 9085      73546963 
 9085      6B456E61 
 9085      626C6500 
 9086              	.LASF107:
 9087 056f 43795379 		.ascii	"CySysGetResetReason\000"
 9087      73476574 
 9087      52657365 
 9087      74526561 
 9087      736F6E00 
 9088              	.LASF159:
 9089 0583 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 9089      73536574 
 9089      466C6173 
 9089      68416363 
 9089      65737341 
 9090              	.LASF118:
 9091 05a2 4379496E 		.ascii	"CyIntGetSysVector\000"
 9091      74476574 
 9091      53797356 
 9091      6563746F 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 223


 9091      7200
 9092              	.LASF163:
 9093 05b4 43795379 		.ascii	"CySysTickCallbacks\000"
 9093      73546963 
 9093      6B43616C 
 9093      6C626163 
 9093      6B7300
 9094              	.LASF146:
 9095 05c7 43795379 		.ascii	"CySysTickGetValue\000"
 9095      73546963 
 9095      6B476574 
 9095      56616C75 
 9095      6500
 9096              	.LASF85:
 9097 05d9 43795379 		.ascii	"CySysClkPllGetBypassMode\000"
 9097      73436C6B 
 9097      506C6C47 
 9097      65744279 
 9097      70617373 
 9098              	.LASF101:
 9099 05f2 43795379 		.ascii	"CySysClkPllSetOutputDivider\000"
 9099      73436C6B 
 9099      506C6C53 
 9099      65744F75 
 9099      74707574 
 9100              	.LASF19:
 9101 060e 63796973 		.ascii	"cyisraddress\000"
 9101      72616464 
 9101      72657373 
 9101      00
 9102              	.LASF65:
 9103 061b 77445472 		.ascii	"wDTrim\000"
 9103      696D00
 9104              	.LASF58:
 9105 0622 43795379 		.ascii	"CySysClkEcoStart\000"
 9105      73436C6B 
 9105      45636F53 
 9105      74617274 
 9105      00
 9106              	.LASF11:
 9107 0633 75696E74 		.ascii	"uint32\000"
 9107      333200
 9108              	.LASF86:
 9109 063a 43795379 		.ascii	"CySysClkPllConfigChangeAllowed\000"
 9109      73436C6B 
 9109      506C6C43 
 9109      6F6E6669 
 9109      67436861 
 9110              	.LASF138:
 9111 0659 43795379 		.ascii	"CySysTickStart\000"
 9111      73546963 
 9111      6B537461 
 9111      727400
 9112              	.LASF177:
 9113 0668 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 9113      73546963 
 9113      6B536572 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 224


 9113      76696365 
 9113      43616C6C 
 9114              	.LASF112:
 9115 0682 6D61736B 		.ascii	"mask\000"
 9115      00
 9116              	.LASF147:
 9117 0687 43795379 		.ascii	"CySysTickSetClockSource\000"
 9117      73546963 
 9117      6B536574 
 9117      436C6F63 
 9117      6B536F75 
 9118              	.LASF75:
 9119 069f 77616974 		.ascii	"wait\000"
 9119      00
 9120              	.LASF63:
 9121 06a4 72657475 		.ascii	"returnValue\000"
 9121      726E5661 
 9121      6C756500 
 9122              	.LASF28:
 9123 06b0 43795379 		.ascii	"CySysClkImoStart\000"
 9123      73436C6B 
 9123      496D6F53 
 9123      74617274 
 9123      00
 9124              	.LASF91:
 9125 06c1 706C6C46 		.ascii	"pllFreq\000"
 9125      72657100 
 9126              	.LASF55:
 9127 06c9 77636F4C 		.ascii	"wcoLock\000"
 9127      6F636B00 
 9128              	.LASF20:
 9129 06d1 6C6F6E67 		.ascii	"long double\000"
 9129      20646F75 
 9129      626C6500 
 9130              	.LASF109:
 9131 06dd 43794469 		.ascii	"CyDisableInts\000"
 9131      7361626C 
 9131      65496E74 
 9131      7300
 9132              	.LASF18:
 9133 06eb 72656733 		.ascii	"reg32\000"
 9133      3200
 9134              	.LASF148:
 9135 06f1 636C6F63 		.ascii	"clockSource\000"
 9135      6B536F75 
 9135      72636500 
 9136              	.LASF43:
 9137 06fd 746D7052 		.ascii	"tmpReg\000"
 9137      656700
 9138              	.LASF23:
 9139 0704 636F6E66 		.ascii	"config\000"
 9139      696700
 9140              	.LASF54:
 9141 070b 63757272 		.ascii	"currentImoTrim2Value\000"
 9141      656E7449 
 9141      6D6F5472 
 9141      696D3256 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 225


 9141      616C7565 
 9142              	.LASF71:
 9143 0720 634C6F61 		.ascii	"cLoad\000"
 9143      6400
 9144              	.LASF144:
 9145 0726 43795379 		.ascii	"CySysTickSetReload\000"
 9145      73546963 
 9145      6B536574 
 9145      52656C6F 
 9145      616400
 9146              	.LASF2:
 9147 0739 73686F72 		.ascii	"short int\000"
 9147      7420696E 
 9147      7400
 9148              	.LASF49:
 9149 0743 64697669 		.ascii	"divider\000"
 9149      64657200 
 9150              	.LASF4:
 9151 074b 6C6F6E67 		.ascii	"long int\000"
 9151      20696E74 
 9151      00
 9152              	.LASF87:
 9153 0754 706C6C42 		.ascii	"pllBypassMode\000"
 9153      79706173 
 9153      734D6F64 
 9153      6500
 9154              	.LASF70:
 9155 0762 43795379 		.ascii	"CySysClkConfigureEcoDrive\000"
 9155      73436C6B 
 9155      436F6E66 
 9155      69677572 
 9155      6545636F 
 9156              	.LASF113:
 9157 077c 4379496E 		.ascii	"CyIntSetSysVector\000"
 9157      74536574 
 9157      53797356 
 9157      6563746F 
 9157      7200
 9158              	.LASF37:
 9159 078e 43795379 		.ascii	"CySysClkImoEnableUsbLock\000"
 9159      73436C6B 
 9159      496D6F45 
 9159      6E61626C 
 9159      65557362 
 9160              	.LASF56:
 9161 07a7 7573624C 		.ascii	"usbLock\000"
 9161      6F636B00 
 9162              	.LASF122:
 9163 07af 7072696F 		.ascii	"priority\000"
 9163      72697479 
 9163      00
 9164              	.LASF173:
 9165 07b8 43795379 		.ascii	"CySysClkPumpConfig\000"
 9165      73436C6B 
 9165      50756D70 
 9165      436F6E66 
 9165      696700
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 226


 9166              	.LASF97:
 9167 07cb 6676636F 		.ascii	"fvco\000"
 9167      00
 9168              	.LASF48:
 9169 07d0 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 9169      73436C6B 
 9169      57726974 
 9169      65537973 
 9169      636C6B44 
 9170              	.LASF143:
 9171 07e7 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 9171      73546963 
 9171      6B446973 
 9171      61626C65 
 9171      496E7465 
 9172              	.LASF69:
 9173 0801 67547269 		.ascii	"gTrim\000"
 9173      6D00
 9174              	.LASF175:
 9175 0807 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 9175      72617465 
 9175      645F536F 
 9175      75726365 
 9175      5C50536F 
 9176              	.LASF100:
 9177 0826 736F7572 		.ascii	"source\000"
 9177      636500
 9178              	.LASF114:
 9179 082d 6E756D62 		.ascii	"number\000"
 9179      657200
 9180              	.LASF33:
 9181 0834 6C664C69 		.ascii	"lfLimit\000"
 9181      6D697400 
 9182              	.LASF96:
 9183 083c 7056616C 		.ascii	"pVal\000"
 9183      00
 9184              	.LASF139:
 9185 0841 43795379 		.ascii	"CySysTickInit\000"
 9185      73546963 
 9185      6B496E69 
 9185      7400
 9186              	.LASF78:
 9187 084f 43795379 		.ascii	"CySysClkPllStop\000"
 9187      73436C6B 
 9187      506C6C53 
 9187      746F7000 
 9188              	.LASF157:
 9189 085f 756E6971 		.ascii	"uniqueId\000"
 9189      75654964 
 9189      00
 9190              	.LASF94:
 9191 0868 714D6178 		.ascii	"qMax\000"
 9191      00
 9192              	.LASF21:
 9193 086d 73697A65 		.ascii	"sizetype\000"
 9193      74797065 
 9193      00
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 227


 9194              	.LASF83:
 9195 0876 43795379 		.ascii	"CySysClkPllSetBypassMode\000"
 9195      73436C6B 
 9195      506C6C53 
 9195      65744279 
 9195      70617373 
 9196              	.LASF64:
 9197 088f 43795379 		.ascii	"CySysClkConfigureEcoTrim\000"
 9197      73436C6B 
 9197      436F6E66 
 9197      69677572 
 9197      6545636F 
 9198              	.LASF5:
 9199 08a8 6C6F6E67 		.ascii	"long unsigned int\000"
 9199      20756E73 
 9199      69676E65 
 9199      6420696E 
 9199      7400
 9200              	.LASF154:
 9201 08ba 72657456 		.ascii	"retVal\000"
 9201      616C00
 9202              	.LASF68:
 9203 08c1 72547269 		.ascii	"rTrim\000"
 9203      6D00
 9204              	.LASF22:
 9205 08c7 63795379 		.ascii	"cySysTickCallback\000"
 9205      73546963 
 9205      6B43616C 
 9205      6C626163 
 9205      6B00
 9206              	.LASF106:
 9207 08d9 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 9207      734C7664 
 9207      436C6561 
 9207      72496E74 
 9207      65727275 
 9208              	.LASF149:
 9209 08f0 43795379 		.ascii	"CySysTickGetClockSource\000"
 9209      73546963 
 9209      6B476574 
 9209      436C6F63 
 9209      6B536F75 
 9210              	.LASF132:
 9211 0908 4379536F 		.ascii	"CySoftwareReset\000"
 9211      66747761 
 9211      72655265 
 9211      73657400 
 9212              	.LASF16:
 9213 0918 63797374 		.ascii	"cystatus\000"
 9213      61747573 
 9213      00
 9214              	.LASF53:
 9215 0921 6E657749 		.ascii	"newImoTrim2Value\000"
 9215      6D6F5472 
 9215      696D3256 
 9215      616C7565 
 9215      00
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 228


 9216              	.LASF59:
 9217 0932 74696D65 		.ascii	"timeoutUs\000"
 9217      6F757455 
 9217      7300
 9218              	.LASF1:
 9219 093c 756E7369 		.ascii	"unsigned char\000"
 9219      676E6564 
 9219      20636861 
 9219      7200
 9220              	.LASF166:
 9221 094a 63796465 		.ascii	"cydelayFreqMhz\000"
 9221      6C617946 
 9221      7265714D 
 9221      687A00
 9222              	.LASF117:
 9223 0959 72616D56 		.ascii	"ramVectorTable\000"
 9223      6563746F 
 9223      72546162 
 9223      6C6500
 9224              	.LASF156:
 9225 0968 43794765 		.ascii	"CyGetUniqueId\000"
 9225      74556E69 
 9225      71756549 
 9225      6400
 9226              	.LASF153:
 9227 0976 66756E63 		.ascii	"function\000"
 9227      74696F6E 
 9227      00
 9228              	.LASF25:
 9229 097f 74657374 		.ascii	"test\000"
 9229      00
 9230              	.LASF77:
 9231 0984 43795379 		.ascii	"CySysClkPllGetLockStatus\000"
 9231      73436C6B 
 9231      506C6C47 
 9231      65744C6F 
 9231      636B5374 
 9232              	.LASF136:
 9233 099d 6D696372 		.ascii	"microseconds\000"
 9233      6F736563 
 9233      6F6E6473 
 9233      00
 9234              	.LASF74:
 9235 09aa 43795379 		.ascii	"CySysClkPllStart\000"
 9235      73436C6B 
 9235      506C6C53 
 9235      74617274 
 9235      00
 9236              	.LASF142:
 9237 09bb 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 9237      73546963 
 9237      6B456E61 
 9237      626C6549 
 9237      6E746572 
 9238              	.LASF167:
 9239 09d4 63796465 		.ascii	"cydelay32kMs\000"
 9239      6C617933 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 229


 9239      326B4D73 
 9239      00
 9240              	.LASF170:
 9241 09e1 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 9241      6F467265 
 9241      714D687A 
 9241      3244706C 
 9241      6C4F6666 
 9242              	.LASF51:
 9243 09f9 62675472 		.ascii	"bgTrim4\000"
 9243      696D3400 
 9244              	.LASF52:
 9245 0a01 62675472 		.ascii	"bgTrim5\000"
 9245      696D3500 
 9246              	.LASF35:
 9247 0a09 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 9247      73436C6B 
 9247      496D6F44 
 9247      69736162 
 9247      6C655763 
 9248              	.LASF171:
 9249 0a23 43795379 		.ascii	"CySysClkImoTrim4\000"
 9249      73436C6B 
 9249      496D6F54 
 9249      72696D34 
 9249      00
 9250              	.LASF172:
 9251 0a34 43795379 		.ascii	"CySysClkImoTrim5\000"
 9251      73436C6B 
 9251      496D6F54 
 9251      72696D35 
 9251      00
 9252              	.LASF50:
 9253 0a45 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 9253      73436C6B 
 9253      57726974 
 9253      65496D6F 
 9253      46726571 
 9254              	.LASF126:
 9255 0a5a 4379496E 		.ascii	"CyIntEnable\000"
 9255      74456E61 
 9255      626C6500 
 9256              	.LASF103:
 9257 0a66 74687265 		.ascii	"threshold\000"
 9257      73686F6C 
 9257      6400
 9258              	.LASF99:
 9259 0a70 43795379 		.ascii	"CySysClkPllSetSource\000"
 9259      73436C6B 
 9259      506C6C53 
 9259      6574536F 
 9259      75726365 
 9260              	.LASF0:
 9261 0a85 7369676E 		.ascii	"signed char\000"
 9261      65642063 
 9261      68617200 
 9262              	.LASF3:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc7xyQyF.s 			page 230


 9263 0a91 73686F72 		.ascii	"short unsigned int\000"
 9263      7420756E 
 9263      7369676E 
 9263      65642069 
 9263      6E7400
 9264              	.LASF82:
 9265 0aa4 63757272 		.ascii	"current\000"
 9265      656E7400 
 9266              	.LASF9:
 9267 0aac 75696E74 		.ascii	"uint8\000"
 9267      3800
 9268              	.LASF14:
 9269 0ab2 646F7562 		.ascii	"double\000"
 9269      6C6500
 9270              	.LASF47:
 9271 0ab9 73797363 		.ascii	"sysclkSource\000"
 9271      6C6B536F 
 9271      75726365 
 9271      00
 9272              	.LASF104:
 9273 0ac6 43795379 		.ascii	"CySysLvdDisable\000"
 9273      734C7664 
 9273      44697361 
 9273      626C6500 
 9274              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
